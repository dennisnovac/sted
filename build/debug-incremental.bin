{"modules":{"/Users/denea/mosaico/src/js/ext/util.js":{"file":"/Users/denea/mosaico/src/js/ext/util.js","source":"(function (global){\nvar utilPlugin=function(){global.Util={decodeURI:decodeURI,encodeURI:encodeURI,decodeURIComponent:decodeURIComponent,encodeURIComponent:encodeURIComponent}};module.exports=utilPlugin;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9leHQvdXRpbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsR0FBSSxZQUFhLFdBQ2YsT0FBTyxNQUNMLFVBQWEsVUFDYixVQUFhLFVBQ2IsbUJBQXNCLG1CQUN0QixtQkFBc0Isb0JBSTFCLFFBQU8sUUFBVSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHV0aWxQbHVnaW4gPSBmdW5jdGlvbih2bSkge1xuICBnbG9iYWwuVXRpbCA9IHtcbiAgICAnZGVjb2RlVVJJJzogZGVjb2RlVVJJLFxuICAgICdlbmNvZGVVUkknOiBlbmNvZGVVUkksXG4gICAgJ2RlY29kZVVSSUNvbXBvbmVudCc6IGRlY29kZVVSSUNvbXBvbmVudCxcbiAgICAnZW5jb2RlVVJJQ29tcG9uZW50JzogZW5jb2RlVVJJQ29tcG9uZW50LFxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB1dGlsUGx1Z2luOyJdfQ==","deps":{}},"/Users/denea/mosaico/src/js/timed-call.js":{"file":"/Users/denea/mosaico/src/js/timed-call.js","source":"\"use strict\";var console=require(\"./../../bower_components/console-browserify/index.js\"),_call=function(e){return e()},logs=[],_timedCall=function(e,t){var o,a=(new Date).getTime();\"object\"==typeof console&&console.time&&console.time(e),o=_call(t),\"object\"==typeof console&&console.time&&console.timeEnd(e);var i=(new Date).getTime()-a;return\"object\"!=typeof console||console.time||console.log(e,\"took\",i,\"ms\"),logs.push({name:e,time:i}),logs.length>100&&logs.unshift(),o};module.exports={timedCall:_timedCall,logs:logs};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpbWVkLWNhbGwuanMiXSwibmFtZXMiOlsiY29uc29sZSIsInJlcXVpcmUiLCJfY2FsbCIsIndoYXRUb0NhbGwiLCJsb2dzIiwiX3RpbWVkQ2FsbCIsIm5hbWUiLCJyZXMiLCJzdGFydCIsIkRhdGUiLCJnZXRUaW1lIiwidGltZSIsInRpbWVFbmQiLCJkaWZmIiwibG9nIiwicHVzaCIsImxlbmd0aCIsInVuc2hpZnQiLCJtb2R1bGUiLCJleHBvcnRzIiwidGltZWRDYWxsIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUVBLElBQUlBLFNBQVVDLFFBQVEsV0FFbEJDLE1BQVEsU0FBU0MsR0FDbkIsTUFBT0EsTUFHTEMsUUFFQUMsV0FBYSxTQUFTQyxFQUFNSCxHQUM5QixHQUFJSSxHQUNBQyxHQUFRLEdBQUlDLE9BQU9DLFNBQ0QsaUJBQVhWLFVBQXVCQSxRQUFRVyxNQUFNWCxRQUFRVyxLQUFLTCxHQUM3REMsRUFBTUwsTUFBTUMsR0FDVSxnQkFBWEgsVUFBdUJBLFFBQVFXLE1BQU1YLFFBQVFZLFFBQVFOLEVBQ2hFLElBQUlPLElBQU8sR0FBSUosT0FBT0MsVUFBWUYsQ0FRbEMsT0FQc0IsZ0JBQVhSLFVBQXdCQSxRQUFRVyxNQUFNWCxRQUFRYyxJQUFJUixFQUFNLE9BQVFPLEVBQU0sTUFDakZULEtBQUtXLE1BQ0hULEtBQU1BLEVBQ05LLEtBQU1FLElBR0pULEtBQUtZLE9BQVMsS0FBS1osS0FBS2EsVUFDckJWLEVBR1RXLFFBQU9DLFNBQ0xDLFVBQVdmLFdBQ1hELEtBQU1BIiwiZmlsZSI6Im91dC5qcy5tYXAiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGNvbnNvbGUgPSByZXF1aXJlKFwiY29uc29sZVwiKTtcblxudmFyIF9jYWxsID0gZnVuY3Rpb24od2hhdFRvQ2FsbCkge1xuICByZXR1cm4gd2hhdFRvQ2FsbCgpO1xufTtcblxudmFyIGxvZ3MgPSBbXTtcblxudmFyIF90aW1lZENhbGwgPSBmdW5jdGlvbihuYW1lLCB3aGF0VG9DYWxsKSB7XG4gIHZhciByZXM7XG4gIHZhciBzdGFydCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICBpZiAodHlwZW9mIGNvbnNvbGUgPT0gJ29iamVjdCcgJiYgY29uc29sZS50aW1lKSBjb25zb2xlLnRpbWUobmFtZSk7XG4gIHJlcyA9IF9jYWxsKHdoYXRUb0NhbGwpO1xuICBpZiAodHlwZW9mIGNvbnNvbGUgPT0gJ29iamVjdCcgJiYgY29uc29sZS50aW1lKSBjb25zb2xlLnRpbWVFbmQobmFtZSk7XG4gIHZhciBkaWZmID0gbmV3IERhdGUoKS5nZXRUaW1lKCkgLSBzdGFydDtcbiAgaWYgKHR5cGVvZiBjb25zb2xlID09ICdvYmplY3QnICYmICFjb25zb2xlLnRpbWUpIGNvbnNvbGUubG9nKG5hbWUsIFwidG9va1wiLCBkaWZmLCBcIm1zXCIpO1xuICBsb2dzLnB1c2goe1xuICAgIG5hbWU6IG5hbWUsXG4gICAgdGltZTogZGlmZlxuICB9KTtcbiAgLy8gbWF4IGxvZ3NcbiAgaWYgKGxvZ3MubGVuZ3RoID4gMTAwKSBsb2dzLnVuc2hpZnQoKTtcbiAgcmV0dXJuIHJlcztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICB0aW1lZENhbGw6IF90aW1lZENhbGwsXG4gIGxvZ3M6IGxvZ3Ncbn07Il19","deps":{"./../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/ext/localstorage.js":{"file":"/Users/denea/mosaico/src/js/ext/localstorage.js","source":"(function (global){\n\"use strict\";var console=require(\"./../../../bower_components/console-browserify/index.js\"),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),$=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),lsLoader=function(e,t){var o=global.localStorage.getItem(\"metadata-\"+e);if(null!==o){var a,i=global.localStorage.getItem(\"template-\"+e);null!==i&&(a=JSON.parse(i));var l=JSON.parse(o);return{metadata:l,model:a,extension:lsCommandPluginFactory(l,t)}}throw\"Cannot find stored data for \"+e},lsCommandPluginFactory=function(e,t){var o=function(e,o,a){var i={name:\"Save\",enabled:ko.observable(!0)};i.execute=function(){i.enabled(!1),a.metadata.changed=Date.now(),\"undefined\"==typeof a.metadata.key&&(console.warn(\"Unable to find key in metadata object...\",a.metadata),a.metadata.key=e),global.localStorage.setItem(\"metadata-\"+e,a.exportMetadata()),global.localStorage.setItem(\"template-\"+e,a.exportJSON()),i.enabled(!0)};var l={name:\"Test\",enabled:ko.observable(!0)},n={name:\"Download\",enabled:ko.observable(!0)};l.execute=function(){l.enabled(!1);var i=global.localStorage.getItem(\"testemail\");if((null===i||\"null\"==i)&&(i=a.t(\"Insert here the recipient email address\")),i=global.prompt(a.t(\"Test email address\"),i),i.match(/@/)){global.localStorage.setItem(\"testemail\",i),console.log(\"TODO testing...\",i);var n=t?t:\"/dl/\",r=$.post(n,{action:\"email\",rcpt:i,subject:\"[test] \"+e+\" - \"+o,html:a.exportHTML()},null,\"html\");r.fail(function(){console.log(\"fail\",arguments),a.notifier.error(a.t(\"Unexpected error talking to server: contact us!\"))}),r.success(function(){console.log(\"success\",arguments),a.notifier.success(a.t(\"Test email sent...\"))}),r.always(function(){l.enabled(!0)})}else global.alert(a.t(\"Invalid email address\")),l.enabled(!0)},n.execute=function(){n.enabled(!1),a.notifier.info(a.t(\"Downloading...\")),a.exportHTMLtoTextarea(\"#downloadHtmlTextarea\");var e=t?t:\"/dl/\";global.document.getElementById(\"downloadForm\").setAttribute(\"action\",e),global.document.getElementById(\"downloadForm\").submit(),n.enabled(!0)},a.save=i,a.test=l,a.download=n}.bind(void 0,e.key,e.name);return o};module.exports=lsLoader;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9leHQvbG9jYWxzdG9yYWdlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxZQUVBLElBQUksU0FBVSxRQUFRLFdBQ2xCLEdBQUssUUFBUSxZQUNiLEVBQUksUUFBUSxVQUVaLFNBQVcsU0FBUyxFQUFVLEdBQ2hDLEdBQUksR0FBUSxPQUFPLGFBQWEsUUFBUSxZQUFjLEVBQ3RELElBQWMsT0FBVixFQUFnQixDQUNsQixHQUFJLEdBQ0EsRUFBSyxPQUFPLGFBQWEsUUFBUSxZQUFjLEVBQ3hDLFFBQVAsSUFBYSxFQUFRLEtBQUssTUFBTSxHQUNwQyxJQUFJLEdBQUssS0FBSyxNQUFNLEVBQ3BCLFFBQ0UsU0FBVSxFQUNWLE1BQU8sRUFDUCxVQUFXLHVCQUF1QixFQUFJLElBR3hDLEtBQU0sK0JBQStCLEdBSXJDLHVCQUF5QixTQUFTLEVBQUksR0FDeEMsR0FBSSxHQUFpQixTQUFTLEVBQU8sRUFBUSxHQUczQyxHQUFJLElBQ0YsS0FBTSxPQUNOLFFBQVMsR0FBRyxZQUFXLEdBRXpCLEdBQVEsUUFBVSxXQUNoQixFQUFRLFNBQVEsR0FDaEIsRUFBVSxTQUFTLFFBQVUsS0FBSyxNQUNHLG1CQUExQixHQUFVLFNBQVMsTUFDNUIsUUFBUSxLQUFLLDJDQUE0QyxFQUFVLFVBQ25FLEVBQVUsU0FBUyxJQUFNLEdBRTNCLE9BQU8sYUFBYSxRQUFRLFlBQWMsRUFBTyxFQUFVLGtCQUMzRCxPQUFPLGFBQWEsUUFBUSxZQUFjLEVBQU8sRUFBVSxjQUMzRCxFQUFRLFNBQVEsR0FFbEIsSUFBSSxJQUNGLEtBQU0sT0FDTixRQUFTLEdBQUcsWUFBVyxJQUVyQixHQUNGLEtBQU0sV0FDTixRQUFTLEdBQUcsWUFBVyxHQUV6QixHQUFRLFFBQVUsV0FDaEIsRUFBUSxTQUFRLEVBQ2hCLElBQUksR0FBUSxPQUFPLGFBQWEsUUFBUSxZQUd4QyxLQUZjLE9BQVYsR0FBMkIsUUFBVCxLQUFpQixFQUFRLEVBQVUsRUFBRSw0Q0FDM0QsRUFBUSxPQUFPLE9BQU8sRUFBVSxFQUFFLHNCQUF1QixHQUNyRCxFQUFNLE1BQU0sS0FBTSxDQUNwQixPQUFPLGFBQWEsUUFBUSxZQUFhLEdBQ3pDLFFBQVEsSUFBSSxrQkFBbUIsRUFDL0IsSUFBSSxHQUFVLEVBQXdCLEVBQXdCLE9BQzFELEVBQU8sRUFBRSxLQUFLLEdBQ2hCLE9BQVEsUUFDUixLQUFNLEVBQ04sUUFBUyxVQUFZLEVBQVEsTUFBUSxFQUNyQyxLQUFNLEVBQVUsY0FDZixLQUFNLE9BQ1QsR0FBSyxLQUFLLFdBQ1IsUUFBUSxJQUFJLE9BQVEsV0FDcEIsRUFBVSxTQUFTLE1BQU0sRUFBVSxFQUFFLHNEQUV2QyxFQUFLLFFBQVEsV0FDWCxRQUFRLElBQUksVUFBVyxXQUN2QixFQUFVLFNBQVMsUUFBUSxFQUFVLEVBQUUseUJBRXpDLEVBQUssT0FBTyxXQUNWLEVBQVEsU0FBUSxTQUdsQixRQUFPLE1BQU0sRUFBVSxFQUFFLDBCQUN6QixFQUFRLFNBQVEsSUFHcEIsRUFBWSxRQUFVLFdBQ3BCLEVBQVksU0FBUSxHQUNwQixFQUFVLFNBQVMsS0FBSyxFQUFVLEVBQUUsbUJBQ3BDLEVBQVUscUJBQXFCLHdCQUMvQixJQUFJLEdBQVUsRUFBd0IsRUFBd0IsTUFDOUQsUUFBTyxTQUFTLGVBQWUsZ0JBQWdCLGFBQWEsU0FBVSxHQUN0RSxPQUFPLFNBQVMsZUFBZSxnQkFBZ0IsU0FDL0MsRUFBWSxTQUFRLElBR3RCLEVBQVUsS0FBTyxFQUNqQixFQUFVLEtBQU8sRUFDakIsRUFBVSxTQUFXLEdBQ3JCLEtBQUssT0FBVyxFQUFHLElBQUssRUFBRyxLQUU3QixPQUFPLEdBR1QsUUFBTyxRQUFVIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIGdsb2JhbCBnbG9iYWw6IGZhbHNlICovXG52YXIgY29uc29sZSA9IHJlcXVpcmUoXCJjb25zb2xlXCIpO1xudmFyIGtvID0gcmVxdWlyZShcImtub2Nrb3V0XCIpO1xudmFyICQgPSByZXF1aXJlKFwianF1ZXJ5XCIpO1xuXG52YXIgbHNMb2FkZXIgPSBmdW5jdGlvbihoYXNoX2tleSwgZW1haWxQcm9jZXNzb3JCYWNrZW5kKSB7XG4gIHZhciBtZFN0ciA9IGdsb2JhbC5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIm1ldGFkYXRhLVwiICsgaGFzaF9rZXkpO1xuICBpZiAobWRTdHIgIT09IG51bGwpIHtcbiAgICB2YXIgbW9kZWw7XG4gICAgdmFyIHRkID0gZ2xvYmFsLmxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidGVtcGxhdGUtXCIgKyBoYXNoX2tleSk7XG4gICAgaWYgKHRkICE9PSBudWxsKSBtb2RlbCA9IEpTT04ucGFyc2UodGQpO1xuICAgIHZhciBtZCA9IEpTT04ucGFyc2UobWRTdHIpO1xuICAgIHJldHVybiB7XG4gICAgICBtZXRhZGF0YTogbWQsXG4gICAgICBtb2RlbDogbW9kZWwsXG4gICAgICBleHRlbnNpb246IGxzQ29tbWFuZFBsdWdpbkZhY3RvcnkobWQsIGVtYWlsUHJvY2Vzc29yQmFja2VuZClcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHRocm93IFwiQ2Fubm90IGZpbmQgc3RvcmVkIGRhdGEgZm9yIFwiK2hhc2hfa2V5O1xuICB9XG59O1xuXG52YXIgbHNDb21tYW5kUGx1Z2luRmFjdG9yeSA9IGZ1bmN0aW9uKG1kLCBlbWFpbFByb2Nlc3NvckJhY2tlbmQpIHtcbiAgdmFyIGNvbW1hbmRzUGx1Z2luID0gZnVuY3Rpb24obWRrZXksIG1kbmFtZSwgdmlld01vZGVsKSB7XG5cbiAgICAvLyBjb25zb2xlLmxvZyhcImxvYWRpbmcgZnJvbSBtZXRhZGF0YVwiLCBtZCwgbW9kZWwpO1xuICAgIHZhciBzYXZlQ21kID0ge1xuICAgICAgbmFtZTogJ1NhdmUnLCAvLyBsMTBuIGhhcHBlbnMgaW4gdGhlIHRlbXBsYXRlXG4gICAgICBlbmFibGVkOiBrby5vYnNlcnZhYmxlKHRydWUpXG4gICAgfTtcbiAgICBzYXZlQ21kLmV4ZWN1dGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHNhdmVDbWQuZW5hYmxlZChmYWxzZSk7XG4gICAgICB2aWV3TW9kZWwubWV0YWRhdGEuY2hhbmdlZCA9IERhdGUubm93KCk7XG4gICAgICBpZiAodHlwZW9mIHZpZXdNb2RlbC5tZXRhZGF0YS5rZXkgPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiVW5hYmxlIHRvIGZpbmQga2V5IGluIG1ldGFkYXRhIG9iamVjdC4uLlwiLCB2aWV3TW9kZWwubWV0YWRhdGEpO1xuICAgICAgICB2aWV3TW9kZWwubWV0YWRhdGEua2V5ID0gbWRrZXk7XG4gICAgICB9XG4gICAgICBnbG9iYWwubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJtZXRhZGF0YS1cIiArIG1ka2V5LCB2aWV3TW9kZWwuZXhwb3J0TWV0YWRhdGEoKSk7XG4gICAgICBnbG9iYWwubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ0ZW1wbGF0ZS1cIiArIG1ka2V5LCB2aWV3TW9kZWwuZXhwb3J0SlNPTigpKTtcbiAgICAgIHNhdmVDbWQuZW5hYmxlZCh0cnVlKTtcbiAgICB9O1xuICAgIHZhciB0ZXN0Q21kID0ge1xuICAgICAgbmFtZTogJ1Rlc3QnLCAvLyBsMTBuIGhhcHBlbnMgaW4gdGhlIHRlbXBsYXRlXG4gICAgICBlbmFibGVkOiBrby5vYnNlcnZhYmxlKHRydWUpXG4gICAgfTtcbiAgICB2YXIgZG93bmxvYWRDbWQgPSB7XG4gICAgICBuYW1lOiAnRG93bmxvYWQnLCAvLyBsMTBuIGhhcHBlbnMgaW4gdGhlIHRlbXBsYXRlXG4gICAgICBlbmFibGVkOiBrby5vYnNlcnZhYmxlKHRydWUpXG4gICAgfTtcbiAgICB0ZXN0Q21kLmV4ZWN1dGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHRlc3RDbWQuZW5hYmxlZChmYWxzZSk7XG4gICAgICB2YXIgZW1haWwgPSBnbG9iYWwubG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ0ZXN0ZW1haWxcIik7XG4gICAgICBpZiAoZW1haWwgPT09IG51bGwgfHwgZW1haWwgPT0gJ251bGwnKSBlbWFpbCA9IHZpZXdNb2RlbC50KCdJbnNlcnQgaGVyZSB0aGUgcmVjaXBpZW50IGVtYWlsIGFkZHJlc3MnKTtcbiAgICAgIGVtYWlsID0gZ2xvYmFsLnByb21wdCh2aWV3TW9kZWwudChcIlRlc3QgZW1haWwgYWRkcmVzc1wiKSwgZW1haWwpO1xuICAgICAgaWYgKGVtYWlsLm1hdGNoKC9ALykpIHtcbiAgICAgICAgZ2xvYmFsLmxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidGVzdGVtYWlsXCIsIGVtYWlsKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJUT0RPIHRlc3RpbmcuLi5cIiwgZW1haWwpO1xuICAgICAgICB2YXIgcG9zdFVybCA9IGVtYWlsUHJvY2Vzc29yQmFja2VuZCA/IGVtYWlsUHJvY2Vzc29yQmFja2VuZCA6ICcvZGwvJztcbiAgICAgICAgdmFyIHBvc3QgPSAkLnBvc3QocG9zdFVybCwge1xuICAgICAgICAgIGFjdGlvbjogJ2VtYWlsJyxcbiAgICAgICAgICByY3B0OiBlbWFpbCxcbiAgICAgICAgICBzdWJqZWN0OiBcIlt0ZXN0XSBcIiArIG1ka2V5ICsgXCIgLSBcIiArIG1kbmFtZSxcbiAgICAgICAgICBodG1sOiB2aWV3TW9kZWwuZXhwb3J0SFRNTCgpXG4gICAgICAgIH0sIG51bGwsICdodG1sJyk7XG4gICAgICAgIHBvc3QuZmFpbChmdW5jdGlvbigpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImZhaWxcIiwgYXJndW1lbnRzKTtcbiAgICAgICAgICB2aWV3TW9kZWwubm90aWZpZXIuZXJyb3Iodmlld01vZGVsLnQoJ1VuZXhwZWN0ZWQgZXJyb3IgdGFsa2luZyB0byBzZXJ2ZXI6IGNvbnRhY3QgdXMhJykpO1xuICAgICAgICB9KTtcbiAgICAgICAgcG9zdC5zdWNjZXNzKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwic3VjY2Vzc1wiLCBhcmd1bWVudHMpO1xuICAgICAgICAgIHZpZXdNb2RlbC5ub3RpZmllci5zdWNjZXNzKHZpZXdNb2RlbC50KFwiVGVzdCBlbWFpbCBzZW50Li4uXCIpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHBvc3QuYWx3YXlzKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHRlc3RDbWQuZW5hYmxlZCh0cnVlKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBnbG9iYWwuYWxlcnQodmlld01vZGVsLnQoJ0ludmFsaWQgZW1haWwgYWRkcmVzcycpKTtcbiAgICAgICAgdGVzdENtZC5lbmFibGVkKHRydWUpO1xuICAgICAgfVxuICAgIH07XG4gICAgZG93bmxvYWRDbWQuZXhlY3V0ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgZG93bmxvYWRDbWQuZW5hYmxlZChmYWxzZSk7XG4gICAgICB2aWV3TW9kZWwubm90aWZpZXIuaW5mbyh2aWV3TW9kZWwudChcIkRvd25sb2FkaW5nLi4uXCIpKTtcbiAgICAgIHZpZXdNb2RlbC5leHBvcnRIVE1MdG9UZXh0YXJlYSgnI2Rvd25sb2FkSHRtbFRleHRhcmVhJyk7XG4gICAgICB2YXIgcG9zdFVybCA9IGVtYWlsUHJvY2Vzc29yQmFja2VuZCA/IGVtYWlsUHJvY2Vzc29yQmFja2VuZCA6ICcvZGwvJztcbiAgICAgIGdsb2JhbC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZG93bmxvYWRGb3JtJykuc2V0QXR0cmlidXRlKFwiYWN0aW9uXCIsIHBvc3RVcmwpO1xuICAgICAgZ2xvYmFsLmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkb3dubG9hZEZvcm0nKS5zdWJtaXQoKTtcbiAgICAgIGRvd25sb2FkQ21kLmVuYWJsZWQodHJ1ZSk7XG4gICAgfTtcblxuICAgIHZpZXdNb2RlbC5zYXZlID0gc2F2ZUNtZDtcbiAgICB2aWV3TW9kZWwudGVzdCA9IHRlc3RDbWQ7XG4gICAgdmlld01vZGVsLmRvd25sb2FkID0gZG93bmxvYWRDbWQ7XG4gIH0uYmluZCh1bmRlZmluZWQsIG1kLmtleSwgbWQubmFtZSk7XG5cbiAgcmV0dXJuIGNvbW1hbmRzUGx1Z2luO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBsc0xvYWRlcjtcbiJdfQ==","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/node_modules/util/support/isBufferBrowser.js":{"file":"/Users/denea/mosaico/node_modules/util/support/isBufferBrowser.js","source":"module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","deps":{}},"/Users/denea/mosaico/node_modules/util/node_modules/inherits/inherits_browser.js":{"file":"/Users/denea/mosaico/node_modules/util/node_modules/inherits/inherits_browser.js","source":"if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","deps":{}},"/Users/denea/mosaico/node_modules/process/browser.js":{"file":"/Users/denea/mosaico/node_modules/process/browser.js","source":"// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","deps":{}},"/Users/denea/mosaico/node_modules/util/util.js":{"file":"/Users/denea/mosaico/node_modules/util/util.js","source":"(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"_process":"/Users/denea/mosaico/node_modules/process/browser.js","inherits":"/Users/denea/mosaico/node_modules/util/node_modules/inherits/inherits_browser.js","./support/isBuffer":"/Users/denea/mosaico/node_modules/util/support/isBufferBrowser.js"}},"/Users/denea/mosaico/node_modules/assert/assert.js":{"file":"/Users/denea/mosaico/node_modules/assert/assert.js","source":"(function (global){\n'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"util/":"/Users/denea/mosaico/node_modules/util/util.js"}},"/Users/denea/mosaico/bower_components/console-browserify/index.js":{"file":"/Users/denea/mosaico/bower_components/console-browserify/index.js","source":"(function (global){\nfunction log(){}function info(){console.log.apply(console,arguments)}function warn(){console.log.apply(console,arguments)}function error(){console.warn.apply(console,arguments)}function time(e){times[e]=Date.now()}function timeEnd(e){var t=times[e];if(!t)throw new Error(\"No such label: \"+e);var o=Date.now()-t;console.log(e+\": \"+o+\"ms\")}function trace(){var e=new Error;e.name=\"Trace\",e.message=util.format.apply(null,arguments),console.error(e.stack)}function dir(e){console.log(util.inspect(e)+\"\\n\")}function assert(e){if(!e){var t=slice.call(arguments,1);assert.ok(!1,util.format.apply(null,t))}}var util=require(\"util\"),assert=require(\"assert\"),slice=Array.prototype.slice,console,times={};console=\"undefined\"!=typeof global&&global.console?global.console:\"undefined\"!=typeof window&&window.console?window.console:{};for(var functions=[[log,\"log\"],[info,\"info\"],[warn,\"warn\"],[error,\"error\"],[time,\"time\"],[timeEnd,\"timeEnd\"],[trace,\"trace\"],[dir,\"dir\"],[assert,\"assert\"]],i=0;i<functions.length;i++){var tuple=functions[i],f=tuple[0],name=tuple[1];console[name]||(console[name]=f)}module.exports=console;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvd2VyX2NvbXBvbmVudHMvY29uc29sZS1icm93c2VyaWZ5L2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUF3Q0EsUUFBUyxRQUVULFFBQVMsUUFDTCxRQUFRLElBQUksTUFBTSxRQUFTLFdBRy9CLFFBQVMsUUFDTCxRQUFRLElBQUksTUFBTSxRQUFTLFdBRy9CLFFBQVMsU0FDTCxRQUFRLEtBQUssTUFBTSxRQUFTLFdBR2hDLFFBQVMsTUFBSyxHQUNWLE1BQU0sR0FBUyxLQUFLLE1BR3hCLFFBQVMsU0FBUSxHQUNiLEdBQUksR0FBTyxNQUFNLEVBQ2pCLEtBQUssRUFDRCxLQUFNLElBQUksT0FBTSxrQkFBb0IsRUFHeEMsSUFBSSxHQUFXLEtBQUssTUFBUSxDQUM1QixTQUFRLElBQUksRUFBUSxLQUFPLEVBQVcsTUFHMUMsUUFBUyxTQUNMLEdBQUksR0FBTSxHQUFJLE1BQ2QsR0FBSSxLQUFPLFFBQ1gsRUFBSSxRQUFVLEtBQUssT0FBTyxNQUFNLEtBQU0sV0FDdEMsUUFBUSxNQUFNLEVBQUksT0FHdEIsUUFBUyxLQUFJLEdBQ1QsUUFBUSxJQUFJLEtBQUssUUFBUSxHQUFVLE1BR3ZDLFFBQVMsUUFBTyxHQUNaLElBQUssRUFBWSxDQUNiLEdBQUksR0FBTSxNQUFNLEtBQUssVUFBVyxFQUNoQyxRQUFPLElBQUcsRUFBTyxLQUFLLE9BQU8sTUFBTSxLQUFNLEtBakZqRCxHQUFJLE1BQU8sUUFBUSxRQUNmLE9BQVMsUUFBUSxVQUVqQixNQUFRLE1BQU0sVUFBVSxNQUN4QixRQUNBLFFBR0EsU0FEa0IsbUJBQVgsU0FBMEIsT0FBTyxRQUM5QixPQUFPLFFBQ1EsbUJBQVgsU0FBMEIsT0FBTyxRQUNyQyxPQUFPLFVBaUJyQixLQUFLLEdBWkQsYUFDQyxJQUFLLFFBQ0gsS0FBTSxTQUNOLEtBQU0sU0FDTixNQUFPLFVBQ1AsS0FBTSxTQUNOLFFBQVMsWUFDVCxNQUFPLFVBQ1AsSUFBSyxRQUNMLE9BQVEsV0FHTixFQUFJLEVBQUcsRUFBSSxVQUFVLE9BQVEsSUFBSyxDQUN2QyxHQUFJLE9BQVEsVUFBVSxHQUNsQixFQUFJLE1BQU0sR0FDVixLQUFPLE1BQU0sRUFFWixTQUFRLFFBQ1QsUUFBUSxNQUFRLEdBSXhCLE9BQU8sUUFBVSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLypnbG9iYWwgd2luZG93LCBnbG9iYWwqL1xudmFyIHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKVxudmFyIGFzc2VydCA9IHJlcXVpcmUoXCJhc3NlcnRcIilcblxudmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlXG52YXIgY29uc29sZVxudmFyIHRpbWVzID0ge31cblxuaWYgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLmNvbnNvbGUpIHtcbiAgICBjb25zb2xlID0gZ2xvYmFsLmNvbnNvbGVcbn0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cuY29uc29sZSkge1xuICAgIGNvbnNvbGUgPSB3aW5kb3cuY29uc29sZVxufSBlbHNlIHtcbiAgICBjb25zb2xlID0ge31cbn1cblxudmFyIGZ1bmN0aW9ucyA9IFtcbiAgICBbbG9nLCBcImxvZ1wiXVxuICAgICwgW2luZm8sIFwiaW5mb1wiXVxuICAgICwgW3dhcm4sIFwid2FyblwiXVxuICAgICwgW2Vycm9yLCBcImVycm9yXCJdXG4gICAgLCBbdGltZSwgXCJ0aW1lXCJdXG4gICAgLCBbdGltZUVuZCwgXCJ0aW1lRW5kXCJdXG4gICAgLCBbdHJhY2UsIFwidHJhY2VcIl1cbiAgICAsIFtkaXIsIFwiZGlyXCJdXG4gICAgLCBbYXNzZXJ0LCBcImFzc2VydFwiXVxuXVxuXG5mb3IgKHZhciBpID0gMDsgaSA8IGZ1bmN0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0dXBsZSA9IGZ1bmN0aW9uc1tpXVxuICAgIHZhciBmID0gdHVwbGVbMF1cbiAgICB2YXIgbmFtZSA9IHR1cGxlWzFdXG5cbiAgICBpZiAoIWNvbnNvbGVbbmFtZV0pIHtcbiAgICAgICAgY29uc29sZVtuYW1lXSA9IGZcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29uc29sZVxuXG5mdW5jdGlvbiBsb2coKSB7fVxuXG5mdW5jdGlvbiBpbmZvKCkge1xuICAgIGNvbnNvbGUubG9nLmFwcGx5KGNvbnNvbGUsIGFyZ3VtZW50cylcbn1cblxuZnVuY3Rpb24gd2FybigpIHtcbiAgICBjb25zb2xlLmxvZy5hcHBseShjb25zb2xlLCBhcmd1bWVudHMpXG59XG5cbmZ1bmN0aW9uIGVycm9yKCkge1xuICAgIGNvbnNvbGUud2Fybi5hcHBseShjb25zb2xlLCBhcmd1bWVudHMpXG59XG5cbmZ1bmN0aW9uIHRpbWUobGFiZWwpIHtcbiAgICB0aW1lc1tsYWJlbF0gPSBEYXRlLm5vdygpXG59XG5cbmZ1bmN0aW9uIHRpbWVFbmQobGFiZWwpIHtcbiAgICB2YXIgdGltZSA9IHRpbWVzW2xhYmVsXVxuICAgIGlmICghdGltZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBzdWNoIGxhYmVsOiBcIiArIGxhYmVsKVxuICAgIH1cblxuICAgIHZhciBkdXJhdGlvbiA9IERhdGUubm93KCkgLSB0aW1lXG4gICAgY29uc29sZS5sb2cobGFiZWwgKyBcIjogXCIgKyBkdXJhdGlvbiArIFwibXNcIilcbn1cblxuZnVuY3Rpb24gdHJhY2UoKSB7XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcigpXG4gICAgZXJyLm5hbWUgPSBcIlRyYWNlXCJcbiAgICBlcnIubWVzc2FnZSA9IHV0aWwuZm9ybWF0LmFwcGx5KG51bGwsIGFyZ3VtZW50cylcbiAgICBjb25zb2xlLmVycm9yKGVyci5zdGFjaylcbn1cblxuZnVuY3Rpb24gZGlyKG9iamVjdCkge1xuICAgIGNvbnNvbGUubG9nKHV0aWwuaW5zcGVjdChvYmplY3QpICsgXCJcXG5cIilcbn1cblxuZnVuY3Rpb24gYXNzZXJ0KGV4cHJlc3Npb24pIHtcbiAgICBpZiAoIWV4cHJlc3Npb24pIHtcbiAgICAgICAgdmFyIGFyciA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKVxuICAgICAgICBhc3NlcnQub2soZmFsc2UsIHV0aWwuZm9ybWF0LmFwcGx5KG51bGwsIGFycikpXG4gICAgfVxufVxuIl19","deps":{"util":"/Users/denea/mosaico/node_modules/util/util.js","assert":"/Users/denea/mosaico/node_modules/assert/assert.js"}},"/Users/denea/mosaico/src/js/bindings/csstext.js":{"file":"/Users/denea/mosaico/src/js/bindings/csstext.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);ko.bindingHandlers.cssText={update:function(e,t){var o=ko.utils.unwrapObservable(t());try{e.innerText=o}catch(a){e.styleSheet||(e.innerHTML=\"a{}\"),e.styleSheet.cssText=o}}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9jc3N0ZXh0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxZQUVBLElBQUksSUFBSyxRQUFRLFdBR2pCLElBQUcsZ0JBQWdCLFNBQ2pCLE9BQVUsU0FBUyxFQUFNLEdBQ3ZCLEdBQUksR0FBTyxHQUFHLE1BQU0saUJBQWlCLElBQ3JDLEtBQ0UsRUFBSyxVQUFZLEVBQ2pCLE1BQU8sR0FDRixFQUFLLGFBQVksRUFBSyxVQUFZLE9BQ3ZDLEVBQUssV0FBVyxRQUFVIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGtvID0gcmVxdWlyZShcImtub2Nrb3V0XCIpO1xuXG4vKiBodHRwczovL2dpdGh1Yi5jb20va25vY2tvdXQva25vY2tvdXQvaXNzdWVzLzExNzEgKi9cbmtvLmJpbmRpbmdIYW5kbGVycy5jc3NUZXh0ID0ge1xuICAndXBkYXRlJzogZnVuY3Rpb24obm9kZSwgdmFsdWVBY2Nlc3NvciwgYWxsQmluZGluZ3MpIHtcbiAgICB2YXIgdGV4dCA9IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUodmFsdWVBY2Nlc3NvcigpKTtcbiAgICB0cnkge1xuICAgICAgbm9kZS5pbm5lclRleHQgPSB0ZXh0O1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGlmICghbm9kZS5zdHlsZVNoZWV0KSBub2RlLmlubmVySFRNTCA9IFwiYXt9XCI7XG4gICAgICBub2RlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHRleHQ7XG4gICAgfVxuICB9XG59OyJdfQ==","deps":{}},"/Users/denea/mosaico/bower_components/knockout-sortable/build/knockout-sortable.min.js":{"file":"/Users/denea/mosaico/bower_components/knockout-sortable/build/knockout-sortable.min.js","source":"(function (global){\n!function(e){if(\"function\"==typeof define&&define.amd)define([\"knockout\",\"jquery\",\"jquery-ui/sortable\",\"jquery-ui/draggable\"],e);else if(\"function\"==typeof require&&\"object\"==typeof exports&&\"object\"==typeof module){var t=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),o=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);(typeof window !== \"undefined\" ? window['jQuery']['ui']['sortable'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['sortable'] : null),(typeof window !== \"undefined\" ? window['jQuery']['ui']['draggable'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['draggable'] : null),e(t,o)}else e(window.ko,window.jQuery)}(function(e,t){var o=\"ko_sortItem\",a=\"ko_sourceIndex\",i=\"ko_sortList\",n=\"ko_parentList\",l=\"ko_dragItem\",r=e.utils.unwrapObservable,d=e.utils.domData.get,s=e.utils.domData.set,c=t.ui&&t.ui.version,u=c&&c.indexOf(\"1.6.\")&&c.indexOf(\"1.7.\")&&(c.indexOf(\"1.8.\")||\"1.8.24\"===c),p=function(t,a){e.utils.arrayForEach(t,function(e){1===e.nodeType&&(s(e,o,a),s(e,n,d(e.parentNode,i)))})},m=function(t,o){var a,i={},n=r(t())||{};return n.data?(i[o]=n.data,i.name=n.template):i[o]=t(),e.utils.arrayForEach([\"afterAdd\",\"afterRender\",\"as\",\"beforeRemove\",\"includeDestroyed\",\"templateEngine\",\"templateOptions\",\"nodes\"],function(t){n.hasOwnProperty(t)?i[t]=n[t]:e.bindingHandlers.sortable.hasOwnProperty(t)&&(i[t]=e.bindingHandlers.sortable[t])}),\"foreach\"===o&&(i.afterRender?(a=i.afterRender,i.afterRender=function(e,t){p.call(t,e,t),a.call(t,e,t)}):i.afterRender=p),i},b=function(e,t){var o=r(t);if(o)for(var a=0;e>a;a++)o[a]&&r(o[a]._destroy)&&e++;return e},f=function(o,a){var i,n;a?(n=document.getElementById(a),n&&(i=new e.templateSources.domElement(n),i.text(t.trim(i.text())))):t(o).contents().each(function(){this&&1!==this.nodeType&&o.removeChild(this)})};e.bindingHandlers.sortable={init:function(c,p,g,h,v){var k,y,w=t(c),$=r(p())||{},x=m(p,\"foreach\"),S={};f(c,x.name),t.extend(!0,S,e.bindingHandlers.sortable),$.options&&S.options&&(e.utils.extend(S.options,$.options),delete $.options),e.utils.extend(S,$),S.connectClass&&(e.isObservable(S.allowDrop)||\"function\"==typeof S.allowDrop)?e.computed({read:function(){var t=r(S.allowDrop),o=\"function\"==typeof t?t.call(this,x.foreach):t;e.utils.toggleDomNodeCssClass(c,S.connectClass,o)},disposeWhenNodeIsRemoved:c},this):e.utils.toggleDomNodeCssClass(c,S.connectClass,S.allowDrop),e.bindingHandlers.template.init(c,function(){return x},g,h,v),k=S.options.start,y=S.options.update,S.options.helper||(S.options.helper=function(e,o){return o.is(\"tr\")&&o.children().each(function(){t(this).width(t(this).width())}),o});var C=setTimeout(function(){var p,m=S.options.receive;w.sortable(e.utils.extend(S.options,{start:function(t,o){var i=o.item[0];s(i,a,e.utils.arrayIndexOf(o.item.parent().children(),i)),o.item.find(\"input:focus\").change(),k&&k.apply(this,arguments)},receive:function(e,t){\"function\"==typeof m&&m.call(this,e,t),p=d(t.item[0],l),p&&(p.clone&&(p=p.clone()),S.dragged&&(p=S.dragged.call(this,p,e,t)||p))},update:function(l,c){var m,f,g,h,v,k=c.item[0],w=c.item.parent()[0],$=d(k,o)||p;if($||t(k).remove(),p=null,$&&this===w||!u&&t.contains(this,w)){if(m=d(k,n),g=d(k,a),f=d(k.parentNode,i),h=e.utils.arrayIndexOf(c.item.parent().children(),k),x.includeDestroyed||(g=b(g,m),h=b(h,f)),(S.beforeMove||S.afterMove)&&(v={item:$,sourceParent:m,sourceParentNode:m&&c.sender||k.parentNode,sourceIndex:g,targetParent:f,targetIndex:h,cancelDrop:!1},S.beforeMove&&S.beforeMove.call(this,v,l,c)),m?t(m===f?this:c.sender||this).sortable(\"cancel\"):t(k).remove(),v&&v.cancelDrop)return;if(S.hasOwnProperty(\"strategyMove\")&&S.strategyMove!==!1){if(h>=0)if(m)if(m!==f)m.splice(g,1),f.splice(h,0,$),s(k,o,null),c.item.remove();else{var C=r(m);m.valueWillMutate&&m.valueWillMutate(),C.splice(g,1),C.splice(h,0,$),m.valueHasMutated&&m.valueHasMutated()}else f.splice(h,0,$),s(k,o,null),c.item.remove()}else h>=0&&(m&&(m.splice(g,1),e.processAllDeferredBindingUpdates&&e.processAllDeferredBindingUpdates(),e.options&&e.options.deferUpdates&&e.tasks.runEarly()),f.splice(h,0,$)),s(k,o,null);e.processAllDeferredBindingUpdates&&e.processAllDeferredBindingUpdates(),S.afterMove&&S.afterMove.call(this,v,l,c)}y&&y.apply(this,arguments)},connectWith:S.connectClass?\".\"+S.connectClass:!1})),void 0!==S.isEnabled&&e.computed({read:function(){w.sortable(r(S.isEnabled)?\"enable\":\"disable\")},disposeWhenNodeIsRemoved:c})},0);return e.utils.domNodeDisposal.addDisposeCallback(c,function(){(w.data(\"ui-sortable\")||w.data(\"sortable\"))&&w.sortable(\"destroy\"),e.utils.toggleDomNodeCssClass(c,S.connectClass,!1),clearTimeout(C)}),{controlsDescendantBindings:!0}},update:function(t,o,a,n,l){var r=m(o,\"foreach\");s(t,i,r.foreach),e.bindingHandlers.template.update(t,function(){return r},a,n,l)},connectClass:\"ko_container\",allowDrop:!0,afterMove:null,beforeMove:null,options:{}},e.bindingHandlers.draggable={init:function(o,a,i,n,d){var c=r(a())||{},u=c.options||{},p=e.utils.extend({},e.bindingHandlers.draggable.options),b=m(a,\"data\"),f=c.connectClass||e.bindingHandlers.draggable.connectClass,g=void 0!==c.isEnabled?c.isEnabled:e.bindingHandlers.draggable.isEnabled;return c=\"data\"in c?c.data:c,s(o,l,c),e.utils.extend(p,u),p.connectToSortable=f?\".\"+f:!1,t(o).draggable(p),void 0!==g&&e.computed({read:function(){t(o).draggable(r(g)?\"enable\":\"disable\")},disposeWhenNodeIsRemoved:o}),e.utils.domNodeDisposal.addDisposeCallback(o,function(){t(o).draggable(\"destroy\")}),e.bindingHandlers.template.init(o,function(){return b},i,n,d)},update:function(t,o,a,i,n){var l=m(o,\"data\");return e.bindingHandlers.template.update(t,function(){return l},a,i,n)},connectClass:e.bindingHandlers.sortable.connectClass,options:{helper:\"clone\"}}});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/denea/mosaico/src/js/bindings/droppable.js":{"file":"/Users/denea/mosaico/src/js/bindings/droppable.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);!function(e){e(ko,$)}(function(e,t){var o=\"ko_sortItem\",i=\"ko_dragItem\",n=(e.utils.unwrapObservable,e.utils.domData.get);e.utils.domData.set,e.bindingHandlers.droppable={init:function(a,r){var l,d=t(a),s=e.utils.unwrapObservable(r())||{},c={};t.extend(!0,c,e.bindingHandlers.droppable),s.data?(s.options&&c.options&&(e.utils.extend(c.options,s.options),delete s.options),e.utils.extend(c,s)):c.data=s,l=c.options.drop,d.droppable(e.utils.extend(c.options,{drop:function(e,t){var a=t.draggable[0],r=n(a,o)||n(a,i);r&&(r.clone&&(r=r.clone()),c.dragged&&(r=c.dragged.call(this,r,e,t)||r),c.data&&c.data(r)),l&&l.apply(this,arguments)}})),void 0!==c.isEnabled&&e.computed({read:function(){d.droppable(e.utils.unwrapObservable(c.isEnabled)?\"enable\":\"disable\")},disposeWhenNodeIsRemoved:a})},update:function(){},targetIndex:null,afterMove:null,beforeMove:null,options:{}}});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9kcm9wcGFibGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBRUEsSUFBSSxHQUFJLFFBQVEsVUFDWixHQUFLLFFBQVEsYUFHaEIsU0FBVSxHQUNULEVBQVEsR0FBSSxJQUNYLFNBQVMsRUFBSSxHQUNkLEdBQUksR0FBVSxjQUlaLEVBQVUsY0FFVixHQURTLEVBQUcsTUFBTSxpQkFDUixFQUFHLE1BQU0sUUFBUSxJQUNqQixHQUFHLE1BQU0sUUFBUSxJQUU3QixFQUFHLGdCQUFnQixXQUNqQixLQUFNLFNBQVMsRUFBUyxHQUN0QixHQUdFLEdBSEUsRUFBVyxFQUFFLEdBQ2YsRUFBUSxFQUFHLE1BQU0saUJBQWlCLFNBQ2xDLElBR0YsR0FBRSxRQUFPLEVBQU0sRUFBVyxFQUFHLGdCQUFnQixXQUN6QyxFQUFNLE1BQ0osRUFBTSxTQUFXLEVBQVUsVUFDN0IsRUFBRyxNQUFNLE9BQU8sRUFBVSxRQUFTLEVBQU0sZUFDbEMsR0FBTSxTQUVmLEVBQUcsTUFBTSxPQUFPLEVBQVcsSUFFM0IsRUFBVSxLQUFPLEVBR25CLEVBQWEsRUFBVSxRQUFRLEtBRS9CLEVBQVMsVUFBVSxFQUFHLE1BQU0sT0FBTyxFQUFVLFNBQzNDLEtBQU0sU0FBUyxFQUFPLEdBRXBCLEdBQUksR0FBSyxFQUFHLFVBQVUsR0FDcEIsRUFBTyxFQUFRLEVBQUksSUFBWSxFQUFRLEVBQUksRUFFekMsS0FFRSxFQUFLLFFBQ1AsRUFBTyxFQUFLLFNBR1YsRUFBVSxVQUNaLEVBQU8sRUFBVSxRQUFRLEtBQUssS0FBTSxFQUFNLEVBQU8sSUFBTyxHQUd0RCxFQUFVLE1BQ1osRUFBVSxLQUFLLElBS2YsR0FDRixFQUFXLE1BQU0sS0FBTSxlQU9ELFNBQXhCLEVBQVUsV0FDWixFQUFHLFVBQ0QsS0FBTSxXQUNKLEVBQVMsVUFBVSxFQUFHLE1BQU0saUJBQWlCLEVBQVUsV0FBYSxTQUFXLFlBRWpGLHlCQUEwQixLQUtoQyxPQUFRLGFBR1IsWUFBYSxLQUNiLFVBQVcsS0FDWCxXQUFZLEtBQ1oiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgJCA9IHJlcXVpcmUoXCJqcXVlcnlcIik7XG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG5cbi8qIGtub2Nrb3V0IGRyb3BwYWJsZSwgd2l0aCBzaW1wbGlmaWVkIFVNRCAqL1xuOyhmdW5jdGlvbihmYWN0b3J5KSB7XG4gIGZhY3Rvcnkoa28sICQpO1xufSkoZnVuY3Rpb24oa28sICQpIHtcbiAgdmFyIElURU1LRVkgPSBcImtvX3NvcnRJdGVtXCIsXG4gICAgSU5ERVhLRVkgPSBcImtvX3NvdXJjZUluZGV4XCIsXG4gICAgTElTVEtFWSA9IFwia29fc29ydExpc3RcIixcbiAgICBQQVJFTlRLRVkgPSBcImtvX3BhcmVudExpc3RcIixcbiAgICBEUkFHS0VZID0gXCJrb19kcmFnSXRlbVwiLFxuICAgIHVud3JhcCA9IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUsXG4gICAgZGF0YUdldCA9IGtvLnV0aWxzLmRvbURhdGEuZ2V0LFxuICAgIGRhdGFTZXQgPSBrby51dGlscy5kb21EYXRhLnNldDtcblxuICBrby5iaW5kaW5nSGFuZGxlcnMuZHJvcHBhYmxlID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlQWNjZXNzb3IsIGFsbEJpbmRpbmdzQWNjZXNzb3IsIGRhdGEsIGNvbnRleHQpIHtcbiAgICAgIHZhciAkZWxlbWVudCA9ICQoZWxlbWVudCksXG4gICAgICAgIHZhbHVlID0ga28udXRpbHMudW53cmFwT2JzZXJ2YWJsZSh2YWx1ZUFjY2Vzc29yKCkpIHx8IHt9LFxuICAgICAgICBkcm9wcGFibGUgPSB7fSxcbiAgICAgICAgZHJvcEFjdHVhbDtcblxuICAgICAgJC5leHRlbmQodHJ1ZSwgZHJvcHBhYmxlLCBrby5iaW5kaW5nSGFuZGxlcnMuZHJvcHBhYmxlKTtcbiAgICAgIGlmICh2YWx1ZS5kYXRhKSB7XG4gICAgICAgIGlmICh2YWx1ZS5vcHRpb25zICYmIGRyb3BwYWJsZS5vcHRpb25zKSB7XG4gICAgICAgICAga28udXRpbHMuZXh0ZW5kKGRyb3BwYWJsZS5vcHRpb25zLCB2YWx1ZS5vcHRpb25zKTtcbiAgICAgICAgICBkZWxldGUgdmFsdWUub3B0aW9ucztcbiAgICAgICAgfVxuICAgICAgICBrby51dGlscy5leHRlbmQoZHJvcHBhYmxlLCB2YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkcm9wcGFibGUuZGF0YSA9IHZhbHVlO1xuICAgICAgfVxuXG4gICAgICBkcm9wQWN0dWFsID0gZHJvcHBhYmxlLm9wdGlvbnMuZHJvcDtcblxuICAgICAgJGVsZW1lbnQuZHJvcHBhYmxlKGtvLnV0aWxzLmV4dGVuZChkcm9wcGFibGUub3B0aW9ucywge1xuICAgICAgICBkcm9wOiBmdW5jdGlvbihldmVudCwgdWkpIHtcblxuICAgICAgICAgIHZhciBlbCA9IHVpLmRyYWdnYWJsZVswXSxcbiAgICAgICAgICAgIGl0ZW0gPSBkYXRhR2V0KGVsLCBJVEVNS0VZKSB8fCBkYXRhR2V0KGVsLCBEUkFHS0VZKTtcblxuICAgICAgICAgIGlmIChpdGVtKSB7XG5cbiAgICAgICAgICAgIGlmIChpdGVtLmNsb25lKSB7XG4gICAgICAgICAgICAgIGl0ZW0gPSBpdGVtLmNsb25lKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChkcm9wcGFibGUuZHJhZ2dlZCkge1xuICAgICAgICAgICAgICBpdGVtID0gZHJvcHBhYmxlLmRyYWdnZWQuY2FsbCh0aGlzLCBpdGVtLCBldmVudCwgdWkpIHx8IGl0ZW07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChkcm9wcGFibGUuZGF0YSkge1xuICAgICAgICAgICAgICBkcm9wcGFibGUuZGF0YShpdGVtKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChkcm9wQWN0dWFsKSB7XG4gICAgICAgICAgICBkcm9wQWN0dWFsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgIH1cbiAgICAgIH0pKTtcblxuICAgICAgLy9oYW5kbGUgZW5hYmxpbmcvZGlzYWJsaW5nXG4gICAgICBpZiAoZHJvcHBhYmxlLmlzRW5hYmxlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGtvLmNvbXB1dGVkKHtcbiAgICAgICAgICByZWFkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICRlbGVtZW50LmRyb3BwYWJsZShrby51dGlscy51bndyYXBPYnNlcnZhYmxlKGRyb3BwYWJsZS5pc0VuYWJsZWQpID8gXCJlbmFibGVcIiA6IFwiZGlzYWJsZVwiKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRpc3Bvc2VXaGVuTm9kZUlzUmVtb3ZlZDogZWxlbWVudFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgIH0sXG4gICAgdXBkYXRlOiBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZUFjY2Vzc29yLCBhbGxCaW5kaW5nc0FjY2Vzc29yLCBkYXRhLCBjb250ZXh0KSB7XG5cbiAgICB9LFxuICAgIHRhcmdldEluZGV4OiBudWxsLFxuICAgIGFmdGVyTW92ZTogbnVsbCxcbiAgICBiZWZvcmVNb3ZlOiBudWxsLFxuICAgIG9wdGlvbnM6IHt9XG4gIH07XG59KTsiXX0=","deps":{}},"/Users/denea/mosaico/src/js/bindings/extender-pagination.js":{"file":"/Users/denea/mosaico/src/js/bindings/extender-pagination.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);ko.extenders.paging=function(e,t){var o=ko.observable(t||10),i=ko.observable(1);return e.pageSize=ko.computed({read:o,write:function(e){e>0?o(e):o(10)}}),e.currentPage=ko.computed({read:i,write:function(t){t>e.pageCount()?i(e.pageCount()):0>=t?i(1):i(t)}}),e.pageCount=ko.computed(function(){return Math.ceil(e().length/e.pageSize())||1}),e.currentPageData=ko.computed(function(){var t=o(),n=i(),a=t*(n-1),r=t*n;return e().slice(a,r)}),e.moveFirst=function(){e.currentPage(1)},e.movePrevious=function(){e.currentPage(e.currentPage()-1)},e.moveNext=function(){e.currentPage(e.currentPage()+1)},e.moveLast=function(){e.currentPage(e.pageCount())},e};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9leHRlbmRlci1wYWdpbmF0aW9uLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxZQUVBLElBQUksSUFBSyxRQUFRLFdBRWpCLElBQUcsVUFBVSxPQUFTLFNBQVMsRUFBUSxHQUNyQyxHQUFJLEdBQVksR0FBRyxXQUFXLEdBQVksSUFFeEMsRUFBZSxHQUFHLFdBQVcsRUFtRC9CLE9BbERBLEdBQU8sU0FBVyxHQUFHLFVBQ25CLEtBQU0sRUFDTixNQUFPLFNBQVMsR0FDVixFQUFXLEVBQ2IsRUFBVSxHQUVWLEVBQVUsT0FLaEIsRUFBTyxZQUFjLEdBQUcsVUFDdEIsS0FBTSxFQUNOLE1BQU8sU0FBUyxHQUNWLEVBQVcsRUFBTyxZQUNwQixFQUFhLEVBQU8sYUFDQyxHQUFaLEVBQ1QsRUFBYSxHQUViLEVBQWEsTUFLbkIsRUFBTyxVQUFZLEdBQUcsU0FBUyxXQUM3QixNQUFPLE1BQUssS0FBSyxJQUFTLE9BQVMsRUFBTyxhQUFlLElBRzNELEVBQU8sZ0JBQWtCLEdBQUcsU0FBUyxXQUNuQyxHQUFJLEdBQVcsSUFDYixFQUFZLElBQ1osRUFBYSxHQUFZLEVBQVksR0FDckMsRUFBVyxFQUFXLENBRXhCLE9BQU8sS0FBUyxNQUFNLEVBQVksS0FHcEMsRUFBTyxVQUFZLFdBQ2pCLEVBQU8sWUFBWSxJQUVyQixFQUFPLGFBQWUsV0FDcEIsRUFBTyxZQUFZLEVBQU8sY0FBZ0IsSUFFNUMsRUFBTyxTQUFXLFdBQ2hCLEVBQU8sWUFBWSxFQUFPLGNBQWdCLElBRTVDLEVBQU8sU0FBVyxXQUNoQixFQUFPLFlBQVksRUFBTyxjQUdyQiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBrbyA9IHJlcXVpcmUoXCJrbm9ja291dFwiKTtcblxua28uZXh0ZW5kZXJzLnBhZ2luZyA9IGZ1bmN0aW9uKHRhcmdldCwgcGFnZVNpemUpIHtcbiAgdmFyIF9wYWdlU2l6ZSA9IGtvLm9ic2VydmFibGUocGFnZVNpemUgfHwgMTApLFxuICAgIC8vIGRlZmF1bHQgcGFnZVNpemUgdG8gMTBcbiAgICBfY3VycmVudFBhZ2UgPSBrby5vYnNlcnZhYmxlKDEpOyAvLyBkZWZhdWx0IGN1cnJlbnQgcGFnZSB0byAxXG4gIHRhcmdldC5wYWdlU2l6ZSA9IGtvLmNvbXB1dGVkKHtcbiAgICByZWFkOiBfcGFnZVNpemUsXG4gICAgd3JpdGU6IGZ1bmN0aW9uKG5ld1ZhbHVlKSB7XG4gICAgICBpZiAobmV3VmFsdWUgPiAwKSB7XG4gICAgICAgIF9wYWdlU2l6ZShuZXdWYWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfcGFnZVNpemUoMTApO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgdGFyZ2V0LmN1cnJlbnRQYWdlID0ga28uY29tcHV0ZWQoe1xuICAgIHJlYWQ6IF9jdXJyZW50UGFnZSxcbiAgICB3cml0ZTogZnVuY3Rpb24obmV3VmFsdWUpIHtcbiAgICAgIGlmIChuZXdWYWx1ZSA+IHRhcmdldC5wYWdlQ291bnQoKSkge1xuICAgICAgICBfY3VycmVudFBhZ2UodGFyZ2V0LnBhZ2VDb3VudCgpKTtcbiAgICAgIH0gZWxzZSBpZiAobmV3VmFsdWUgPD0gMCkge1xuICAgICAgICBfY3VycmVudFBhZ2UoMSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfY3VycmVudFBhZ2UobmV3VmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgdGFyZ2V0LnBhZ2VDb3VudCA9IGtvLmNvbXB1dGVkKGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBNYXRoLmNlaWwodGFyZ2V0KCkubGVuZ3RoIC8gdGFyZ2V0LnBhZ2VTaXplKCkpIHx8IDE7XG4gIH0pO1xuXG4gIHRhcmdldC5jdXJyZW50UGFnZURhdGEgPSBrby5jb21wdXRlZChmdW5jdGlvbigpIHtcbiAgICB2YXIgcGFnZVNpemUgPSBfcGFnZVNpemUoKSxcbiAgICAgIHBhZ2VJbmRleCA9IF9jdXJyZW50UGFnZSgpLFxuICAgICAgc3RhcnRJbmRleCA9IHBhZ2VTaXplICogKHBhZ2VJbmRleCAtIDEpLFxuICAgICAgZW5kSW5kZXggPSBwYWdlU2l6ZSAqIHBhZ2VJbmRleDtcblxuICAgIHJldHVybiB0YXJnZXQoKS5zbGljZShzdGFydEluZGV4LCBlbmRJbmRleCk7XG4gIH0pO1xuXG4gIHRhcmdldC5tb3ZlRmlyc3QgPSBmdW5jdGlvbigpIHtcbiAgICB0YXJnZXQuY3VycmVudFBhZ2UoMSk7XG4gIH07XG4gIHRhcmdldC5tb3ZlUHJldmlvdXMgPSBmdW5jdGlvbigpIHtcbiAgICB0YXJnZXQuY3VycmVudFBhZ2UodGFyZ2V0LmN1cnJlbnRQYWdlKCkgLSAxKTtcbiAgfTtcbiAgdGFyZ2V0Lm1vdmVOZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgdGFyZ2V0LmN1cnJlbnRQYWdlKHRhcmdldC5jdXJyZW50UGFnZSgpICsgMSk7XG4gIH07XG4gIHRhcmdldC5tb3ZlTGFzdCA9IGZ1bmN0aW9uKCkge1xuICAgIHRhcmdldC5jdXJyZW50UGFnZSh0YXJnZXQucGFnZUNvdW50KCkpO1xuICB9O1xuXG4gIHJldHVybiB0YXJnZXQ7XG59OyJdfQ==","deps":{}},"/Users/denea/mosaico/bower_components/tinycolor/tinycolor.js":{"file":"/Users/denea/mosaico/bower_components/tinycolor/tinycolor.js","source":"!function(e){function t(e,n){if(e=e?e:\"\",n=n||{},e instanceof t)return e;if(!(this instanceof t))return new t(e,n);var i=o(e);this._originalInput=e,this._r=i.r,this._g=i.g,this._b=i.b,this._a=i.a,this._roundA=L(100*this._a)/100,this._format=n.format||i.format,this._gradientType=n.gradientType,this._r<1&&(this._r=L(this._r)),this._g<1&&(this._g=L(this._g)),this._b<1&&(this._b=L(this._b)),this._ok=i.ok,this._tc_id=R++}function o(e){var t={r:0,g:0,b:0},o=1,i=null,r=null,s=null,d=!1,c=!1;return\"string\"==typeof e&&(e=j(e)),\"object\"==typeof e&&(B(e.r)&&B(e.g)&&B(e.b)?(t=n(e.r,e.g,e.b),d=!0,c=\"%\"===String(e.r).substr(-1)?\"prgb\":\"rgb\"):B(e.h)&&B(e.s)&&B(e.v)?(i=A(e.s),r=A(e.v),t=l(e.h,i,r),d=!0,c=\"hsv\"):B(e.h)&&B(e.s)&&B(e.l)&&(i=A(e.s),s=A(e.l),t=a(e.h,i,s),d=!0,c=\"hsl\"),e.hasOwnProperty(\"a\")&&(o=e.a)),o=S(o),{ok:d,format:e.format||c,r:N(255,U(t.r,0)),g:N(255,U(t.g,0)),b:N(255,U(t.b,0)),a:o}}function n(e,t,o){return{r:255*C(e,255),g:255*C(t,255),b:255*C(o,255)}}function i(e,t,o){e=C(e,255),t=C(t,255),o=C(o,255);var n,i,a=U(e,t,o),r=N(e,t,o),l=(a+r)/2;if(a==r)n=i=0;else{var s=a-r;switch(i=l>.5?s/(2-a-r):s/(a+r),a){case e:n=(t-o)/s+(o>t?6:0);break;case t:n=(o-e)/s+2;break;case o:n=(e-t)/s+4}n/=6}return{h:n,s:i,l:l}}function a(e,t,o){function n(e,t,o){return 0>o&&(o+=1),o>1&&(o-=1),1/6>o?e+6*(t-e)*o:.5>o?t:2/3>o?e+6*(t-e)*(2/3-o):e}var i,a,r;if(e=C(e,360),t=C(t,100),o=C(o,100),0===t)i=a=r=o;else{var l=.5>o?o*(1+t):o+t-o*t,s=2*o-l;i=n(s,l,e+1/3),a=n(s,l,e),r=n(s,l,e-1/3)}return{r:255*i,g:255*a,b:255*r}}function r(e,t,o){e=C(e,255),t=C(t,255),o=C(o,255);var n,i,a=U(e,t,o),r=N(e,t,o),l=a,s=a-r;if(i=0===a?0:s/a,a==r)n=0;else{switch(a){case e:n=(t-o)/s+(o>t?6:0);break;case t:n=(o-e)/s+2;break;case o:n=(e-t)/s+4}n/=6}return{h:n,s:i,v:l}}function l(t,o,n){t=6*C(t,360),o=C(o,100),n=C(n,100);var i=e.floor(t),a=t-i,r=n*(1-o),l=n*(1-a*o),s=n*(1-(1-a)*o),d=i%6,c=[n,l,r,r,s,n][d],u=[s,n,n,l,r,r][d],p=[r,r,s,n,n,l][d];return{r:255*c,g:255*u,b:255*p}}function s(e,t,o,n){var i=[T(L(e).toString(16)),T(L(t).toString(16)),T(L(o).toString(16))];return n&&i[0].charAt(0)==i[0].charAt(1)&&i[1].charAt(0)==i[1].charAt(1)&&i[2].charAt(0)==i[2].charAt(1)?i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0):i.join(\"\")}function d(e,t,o,n,i){var a=[T(L(e).toString(16)),T(L(t).toString(16)),T(L(o).toString(16)),T(E(n))];return i&&a[0].charAt(0)==a[0].charAt(1)&&a[1].charAt(0)==a[1].charAt(1)&&a[2].charAt(0)==a[2].charAt(1)&&a[3].charAt(0)==a[3].charAt(1)?a[0].charAt(0)+a[1].charAt(0)+a[2].charAt(0)+a[3].charAt(0):a.join(\"\")}function c(e,t,o,n){var i=[T(E(n)),T(L(e).toString(16)),T(L(t).toString(16)),T(L(o).toString(16))];return i.join(\"\")}function u(e,o){o=0===o?0:o||10;var n=t(e).toHsl();return n.s-=o/100,n.s=H(n.s),t(n)}function p(e,o){o=0===o?0:o||10;var n=t(e).toHsl();return n.s+=o/100,n.s=H(n.s),t(n)}function f(e){return t(e).desaturate(100)}function b(e,o){o=0===o?0:o||10;var n=t(e).toHsl();return n.l+=o/100,n.l=H(n.l),t(n)}function g(e,o){o=0===o?0:o||10;var n=t(e).toRgb();return n.r=U(0,N(255,n.r-L(255*-(o/100)))),n.g=U(0,N(255,n.g-L(255*-(o/100)))),n.b=U(0,N(255,n.b-L(255*-(o/100)))),t(n)}function m(e,o){o=0===o?0:o||10;var n=t(e).toHsl();return n.l-=o/100,n.l=H(n.l),t(n)}function h(e,o){var n=t(e).toHsl(),i=(n.h+o)%360;return n.h=0>i?360+i:i,t(n)}function v(e){var o=t(e).toHsl();return o.h=(o.h+180)%360,t(o)}function k(e){var o=t(e).toHsl(),n=o.h;return[t(e),t({h:(n+120)%360,s:o.s,l:o.l}),t({h:(n+240)%360,s:o.s,l:o.l})]}function y(e){var o=t(e).toHsl(),n=o.h;return[t(e),t({h:(n+90)%360,s:o.s,l:o.l}),t({h:(n+180)%360,s:o.s,l:o.l}),t({h:(n+270)%360,s:o.s,l:o.l})]}function w(e){var o=t(e).toHsl(),n=o.h;return[t(e),t({h:(n+72)%360,s:o.s,l:o.l}),t({h:(n+216)%360,s:o.s,l:o.l})]}function x(e,o,n){o=o||6,n=n||30;var i=t(e).toHsl(),a=360/n,r=[t(e)];for(i.h=(i.h-(a*o>>1)+720)%360;--o;)i.h=(i.h+a)%360,r.push(t(i));return r}function $(e,o){o=o||6;for(var n=t(e).toHsv(),i=n.h,a=n.s,r=n.v,l=[],s=1/o;o--;)l.push(t({h:i,s:a,v:r})),r=(r+s)%1;return l}function _(e){var t={};for(var o in e)e.hasOwnProperty(o)&&(t[e[o]]=o);return t}function S(e){return e=parseFloat(e),(isNaN(e)||0>e||e>1)&&(e=1),e}function C(t,o){M(t)&&(t=\"100%\");var n=O(t);return t=N(o,U(0,parseFloat(t))),n&&(t=parseInt(t*o,10)/100),e.abs(t-o)<1e-6?1:t%o/parseFloat(o)}function H(e){return N(1,U(0,e))}function q(e){return parseInt(e,16)}function M(e){return\"string\"==typeof e&&-1!=e.indexOf(\".\")&&1===parseFloat(e)}function O(e){return\"string\"==typeof e&&-1!=e.indexOf(\"%\")}function T(e){return 1==e.length?\"0\"+e:\"\"+e}function A(e){return 1>=e&&(e=100*e+\"%\"),e}function E(t){return e.round(255*parseFloat(t)).toString(16)}function I(e){return q(e)/255}function B(e){return!!J.CSS_UNIT.exec(e)}function j(e){e=e.replace(P,\"\").replace(F,\"\").toLowerCase();var t=!1;if(V[e])e=V[e],t=!0;else if(\"transparent\"==e)return{r:0,g:0,b:0,a:0,format:\"name\"};var o;return(o=J.rgb.exec(e))?{r:o[1],g:o[2],b:o[3]}:(o=J.rgba.exec(e))?{r:o[1],g:o[2],b:o[3],a:o[4]}:(o=J.hsl.exec(e))?{h:o[1],s:o[2],l:o[3]}:(o=J.hsla.exec(e))?{h:o[1],s:o[2],l:o[3],a:o[4]}:(o=J.hsv.exec(e))?{h:o[1],s:o[2],v:o[3]}:(o=J.hsva.exec(e))?{h:o[1],s:o[2],v:o[3],a:o[4]}:(o=J.hex8.exec(e))?{r:q(o[1]),g:q(o[2]),b:q(o[3]),a:I(o[4]),format:t?\"name\":\"hex8\"}:(o=J.hex6.exec(e))?{r:q(o[1]),g:q(o[2]),b:q(o[3]),format:t?\"name\":\"hex\"}:(o=J.hex4.exec(e))?{r:q(o[1]+\"\"+o[1]),g:q(o[2]+\"\"+o[2]),b:q(o[3]+\"\"+o[3]),a:I(o[4]+\"\"+o[4]),format:t?\"name\":\"hex8\"}:(o=J.hex3.exec(e))?{r:q(o[1]+\"\"+o[1]),g:q(o[2]+\"\"+o[2]),b:q(o[3]+\"\"+o[3]),format:t?\"name\":\"hex\"}:!1}function D(e){var t,o;return e=e||{level:\"AA\",size:\"small\"},t=(e.level||\"AA\").toUpperCase(),o=(e.size||\"small\").toLowerCase(),\"AA\"!==t&&\"AAA\"!==t&&(t=\"AA\"),\"small\"!==o&&\"large\"!==o&&(o=\"small\"),{level:t,size:o}}var P=/^\\s+/,F=/\\s+$/,R=0,L=e.round,N=e.min,U=e.max,z=e.random;t.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(299*e.r+587*e.g+114*e.b)/1e3},getLuminance:function(){var t,o,n,i,a,r,l=this.toRgb();return t=l.r/255,o=l.g/255,n=l.b/255,i=.03928>=t?t/12.92:e.pow((t+.055)/1.055,2.4),a=.03928>=o?o/12.92:e.pow((o+.055)/1.055,2.4),r=.03928>=n?n/12.92:e.pow((n+.055)/1.055,2.4),.2126*i+.7152*a+.0722*r},setAlpha:function(e){return this._a=S(e),this._roundA=L(100*this._a)/100,this},toHsv:function(){var e=r(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=r(this._r,this._g,this._b),t=L(360*e.h),o=L(100*e.s),n=L(100*e.v);return 1==this._a?\"hsv(\"+t+\", \"+o+\"%, \"+n+\"%)\":\"hsva(\"+t+\", \"+o+\"%, \"+n+\"%, \"+this._roundA+\")\"},toHsl:function(){var e=i(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=i(this._r,this._g,this._b),t=L(360*e.h),o=L(100*e.s),n=L(100*e.l);return 1==this._a?\"hsl(\"+t+\", \"+o+\"%, \"+n+\"%)\":\"hsla(\"+t+\", \"+o+\"%, \"+n+\"%, \"+this._roundA+\")\"},toHex:function(e){return s(this._r,this._g,this._b,e)},toHexString:function(e){return\"#\"+this.toHex(e)},toHex8:function(e){return d(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return\"#\"+this.toHex8(e)},toRgb:function(){return{r:L(this._r),g:L(this._g),b:L(this._b),a:this._a}},toRgbString:function(){return 1==this._a?\"rgb(\"+L(this._r)+\", \"+L(this._g)+\", \"+L(this._b)+\")\":\"rgba(\"+L(this._r)+\", \"+L(this._g)+\", \"+L(this._b)+\", \"+this._roundA+\")\"},toPercentageRgb:function(){return{r:L(100*C(this._r,255))+\"%\",g:L(100*C(this._g,255))+\"%\",b:L(100*C(this._b,255))+\"%\",a:this._a}},toPercentageRgbString:function(){return 1==this._a?\"rgb(\"+L(100*C(this._r,255))+\"%, \"+L(100*C(this._g,255))+\"%, \"+L(100*C(this._b,255))+\"%)\":\"rgba(\"+L(100*C(this._r,255))+\"%, \"+L(100*C(this._g,255))+\"%, \"+L(100*C(this._b,255))+\"%, \"+this._roundA+\")\"},toName:function(){return 0===this._a?\"transparent\":this._a<1?!1:W[s(this._r,this._g,this._b,!0)]||!1},toFilter:function(e){var o=\"#\"+c(this._r,this._g,this._b,this._a),n=o,i=this._gradientType?\"GradientType = 1, \":\"\";if(e){var a=t(e);n=\"#\"+c(a._r,a._g,a._b,a._a)}return\"progid:DXImageTransform.Microsoft.gradient(\"+i+\"startColorstr=\"+o+\",endColorstr=\"+n+\")\"},toString:function(e){var t=!!e;e=e||this._format;var o=!1,n=this._a<1&&this._a>=0,i=!t&&n&&(\"hex\"===e||\"hex6\"===e||\"hex3\"===e||\"hex4\"===e||\"hex8\"===e||\"name\"===e);return i?\"name\"===e&&0===this._a?this.toName():this.toRgbString():(\"rgb\"===e&&(o=this.toRgbString()),\"prgb\"===e&&(o=this.toPercentageRgbString()),(\"hex\"===e||\"hex6\"===e)&&(o=this.toHexString()),\"hex3\"===e&&(o=this.toHexString(!0)),\"hex4\"===e&&(o=this.toHex8String(!0)),\"hex8\"===e&&(o=this.toHex8String()),\"name\"===e&&(o=this.toName()),\"hsl\"===e&&(o=this.toHslString()),\"hsv\"===e&&(o=this.toHsvString()),o||this.toHexString())},clone:function(){return t(this.toString())},_applyModification:function(e,t){var o=e.apply(null,[this].concat([].slice.call(t)));return this._r=o._r,this._g=o._g,this._b=o._b,this.setAlpha(o._a),this},lighten:function(){return this._applyModification(b,arguments)},brighten:function(){return this._applyModification(g,arguments)},darken:function(){return this._applyModification(m,arguments)},desaturate:function(){return this._applyModification(u,arguments)},saturate:function(){return this._applyModification(p,arguments)},greyscale:function(){return this._applyModification(f,arguments)},spin:function(){return this._applyModification(h,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(x,arguments)},complement:function(){return this._applyCombination(v,arguments)},monochromatic:function(){return this._applyCombination($,arguments)},splitcomplement:function(){return this._applyCombination(w,arguments)},triad:function(){return this._applyCombination(k,arguments)},tetrad:function(){return this._applyCombination(y,arguments)}},t.fromRatio=function(e,o){if(\"object\"==typeof e){var n={};for(var i in e)e.hasOwnProperty(i)&&(n[i]=\"a\"===i?e[i]:A(e[i]));e=n}return t(e,o)},t.equals=function(e,o){return e&&o?t(e).toRgbString()==t(o).toRgbString():!1},t.random=function(){return t.fromRatio({r:z(),g:z(),b:z()})},t.mix=function(e,o,n){n=0===n?0:n||50;var i=t(e).toRgb(),a=t(o).toRgb(),r=n/100,l={r:(a.r-i.r)*r+i.r,g:(a.g-i.g)*r+i.g,b:(a.b-i.b)*r+i.b,a:(a.a-i.a)*r+i.a};return t(l)},t.readability=function(o,n){var i=t(o),a=t(n);return(e.max(i.getLuminance(),a.getLuminance())+.05)/(e.min(i.getLuminance(),a.getLuminance())+.05)},t.isReadable=function(e,o,n){var i,a,r=t.readability(e,o);switch(a=!1,i=D(n),i.level+i.size){case\"AAsmall\":case\"AAAlarge\":a=r>=4.5;break;case\"AAlarge\":a=r>=3;break;case\"AAAsmall\":a=r>=7}return a},t.mostReadable=function(e,o,n){var i,a,r,l,s=null,d=0;n=n||{},a=n.includeFallbackColors,r=n.level,l=n.size;for(var c=0;c<o.length;c++)i=t.readability(e,o[c]),i>d&&(d=i,s=t(o[c]));return t.isReadable(e,s,{level:r,size:l})||!a?s:(n.includeFallbackColors=!1,t.mostReadable(e,[\"#fff\",\"#000\"],n))};var V=t.names={aliceblue:\"f0f8ff\",antiquewhite:\"faebd7\",aqua:\"0ff\",aquamarine:\"7fffd4\",azure:\"f0ffff\",beige:\"f5f5dc\",bisque:\"ffe4c4\",black:\"000\",blanchedalmond:\"ffebcd\",blue:\"00f\",blueviolet:\"8a2be2\",brown:\"a52a2a\",burlywood:\"deb887\",burntsienna:\"ea7e5d\",cadetblue:\"5f9ea0\",chartreuse:\"7fff00\",chocolate:\"d2691e\",coral:\"ff7f50\",cornflowerblue:\"6495ed\",cornsilk:\"fff8dc\",crimson:\"dc143c\",cyan:\"0ff\",darkblue:\"00008b\",darkcyan:\"008b8b\",darkgoldenrod:\"b8860b\",darkgray:\"a9a9a9\",darkgreen:\"006400\",darkgrey:\"a9a9a9\",darkkhaki:\"bdb76b\",darkmagenta:\"8b008b\",darkolivegreen:\"556b2f\",darkorange:\"ff8c00\",darkorchid:\"9932cc\",darkred:\"8b0000\",darksalmon:\"e9967a\",darkseagreen:\"8fbc8f\",darkslateblue:\"483d8b\",darkslategray:\"2f4f4f\",darkslategrey:\"2f4f4f\",darkturquoise:\"00ced1\",darkviolet:\"9400d3\",deeppink:\"ff1493\",deepskyblue:\"00bfff\",dimgray:\"696969\",dimgrey:\"696969\",dodgerblue:\"1e90ff\",firebrick:\"b22222\",floralwhite:\"fffaf0\",forestgreen:\"228b22\",fuchsia:\"f0f\",gainsboro:\"dcdcdc\",ghostwhite:\"f8f8ff\",gold:\"ffd700\",goldenrod:\"daa520\",gray:\"808080\",green:\"008000\",greenyellow:\"adff2f\",grey:\"808080\",honeydew:\"f0fff0\",hotpink:\"ff69b4\",indianred:\"cd5c5c\",indigo:\"4b0082\",ivory:\"fffff0\",khaki:\"f0e68c\",lavender:\"e6e6fa\",lavenderblush:\"fff0f5\",lawngreen:\"7cfc00\",lemonchiffon:\"fffacd\",lightblue:\"add8e6\",lightcoral:\"f08080\",lightcyan:\"e0ffff\",lightgoldenrodyellow:\"fafad2\",lightgray:\"d3d3d3\",lightgreen:\"90ee90\",lightgrey:\"d3d3d3\",lightpink:\"ffb6c1\",lightsalmon:\"ffa07a\",lightseagreen:\"20b2aa\",lightskyblue:\"87cefa\",lightslategray:\"789\",lightslategrey:\"789\",lightsteelblue:\"b0c4de\",lightyellow:\"ffffe0\",lime:\"0f0\",limegreen:\"32cd32\",linen:\"faf0e6\",magenta:\"f0f\",maroon:\"800000\",mediumaquamarine:\"66cdaa\",mediumblue:\"0000cd\",mediumorchid:\"ba55d3\",mediumpurple:\"9370db\",mediumseagreen:\"3cb371\",mediumslateblue:\"7b68ee\",mediumspringgreen:\"00fa9a\",mediumturquoise:\"48d1cc\",mediumvioletred:\"c71585\",midnightblue:\"191970\",mintcream:\"f5fffa\",mistyrose:\"ffe4e1\",moccasin:\"ffe4b5\",navajowhite:\"ffdead\",navy:\"000080\",oldlace:\"fdf5e6\",olive:\"808000\",olivedrab:\"6b8e23\",orange:\"ffa500\",orangered:\"ff4500\",orchid:\"da70d6\",palegoldenrod:\"eee8aa\",palegreen:\"98fb98\",paleturquoise:\"afeeee\",palevioletred:\"db7093\",papayawhip:\"ffefd5\",peachpuff:\"ffdab9\",peru:\"cd853f\",pink:\"ffc0cb\",plum:\"dda0dd\",powderblue:\"b0e0e6\",purple:\"800080\",rebeccapurple:\"663399\",red:\"f00\",rosybrown:\"bc8f8f\",royalblue:\"4169e1\",saddlebrown:\"8b4513\",salmon:\"fa8072\",sandybrown:\"f4a460\",seagreen:\"2e8b57\",seashell:\"fff5ee\",sienna:\"a0522d\",silver:\"c0c0c0\",skyblue:\"87ceeb\",slateblue:\"6a5acd\",slategray:\"708090\",slategrey:\"708090\",snow:\"fffafa\",springgreen:\"00ff7f\",steelblue:\"4682b4\",tan:\"d2b48c\",teal:\"008080\",thistle:\"d8bfd8\",tomato:\"ff6347\",turquoise:\"40e0d0\",violet:\"ee82ee\",wheat:\"f5deb3\",white:\"fff\",whitesmoke:\"f5f5f5\",yellow:\"ff0\",yellowgreen:\"9acd32\"},W=t.hexNames=_(V),J=function(){var e=\"[-\\\\+]?\\\\d+%?\",t=\"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\",o=\"(?:\"+t+\")|(?:\"+e+\")\",n=\"[\\\\s|\\\\(]+(\"+o+\")[,|\\\\s]+(\"+o+\")[,|\\\\s]+(\"+o+\")\\\\s*\\\\)?\",i=\"[\\\\s|\\\\(]+(\"+o+\")[,|\\\\s]+(\"+o+\")[,|\\\\s]+(\"+o+\")[,|\\\\s]+(\"+o+\")\\\\s*\\\\)?\";return{CSS_UNIT:new RegExp(o),rgb:new RegExp(\"rgb\"+n),rgba:new RegExp(\"rgba\"+i),hsl:new RegExp(\"hsl\"+n),hsla:new RegExp(\"hsla\"+i),hsv:new RegExp(\"hsv\"+n),hsva:new RegExp(\"hsva\"+i),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();\"undefined\"!=typeof module&&module.exports?module.exports=t:\"function\"==typeof define&&define.amd?define(function(){return t}):window.tinycolor=t}(Math);\n//# sourceMappingURL=data:application/json;base64,","deps":{}},"/Users/denea/mosaico/src/js/ext/color.js":{"file":"/Users/denea/mosaico/src/js/ext/color.js","source":"(function (global){\nfunction Color(e){this.getBrightness=function(t){return e(t).getBrightness()},this.isLight=function(t){return e(t).isLight()},this.isDark=function(t){return e(t).isDark()},this.getLuminance=function(t){return e(t).getLuminance()},this.lighten=function(t,o){return e(t).lighten(o).toHexString()},this.brighten=function(t,o){return e(t).brighten(o).toHexString()},this.darken=function(t,o){return e(t).darken(o).toHexString()},this.desaturate=function(t,o){return e(t).desaturate(o).toHexString()},this.saturate=function(t,o){return e(t).saturate(o).toHexString()},this.greyscale=function(t){return e(t).greyscale().toHexString()},this.spin=function(t,o){return e(t).spin(o).toHexString()},this.complement=function(t){return e(t).complement().toHexString()},this.mix=e.mix,this.readability=e.readability,this.isReadable=e.isReadable,this.mostReadable=e.mostReadable}var tinycolor=require(\"./../../../bower_components/tinycolor/tinycolor.js\"),colorPlugin=function(){global.Color=new Color(tinycolor)};module.exports=colorPlugin;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9leHQvY29sb3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUVBLFFBQVMsT0FBTSxHQUNiLEtBQUssY0FBZ0IsU0FBUyxHQUM1QixNQUFPLEdBQVUsR0FBTyxpQkFFMUIsS0FBSyxRQUFVLFNBQVMsR0FDdEIsTUFBTyxHQUFVLEdBQU8sV0FFMUIsS0FBSyxPQUFTLFNBQVMsR0FDckIsTUFBTyxHQUFVLEdBQU8sVUFFMUIsS0FBSyxhQUFlLFNBQVMsR0FDM0IsTUFBTyxHQUFVLEdBQU8sZ0JBSTFCLEtBQUssUUFBVSxTQUFTLEVBQU8sR0FDN0IsTUFBTyxHQUFVLEdBQU8sUUFBUSxHQUFRLGVBRTFDLEtBQUssU0FBVyxTQUFTLEVBQU8sR0FDOUIsTUFBTyxHQUFVLEdBQU8sU0FBUyxHQUFRLGVBRTNDLEtBQUssT0FBUyxTQUFTLEVBQU8sR0FDNUIsTUFBTyxHQUFVLEdBQU8sT0FBTyxHQUFRLGVBRXpDLEtBQUssV0FBYSxTQUFTLEVBQU8sR0FDaEMsTUFBTyxHQUFVLEdBQU8sV0FBVyxHQUFRLGVBRTdDLEtBQUssU0FBVyxTQUFTLEVBQU8sR0FDOUIsTUFBTyxHQUFVLEdBQU8sU0FBUyxHQUFRLGVBRTNDLEtBQUssVUFBWSxTQUFTLEdBQ3hCLE1BQU8sR0FBVSxHQUFPLFlBQVksZUFFdEMsS0FBSyxLQUFPLFNBQVMsRUFBTyxHQUMxQixNQUFPLEdBQVUsR0FBTyxLQUFLLEdBQVEsZUFFdkMsS0FBSyxXQUFhLFNBQVMsR0FDekIsTUFBTyxHQUFVLEdBQU8sYUFBYSxlQUd2QyxLQUFLLElBQU0sRUFBVSxJQUNyQixLQUFLLFlBQWMsRUFBVSxZQUM3QixLQUFLLFdBQWEsRUFBVSxXQUM1QixLQUFLLGFBQWUsRUFBVSxhQTdDaEMsR0FBSSxXQUFZLFFBQVEsYUFnRHBCLFlBQWMsV0FDaEIsT0FBTyxNQUFRLEdBQUksT0FBTSxXQUczQixRQUFPLFFBQVUiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbInZhciB0aW55Y29sb3IgPSByZXF1aXJlKCd0aW55Y29sb3InKTtcblxuZnVuY3Rpb24gQ29sb3IodGlueWNvbG9yKSB7XG4gIHRoaXMuZ2V0QnJpZ2h0bmVzcyA9IGZ1bmN0aW9uKGNvbG9yKSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuZ2V0QnJpZ2h0bmVzcygpO1xuICB9O1xuICB0aGlzLmlzTGlnaHQgPSBmdW5jdGlvbihjb2xvcikge1xuICAgIHJldHVybiB0aW55Y29sb3IoY29sb3IpLmlzTGlnaHQoKTtcbiAgfTtcbiAgdGhpcy5pc0RhcmsgPSBmdW5jdGlvbihjb2xvcikge1xuICAgIHJldHVybiB0aW55Y29sb3IoY29sb3IpLmlzRGFyaygpO1xuICB9O1xuICB0aGlzLmdldEx1bWluYW5jZSA9IGZ1bmN0aW9uKGNvbG9yKSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuZ2V0THVtaW5hbmNlKCk7XG4gIH07XG5cblxuICB0aGlzLmxpZ2h0ZW4gPSBmdW5jdGlvbihjb2xvciwgYW1vdW50KSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikubGlnaHRlbihhbW91bnQpLnRvSGV4U3RyaW5nKCk7XG4gIH07XG4gIHRoaXMuYnJpZ2h0ZW4gPSBmdW5jdGlvbihjb2xvciwgYW1vdW50KSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuYnJpZ2h0ZW4oYW1vdW50KS50b0hleFN0cmluZygpO1xuICB9O1xuICB0aGlzLmRhcmtlbiA9IGZ1bmN0aW9uKGNvbG9yLCBhbW91bnQpIHtcbiAgICByZXR1cm4gdGlueWNvbG9yKGNvbG9yKS5kYXJrZW4oYW1vdW50KS50b0hleFN0cmluZygpO1xuICB9O1xuICB0aGlzLmRlc2F0dXJhdGUgPSBmdW5jdGlvbihjb2xvciwgYW1vdW50KSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuZGVzYXR1cmF0ZShhbW91bnQpLnRvSGV4U3RyaW5nKCk7XG4gIH07XG4gIHRoaXMuc2F0dXJhdGUgPSBmdW5jdGlvbihjb2xvciwgYW1vdW50KSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuc2F0dXJhdGUoYW1vdW50KS50b0hleFN0cmluZygpO1xuICB9O1xuICB0aGlzLmdyZXlzY2FsZSA9IGZ1bmN0aW9uKGNvbG9yKSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuZ3JleXNjYWxlKCkudG9IZXhTdHJpbmcoKTtcbiAgfTtcbiAgdGhpcy5zcGluID0gZnVuY3Rpb24oY29sb3IsIGFtb3VudCkge1xuICAgIHJldHVybiB0aW55Y29sb3IoY29sb3IpLnNwaW4oYW1vdW50KS50b0hleFN0cmluZygpO1xuICB9O1xuICB0aGlzLmNvbXBsZW1lbnQgPSBmdW5jdGlvbihjb2xvcikge1xuICAgIHJldHVybiB0aW55Y29sb3IoY29sb3IpLmNvbXBsZW1lbnQoKS50b0hleFN0cmluZygpO1xuICB9O1xuXG4gIHRoaXMubWl4ID0gdGlueWNvbG9yLm1peDtcbiAgdGhpcy5yZWFkYWJpbGl0eSA9IHRpbnljb2xvci5yZWFkYWJpbGl0eTtcbiAgdGhpcy5pc1JlYWRhYmxlID0gdGlueWNvbG9yLmlzUmVhZGFibGU7XG4gIHRoaXMubW9zdFJlYWRhYmxlID0gdGlueWNvbG9yLm1vc3RSZWFkYWJsZTtcbn1cblxudmFyIGNvbG9yUGx1Z2luID0gZnVuY3Rpb24odm0pIHtcbiAgZ2xvYmFsLkNvbG9yID0gbmV3IENvbG9yKHRpbnljb2xvcik7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbG9yUGx1Z2luOyJdfQ==","deps":{"./../../../bower_components/tinycolor/tinycolor.js":"/Users/denea/mosaico/bower_components/tinycolor/tinycolor.js"}},"/Users/denea/mosaico/src/js/bindings/jqueryui-spinner.js":{"file":"/Users/denea/mosaico/src/js/bindings/jqueryui-spinner.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),spinner=(typeof window !== \"undefined\" ? window['jQuery']['ui']['spinner'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['spinner'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");if(\"undefined\"==typeof spinner)throw\"Cannot find jquery-ui spinner widget dependency!\";$.widget(\"ui.spinner\",spinner,{_adjustValue:function(e){this._super(e);var t=this.options;return e=parseFloat(e.toFixed(this._precision())),null!==t.max&&e>t.max?t.max:null!==t.min&&e<t.min?t.min:e}});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9qcXVlcnl1aS1zcGlubmVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxZQUtBLElBQUksR0FBSSxRQUFRLFVBQ1osUUFBVSxRQUFRLHFCQUNsQixRQUFVLFFBQVEsVUFFdEIsSUFBc0IsbUJBQVgsU0FBd0IsS0FBTSxrREFFekMsR0FBRSxPQUFPLGFBQWMsU0FDckIsYUFBYyxTQUFTLEdBQ1gsS0FBSyxPQUFPLEVBRXRCLElBQUksR0FBVSxLQUFLLE9BTW5CLE9BSEEsR0FBUSxXQUFXLEVBQU0sUUFBUSxLQUFLLGVBR2xCLE9BQWhCLEVBQVEsS0FBZ0IsRUFBUSxFQUFRLElBQ25DLEVBQVEsSUFFRyxPQUFoQixFQUFRLEtBQWdCLEVBQVEsRUFBUSxJQUNuQyxFQUFRLElBR1YiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vLyBPdmVycmlkZXMgbmF0aXZlIGpRdWVyeSBzcGlubmVyIHRvIGF2b2lkIHZhbGlkYXRpb24gb2YgdGhlIFwic3RlcFwiLlxuLy8gV2Ugd2FudHMgdG8gdXNlIHRoZSBzdGVwIGJ1dCBhbHNvIHdhbnRzIHRvIGxlYXZlIHRoZSB1c2VyIHRoZSBhYmlsaXR5IHRvIHNlbGVjdCBzcGVjaWZpYyB2YWx1ZXMuXG5cbnZhciAkID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XG52YXIgc3Bpbm5lciA9IHJlcXVpcmUoXCJqcXVlcnktdWkvc3Bpbm5lclwiKTtcbnZhciBjb25zb2xlID0gcmVxdWlyZSgnY29uc29sZScpO1xuXG5pZiAodHlwZW9mIHNwaW5uZXIgPT0gJ3VuZGVmaW5lZCcpIHRocm93IFwiQ2Fubm90IGZpbmQganF1ZXJ5LXVpIHNwaW5uZXIgd2lkZ2V0IGRlcGVuZGVuY3khXCI7XG5cbiQud2lkZ2V0KFwidWkuc3Bpbm5lclwiLCBzcGlubmVyLCB7XG4gIF9hZGp1c3RWYWx1ZTogZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgYWRqID0gdGhpcy5fc3VwZXIodmFsdWUpO1xuXG4gICAgdmFyIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG5cbiAgICAvLyBmaXggcHJlY2lzaW9uIGZyb20gYmFkIEpTIGZsb2F0aW5nIHBvaW50IG1hdGhcbiAgICB2YWx1ZSA9IHBhcnNlRmxvYXQodmFsdWUudG9GaXhlZCh0aGlzLl9wcmVjaXNpb24oKSkpO1xuXG4gICAgLy8gY2xhbXAgdGhlIHZhbHVlXG4gICAgaWYgKG9wdGlvbnMubWF4ICE9PSBudWxsICYmIHZhbHVlID4gb3B0aW9ucy5tYXgpIHtcbiAgICAgIHJldHVybiBvcHRpb25zLm1heDtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMubWluICE9PSBudWxsICYmIHZhbHVlIDwgb3B0aW9ucy5taW4pIHtcbiAgICAgIHJldHVybiBvcHRpb25zLm1pbjtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbn0pO1xuIl19","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/blocks.js":{"file":"/Users/denea/mosaico/src/js/bindings/blocks.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.withProperties={init:function(e,t,o,a,i){var n=i.createChildContext(i.$rawData,null,function(e){ko.utils.extend(e,t())});return ko.applyBindingsToDescendants(n,e),{controlsDescendantBindings:!0}}},ko.virtualElements.allowedBindings.withProperties=!0,ko.bindingHandlers.log={init:function(e,t){console.log(\"log\",t())}},ko.bindingHandlers.block={templateExists:function(e){var t=global.document.getElementById(e);return t?!0:!1},_chooseTemplate:function(e,t,o,a){var i=t+\"-\"+o;if(ko.bindingHandlers.block.templateExists(i))return i;if(\"undefined\"!=typeof a&&null!==a)return ko.bindingHandlers.block._chooseTemplate(e,t,a);var n=e?\"array\":\"object-\"+o;if(ko.bindingHandlers.block.templateExists(n))return n;throw\"cannot find template for \"+i+\"/\"+n},_displayMode:function(e,t){var o=\"undefined\"!=typeof e.type?ko.utils.unwrapObservable(e.type):\"notablock-\"+typeof e,a=\"undefined\"!=typeof e.splice,i=t.templateMode?t.templateMode:\"show\";return ko.bindingHandlers.block._chooseTemplate(a,o,i,t.templateModeFallback)},_makeTemplateValueAccessor:function(e,t){return function(){var o,a,i=e(),n=ko.utils.peekObservable(i);if(!n||\"object\"!=typeof n.data&&\"function\"!=typeof n.data)o=i;else if(o=n.data,\"undefined\"!=typeof n.template){var l=ko.utils.unwrapObservable(n.template),r=t.templateMode?t.templateMode:\"show\";a=ko.bindingHandlers.block._chooseTemplate(!1,l,r,t.templateModeFallback)}var d=ko.utils.unwrapObservable(o);if(ko.isObservable(d)&&console.log(\"doubleObservable\",d),\"undefined\"==typeof a)if(void 0===o)a=\"empty\";else try{a=ko.bindingHandlers.block._displayMode(d,t)}catch(s){throw console.log(s,d,t.$data,t.templateMode),s}return{name:a,data:o,templateEngine:ko.nativeTemplateEngine.instance}}},init:function(e,t,o,a,i){\"undefined\"==typeof t()&&console.log(\"found a null block: check ending commas in arrays defs in IE\");var n=ko.bindingHandlers.block._makeTemplateValueAccessor(t,i);return ko.bindingHandlers.template.init(e,n)},update:function(e,t,o,a,i){var n=ko.bindingHandlers.block._makeTemplateValueAccessor(t,i);return ko.bindingHandlers.template.update(e,n,o,a,i)}},ko.expressionRewriting.bindingRewriteValidators.block=!1,ko.virtualElements.allowedBindings.block=!0;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/jqueryui-tabs.js":{"file":"/Users/denea/mosaico/src/js/bindings/jqueryui-tabs.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),tabs=(typeof window !== \"undefined\" ? window['jQuery']['ui']['tabs'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['tabs'] : null);if(\"undefined\"==typeof tabs)throw\"Cannot find jquery-ui tabs widget dependency!\";$.widget(\"ui.tabs\",tabs,{_isLocal:function(e){return\"true\"==e.getAttribute(\"data-local\")?!0:this._superApply(arguments)}});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9qcXVlcnl1aS10YWJzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxZQUtBLElBQUksR0FBSSxRQUFRLFVBQ1osUUFBVSxRQUFRLFdBQ2xCLEtBQU8sUUFBUSxpQkFFbkIsSUFBbUIsbUJBQVIsTUFBcUIsS0FBTSwrQ0FFdEMsR0FBRSxPQUFPLFVBQVcsTUFDbEIsU0FBVSxTQUFVLEdBQ2xCLE1BQXlDLFFBQXJDLEVBQU8sYUFBYSxlQUFnQyxFQUM1QyxLQUFLLFlBQWEiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vLyBPdmVycmlkZXMgbmF0aXZlIGpRdWVyeSB0YWJzIHRvIG1ha2UgdGFicyB3b3JraW5nIGFsc28gd2hlbiB1c2luZyBhIGJhc2UgdGFnXG4vLyBpbiBvcmRlciB0byBhdm9pZCBjb25mbGljdHMgeW91IGhhdmUgdG8gYWRkIGEgZGF0YS1sb2NhbD1cInRydWVcIiBhdHRyaWJ1dGUgdG8geW91ciB0YWIgbGlua3MuXG5cbnZhciAkID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XG52YXIgY29uc29sZSA9IHJlcXVpcmUoJ2NvbnNvbGUnKTtcbnZhciB0YWJzID0gcmVxdWlyZShcImpxdWVyeS11aS90YWJzXCIpO1xuXG5pZiAodHlwZW9mIHRhYnMgPT0gJ3VuZGVmaW5lZCcpIHRocm93IFwiQ2Fubm90IGZpbmQganF1ZXJ5LXVpIHRhYnMgd2lkZ2V0IGRlcGVuZGVuY3khXCI7XG5cbiQud2lkZ2V0KFwidWkudGFic1wiLCB0YWJzLCB7XG4gIF9pc0xvY2FsOiBmdW5jdGlvbiggYW5jaG9yICkge1xuICAgIGlmIChhbmNob3IuZ2V0QXR0cmlidXRlKCdkYXRhLWxvY2FsJykgPT0gXCJ0cnVlXCIpIHJldHVybiB0cnVlO1xuICAgIGVsc2UgcmV0dXJuIHRoaXMuX3N1cGVyQXBwbHkoIGFyZ3VtZW50cyApO1xuICB9XG59KTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/bind-iframe.js":{"file":"/Users/denea/mosaico/src/js/bindings/bind-iframe.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),addScriptTemplate=function(e,t,o){var a=e.createElement(\"script\");return a.setAttribute(\"type\",\"text/html\"),a.setAttribute(\"id\",t),a.text=o,e.body.appendChild(a),a};ko.bindingHandlers.bindIframe={tpl:'<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n</head>\\r\\n<body><div data-bind=\"block: content\"></div></body>\\r\\n</html>\\r\\n',init:function(e,t){function o(o){try{var a=e.contentDocument;a.open(),a.write(ko.bindingHandlers.bindIframe.tpl),a.close();try{var i=a.body;if(i){for(var n=e.contentWindow.parent.document.getElementsByTagName(\"script\"),l=0;l<n.length;l++)\"text/html\"==n[l].getAttribute(\"type\")&&n[l].getAttribute(\"id\")&&addScriptTemplate(a,n[l].getAttribute(\"id\"),n[l].innerHTML);var r=a.getElementsByTagName(\"HTML\");ko.utils.domNodeDisposal.addDisposeCallback(e,function(){ko.cleanNode(r[0]||i)}),ko.applyBindings(t(),r[0]||i)}else console.log(\"no iframedoc\",o)}catch(d){throw console.log(\"error reading iframe.body\",d,o),d}}catch(d){throw console.log(\"error reading iframe contentDocument\",d,o),d}}o(\"first call\")}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9iaW5kLWlmcmFtZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFFQSxJQUFJLElBQUssUUFBUSxZQUNiLFFBQVUsUUFBUSxXQUdsQixrQkFBb0IsU0FBUyxFQUFLLEVBQWMsR0FDbEQsR0FBSSxHQUFZLEVBQUksY0FBYyxTQUtsQyxPQUpBLEdBQVUsYUFBYSxPQUFRLGFBQy9CLEVBQVUsYUFBYSxLQUFNLEdBQzdCLEVBQVUsS0FBTyxFQUNqQixFQUFJLEtBQUssWUFBWSxHQUNkLEVBS1QsSUFBRyxnQkFBZ0IsWUFFakIsSUFBSyx1SEFDTCxLQUFNLFNBQVMsRUFBUyxHQUN0QixRQUFTLEdBQVcsR0FDbEIsSUFDRSxHQUFJLEdBQVMsRUFBUSxlQUNyQixHQUFPLE9BQ1AsRUFBTyxNQUFNLEdBQUcsZ0JBQWdCLFdBQVcsS0FDM0MsRUFBTyxPQUVQLEtBQ0UsR0FBSSxHQUFZLEVBQU8sSUFDdkIsSUFBSSxFQUFXLENBR2IsSUFBSyxHQURELEdBQVksRUFBUSxjQUFjLE9BQU8sU0FBUyxxQkFBcUIsVUFDbEUsRUFBSSxFQUFHLEVBQUksRUFBVSxPQUFRLElBQ0ssYUFBckMsRUFBVSxHQUFHLGFBQWEsU0FBMEIsRUFBVSxHQUFHLGFBQWEsT0FDaEYsa0JBQWtCLEVBQVEsRUFBVSxHQUFHLGFBQWEsTUFBTyxFQUFVLEdBQUcsVUFJNUUsSUFBSSxHQUFPLEVBQU8scUJBQXFCLE9BRXZDLElBQUcsTUFBTSxnQkFBZ0IsbUJBQW1CLEVBQVMsV0FDbkQsR0FBRyxVQUFVLEVBQUssSUFBTSxLQUcxQixHQUFHLGNBQWMsSUFBaUIsRUFBSyxJQUFNLE9BRTdDLFNBQVEsSUFBSSxlQUFnQixHQUU5QixNQUFPLEdBRVAsS0FEQSxTQUFRLElBQUksNEJBQTZCLEVBQUcsR0FDdEMsR0FFUixNQUFPLEdBRVAsS0FEQSxTQUFRLElBQUksdUNBQXdDLEVBQUcsR0FDakQsR0FJVixFQUFXIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGtvID0gcmVxdWlyZShcImtub2Nrb3V0XCIpO1xudmFyIGNvbnNvbGUgPSByZXF1aXJlKFwiY29uc29sZVwiKTtcblxuLy8gQHNlZSBhbHNvIHNjcmlwdC10ZW1wbGF0ZS5qcyBwdXNoVGVtcGxhdGVcbnZhciBhZGRTY3JpcHRUZW1wbGF0ZSA9IGZ1bmN0aW9uKGRvYywgdGVtcGxhdGVOYW1lLCB0ZW1wbGF0ZU1hcmt1cCkge1xuICB2YXIgc2NyaXB0VGFnID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICBzY3JpcHRUYWcuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQvaHRtbCcpO1xuICBzY3JpcHRUYWcuc2V0QXR0cmlidXRlKCdpZCcsIHRlbXBsYXRlTmFtZSk7XG4gIHNjcmlwdFRhZy50ZXh0ID0gdGVtcGxhdGVNYXJrdXA7XG4gIGRvYy5ib2R5LmFwcGVuZENoaWxkKHNjcmlwdFRhZyk7XG4gIHJldHVybiBzY3JpcHRUYWc7XG4gIC8vICQoJzxzY3JpcHQgdHlwZT1cInRleHQvaHRtbFwiPjwvc2MnICsgJ3JpcHQ+JykudGV4dCh0ZW1wbGF0ZU1hcmt1cCkuYXR0cignaWQnLCB0ZW1wbGF0ZU5hbWUpLmFwcGVuZFRvKCQoJ2JvZHknKSk7XG59O1xuXG4vLyB1c2VkIGZvciBsaXZlIHByZXZpZXcgaW4gaWZyYW1lLlxua28uYmluZGluZ0hhbmRsZXJzLmJpbmRJZnJhbWUgPSB7XG4gIC8vIHRwbCB3aWxsIGJlIG92ZXJyaWRlbiB3aXRoIHRoZSBzdHJ1Y3R1cmUgcGFyc2VkIGJ5IHRoZSBpbnB1dCB0ZW1wbGF0ZS5cbiAgdHBsOiBcIjwhRE9DVFlQRSBodG1sPlxcclxcbjxodG1sPlxcclxcbjxoZWFkPlxcclxcbjwvaGVhZD5cXHJcXG48Ym9keT48ZGl2IGRhdGEtYmluZD1cXFwiYmxvY2s6IGNvbnRlbnRcXFwiPjwvZGl2PjwvYm9keT5cXHJcXG48L2h0bWw+XFxyXFxuXCIsXG4gIGluaXQ6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlQWNjZXNzb3IpIHtcbiAgICBmdW5jdGlvbiBiaW5kSWZyYW1lKGxvY2FsKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgaWZyYW1lID0gZWxlbWVudC5jb250ZW50RG9jdW1lbnQ7XG4gICAgICAgIGlmcmFtZS5vcGVuKCk7XG4gICAgICAgIGlmcmFtZS53cml0ZShrby5iaW5kaW5nSGFuZGxlcnMuYmluZElmcmFtZS50cGwpO1xuICAgICAgICBpZnJhbWUuY2xvc2UoKTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIHZhciBpZnJhbWVkb2MgPSBpZnJhbWUuYm9keTtcbiAgICAgICAgICBpZiAoaWZyYW1lZG9jKSB7XG4gICAgICAgICAgICAvLyBzY3JpcHRzIGhhdmUgdG8gYmUgZHVwbGljYXRlZCAobWF5YmUgdGhpcyBpcyBub3QgbmVlZGVkIGFueW1vcmUgc2luY2UgdXNpbmcgc3RyaW5nLXRlbXBsYXRlcylcbiAgICAgICAgICAgIHZhciB0ZW1wbGF0ZXMgPSBlbGVtZW50LmNvbnRlbnRXaW5kb3cucGFyZW50LmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGVtcGxhdGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGlmICh0ZW1wbGF0ZXNbaV0uZ2V0QXR0cmlidXRlKCd0eXBlJykgPT0gJ3RleHQvaHRtbCcgJiYgdGVtcGxhdGVzW2ldLmdldEF0dHJpYnV0ZSgnaWQnKSkge1xuICAgICAgICAgICAgICAgIGFkZFNjcmlwdFRlbXBsYXRlKGlmcmFtZSwgdGVtcGxhdGVzW2ldLmdldEF0dHJpYnV0ZSgnaWQnKSwgdGVtcGxhdGVzW2ldLmlubmVySFRNTCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGh0bWwgPSBpZnJhbWUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJIVE1MXCIpO1xuXG4gICAgICAgICAgICBrby51dGlscy5kb21Ob2RlRGlzcG9zYWwuYWRkRGlzcG9zZUNhbGxiYWNrKGVsZW1lbnQsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICBrby5jbGVhbk5vZGUoaHRtbFswXSB8fCBpZnJhbWVkb2MpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGtvLmFwcGx5QmluZGluZ3ModmFsdWVBY2Nlc3NvcigpLCBodG1sWzBdIHx8IGlmcmFtZWRvYyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwibm8gaWZyYW1lZG9jXCIsIGxvY2FsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImVycm9yIHJlYWRpbmcgaWZyYW1lLmJvZHlcIiwgZSwgbG9jYWwpO1xuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJlcnJvciByZWFkaW5nIGlmcmFtZSBjb250ZW50RG9jdW1lbnRcIiwgZSwgbG9jYWwpO1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgICAvLyBpZ25vcmVkXG4gICAgICB9XG4gICAgfVxuICAgIGJpbmRJZnJhbWUoXCJmaXJzdCBjYWxsXCIpO1xuICAgIC8vIG9sZGVyIGJyb3dzZXJzIG5lZWRlZCB0aGlzXG4gICAgLy8ga28udXRpbHMucmVnaXN0ZXJFdmVudEhhbmRsZXIoZWxlbWVudCwgJ2xvYWQnLCBiaW5kSWZyYW1lKTtcbiAgfVxufTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/virtuals.js":{"file":"/Users/denea/mosaico/src/js/bindings/virtuals.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.uniqueId={currentIndex:0,init:function(e,t){var o=ko.utils.unwrapObservable(t())||{};if(\"\"===o.id()){var a,i,n;n=\"ko_\"+(\"undefined\"!=typeof o.type?ko.utils.unwrapObservable(o.type):\"block\");do a=n+\"_\"+ ++ko.bindingHandlers.uniqueId.currentIndex,i=global.document.getElementById(a);while(i);o.id(a)}}},ko.virtualElements.allowedBindings.uniqueId=!0,ko.bindingHandlers.virtualAttr={update:function(e,t){8!==e.nodeType&&ko.bindingHandlers.attr.update(e,t)}},ko.virtualElements.allowedBindings.virtualAttr=!0,ko.bindingHandlers.virtualAttrStyle={update:function(e,t,o,a,i){if(8!==e.nodeType){var n=\"undefined\"==typeof i.templateMode||\"wysiwyg\"!=i.templateMode,l=[\"style\"];n&&l.push(\"replacedstyle\");for(var r=ko.utils.unwrapObservable(t()),d=0;d<l.length;d++){var s=l[d],c=r===!1||null===r||void 0===r;c?e.removeAttribute(s):e.setAttribute(s,r.toString())}}}},ko.virtualElements.allowedBindings.virtualAttrStyle=!0,ko.bindingHandlers.virtualStyle={update:function(e,t){8!==e.nodeType&&ko.bindingHandlers.style.update(e,t)}},ko.virtualElements.allowedBindings.virtualStyle=!0,ko.bindingHandlers.virtualHtml={init:ko.bindingHandlers.html.init,update:function(e,t){if(8===e.nodeType){var o=ko.utils.unwrapObservable(t());if(ko.virtualElements.emptyNode(e),null!==o&&void 0!==o){\"string\"!=typeof o&&(o=o.toString());var a=ko.utils.parseHtmlFragment(o);if(a)for(var i=e.nextSibling,n=0,l=a.length;l>n;n++)i.parentNode.insertBefore(a[n],i)}}else ko.bindingHandlers.html.update(e,t);return{controlsDescendantBindings:!0}}},ko.virtualElements.allowedBindings.virtualHtml=!0;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy92aXJ0dWFscy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFHQSxJQUFJLElBQUssUUFBUSxZQUNiLFFBQVUsUUFBUSxVQUV0QixJQUFHLGdCQUEwQixVQUMzQixhQUFjLEVBQ2QsS0FBUSxTQUFTLEVBQVMsR0FDeEIsR0FBSSxHQUFPLEdBQUcsTUFBTSxpQkFBaUIsUUFDckMsSUFBa0IsS0FBZCxFQUFLLEtBQWEsQ0FDcEIsR0FBSSxHQUFJLEVBQUksQ0FFWixHQUFTLE9BQThCLG1CQUFkLEdBQUssS0FBdUIsR0FBRyxNQUFNLGlCQUFpQixFQUFLLE1BQVEsUUFFNUYsR0FDRSxHQUFLLEVBQVMsT0FBUyxHQUFHLGdCQUEwQixTQUFFLGFBQ3RELEVBQUssT0FBTyxTQUFTLGVBQWUsU0FRN0IsRUFDVCxHQUFLLEdBQUcsTUFJZCxHQUFHLGdCQUFnQixnQkFBMEIsVUFBSSxFQUVqRCxHQUFHLGdCQUE2QixhQUM5QixPQUFRLFNBQVMsRUFBUyxHQUNDLElBQXJCLEVBQVEsVUFDVixHQUFHLGdCQUFzQixLQUFFLE9BQU8sRUFBUyxLQUlqRCxHQUFHLGdCQUFnQixnQkFBNkIsYUFBSSxFQUVwRCxHQUFHLGdCQUFrQyxrQkFDbkMsT0FBUSxTQUFTLEVBQVMsRUFBZSxFQUFxQixFQUFXLEdBQ3ZFLEdBQXlCLElBQXJCLEVBQVEsU0FBZ0IsQ0FFMUIsR0FBSSxHQUEwRCxtQkFBL0IsR0FBZSxjQUE4RCxXQUEvQixFQUFlLGFBQ3hGLEdBQVMsUUFDVCxJQUFrQixFQUFNLEtBQUssZ0JBRWpDLEtBQUssR0FERCxHQUFZLEdBQUcsTUFBTSxpQkFBaUIsS0FDakMsRUFBSSxFQUFHLEVBQUksRUFBTSxPQUFRLElBQUssQ0FDckMsR0FBSSxHQUFXLEVBQU0sR0FDakIsRUFBWSxLQUFjLEdBQXlCLE9BQWQsR0FBc0MsU0FBZCxDQUM3RCxHQUNGLEVBQVEsZ0JBQWdCLEdBRXhCLEVBQVEsYUFBYSxFQUFVLEVBQVUsZ0JBS25ELEdBQUcsZ0JBQWdCLGdCQUFrQyxrQkFBSSxFQUV6RCxHQUFHLGdCQUE4QixjQUMvQixPQUFRLFNBQVMsRUFBUyxHQUNDLElBQXJCLEVBQVEsVUFDVixHQUFHLGdCQUF1QixNQUFFLE9BQU8sRUFBUyxLQUlsRCxHQUFHLGdCQUFnQixnQkFBOEIsY0FBSSxFQUdyRCxHQUFHLGdCQUE2QixhQUM5QixLQUFNLEdBQUcsZ0JBQXNCLEtBQUUsS0FDakMsT0FBUSxTQUFTLEVBQVMsR0FDeEIsR0FBeUIsSUFBckIsRUFBUSxTQUFnQixDQUMxQixHQUFJLEdBQU8sR0FBRyxNQUFNLGlCQUFpQixJQUdyQyxJQURBLEdBQUcsZ0JBQWdCLFVBQVUsR0FDZixPQUFULEdBQTRCLFNBQVQsRUFBcUIsQ0FDdkIsZ0JBQVQsS0FDVCxFQUFPLEVBQUssV0FHZCxJQUFJLEdBQWMsR0FBRyxNQUFNLGtCQUFrQixFQUM3QyxJQUFJLEVBRUYsSUFBSyxHQURELEdBQWlCLEVBQVEsWUFDcEIsRUFBSSxFQUFHLEVBQUksRUFBWSxPQUFZLEVBQUosRUFBTyxJQUM3QyxFQUFlLFdBQVcsYUFBYSxFQUFZLEdBQUksUUFJN0QsSUFBRyxnQkFBc0IsS0FBRSxPQUFPLEVBQVMsRUFJN0MsUUFDRSw0QkFBNEIsS0FJbEMsR0FBRyxnQkFBZ0IsZ0JBQTZCLGFBQUkiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogZ2xvYmFscyBnbG9iYWw6ZmFsc2UgKi9cblxudmFyIGtvID0gcmVxdWlyZShcImtub2Nrb3V0XCIpO1xudmFyIGNvbnNvbGUgPSByZXF1aXJlKFwiY29uc29sZVwiKTtcblxua28uYmluZGluZ0hhbmRsZXJzWyd1bmlxdWVJZCddID0ge1xuICBjdXJyZW50SW5kZXg6IDAsXG4gICdpbml0JzogZnVuY3Rpb24oZWxlbWVudCwgdmFsdWVBY2Nlc3Nvcikge1xuICAgIHZhciBkYXRhID0ga28udXRpbHMudW53cmFwT2JzZXJ2YWJsZSh2YWx1ZUFjY2Vzc29yKCkpIHx8IHt9O1xuICAgIGlmIChkYXRhLmlkKCkgPT09ICcnKSB7XG4gICAgICB2YXIgaWQsIGVsLCBwcmVmaXg7XG4gICAgICAvLyBUT0RPIHdlIG5lZWQgYSBiZXR0ZXIgcHJlZml4XG4gICAgICBwcmVmaXggPSAna29fJyArICh0eXBlb2YgZGF0YS50eXBlICE9PSAndW5kZWZpbmVkJyA/IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUoZGF0YS50eXBlKSA6ICdibG9jaycpO1xuICAgICAgLy8gd2hlbiBsb2FkaW5nIGFuIGV4aXNpbmcgbW9kZWwsIElEcyBjb3VsZCBiZSBhbHJlYWR5IGFzc2lnbmVkLlxuICAgICAgZG8ge1xuICAgICAgICBpZCA9IHByZWZpeCArICdfJyArICgrK2tvLmJpbmRpbmdIYW5kbGVyc1sndW5pcXVlSWQnXS5jdXJyZW50SW5kZXgpO1xuICAgICAgICBlbCA9IGdsb2JhbC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICAgIGlmIChlbCkge1xuICAgICAgICAgIC8vIHdoZW4gbG9hZGluZyBhbiBleGlzdGluZyBtb2RlbCBteSBcImN1cnJlbnRJbmRleFwiIGlzIGVtcHR5LlxuICAgICAgICAgIC8vIGJ1dCB3ZSBoYXZlIGV4aXN0aW5nIGJsb2Nrcywgc28gSSBtdXN0IGJlIHN1cmUgSSBkb24ndCByZXVzZSB0aGVpciBJRHMuXG4gICAgICAgICAgLy8gV2UgdXNlIGRpZmZlcmVudCBwcmVmaXhlcyAocGVyIGJsb2NrIHR5cGUpIHNvIHRoYXQgYSBoaWRkZW4gYmxvY2sgXG4gICAgICAgICAgLy8gKGZvciB3aGljaCB3ZSBoYXZlIG5vIGlkIGluIHRoZSBwYWdlLCBlLmc6IHByZWhlYWRlciBpbiB2ZXJzYWZpeC0xKVxuICAgICAgICAgIC8vIHdpbGwgYnJlYWsgZXZlcnRoaW5nIG9uY2Ugd2UgcmV1c2UgaXRzIG5hbWUuXG4gICAgICAgIH1cbiAgICAgIH0gd2hpbGUgKGVsKTtcbiAgICAgIGRhdGEuaWQoaWQpO1xuICAgIH1cbiAgfVxufTtcbmtvLnZpcnR1YWxFbGVtZW50cy5hbGxvd2VkQmluZGluZ3NbJ3VuaXF1ZUlkJ10gPSB0cnVlO1xuXG5rby5iaW5kaW5nSGFuZGxlcnNbJ3ZpcnR1YWxBdHRyJ10gPSB7XG4gIHVwZGF0ZTogZnVuY3Rpb24oZWxlbWVudCwgdmFsdWVBY2Nlc3Nvcikge1xuICAgIGlmIChlbGVtZW50Lm5vZGVUeXBlICE9PSA4KSB7XG4gICAgICBrby5iaW5kaW5nSGFuZGxlcnNbJ2F0dHInXS51cGRhdGUoZWxlbWVudCwgdmFsdWVBY2Nlc3Nvcik7XG4gICAgfVxuICB9XG59O1xua28udmlydHVhbEVsZW1lbnRzLmFsbG93ZWRCaW5kaW5nc1sndmlydHVhbEF0dHInXSA9IHRydWU7XG5cbmtvLmJpbmRpbmdIYW5kbGVyc1sndmlydHVhbEF0dHJTdHlsZSddID0ge1xuICB1cGRhdGU6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlQWNjZXNzb3IsIGFsbEJpbmRpbmdzQWNjZXNzb3IsIHZpZXdNb2RlbCwgYmluZGluZ0NvbnRleHQpIHtcbiAgICBpZiAoZWxlbWVudC5ub2RlVHlwZSAhPT0gOCkge1xuICAgICAgLy8gSW4gXCJwcmV2aWV3XCIgd2UgYWxzbyBzZXQgXCJyZXBsYWNlZHN0eWxlXCIgc28gdG8gaGF2ZSBhbiBhdHRyaWJ1dGUgdG8gYmUgdXNlZCBieSBJRSAoSUUgYnJlYWtzIHRoZSBTVFlMRSkgdG8gZG8gdGhlIGV4cG9ydC5cbiAgICAgIHZhciBpc05vdFd5c2l3eWdNb2RlID0gKHR5cGVvZiBiaW5kaW5nQ29udGV4dC50ZW1wbGF0ZU1vZGUgPT0gJ3VuZGVmaW5lZCcgfHwgYmluZGluZ0NvbnRleHQudGVtcGxhdGVNb2RlICE9ICd3eXNpd3lnJyk7XG4gICAgICB2YXIgYXR0cnMgPSBbXCJzdHlsZVwiXTtcbiAgICAgIGlmIChpc05vdFd5c2l3eWdNb2RlKSBhdHRycy5wdXNoKFwicmVwbGFjZWRzdHlsZVwiKTtcbiAgICAgIHZhciBhdHRyVmFsdWUgPSBrby51dGlscy51bndyYXBPYnNlcnZhYmxlKHZhbHVlQWNjZXNzb3IoKSk7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBhdHRyTmFtZSA9IGF0dHJzW2ldO1xuICAgICAgICB2YXIgdG9SZW1vdmUgPSAoYXR0clZhbHVlID09PSBmYWxzZSkgfHwgKGF0dHJWYWx1ZSA9PT0gbnVsbCkgfHwgKGF0dHJWYWx1ZSA9PT0gdW5kZWZpbmVkKTtcbiAgICAgICAgaWYgKHRvUmVtb3ZlKVxuICAgICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKGF0dHJOYW1lKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKGF0dHJOYW1lLCBhdHRyVmFsdWUudG9TdHJpbmcoKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59O1xua28udmlydHVhbEVsZW1lbnRzLmFsbG93ZWRCaW5kaW5nc1sndmlydHVhbEF0dHJTdHlsZSddID0gdHJ1ZTtcblxua28uYmluZGluZ0hhbmRsZXJzWyd2aXJ0dWFsU3R5bGUnXSA9IHtcbiAgdXBkYXRlOiBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZUFjY2Vzc29yKSB7XG4gICAgaWYgKGVsZW1lbnQubm9kZVR5cGUgIT09IDgpIHtcbiAgICAgIGtvLmJpbmRpbmdIYW5kbGVyc1snc3R5bGUnXS51cGRhdGUoZWxlbWVudCwgdmFsdWVBY2Nlc3Nvcik7XG4gICAgfVxuICB9XG59O1xua28udmlydHVhbEVsZW1lbnRzLmFsbG93ZWRCaW5kaW5nc1sndmlydHVhbFN0eWxlJ10gPSB0cnVlO1xuXG5cbmtvLmJpbmRpbmdIYW5kbGVyc1sndmlydHVhbEh0bWwnXSA9IHtcbiAgaW5pdDoga28uYmluZGluZ0hhbmRsZXJzWydodG1sJ10uaW5pdCxcbiAgdXBkYXRlOiBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZUFjY2Vzc29yKSB7XG4gICAgaWYgKGVsZW1lbnQubm9kZVR5cGUgPT09IDgpIHtcbiAgICAgIHZhciBodG1sID0ga28udXRpbHMudW53cmFwT2JzZXJ2YWJsZSh2YWx1ZUFjY2Vzc29yKCkpO1xuXG4gICAgICBrby52aXJ0dWFsRWxlbWVudHMuZW1wdHlOb2RlKGVsZW1lbnQpO1xuICAgICAgaWYgKChodG1sICE9PSBudWxsKSAmJiAoaHRtbCAhPT0gdW5kZWZpbmVkKSkge1xuICAgICAgICBpZiAodHlwZW9mIGh0bWwgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgaHRtbCA9IGh0bWwudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBwYXJzZWROb2RlcyA9IGtvLnV0aWxzLnBhcnNlSHRtbEZyYWdtZW50KGh0bWwpO1xuICAgICAgICBpZiAocGFyc2VkTm9kZXMpIHtcbiAgICAgICAgICB2YXIgZW5kQ29tbWVudE5vZGUgPSBlbGVtZW50Lm5leHRTaWJsaW5nO1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBqID0gcGFyc2VkTm9kZXMubGVuZ3RoOyBpIDwgajsgaSsrKVxuICAgICAgICAgICAgZW5kQ29tbWVudE5vZGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocGFyc2VkTm9kZXNbaV0sIGVuZENvbW1lbnROb2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7IC8vIHBsYWluIG5vZGVcbiAgICAgIGtvLmJpbmRpbmdIYW5kbGVyc1snaHRtbCddLnVwZGF0ZShlbGVtZW50LCB2YWx1ZUFjY2Vzc29yKTtcbiAgICB9XG5cbiAgICAvLyBDb250ZW50IGZvciB2aXJ0dWFsSFRNTCBtdXN0IG5vdCBiZSBwYXJzZWQgYnkgS08sIGl0IGlzIHNpbXBsZSBjb250ZW50LlxuICAgIHJldHVybiB7XG4gICAgICBjb250cm9sc0Rlc2NlbmRhbnRCaW5kaW5nczogdHJ1ZVxuICAgIH07XG4gIH1cbn07XG5rby52aXJ0dWFsRWxlbWVudHMuYWxsb3dlZEJpbmRpbmdzWyd2aXJ0dWFsSHRtbCddID0gdHJ1ZTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/scrollfix.js":{"file":"/Users/denea/mosaico/src/js/bindings/scrollfix.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),$=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),tinymce=(typeof window !== \"undefined\" ? window['tinymce'] : typeof global !== \"undefined\" ? global['tinymce'] : null),timeout,render=function(){timeout=void 0,\"undefined\"!=typeof tinymce.activeEditor&&null!==tinymce.activeEditor&&\"undefined\"!=typeof tinymce.activeEditor.theme&&null!==tinymce.activeEditor.theme&&\"undefined\"!=typeof tinymce.activeEditor.theme.panel&&null!==tinymce.activeEditor.theme.panel&&\"undefined\"!=typeof tinymce.activeEditor.theme.panel.visible&&((\"undefined\"!=typeof tinymce.activeEditor.theme.panel._visible&&tinymce.activeEditor.theme.panel._visible&&tinymce.activeEditor.theme.panel._fixed||\"undefined\"!=typeof tinymce.activeEditor.theme.panel.state&&tinymce.activeEditor.theme.panel.state.get(\"visible\")&&tinymce.activeEditor.theme.panel.state.get(\"fixed\"))&&tinymce.activeEditor.theme.panel.fixed(!1),tinymce.activeEditor.nodeChanged(),tinymce.activeEditor.theme.panel.visible(!0),tinymce.activeEditor.theme.panel.layoutRect().y<=40&&tinymce.activeEditor.theme.panel.moveBy(0,40-tinymce.activeEditor.theme.panel.layoutRect().y))};ko.bindingHandlers.wysiwygScrollfix={scroll:function(){timeout&&global.clearTimeout(timeout),timeout=global.setTimeout(render,50)},init:function(e){ko.utils.domNodeDisposal.addDisposeCallback(e,function(){$(e).off(\"scroll\",ko.bindingHandlers.wysiwygScrollfix.scroll)}),$(e).on(\"scroll\",ko.bindingHandlers.wysiwygScrollfix.scroll)}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9zY3JvbGxmaXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBR0EsSUFBSSxJQUFLLFFBQVEsWUFDYixFQUFJLFFBQVEsVUFDWixRQUFVLFFBQVEsV0FDbEIsUUFBVSxRQUFRLFdBRWxCLFFBRUEsT0FBUyxXQUVYLFFBQVUsT0FFMEIsbUJBQXpCLFNBQVEsY0FBeUQsT0FBekIsUUFBUSxjQUNqQixtQkFBL0IsU0FBUSxhQUFhLE9BQXdELE9BQS9CLFFBQVEsYUFBYSxPQUM5QixtQkFBckMsU0FBUSxhQUFhLE1BQU0sT0FBOEQsT0FBckMsUUFBUSxhQUFhLE1BQU0sT0FDbEMsbUJBQTdDLFNBQVEsYUFBYSxNQUFNLE1BQU0sV0FJZ0IsbUJBQTlDLFNBQVEsYUFBYSxNQUFNLE1BQU0sVUFBNEIsUUFBUSxhQUFhLE1BQU0sTUFBTSxVQUFZLFFBQVEsYUFBYSxNQUFNLE1BQU0sUUFDaEcsbUJBQTNDLFNBQVEsYUFBYSxNQUFNLE1BQU0sT0FBeUIsUUFBUSxhQUFhLE1BQU0sTUFBTSxNQUFNLElBQUksWUFBYyxRQUFRLGFBQWEsTUFBTSxNQUFNLE1BQU0sSUFBSSxXQUN4SyxRQUFRLGFBQWEsTUFBTSxNQUFNLE9BQU0sR0FHekMsUUFBUSxhQUFhLGNBQ3JCLFFBQVEsYUFBYSxNQUFNLE1BQU0sU0FBUSxHQUNyQyxRQUFRLGFBQWEsTUFBTSxNQUFNLGFBQWEsR0FBSyxJQUNyRCxRQUFRLGFBQWEsTUFBTSxNQUFNLE9BQU8sRUFBRyxHQUFLLFFBQVEsYUFBYSxNQUFNLE1BQU0sYUFBYSxJQUtwRyxJQUFHLGdCQUFnQixrQkFDakIsT0FBVSxXQUNKLFNBQVMsT0FBTyxhQUFhLFNBQ2pDLFFBQVUsT0FBTyxXQUFXLE9BQVEsS0FFdEMsS0FBUSxTQUFTLEdBQ2YsR0FBRyxNQUFNLGdCQUFnQixtQkFBbUIsRUFBUyxXQUNuRCxFQUFFLEdBQVMsSUFBSSxTQUFVLEdBQUcsZ0JBQWdCLGlCQUFpQixVQUcvRCxFQUFFLEdBQVMsR0FBRyxTQUFVLEdBQUcsZ0JBQWdCLGlCQUFpQiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiBnbG9iYWwgZ2xvYmFsOiBmYWxzZSAqL1xuXG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG52YXIgJCA9IHJlcXVpcmUoXCJqcXVlcnlcIik7XG52YXIgY29uc29sZSA9IHJlcXVpcmUoXCJjb25zb2xlXCIpO1xudmFyIHRpbnltY2UgPSByZXF1aXJlKFwidGlueW1jZVwiKTtcblxudmFyIHRpbWVvdXQ7XG5cbnZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcblxuICB0aW1lb3V0ID0gdW5kZWZpbmVkO1xuXG4gIGlmICh0eXBlb2YgdGlueW1jZS5hY3RpdmVFZGl0b3IgIT09ICd1bmRlZmluZWQnICYmIHRpbnltY2UuYWN0aXZlRWRpdG9yICE9PSBudWxsICYmXG4gICAgICB0eXBlb2YgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUgIT09ICd1bmRlZmluZWQnICYmIHRpbnltY2UuYWN0aXZlRWRpdG9yLnRoZW1lICE9PSBudWxsICYmIFxuICAgICAgdHlwZW9mIHRpbnltY2UuYWN0aXZlRWRpdG9yLnRoZW1lLnBhbmVsICE9PSAndW5kZWZpbmVkJyAmJiB0aW55bWNlLmFjdGl2ZUVkaXRvci50aGVtZS5wYW5lbCAhPT0gbnVsbCAmJlxuICAgICAgdHlwZW9mIHRpbnltY2UuYWN0aXZlRWRpdG9yLnRoZW1lLnBhbmVsLnZpc2libGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgLy8gQHNlZSBGbG9hdFBhbmVsLmpzIGZ1bmN0aW9uIHJlcG9zaXRpb25QYW5lbChwYW5lbClcbiAgICAvLyBGaXJzdCBjb25kaXRpb24gZ3JvdXAgaXMgZm9yIFRpbnltY2UgNC4wLzQuMVxuICAgIC8vIFNlY29uZCBjb25kaXRpb24gZ3JvdXAgaXMgZm9yIFRpbnltY2UgNC4yLzQuMyB3aGVyZSBcIi5fcHJvcGVydHlcIiBhcmUgbm93IGF2YWlsYWJsZSBhcyBcIi5zdGF0ZS5nZXQoJ3Byb3BlcnR5JylcIi5cbiAgICBpZiAoKHR5cGVvZiB0aW55bWNlLmFjdGl2ZUVkaXRvci50aGVtZS5wYW5lbC5fdmlzaWJsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwuX3Zpc2libGUgJiYgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwuX2ZpeGVkKSB8fCBcbiAgICAgICAgKHR5cGVvZiB0aW55bWNlLmFjdGl2ZUVkaXRvci50aGVtZS5wYW5lbC5zdGF0ZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwuc3RhdGUuZ2V0KCd2aXNpYmxlJykgJiYgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwuc3RhdGUuZ2V0KCdmaXhlZCcpKSkge1xuICAgICAgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwuZml4ZWQoZmFsc2UpO1xuICAgIH1cblxuICAgIHRpbnltY2UuYWN0aXZlRWRpdG9yLm5vZGVDaGFuZ2VkKCk7XG4gICAgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwudmlzaWJsZSh0cnVlKTtcbiAgICBpZiAodGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwubGF5b3V0UmVjdCgpLnkgPD0gNDApXG4gICAgICB0aW55bWNlLmFjdGl2ZUVkaXRvci50aGVtZS5wYW5lbC5tb3ZlQnkoMCwgNDAgLSB0aW55bWNlLmFjdGl2ZUVkaXRvci50aGVtZS5wYW5lbC5sYXlvdXRSZWN0KCkueSk7XG5cbiAgfVxufTtcblxua28uYmluZGluZ0hhbmRsZXJzLnd5c2l3eWdTY3JvbGxmaXggPSB7XG4gICdzY3JvbGwnOiBmdW5jdGlvbihldmVudCkge1xuICAgIGlmICh0aW1lb3V0KSBnbG9iYWwuY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgIHRpbWVvdXQgPSBnbG9iYWwuc2V0VGltZW91dChyZW5kZXIsIDUwKTtcbiAgfSxcbiAgJ2luaXQnOiBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAga28udXRpbHMuZG9tTm9kZURpc3Bvc2FsLmFkZERpc3Bvc2VDYWxsYmFjayhlbGVtZW50LCBmdW5jdGlvbigpIHtcbiAgICAgICQoZWxlbWVudCkub2ZmKFwic2Nyb2xsXCIsIGtvLmJpbmRpbmdIYW5kbGVycy53eXNpd3lnU2Nyb2xsZml4LnNjcm9sbCk7XG4gICAgfSk7XG5cbiAgICAkKGVsZW1lbnQpLm9uKFwic2Nyb2xsXCIsIGtvLmJpbmRpbmdIYW5kbGVycy53eXNpd3lnU2Nyb2xsZml4LnNjcm9sbCk7XG5cbiAgfVxufTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/tooltips.js":{"file":"/Users/denea/mosaico/src/js/bindings/tooltips.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),$=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),kojqui=(typeof window !== \"undefined\" ? window['kojqui'] : typeof global !== \"undefined\" ? global['kojqui'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),extendValueAccessor=function(e,t){return function(){return ko.utils.extend(t,e()),t}},options={show:{delay:500},track:!0,items:'[title][title!=\"\"][title!=\" \"]'};ko.bindingHandlers.tooltips={init:function(e,t,o,i,n){return\"undefined\"!=typeof $.fn.tooltip&&\"undefined\"!=typeof ko.bindingHandlers.tooltip?ko.bindingHandlers.tooltip.init(e,extendValueAccessor(t,options),o,i,n):void 0},update:function(e,t,o,i,n){return\"undefined\"!=typeof $.fn.tooltip&&\"undefined\"!=typeof ko.bindingHandlers.tooltip?ko.bindingHandlers.tooltip.update(e,extendValueAccessor(t,options),o,i,n):void 0}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy90b29sdGlwcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFFQSxJQUFJLElBQUssUUFBUSxZQUNiLEVBQUksUUFBUSxVQUNaLE9BQVMsUUFBUSxxQkFDakIsUUFBVSxRQUFRLFdBRWxCLG9CQUFzQixTQUFTLEVBQWUsR0FDaEQsTUFBTyxZQUVMLE1BREEsSUFBRyxNQUFNLE9BQU8sRUFBSyxLQUNkLElBSVAsU0FDRixNQUNFLE1BQU8sS0FFVCxPQUFPLEVBQ1AsTUFBTyxpQ0FHVCxJQUFHLGdCQUFnQixVQUNqQixLQUFNLFNBQVMsRUFBUyxFQUFlLEVBQXFCLEVBQU0sR0FDaEUsTUFBNEIsbUJBQWpCLEdBQUUsR0FBRyxTQUFpRSxtQkFBL0IsSUFBRyxnQkFBZ0IsUUFHNUQsR0FBRyxnQkFBZ0IsUUFBUSxLQUFLLEVBQVMsb0JBQW9CLEVBQWUsU0FBVSxFQUFxQixFQUFNLEdBSDFILFFBTUYsT0FBUSxTQUFTLEVBQVMsRUFBZSxFQUFxQixFQUFNLEdBQ2xFLE1BQTRCLG1CQUFqQixHQUFFLEdBQUcsU0FBaUUsbUJBQS9CLElBQUcsZ0JBQWdCLFFBQzVELEdBQUcsZ0JBQWdCLFFBQVEsT0FBTyxFQUFTLG9CQUFvQixFQUFlLFNBQVUsRUFBcUIsRUFBTSxHQUQ1SCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBrbyA9IHJlcXVpcmUoXCJrbm9ja291dFwiKTtcbnZhciAkID0gcmVxdWlyZShcImpxdWVyeVwiKTtcbnZhciBrb2pxdWkgPSByZXF1aXJlKFwia25vY2tvdXQtanF1ZXJ5dWlcIik7XG52YXIgY29uc29sZSA9IHJlcXVpcmUoXCJjb25zb2xlXCIpO1xuXG52YXIgZXh0ZW5kVmFsdWVBY2Nlc3NvciA9IGZ1bmN0aW9uKHZhbHVlQWNjZXNzb3IsIG9iaikge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAga28udXRpbHMuZXh0ZW5kKG9iaiwgdmFsdWVBY2Nlc3NvcigpKTtcbiAgICByZXR1cm4gb2JqO1xuICB9O1xufTtcblxudmFyIG9wdGlvbnMgPSB7XG4gIHNob3c6IHtcbiAgICBkZWxheTogNTAwXG4gIH0sXG4gIHRyYWNrOiB0cnVlLFxuICBpdGVtczogJ1t0aXRsZV1bdGl0bGUhPVwiXCJdW3RpdGxlIT1cIiBcIl0nXG59O1xuXG5rby5iaW5kaW5nSGFuZGxlcnMudG9vbHRpcHMgPSB7XG4gIGluaXQ6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlQWNjZXNzb3IsIGFsbEJpbmRpbmdzQWNjZXNzb3IsIGRhdGEsIGNvbnRleHQpIHtcbiAgICBpZiAodHlwZW9mICQuZm4udG9vbHRpcCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGtvLmJpbmRpbmdIYW5kbGVycy50b29sdGlwICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gcG9zaXRpb246IHsgbXk6IFwibGVmdCsxNSB0b3ArMTVcIiwgYXQ6IFwiY2VudGVyKzMwIGNlbnRlciszMFwiIH1cbiAgICAgIC8vIE5PVEUgdGl0bGUgd2l0aCBcIlwiIGFuZCBcIiBcIiBpcyBuZWVkZWQgdG8gYXZvaWQgZGVmYXVsdCB0b29sdGlwcyBpbiBuYXRpdmUgZmlsZSB1cGxvYWQgY29udHJvbHNcbiAgICAgIHJldHVybiBrby5iaW5kaW5nSGFuZGxlcnMudG9vbHRpcC5pbml0KGVsZW1lbnQsIGV4dGVuZFZhbHVlQWNjZXNzb3IodmFsdWVBY2Nlc3Nvciwgb3B0aW9ucyksIGFsbEJpbmRpbmdzQWNjZXNzb3IsIGRhdGEsIGNvbnRleHQpO1xuICAgIH1cbiAgfSxcbiAgdXBkYXRlOiBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZUFjY2Vzc29yLCBhbGxCaW5kaW5nc0FjY2Vzc29yLCBkYXRhLCBjb250ZXh0KSB7XG4gICAgaWYgKHR5cGVvZiAkLmZuLnRvb2x0aXAgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBrby5iaW5kaW5nSGFuZGxlcnMudG9vbHRpcCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiBrby5iaW5kaW5nSGFuZGxlcnMudG9vbHRpcC51cGRhdGUoZWxlbWVudCwgZXh0ZW5kVmFsdWVBY2Nlc3Nvcih2YWx1ZUFjY2Vzc29yLCBvcHRpb25zKSwgYWxsQmluZGluZ3NBY2Nlc3NvciwgZGF0YSwgY29udGV4dCk7XG4gICAgfVxuICB9LFxufTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/if-subs.js":{"file":"/Users/denea/mosaico/src/js/bindings/if-subs.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.ifSubs={cloneNodes:function(e,t){for(var o=0,i=e.length,n=[];i>o;o++){var a=e[o].cloneNode(!0);n.push(t?ko.cleanNode(a):a)}return n},init:function(e,t,o,i,n){var a,r,l=t();return\"undefined\"==typeof l.data.subsCount&&ko.extenders.subscriptionsCount(l.data),ko.computed(function(){var o,i,d,s=ko.utils.unwrapObservable(t().data.subsCount),c=!r;d=-(\"undefined\"!=typeof t().gutter?t().gutter:1),o=s+(a?d:0)>=ko.utils.unwrapObservable(l.threshold),\"undefined\"!=typeof t().not&&t().not&&(o=!o),i=c||o!==a,i&&(c&&ko.computedContext.getDependenciesCount()&&(r=ko.bindingHandlers.ifSubs.cloneNodes(ko.virtualElements.childNodes(e),!0)),o?(c||ko.virtualElements.setDomNodeChildren(e,ko.bindingHandlers.ifSubs.cloneNodes(r)),ko.applyBindingsToDescendants(n,e)):ko.virtualElements.emptyNode(e),a=o)},null,{disposeWhenNodeIsRemoved:e}),{controlsDescendantBindings:!0}}},ko.virtualElements.allowedBindings.ifSubs=!0;var beforeSubscriptionProp,afterSubscriptionProp;if(\"function\"==typeof ko.subscription&&\"undefined\"!=typeof ko.isWritableObservable)beforeSubscriptionProp=\"beforeSubscriptionAdd\",afterSubscriptionProp=\"afterSubscriptionRemove\";else if(\"3.2.0\"==ko.version)beforeSubscriptionProp=\"va\",afterSubscriptionProp=\"nb\";else if(\"3.3.0\"==ko.version)beforeSubscriptionProp=\"ja\",afterSubscriptionProp=\"ua\";else if(\"3.4.0\"==ko.version)beforeSubscriptionProp=\"sa\",afterSubscriptionProp=\"Ia\";else{if(\"3.4.1\"!=ko.version)throw\"Unsupported minimized Knockout version \"+ko.version+\" (supported DEBUG or minimized 3.2.0 ... 3.4.1)\";beforeSubscriptionProp=\"sa\",afterSubscriptionProp=\"Ia\"}ko.extenders.subscriptionsCount=function(e,t,o){if(\"undefined\"==typeof e.subsCount){e.subsCount=ko.observable(e.getSubscriptionsCount()).extend({notify:\"always\"});var i=e[beforeSubscriptionProp],n=e[afterSubscriptionProp];e[beforeSubscriptionProp]=function(n){i&&i.call(e,n);var a=e.getSubscriptionsCount()+1;(\"undefined\"==typeof t||a==t||\"undefined\"==typeof o||a==o)&&e.subsCount(a)},e[afterSubscriptionProp]=function(i){n&&n.call(e,i);var a=e.getSubscriptionsCount();(\"undefined\"==typeof t||a==t||\"undefined\"==typeof o||a==o)&&e.subsCount(a)}}else console.log(\"already applied subscriptionCount to observable\");return null};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/fileupload.js":{"file":"/Users/denea/mosaico/src/js/bindings/fileupload.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.preloader={init:function(e,t){var o=t();if(\"undefined\"==typeof o.preloaded){o.preloaded=ko.observable(\"\");var a=function(e){if(e!=o.preloaded())if(\"\"!==e){var t=new Image;t.onload=function(){o.preloaded(e)},t.onerror=function(){o.preloaded(e)},t.src=e}else o.preloaded(e)};o.subscribe(a),a(o())}}},ko.bindingHandlers.advattr={init:function(e,t){var o=ko.utils.unwrapObservable(t()||{});ko.utils.objectForEach(o,function(t,o){var a=e.getAttribute(t);if(ko.isWriteableObservable(o)){var i=o();i!=a&&(o(a),null!==i&&console.log(\"AdvAttr found a value different from the default\",t,i,a))}})},update:function(e,t){var o=ko.utils.unwrapObservable(t())||{};ko.utils.objectForEach(o,function(t,o){o=ko.utils.unwrapObservable(o);var a=o===!1||null===o||void 0===o;a?e.removeAttribute(t):e.setAttribute(t,o.toString())})}},ko.bindingHandlers.advstyle={init:function(e,t){var o=ko.utils.unwrapObservable(t()||{});ko.utils.objectForEach(o,function(t,o){var a;if(t.match(/Px$/)?(t=t.substr(0,t.length-2),a=e.style[t],a.match(/px$/)?a=a.replace(/px$/,\"\"):console.log(\"AdvStyle binding found an unexpected default value\",t,a,e)):a=e.style[t],ko.isWriteableObservable(o)){var i=o();i!=a&&(o(a),null!==i&&console.log(\"AdvStyle found a value different from the default\",t,i,a))}})},update:function(e,t){var o=ko.utils.unwrapObservable(t()||{});ko.utils.objectForEach(o,function(t,o){o=ko.utils.unwrapObservable(o),(null===o||\"undefined\"==typeof o||o===!1)&&(o=\"\"),t.match(/Px$/)&&(t=t.substr(0,t.length-2),o+=\"px\"),e.style[t]=o})}},ko.bindingHandlers.domlog={init:function(e){console.log(\"initialized\",e),ko.utils.domNodeDisposal.addDisposeCallback(e,function(){console.log(\"disposed\",e)})}},ko.bindingHandlers.fudroppable={init:function(e,t){var o=t()||{},a={},i=function(e,t,o,a,i,n){e[t]?global.clearTimeout(e[t]):(\"undefined\"!=typeof a&&o.classList.add(a),ko.isWriteableObservable(i)&&!i()&&i(!0));var l=function(){e[t]=null,\"undefined\"!=typeof a&&o.classList.remove(a),ko.isWriteableObservable(i)&&i()&&i(!1)};\"dragleave\"==n.type?l():e[t]=global.setTimeout(l,500)};(o.active||o.activeClass)&&ko.utils.registerEventHandler(global,\"dragover\",i.bind(void 0,a,\"activeTimeout\",e,o.activeClass,o.active)),o.hoverClass&&ko.utils.registerEventHandler(e,\"dragover dragenter dragleave\",i.bind(void 0,a,\"hoverTimeout\",e,o.hoverClass,void 0))}},ko.bindingHandlers.fileupload={extendOptions:{},remoteFilePreprocessor:function(e){return e},init:function(e){ko.utils.domNodeDisposal.addDisposeCallback(e,function(){$(e).fileupload(\"destroy\")}),global.webkitURL?$(e).attr(\"title\",\" \"):$(e).attr(\"title\",\"\")},update:function(e,t){var o=t()||{},a=$(e),i=a.parents(\".uploadzone\"),n=o.data;o.data=void 0;var l=o.canvasPreview;ko.utils.extend(o,{url:\"/upload/\",dataType:\"json\",dropZone:i.find(\".mo-uploadzone\")[0],autoUpload:!0,acceptFileTypes:/(\\.|\\/)(gif|jpe?g|png)$/i,maxFileSize:1048576,disableImageResize:/Android(?!.*Chrome)|Opera/.test(global.navigator.userAgent),previewMaxWidth:200,previewMaxHeight:200,previewCrop:!1,replaceFileInput:!1,messages:{unknownError:\"Unknown error\",uploadedBytes:\"Uploaded bytes exceed file size\",maxNumberOfFiles:\"Maximum number of files exceeded\",acceptFileTypes:\"File type not allowed\",maxFileSize:\"File is too large\",minFileSize:\"File is too small\",post_max_size:\"The uploaded file exceeds the post_max_size directive in php.ini\",max_file_size:\"File is too big\",min_file_size:\"File is too small\",accept_file_types:\"Filetype not allowed\",max_number_of_files:\"Maximum number of files exceeded\",max_width:\"Image exceeds maximum width\",min_width:\"Image requires a minimum width\",max_height:\"Image exceeds maximum height\",min_height:\"Image requires a minimum height\",abort:\"File upload aborted\",image_resize:\"Failed to resize image\",generic:\"Unexpected upload error\"}}),ko.utils.extend(o,ko.bindingHandlers.fileupload.extendOptions);var r=0,d=\"\",s=function(){0===--r&&(n&&n(d),d=\"\",l&&(i.find(\"img\").show(),i.find(\"canvas\").remove()),i.removeClass(\"uploading\"),i.find(\".progress-bar\").css(\"width\",0))},c=function(e){if(\"object\"==typeof o.messages&&null!==o.messages){var t=e.match(/^([^ ]+)(.*)$/);if(t&&\"undefined\"!=typeof o.messages[t[1]])return o.messages[t[1]]+t[2]}return e};a.fileupload(o);for(var u=[\"fileuploadadd\",\"fileuploadprocessalways\",\"fileuploadprogressall\",\"fileuploaddone\",\"fileuploadfail\"],p=function(e,t){if(\"fileuploadadd\"==e.type&&r++,\"fileuploadfail\"==e.type&&(console.log(\"fileuploadfail\",e,t),o.onerror&&(\"\"===t.errorThrown&&\"error\"==t.textStatus?o.onerror(c(\"generic\")):o.onerror(c(\"generic (\"+t.errorThrown+\")\"))),s()),\"fileuploaddone\"==e.type)if(\"undefined\"!=typeof t.result.files[0].url){if(o.onfile)for(var a=0;a<t.result.files.length;a++)t.result.files[a]=ko.bindingHandlers.fileupload.remoteFilePreprocessor(t.result.files[a]),o.onfile(t.result.files[a]);if(\"\"===d&&(d=t.result.files[0].url),l){var n=new Image;n.onload=s,n.onerror=s,n.src=t.result.files[0].url}else s()}else\"undefined\"!=typeof t.result.files[0].error?(console.log(\"remote error\",e,t),o.onerror&&o.onerror(c(t.result.files[0].error)),s()):(console.log(\"unexpected error\",e,t),o.onerror&&o.onerror(c(\"generic (Unexpected Error retrieving uploaded file)\")),s());if(\"fileuploadprocessalways\"==e.type){var u=t.index,p=t.files[u];if(p.preview&&0===u&&0===i.find(\"canvas\").length){if(l){var m=$(p.preview).css(\"width\",\"100%\");i.find(\"img\").hide(),i.prepend(m)}i.addClass(\"uploading\"),i.find(\".progress-bar\").css(\"width\",0)}p.error&&(o.onerror&&o.onerror(c(p.error)),s())}if(\"fileuploadprogressall\"==e.type){var f=parseInt(100*(t.loaded/t.total),10);i.find(\".progress-bar\").css(\"width\",f+\"%\")}},m=u.length-1;m>=0;m--){var f=u[m];a.on(f,p)}$.support.fileInput||a.prop(\"disabled\",!0).parent().addClass(\"disabled\")}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/eventable.js":{"file":"/Users/denea/mosaico/src/js/bindings/eventable.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),$=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.focusable={focus:function(){},blur:function(){},init:function(e){ko.utils.domNodeDisposal.addDisposeCallback(e,function(){$(e).off(\"focusin\",ko.bindingHandlers.focusable.focus),$(e).off(\"focusout\",ko.bindingHandlers.focusable.blur)}),$(e).on(\"focusin\",ko.bindingHandlers.focusable.focus),$(e).on(\"focusout\",ko.bindingHandlers.focusable.blur)}},ko.bindingHandlers.scrollable={scroll:function(){},init:function(e){ko.utils.domNodeDisposal.addDisposeCallback(e,function(){$(e).off(\"scroll\",ko.bindingHandlers.scrollable.scroll)}),$(e).on(\"scroll\",ko.bindingHandlers.scrollable.scroll)}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9ldmVudGFibGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBRUEsSUFBSSxJQUFLLFFBQVEsWUFDYixFQUFJLFFBQVEsVUFDWixRQUFVLFFBQVEsVUFHdEIsSUFBRyxnQkFBZ0IsV0FDakIsTUFBUyxhQUNULEtBQVEsYUFDUixLQUFRLFNBQVMsR0FDZixHQUFHLE1BQU0sZ0JBQWdCLG1CQUFtQixFQUFTLFdBQ25ELEVBQUUsR0FBUyxJQUFJLFVBQVcsR0FBRyxnQkFBZ0IsVUFBVSxPQUN2RCxFQUFFLEdBQVMsSUFBSSxXQUFZLEdBQUcsZ0JBQWdCLFVBQVUsUUFHMUQsRUFBRSxHQUFTLEdBQUcsVUFBVyxHQUFHLGdCQUFnQixVQUFVLE9BQ3RELEVBQUUsR0FBUyxHQUFHLFdBQVksR0FBRyxnQkFBZ0IsVUFBVSxRQUszRCxHQUFHLGdCQUFnQixZQUNqQixPQUFVLGFBQ1YsS0FBUSxTQUFTLEdBQ2YsR0FBRyxNQUFNLGdCQUFnQixtQkFBbUIsRUFBUyxXQUNuRCxFQUFFLEdBQVMsSUFBSSxTQUFVLEdBQUcsZ0JBQWdCLFdBQVcsVUFHekQsRUFBRSxHQUFTLEdBQUcsU0FBVSxHQUFHLGdCQUFnQixXQUFXIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGtvID0gcmVxdWlyZShcImtub2Nrb3V0XCIpO1xudmFyICQgPSByZXF1aXJlKFwianF1ZXJ5XCIpO1xudmFyIGNvbnNvbGUgPSByZXF1aXJlKFwiY29uc29sZVwiKTtcblxuLyogdXRpbGl0eSBmb3IgdG9nZXRoZXJqcyAqL1xua28uYmluZGluZ0hhbmRsZXJzLmZvY3VzYWJsZSA9IHtcbiAgJ2ZvY3VzJzogZnVuY3Rpb24oKSB7fSxcbiAgJ2JsdXInOiBmdW5jdGlvbigpIHt9LFxuICAnaW5pdCc6IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICBrby51dGlscy5kb21Ob2RlRGlzcG9zYWwuYWRkRGlzcG9zZUNhbGxiYWNrKGVsZW1lbnQsIGZ1bmN0aW9uKCkge1xuICAgICAgJChlbGVtZW50KS5vZmYoXCJmb2N1c2luXCIsIGtvLmJpbmRpbmdIYW5kbGVycy5mb2N1c2FibGUuZm9jdXMpO1xuICAgICAgJChlbGVtZW50KS5vZmYoXCJmb2N1c291dFwiLCBrby5iaW5kaW5nSGFuZGxlcnMuZm9jdXNhYmxlLmJsdXIpO1xuICAgIH0pO1xuXG4gICAgJChlbGVtZW50KS5vbihcImZvY3VzaW5cIiwga28uYmluZGluZ0hhbmRsZXJzLmZvY3VzYWJsZS5mb2N1cyk7XG4gICAgJChlbGVtZW50KS5vbihcImZvY3Vzb3V0XCIsIGtvLmJpbmRpbmdIYW5kbGVycy5mb2N1c2FibGUuYmx1cik7XG5cbiAgfVxufTtcblxua28uYmluZGluZ0hhbmRsZXJzLnNjcm9sbGFibGUgPSB7XG4gICdzY3JvbGwnOiBmdW5jdGlvbigpIHt9LFxuICAnaW5pdCc6IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICBrby51dGlscy5kb21Ob2RlRGlzcG9zYWwuYWRkRGlzcG9zZUNhbGxiYWNrKGVsZW1lbnQsIGZ1bmN0aW9uKCkge1xuICAgICAgJChlbGVtZW50KS5vZmYoXCJzY3JvbGxcIiwga28uYmluZGluZ0hhbmRsZXJzLnNjcm9sbGFibGUuc2Nyb2xsKTtcbiAgICB9KTtcblxuICAgICQoZWxlbWVudCkub24oXCJzY3JvbGxcIiwga28uYmluZGluZ0hhbmRsZXJzLnNjcm9sbGFibGUuc2Nyb2xsKTtcblxuICB9XG59OyJdfQ==","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/scrollintoview.js":{"file":"/Users/denea/mosaico/src/js/bindings/scrollintoview.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),_scrollIntoView=function(e,t,o,i){var n=o.scrollTop(),a=n-i-(t?20:-20),r=\"undefined\"!=typeof o[0].nodeType;if(r){var l={scrollTop:\"\"+Math.round(a)+\"px\"},d=Math.round(Math.abs(a-n));o.stop().animate(l,d)}else o.scrollTop(a)};ko.bindingHandlers.scrollIntoView={update:function(e,t){var o=ko.utils.unwrapObservable(t());if(o)try{for(;8===e.nodeType;)e=e.nextSibling;if(8!==e.nodeType){var i,n=$(e).scrollParent(),a=!1;9==n[0].nodeType?(n=$(n[0].defaultView),i=0,a=!0):i=n.offset().top;var r=n.height(),l=n.scrollTop(),d=i+r,s=$(e),c=s.offset().top;a&&(c-=l);var u=s.height(),p=c+u;c>i&&d>c+u||(r>u?(i>c&&_scrollIntoView(e,!0,n,i-c),p>d&&_scrollIntoView(e,!1,n,d-p)):(i>c&&d>p&&_scrollIntoView(e,!1,n,d-p),c>i&&p>d&&_scrollIntoView(e,!0,n,i-c)))}}catch(f){console.log(\"TODO exception scrolling into view\",f)}}},ko.virtualElements.allowedBindings.scrollIntoView=!0;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9zY3JvbGxpbnRvdmlldy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFFQSxJQUFJLEdBQUksUUFBUSxVQUNaLEdBQUssUUFBUSxZQUNiLFFBQVUsUUFBUSxXQUVsQixnQkFBa0IsU0FBUyxFQUFVLEVBQVUsRUFBYyxHQUMvRCxHQUFJLEdBQW1CLEVBQWEsWUFDaEMsRUFBZSxFQUFtQixHQUFVLEVBQVcsR0FBSyxLQUU1RCxFQUE4QyxtQkFBN0IsR0FBYSxHQUFHLFFBQ3JDLElBQUksRUFBUyxDQUNYLEdBQUksSUFDRixVQUFhLEdBQUssS0FBSyxNQUFNLEdBQWdCLE1BRTNDLEVBQU8sS0FBSyxNQUFNLEtBQUssSUFBSSxFQUFlLEdBQzlDLEdBQWEsT0FBTyxRQUFRLEVBQVEsT0FFcEMsR0FBYSxVQUFVLEdBTTNCLElBQUcsZ0JBQWdCLGdCQUNqQixPQUFRLFNBQVMsRUFBUyxHQUN4QixHQUFJLEdBQVcsR0FBRyxNQUFNLGlCQUFpQixJQUN6QyxJQUFLLEVBQ0wsSUFFRSxLQUE0QixJQUFyQixFQUFRLFVBRWIsRUFBVSxFQUFRLFdBRXBCLElBQXlCLElBQXJCLEVBQVEsU0FBZ0IsQ0FDMUIsR0FFSSxHQUZBLEVBQWUsRUFBRSxHQUFTLGVBRzFCLEdBQWlCLENBQ1csSUFBNUIsRUFBYSxHQUFHLFVBRWxCLEVBQWUsRUFBRSxFQUFhLEdBQUcsYUFDakMsRUFBWSxFQUNaLEdBQWlCLEdBRWpCLEVBQVksRUFBYSxTQUFTLEdBR3BDLElBQUksR0FBZSxFQUFhLFNBQzVCLEVBQWUsRUFBYSxZQUM1QixFQUFlLEVBQVksRUFHM0IsRUFBVyxFQUFFLEdBQ2IsRUFBUSxFQUFTLFNBQVMsR0FFMUIsS0FBZ0IsR0FBZ0IsRUFDcEMsSUFBSSxHQUFXLEVBQVMsU0FDcEIsRUFBVyxFQUFRLENBQ25CLEdBQVEsR0FBZ0MsRUFBbkIsRUFBUSxJQUVYLEVBQVgsR0FFRyxFQUFSLEdBQW1CLGdCQUFnQixHQUFTLEVBQU0sRUFBYyxFQUFZLEdBRTVFLEVBQVcsR0FBYyxnQkFBZ0IsR0FBUyxFQUFPLEVBQWMsRUFBZSxLQUs5RSxFQUFSLEdBQWdDLEVBQVgsR0FBeUIsZ0JBQWdCLEdBQVMsRUFBTyxFQUFjLEVBQWUsR0FFM0csRUFBUSxHQUFhLEVBQVcsR0FBYyxnQkFBZ0IsR0FBUyxFQUFNLEVBQWMsRUFBWSxNQUsvRyxNQUFPLEdBQ1AsUUFBUSxJQUFJLHFDQUFzQyxNQUl4RCxHQUFHLGdCQUFnQixnQkFBZ0MsZ0JBQUkiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgJCA9IHJlcXVpcmUoXCJqcXVlcnlcIik7XG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG52YXIgY29uc29sZSA9IHJlcXVpcmUoXCJjb25zb2xlXCIpO1xuXG52YXIgX3Njcm9sbEludG9WaWV3ID0gZnVuY3Rpb24oJGVsZW1lbnQsIGFsaWduVG9wLCBzY3JvbGxQYXJlbnQsIG1vdmVCeSkge1xuICB2YXIgY3VycmVudFNjcm9sbFRvcCA9IHNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKTtcbiAgdmFyIG5ld1Njcm9sbFRvcCA9IGN1cnJlbnRTY3JvbGxUb3AgLSBtb3ZlQnkgLSAoYWxpZ25Ub3AgPyAyMCA6IC0yMCk7XG4gIC8vIGlmcmFtZSBzY3JvbGxzIHRoZSB3aW5kb3cgYW5kIGFuaW1hdGlvbiBpcyBub3Qgc3VwcG9ydGVkXG4gIHZhciBhbmltYXRlID0gdHlwZW9mIHNjcm9sbFBhcmVudFswXS5ub2RlVHlwZSAhPT0gJ3VuZGVmaW5lZCc7XG4gIGlmIChhbmltYXRlKSB7XG4gICAgdmFyIGFjdGlvbiA9IHtcbiAgICAgICdzY3JvbGxUb3AnOiBcIlwiICsgTWF0aC5yb3VuZChuZXdTY3JvbGxUb3ApICsgXCJweFwiXG4gICAgfTtcbiAgICB2YXIgdGltZSA9IE1hdGgucm91bmQoTWF0aC5hYnMobmV3U2Nyb2xsVG9wIC0gY3VycmVudFNjcm9sbFRvcCkpO1xuICAgIHNjcm9sbFBhcmVudC5zdG9wKCkuYW5pbWF0ZShhY3Rpb24sIHRpbWUpO1xuICB9IGVsc2Uge1xuICAgIHNjcm9sbFBhcmVudC5zY3JvbGxUb3AobmV3U2Nyb2xsVG9wKTtcbiAgfVxuICAvLyBuYXRpdmUgc2Nyb2xsSW50b1ZpZXcgaXMgbm90IHdlbGwgc3VwcG9ydGVkIGFuZCBkb2Vzbid0IHdvcmsgZmluZS5cbiAgLy8gZWxlbWVudC5zY3JvbGxJbnRvVmlldyhhbGlnblRvcCk7XG59O1xuXG5rby5iaW5kaW5nSGFuZGxlcnMuc2Nyb2xsSW50b1ZpZXcgPSB7XG4gIHVwZGF0ZTogZnVuY3Rpb24oZWxlbWVudCwgdmFsdWVBY2Nlc3NvciwgYWxsQmluZGluZ3NBY2Nlc3Nvciwgdmlld01vZGVsLCBiaW5kaW5nQ29udGV4dCkge1xuICAgIHZhciBzZWxlY3RlZCA9IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUodmFsdWVBY2Nlc3NvcigpKTtcbiAgICBpZiAoIXNlbGVjdGVkKSByZXR1cm47XG4gICAgdHJ5IHtcblxuICAgICAgd2hpbGUgKGVsZW1lbnQubm9kZVR5cGUgPT09IDgpIHtcbiAgICAgICAgLy8gZWxlbWVudCBpcyBhIGNvbW1lbnQsIG1vdmUgdG8gdGhlIG5leHQgc2libGluZy4uLlxuICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5uZXh0U2libGluZztcbiAgICAgIH1cbiAgICAgIGlmIChlbGVtZW50Lm5vZGVUeXBlICE9PSA4KSB7XG4gICAgICAgIHZhciBzY3JvbGxQYXJlbnQgPSAkKGVsZW1lbnQpLnNjcm9sbFBhcmVudCgpO1xuXG4gICAgICAgIHZhciBwYXJlbnRUb3A7XG4gICAgICAgIHZhciByZWxhdGl2ZU9mZnNldCA9IGZhbHNlO1xuICAgICAgICBpZiAoc2Nyb2xsUGFyZW50WzBdLm5vZGVUeXBlID09IDkpIHtcbiAgICAgICAgICAvLyBzY3JvbGxwYXJlbnQgaXMgZG9jdW1lbnQsIHJlcGxhY2luZyB3aXRoIGJvZHkuLi5cbiAgICAgICAgICBzY3JvbGxQYXJlbnQgPSAkKHNjcm9sbFBhcmVudFswXS5kZWZhdWx0Vmlldyk7XG4gICAgICAgICAgcGFyZW50VG9wID0gMDtcbiAgICAgICAgICByZWxhdGl2ZU9mZnNldCA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGFyZW50VG9wID0gc2Nyb2xsUGFyZW50Lm9mZnNldCgpLnRvcDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBwYXJlbnRIZWlnaHQgPSBzY3JvbGxQYXJlbnQuaGVpZ2h0KCk7XG4gICAgICAgIHZhciBwYXJlbnRTY3JvbGwgPSBzY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCk7XG4gICAgICAgIHZhciBwYXJlbnRCb3R0b20gPSBwYXJlbnRUb3AgKyBwYXJlbnRIZWlnaHQ7XG5cbiAgICAgICAgLy8gc2Nyb2xsUGFyZW50IGlzIHRoZSBkb2N1bWVudC5cbiAgICAgICAgdmFyICRlbGVtZW50ID0gJChlbGVtZW50KTtcbiAgICAgICAgdmFyIGVsVG9wID0gJGVsZW1lbnQub2Zmc2V0KCkudG9wO1xuICAgICAgICAvLyB3aGVuIHdlIGFyZSBpbiBcImlmcmFtZVwiIHdpdGggc2Nyb2xsYmFyIGV2ZXJ5dGhpam5nIGNoYW5nZXMuXG4gICAgICAgIGlmIChyZWxhdGl2ZU9mZnNldCkgZWxUb3AgPSBlbFRvcCAtIHBhcmVudFNjcm9sbDtcbiAgICAgICAgdmFyIGVsSGVpZ2h0ID0gJGVsZW1lbnQuaGVpZ2h0KCk7XG4gICAgICAgIHZhciBlbEJvdHRvbSA9IGVsVG9wICsgZWxIZWlnaHQ7XG4gICAgICAgIGlmIChlbFRvcCA+IHBhcmVudFRvcCAmJiBlbFRvcCArIGVsSGVpZ2h0IDwgcGFyZW50Qm90dG9tKSB7XG4gICAgICAgICAgLy8gYm90aCBib3JkZXJzIGFyZSB2aXNpYmxlID0+IGRvbid0IGRvIGFueXRoaW5nLlxuICAgICAgICB9IGVsc2UgaWYgKGVsSGVpZ2h0IDwgcGFyZW50SGVpZ2h0KSB7XG4gICAgICAgICAgLy8gaWYgdGhlIGJsb2NrIGlzIHNtYWxsZXIgdGhhbiB0aGUgdmlld1BvcnRcbiAgICAgICAgICBpZiAoZWxUb3AgPCBwYXJlbnRUb3ApIF9zY3JvbGxJbnRvVmlldyhlbGVtZW50LCB0cnVlLCBzY3JvbGxQYXJlbnQsIHBhcmVudFRvcCAtIGVsVG9wKTtcbiAgICAgICAgICAvLyAtPiBpZiB0aGUgdXBwZXIgYm9yZGVyIGlzIGhpZ2hlciB0aGFuIHRoZSB0b3AsIHRoZW4gSSBtb3ZlIGl0IHRvIHRoZSB0b3AuXG4gICAgICAgICAgaWYgKGVsQm90dG9tID4gcGFyZW50Qm90dG9tKSBfc2Nyb2xsSW50b1ZpZXcoZWxlbWVudCwgZmFsc2UsIHNjcm9sbFBhcmVudCwgcGFyZW50Qm90dG9tIC0gZWxCb3R0b20pO1xuICAgICAgICAgIC8vIC0+IGlmIHRoZSBib3R0b20gYm9yZGVyIGlzIGxvd2VyIHRoYW4gdGhlIGJvdHRvbSB0aGVuIEkgbW92ZSBpdCB0byB0aGUgYm90dG9tLlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGlmIHRoZSBibG9jayBpcyBsYXJnZXIgdGhhbiB0aGUgdmlld1BvcnQgd2UgZG8gdGhlIG9wcG9zaXRlIVxuICAgICAgICAgIC8vIC0+IGlmIHRoZSB1cHBlciBib3JkZXIgaXMgaGlnaGVyIHRoYW4gdGhlIHRvcCBhbmQgdGhlIGxvd2VyIGlzIGhpZ2hlciB0aGFuIHRoZSBib3R0b20gSSBtb3ZlIHRoZSBsb3dlciBpdCB0byB0aGUgYm90dG9tLlxuICAgICAgICAgIGlmIChlbFRvcCA8IHBhcmVudFRvcCAmJiBlbEJvdHRvbSA8IHBhcmVudEJvdHRvbSkgX3Njcm9sbEludG9WaWV3KGVsZW1lbnQsIGZhbHNlLCBzY3JvbGxQYXJlbnQsIHBhcmVudEJvdHRvbSAtIGVsQm90dG9tKTtcbiAgICAgICAgICAvLyAtPiBpZiB0aGUgYm90dG9tIGJvcmRlciBpbCBsb3dlciB0aGFuIGJvdHRvbSBhbmQgdGhlIHVwcGVyIGlzIGxvd2VyIHRoYW4gdGhlIHRvcCBJIG1vdmUgdGhlIHVwcGVyIGJvcmRlciB0byB0aGUgdmlld3BvcnQgdG9wXG4gICAgICAgICAgaWYgKGVsVG9wID4gcGFyZW50VG9wICYmIGVsQm90dG9tID4gcGFyZW50Qm90dG9tKSBfc2Nyb2xsSW50b1ZpZXcoZWxlbWVudCwgdHJ1ZSwgc2Nyb2xsUGFyZW50LCBwYXJlbnRUb3AgLSBlbFRvcCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBlbGVtZW50LnNjcm9sbEludG9WaWV3KHRydWUpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiVE9ETyBleGNlcHRpb24gc2Nyb2xsaW5nIGludG8gdmlld1wiLCBlKTtcbiAgICB9XG4gIH1cbn07XG5rby52aXJ0dWFsRWxlbWVudHMuYWxsb3dlZEJpbmRpbmdzWydzY3JvbGxJbnRvVmlldyddID0gdHJ1ZTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/validated-value.js":{"file":"/Users/denea/mosaico/src/js/bindings/validated-value.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.validatedValue={init:function(e,t,o){var i=t;if(\"undefined\"!=typeof e.pattern){var n=new RegExp(\"^(?:\"+e.pattern+\")$\"),a=ko.computed({read:function(){var o=ko.utils.unwrapObservable(t()),i=null===o||\"\"===o||n.test(o);return i?e.classList.remove(\"invalid\"):e.classList.add(\"invalid\"),o},write:ko.isWriteableObservable(t())&&function(o){ko.selectExtensions.writeValue(e,o);var i=ko.selectExtensions.readValue(e);t()(i)},disposeWhenNodeIsRemoved:e});i=function(){return a}}ko.bindingHandlers.value.init(e,i,o)}},ko.expressionRewriting._twoWayBindings.validatedValue=!0;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy92YWxpZGF0ZWQtdmFsdWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBRUEsSUFBSSxJQUFLLFFBQVEsWUFDYixRQUFVLFFBQVEsVUFHdEIsSUFBRyxnQkFBZ0MsZ0JBQ2xDLEtBQU0sU0FBUyxFQUFTLEVBQWUsR0FDdEMsR0FBSSxHQUFtQixDQUN2QixJQUErQixtQkFBcEIsR0FBUSxRQUF5QixDQUMzQyxHQUFJLEdBQUssR0FBSSxRQUFPLE9BQVMsRUFBUSxRQUFVLE1BQzNDLEVBQVcsR0FBRyxVQUNqQixLQUFNLFdBQ0wsR0FBSSxHQUFNLEdBQUcsTUFBTSxpQkFBaUIsS0FFaEMsRUFBZ0IsT0FBUixHQUF3QixLQUFSLEdBQWMsRUFBRyxLQUFLLEVBT2xELE9BTEksR0FDSCxFQUFRLFVBQVUsT0FBTyxXQUV6QixFQUFRLFVBQVUsSUFBSSxXQUVoQixHQUVSLE1BQU8sR0FBRyxzQkFBc0IsTUFBb0IsU0FBUyxHQUU1RCxHQUFHLGlCQUFpQixXQUFXLEVBQVMsRUFDeEMsSUFBSSxHQUFXLEdBQUcsaUJBQWlCLFVBQVUsRUFDN0MsS0FBZ0IsSUFFakIseUJBQTBCLEdBRTNCLEdBQW1CLFdBQ2xCLE1BQU8sSUFHVCxHQUFHLGdCQUF1QixNQUFFLEtBQUssRUFBUyxFQUFrQixLQUc5RCxHQUFHLG9CQUFvQixnQkFBZ0MsZ0JBQUkiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIga28gPSByZXF1aXJlKCdrbm9ja291dCcpO1xudmFyIGNvbnNvbGUgPSByZXF1aXJlKCdjb25zb2xlJyk7XG5cbi8vIGVxdWFscyB0byBcInZhbHVlXCIgYmluZGluZyBidXQgYXBwbHkgXCJpbnZhbGlkXCIgY2xhc3MgaWYgXCJwYXR0ZXJuXCIgYXR0cmlidXRlIGlzIGRlZmluZWQgYW5kIHZhbHVlIG1hdGNoZXMgdGhlIHJ1bGVcbmtvLmJpbmRpbmdIYW5kbGVyc1sndmFsaWRhdGVkVmFsdWUnXSA9IHtcblx0aW5pdDogZnVuY3Rpb24oZWxlbWVudCwgdmFsdWVBY2Nlc3NvciwgYWxsQmluZGluZ3MpIHtcblx0XHR2YXIgbmV3VmFsdWVBY2Nlc3NvciA9IHZhbHVlQWNjZXNzb3I7XG5cdFx0aWYgKHR5cGVvZiBlbGVtZW50LnBhdHRlcm4gIT09ICd1bmRlZmluZWQnKSB7XG5cdFx0XHR2YXIgcmUgPSBuZXcgUmVnRXhwKCdeKD86JyArIGVsZW1lbnQucGF0dGVybiArICcpJCcpO1xuXHRcdFx0dmFyIGNvbXB1dGVkID0ga28uY29tcHV0ZWQoe1xuXHRcdFx0XHRyZWFkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHR2YXIgcmVzID0ga28udXRpbHMudW53cmFwT2JzZXJ2YWJsZSh2YWx1ZUFjY2Vzc29yKCkpO1xuXHRcdFx0XHRcdC8vIFRPRE8gc3VwcG9ydCBmb3IgZWxlbWVudC5yZXF1aXJlZCA/XG5cdFx0XHRcdFx0dmFyIHZhbGlkID0gcmVzID09PSBudWxsIHx8IHJlcyA9PT0gJycgfHwgcmUudGVzdChyZXMpO1xuXHRcdFx0XHRcdC8vIElFMTEgZG9lc24ndCBzdXBwb3J0IGNsYXNzTGlzdC50b2dnbGUoJ2ludmFsaWQnLCBzdGF0ZSlcblx0XHRcdFx0XHRpZiAodmFsaWQpIHtcblx0XHRcdFx0XHRcdGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaW52YWxpZCcpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2ludmFsaWQnKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHJlcztcblx0XHRcdFx0fSxcblx0XHRcdFx0d3JpdGU6IGtvLmlzV3JpdGVhYmxlT2JzZXJ2YWJsZSh2YWx1ZUFjY2Vzc29yKCkpICYmIGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRcdFx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vdm9pZGxhYnMvbW9zYWljby9pc3N1ZXMvMTAzXG5cdFx0XHRcdFx0a28uc2VsZWN0RXh0ZW5zaW9ucy53cml0ZVZhbHVlKGVsZW1lbnQsIHZhbHVlKTtcblx0XHRcdFx0XHR2YXIgdXBkVmFsdWUgPSBrby5zZWxlY3RFeHRlbnNpb25zLnJlYWRWYWx1ZShlbGVtZW50KTtcblx0XHRcdFx0XHR2YWx1ZUFjY2Vzc29yKCkodXBkVmFsdWUpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRkaXNwb3NlV2hlbk5vZGVJc1JlbW92ZWQ6IGVsZW1lbnRcblx0XHRcdH0pO1xuXHRcdFx0bmV3VmFsdWVBY2Nlc3NvciA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gY29tcHV0ZWQ7XG5cdFx0XHR9O1xuXHRcdH1cblx0XHRrby5iaW5kaW5nSGFuZGxlcnNbJ3ZhbHVlJ10uaW5pdChlbGVtZW50LCBuZXdWYWx1ZUFjY2Vzc29yLCBhbGxCaW5kaW5ncyk7XG5cdH1cbn07XG5rby5leHByZXNzaW9uUmV3cml0aW5nLl90d29XYXlCaW5kaW5nc1sndmFsaWRhdGVkVmFsdWUnXSA9IHRydWU7XG4iXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/bindings/extsortables.js":{"file":"/Users/denea/mosaico/src/js/bindings/extsortables.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),sortable=(typeof window !== \"undefined\" ? window['jQuery']['ui']['sortable'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['sortable'] : null),draggable=(typeof window !== \"undefined\" ? window['jQuery']['ui']['draggable'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['draggable'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");if(require(\"./../../../bower_components/knockout-sortable/build/knockout-sortable.min.js\"),\"undefined\"==typeof sortable)throw\"Cannot find jquery-ui sortable widget dependency!\";if(\"undefined\"==typeof draggable)throw\"Cannot find jquery-ui sortable widget dependency!\";var isDraggingHelper=function(e,t){e()?t.type==e()+\"stop\"&&e(!1):(\"dragstart\"==t.type||\"sortstart\"==t.type)&&e(t.type.substring(0,4))},makeExtendedValueAccessor=function(e){return function(){var t=e();ko.utils.peekObservable(t),ko.utils.unwrapObservable(t),\"undefined\"==t.options&&(t.options={});var o=t.options.start;t.options.start=function(e,i){return\"undefined\"!=typeof t.dragging&&ko.isWritableObservable(t.dragging)&&isDraggingHelper(t.dragging,e),\"undefined\"!=typeof t.dropContainer&&(t.scrollInterval=global.setInterval(function(){var e=$(t.dropContainer).scrollTop();$(t.dropContainer).scrollTop(e+t.adding)},20)),\"undefined\"!=typeof o?o(e,i):void 0};var i=t.options.stop;t.options.stop=function(e,o){return\"undefined\"!=typeof t.dragging&&ko.isWritableObservable(t.dragging)&&isDraggingHelper(t.dragging,e),\"undefined\"!=typeof t.dropContainer&&global.clearInterval(t.scrollInterval),\"undefined\"!=typeof i?i(e,o):void 0};var n=t.options.drag;return t.options.drag=function(e,o){if(\"undefined\"!=typeof t.dropContainer){var i=e.pageY-$(t.dropContainer).offset().top,a=i-$(t.dropContainer).height();t.adding=-20>i?-20:0>i?-10:10>i?-5:a>20?20:a>0?10:a>-10?5:0}return\"undefined\"!=typeof n?n(e,o):void 0},t}};ko.bindingHandlers.extsortable={init:function(e,t,o,i,n){return ko.bindingHandlers.sortable.init(e,makeExtendedValueAccessor(t),o,i,n)},update:function(e,t,o,i,n){return ko.bindingHandlers.sortable.update(e,makeExtendedValueAccessor(t),o,i,n)}},ko.bindingHandlers.extdraggable={init:function(e,t,o,i,n){return ko.bindingHandlers.draggable.init(e,makeExtendedValueAccessor(t),o,i,n)},update:function(e,t,o,i,n){return ko.bindingHandlers.draggable.update(e,makeExtendedValueAccessor(t),o,i,n)}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./../../../bower_components/knockout-sortable/build/knockout-sortable.min.js":"/Users/denea/mosaico/bower_components/knockout-sortable/build/knockout-sortable.min.js"}},"/Users/denea/mosaico/src/js/undomanager/undoserializer.js":{"file":"/Users/denea/mosaico/src/js/undomanager/undoserializer.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),_reference=function(e,t){for(var o,n,i=0,a=e;i<t.length;)switch(t.charAt(i)){case\"(\":\")\"==t.charAt(i+1)&&(a=a()),i+=2;break;case\"[\":n=t.indexOf(\"]\",i),a=a[t.substring(i+1,n)],i=n+1;break;case\".\":o=t.indexOf(\"(\",i),-1==o&&(o=t.length),n=t.indexOf(\"[\",i),-1==n&&(n=t.length),n=Math.min(o,n),a=a[t.substring(i+1,n)],i=n}return a},_getPath=function(e,t){for(var o,n=\"\",i=0;i<=e.length;i++)if(o=i<e.length?e[i]:t,ko.isObservable(o)&&(n+=\"()\"),\"undefined\"!=typeof o._fieldName)n+=\".\"+o._fieldName;else{if(!(i>0&&\"function\"==typeof e[i-1].pop))throw console.error(\"Unexpected parent with no _fieldName and no parent array\",i,e),\"Unexpected parent with no _fieldName and no parent array\";var a=ko.isObservable(e[i-1])?ko.utils.peekObservable(e[i-1]):e[i-1],r=ko.utils.arrayIndexOf(a,o);if(-1==r)throw console.error(\"Unexpected object not found in parent array\",a,o,i,e.length,ko.toJS(a),ko.utils.unwrapObservable(o)),\"Unexpected object not found in parent array\";n+=\"[\"+r+\"]\"}return n},makeDereferencedUndoAction=function(e,t,o,n,i){var a=_reference(t,o);e(a,n,i)},listener,_setListener=function(e){listener=e},makeUndoActionDereferenced=function(e,t,o,n,i,a){try{var r=_getPath(o,n);if((\"object\"==typeof i||\"function\"==typeof i)&&(i=ko.toJS(i)),\"undefined\"!=typeof a&&(\"object\"==typeof a.value||\"function\"==typeof a.value)){var l=ko.toJS(a);a=l}if(\"undefined\"!=typeof listener)try{listener(r,n,i,a)}catch(s){console.log(\"Undoserializer ignoring exception in listener callback\")}return makeDereferencedUndoAction.bind(void 0,t,e,r,i,a)}catch(s){console.error(\"Exception processing undo\",s,o,n,a)}},watchEnabled,_watchEnabled=function(e){return\"undefined\"==typeof e?watchEnabled:(watchEnabled=e,void 0)};module.exports={dereference:_getPath,reference:_reference,makeUndoAction:makeUndoActionDereferenced,setListener:_setListener,watchEnabled:_watchEnabled};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy91bmRvbWFuYWdlci91bmRvc2VyaWFsaXplci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFDQSxJQUFJLElBQUssUUFBUSxZQUNiLFFBQVUsUUFBUSxXQUlsQixXQUFhLFNBQVMsRUFBTyxHQUkvQixJQUhBLEdBQ0ksR0FBSSxFQURKLEVBQUksRUFFSixFQUFJLEVBQ0QsRUFBSSxFQUFLLFFBQ2QsT0FBUSxFQUFLLE9BQU8sSUFDbEIsSUFBSyxJQUN1QixLQUF0QixFQUFLLE9BQU8sRUFBSSxLQUNsQixFQUFJLEtBSU4sR0FBSyxDQUNMLE1BQ0YsS0FBSyxJQUNILEVBQUssRUFBSyxRQUFRLElBQUssR0FDdkIsRUFBSSxFQUFFLEVBQUssVUFBVSxFQUFJLEVBQUcsSUFDNUIsRUFBSSxFQUFLLENBQ1QsTUFDRixLQUFLLElBQ0gsRUFBSyxFQUFLLFFBQVEsSUFBSyxHQUNiLElBQU4sSUFBVSxFQUFLLEVBQUssUUFDeEIsRUFBSyxFQUFLLFFBQVEsSUFBSyxHQUNiLElBQU4sSUFBVSxFQUFLLEVBQUssUUFDeEIsRUFBSyxLQUFLLElBQUksRUFBSSxHQUNsQixFQUFJLEVBQUUsRUFBSyxVQUFVLEVBQUksRUFBRyxJQUM1QixFQUFJLEVBTVYsTUFBTyxJQUdMLFNBQVcsU0FBUyxFQUFTLEdBRy9CLElBQUssR0FERCxHQURBLEVBQU8sR0FFRixFQUFJLEVBQUcsR0FBSyxFQUFRLE9BQVEsSUFHbkMsR0FGQSxFQUFJLEVBQUksRUFBUSxPQUFTLEVBQVEsR0FBSyxFQUNsQyxHQUFHLGFBQWEsS0FBSSxHQUFRLE1BQ0osbUJBQWpCLEdBQUUsV0FDWCxHQUFRLElBQU0sRUFBRSxlQUNYLENBQUEsS0FBSSxFQUFJLEdBQWtDLGtCQUF0QixHQUFRLEVBQUksR0FBRyxLQVl4QyxLQURBLFNBQVEsTUFBTSwyREFBNEQsRUFBRyxHQUN2RSwwREFYTixJQUFJLEdBQWMsR0FBRyxhQUFhLEVBQVEsRUFBSSxJQUFNLEdBQUcsTUFBTSxlQUFlLEVBQVEsRUFBSSxJQUFNLEVBQVEsRUFBSSxHQUN0RyxFQUFNLEdBQUcsTUFBTSxhQUFhLEVBQWEsRUFDN0MsSUFBVyxJQUFQLEVBS0YsS0FEQSxTQUFRLE1BQU0sOENBQStDLEVBQWEsRUFBRyxFQUFHLEVBQVEsT0FBUSxHQUFHLEtBQUssR0FBYyxHQUFHLE1BQU0saUJBQWlCLElBQzFJLDZDQUpOLElBQVEsSUFBTSxFQUFNLElBVzFCLE1BQU8sSUFHTCwyQkFBNkIsU0FBUyxFQUFVLEVBQU8sRUFBTSxFQUFPLEdBQ3RFLEdBQUksR0FBUSxXQUFXLEVBQU8sRUFDOUIsR0FBUyxFQUFPLEVBQU8sSUFHckIsU0FFQSxhQUFlLFNBQVMsR0FDMUIsU0FBVyxHQUlULDJCQUE2QixTQUFTLEVBQU8sRUFBVSxFQUFTLEVBQU8sRUFBUSxHQUNqRixJQUNFLEdBQUksR0FBTyxTQUFTLEVBQVMsRUFJN0IsS0FEc0IsZ0JBQVgsSUFBeUMsa0JBQVgsTUFBdUIsRUFBUyxHQUFHLEtBQUssSUFDN0QsbUJBQVQsS0FBK0MsZ0JBQWYsR0FBSyxPQUE0QyxrQkFBZixHQUFLLE9BQXVCLENBQ3ZHLEdBQUksR0FBVSxHQUFHLEtBQUssRUFDdEIsR0FBTyxFQUdULEdBQXdCLG1CQUFiLFVBQ1QsSUFDRSxTQUFTLEVBQU0sRUFBTyxFQUFRLEdBQzlCLE1BQU8sR0FDUCxRQUFRLElBQUksMERBSWhCLE1BQU8sNEJBQTJCLEtBQUssT0FBVyxFQUFVLEVBQU8sRUFBTSxFQUFRLEdBQ2pGLE1BQU8sR0FFUCxRQUFRLE1BQU0sNEJBQTZCLEVBQUcsRUFBUyxFQUFPLEtBSTlELGFBQ0EsY0FBZ0IsU0FBUyxHQUMzQixNQUFzQixtQkFBWCxHQUdGLGNBRlAsYUFBZSxFQUFmLFFBS0osUUFBTyxTQUNMLFlBQWEsU0FDYixVQUFXLFdBQ1gsZUFBZ0IsMkJBQ2hCLFlBQWEsYUFDYixhQUFjIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBrbyA9IHJlcXVpcmUoXCJrbm9ja291dFwiKTtcbnZhciBjb25zb2xlID0gcmVxdWlyZShcImNvbnNvbGVcIik7XG4vLyBUaGlzIG1vZHVsZSBkZWFscyB3aXRoIHNlcmlhbGl6YXRpb24vZGVzZXJpYWxpemF0aW9uIG9mIGEgXCJ0cmVlLXBhdGhcIiByZXByZXNlbnRpbmcgdGhlIHBhdGggdG8gcmVhY2ggdGhlIGdpdmVuIGxlYWYuXG4vLyBJbiBvcmRlciB0byBiZSBjb3JyZWN0bHkgc2VyaWFsaXplZCB3ZSBoYXZlIHRvIG1vdmUgZnJvbSBcInJlZmVyZW5jZVwiIHRvIFwic3RyaW5nXCIgYW5kIHZpY2V2ZXJzYS5cblxudmFyIF9yZWZlcmVuY2UgPSBmdW5jdGlvbihtb2RlbCwgcGF0aCkge1xuICB2YXIgcCA9IDA7XG4gIHZhciBwMSwgcDI7XG4gIHZhciBtID0gbW9kZWw7XG4gIHdoaWxlIChwIDwgcGF0aC5sZW5ndGgpIHtcbiAgICBzd2l0Y2ggKHBhdGguY2hhckF0KHApKSB7XG4gICAgICBjYXNlICcoJzpcbiAgICAgICAgaWYgKHBhdGguY2hhckF0KHAgKyAxKSA9PSAnKScpIHtcbiAgICAgICAgICBtID0gbSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFRPRE8gZXJyb3JcbiAgICAgICAgfVxuICAgICAgICBwICs9IDI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnWyc6XG4gICAgICAgIHAyID0gcGF0aC5pbmRleE9mKCddJywgcCk7XG4gICAgICAgIG0gPSBtW3BhdGguc3Vic3RyaW5nKHAgKyAxLCBwMildO1xuICAgICAgICBwID0gcDIgKyAxO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJy4nOlxuICAgICAgICBwMSA9IHBhdGguaW5kZXhPZignKCcsIHApO1xuICAgICAgICBpZiAocDEgPT0gLTEpIHAxID0gcGF0aC5sZW5ndGg7XG4gICAgICAgIHAyID0gcGF0aC5pbmRleE9mKCdbJywgcCk7XG4gICAgICAgIGlmIChwMiA9PSAtMSkgcDIgPSBwYXRoLmxlbmd0aDtcbiAgICAgICAgcDIgPSBNYXRoLm1pbihwMSwgcDIpO1xuICAgICAgICBtID0gbVtwYXRoLnN1YnN0cmluZyhwICsgMSwgcDIpXTtcbiAgICAgICAgcCA9IHAyO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIC8vIFRPRE8gZXJyb3JcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG07XG59O1xuXG52YXIgX2dldFBhdGggPSBmdW5jdGlvbihwYXJlbnRzLCBjaGlsZCkge1xuICB2YXIgcGF0aCA9IFwiXCI7XG4gIHZhciBwO1xuICBmb3IgKHZhciBrID0gMDsgayA8PSBwYXJlbnRzLmxlbmd0aDsgaysrKSB7XG4gICAgcCA9IGsgPCBwYXJlbnRzLmxlbmd0aCA/IHBhcmVudHNba10gOiBjaGlsZDtcbiAgICBpZiAoa28uaXNPYnNlcnZhYmxlKHApKSBwYXRoICs9ICcoKSc7XG4gICAgaWYgKHR5cGVvZiBwLl9maWVsZE5hbWUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBwYXRoICs9IFwiLlwiICsgcC5fZmllbGROYW1lO1xuICAgIH0gZWxzZSBpZiAoayA+IDAgJiYgdHlwZW9mIHBhcmVudHNbayAtIDFdLnBvcCA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB2YXIgcGFyZW50QXJyYXkgPSBrby5pc09ic2VydmFibGUocGFyZW50c1trIC0gMV0pID8ga28udXRpbHMucGVla09ic2VydmFibGUocGFyZW50c1trIC0gMV0pIDogcGFyZW50c1trIC0gMV07XG4gICAgICB2YXIgcG9zID0ga28udXRpbHMuYXJyYXlJbmRleE9mKHBhcmVudEFycmF5LCBwKTtcbiAgICAgIGlmIChwb3MgIT0gLTEpIHtcbiAgICAgICAgcGF0aCArPSBcIltcIiArIHBvcyArIFwiXVwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTk9URSB0aGlzIGhhcHBlbiwgc29tZXRpbWVzIHdoZW4gVGlueU1DRSBzZW5kcyB1cGRhdGVzIGZvciBvYmplY3RzIGFscmVhZHkgcmVtb3ZlZC5cbiAgICAgICAgY29uc29sZS5lcnJvcihcIlVuZXhwZWN0ZWQgb2JqZWN0IG5vdCBmb3VuZCBpbiBwYXJlbnQgYXJyYXlcIiwgcGFyZW50QXJyYXksIHAsIGssIHBhcmVudHMubGVuZ3RoLCBrby50b0pTKHBhcmVudEFycmF5KSwga28udXRpbHMudW53cmFwT2JzZXJ2YWJsZShwKSk7XG4gICAgICAgIHRocm93IFwiVW5leHBlY3RlZCBvYmplY3Qgbm90IGZvdW5kIGluIHBhcmVudCBhcnJheVwiO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiVW5leHBlY3RlZCBwYXJlbnQgd2l0aCBubyBfZmllbGROYW1lIGFuZCBubyBwYXJlbnQgYXJyYXlcIiwgaywgcGFyZW50cyk7XG4gICAgICB0aHJvdyBcIlVuZXhwZWN0ZWQgcGFyZW50IHdpdGggbm8gX2ZpZWxkTmFtZSBhbmQgbm8gcGFyZW50IGFycmF5XCI7XG4gICAgfVxuICB9XG4gIHJldHVybiBwYXRoO1xufTtcblxudmFyIG1ha2VEZXJlZmVyZW5jZWRVbmRvQWN0aW9uID0gZnVuY3Rpb24odW5kb0Z1bmMsIG1vZGVsLCBwYXRoLCB2YWx1ZSwgaXRlbSkge1xuICB2YXIgY2hpbGQgPSBfcmVmZXJlbmNlKG1vZGVsLCBwYXRoKTtcbiAgdW5kb0Z1bmMoY2hpbGQsIHZhbHVlLCBpdGVtKTtcbn07XG5cbnZhciBsaXN0ZW5lcjtcblxudmFyIF9zZXRMaXN0ZW5lciA9IGZ1bmN0aW9uKGxpc3RlbmZ1bmMpIHtcbiAgbGlzdGVuZXIgPSBsaXN0ZW5mdW5jO1xufTtcblxuLyogZGVyZWZlcmVuY2luZyBwYXRoIGFuZCBjaGFuZ2luZyB2YWx1ZSB3aXRoIFwidG9KU1wiICovXG52YXIgbWFrZVVuZG9BY3Rpb25EZXJlZmVyZW5jZWQgPSBmdW5jdGlvbihtb2RlbCwgdW5kb0Z1bmMsIHBhcmVudHMsIGNoaWxkLCBvbGRWYWwsIGl0ZW0pIHtcbiAgdHJ5IHtcbiAgICB2YXIgcGF0aCA9IF9nZXRQYXRoKHBhcmVudHMsIGNoaWxkKTtcblxuICAgIC8vIFRyYW5zZm9ybSBhY3Rpb25zIGluIHNpbXBsZSBKUyBvYmplY3RzLlxuICAgIGlmICh0eXBlb2Ygb2xkVmFsID09PSAnb2JqZWN0JyB8fCB0eXBlb2Ygb2xkVmFsID09PSAnZnVuY3Rpb24nKSBvbGRWYWwgPSBrby50b0pTKG9sZFZhbCk7XG4gICAgaWYgKHR5cGVvZiBpdGVtICE9PSAndW5kZWZpbmVkJyAmJiAodHlwZW9mIGl0ZW0udmFsdWUgPT09ICdvYmplY3QnIHx8IHR5cGVvZiBpdGVtLnZhbHVlID09PSAnZnVuY3Rpb24nKSkge1xuICAgICAgdmFyIG5ld0l0ZW0gPSBrby50b0pTKGl0ZW0pO1xuICAgICAgaXRlbSA9IG5ld0l0ZW07XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBsaXN0ZW5lciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGxpc3RlbmVyKHBhdGgsIGNoaWxkLCBvbGRWYWwsIGl0ZW0pO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlVuZG9zZXJpYWxpemVyIGlnbm9yaW5nIGV4Y2VwdGlvbiBpbiBsaXN0ZW5lciBjYWxsYmFja1wiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbWFrZURlcmVmZXJlbmNlZFVuZG9BY3Rpb24uYmluZCh1bmRlZmluZWQsIHVuZG9GdW5jLCBtb2RlbCwgcGF0aCwgb2xkVmFsLCBpdGVtKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIE5PVEUgdGhpcyBoYXBwZW5zLCBmcm9tIHRpbWUgdG8gdGltZSwgd2hlbiBUaW55TUNFIHNlbmRzIHVwZGF0ZXMgZm9yIGRlbGV0ZWQgY29udGVudC5cbiAgICBjb25zb2xlLmVycm9yKFwiRXhjZXB0aW9uIHByb2Nlc3NpbmcgdW5kb1wiLCBlLCBwYXJlbnRzLCBjaGlsZCwgaXRlbSk7XG4gIH1cbn07XG5cbnZhciB3YXRjaEVuYWJsZWQ7XG52YXIgX3dhdGNoRW5hYmxlZCA9IGZ1bmN0aW9uKG5ld1ZhbCkge1xuICBpZiAodHlwZW9mIG5ld1ZhbCAhPT0gJ3VuZGVmaW5lZCcpXG4gICAgd2F0Y2hFbmFibGVkID0gbmV3VmFsO1xuICBlbHNlXG4gICAgcmV0dXJuIHdhdGNoRW5hYmxlZDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBkZXJlZmVyZW5jZTogX2dldFBhdGgsXG4gIHJlZmVyZW5jZTogX3JlZmVyZW5jZSxcbiAgbWFrZVVuZG9BY3Rpb246IG1ha2VVbmRvQWN0aW9uRGVyZWZlcmVuY2VkLFxuICBzZXRMaXN0ZW5lcjogX3NldExpc3RlbmVyLFxuICB3YXRjaEVuYWJsZWQ6IF93YXRjaEVuYWJsZWRcbn07Il19","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/bower_components/toastr/toastr.js":{"file":"/Users/denea/mosaico/bower_components/toastr/toastr.js","source":"(function (global){\n!function(e){e([\"jquery\"],function(e){return function(){function t(e,t,o){return b({type:w.error,iconClass:m().iconClasses.error,message:e,optionsOverride:o,title:t})}function o(t,o){return t||(t=m()),h=e(\"#\"+t.containerId),h.length?h:(o&&(h=u(t)),h)}function n(e,t,o){return b({type:w.info,iconClass:m().iconClasses.info,message:e,optionsOverride:o,title:t})}function i(e){v=e}function a(e,t,o){return b({type:w.success,iconClass:m().iconClasses.success,message:e,optionsOverride:o,title:t})}function r(e,t,o){return b({type:w.warning,iconClass:m().iconClasses.warning,message:e,optionsOverride:o,title:t})}function l(e,t){var n=m();h||o(n),c(e,n,t)||d(n)}function s(t){var n=m();return h||o(n),t&&0===e(\":focus\",t).length?(g(t),void 0):(h.children().length&&h.remove(),void 0)}function d(t){for(var o=h.children(),n=o.length-1;n>=0;n--)c(e(o[n]),t)}function c(t,o,n){var i=n&&n.force?n.force:!1;return t&&(i||0===e(\":focus\",t).length)?(t[o.hideMethod]({duration:o.hideDuration,easing:o.hideEasing,complete:function(){g(t)}}),!0):!1}function u(t){return h=e(\"<div/>\").attr(\"id\",t.containerId).addClass(t.positionClass),h.appendTo(e(t.target)),h}function p(){return{tapToDismiss:!0,toastClass:\"toast\",containerId:\"toast-container\",debug:!1,showMethod:\"fadeIn\",showDuration:300,showEasing:\"swing\",onShown:void 0,hideMethod:\"fadeOut\",hideDuration:1e3,hideEasing:\"swing\",onHidden:void 0,closeMethod:!1,closeDuration:!1,closeEasing:!1,closeOnHover:!0,extendedTimeOut:1e3,iconClasses:{error:\"toast-error\",info:\"toast-info\",success:\"toast-success\",warning:\"toast-warning\"},iconClass:\"toast-info\",positionClass:\"toast-top-right\",timeOut:5e3,titleClass:\"toast-title\",messageClass:\"toast-message\",escapeHtml:!1,target:\"body\",closeHtml:'<button type=\"button\">&times;</button>',closeClass:\"toast-close-button\",newestOnTop:!0,preventDuplicates:!1,progressBar:!1,progressClass:\"toast-progress\",rtl:!1}}function f(e){v&&v(e)}function b(t){function n(e){return null==e&&(e=\"\"),e.replace(/&/g,\"&amp;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#39;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\")}function i(){s(),c(),u(),p(),b(),v(),d(),a()}function a(){var e=\"\";switch(t.iconClass){case\"toast-success\":case\"toast-info\":e=\"polite\";break;default:e=\"assertive\"}E.attr(\"aria-live\",e)}function r(){S.closeOnHover&&E.hover(_,$),!S.onclick&&S.tapToDismiss&&E.click(x),S.closeButton&&A&&A.click(function(e){e.stopPropagation?e.stopPropagation():void 0!==e.cancelBubble&&e.cancelBubble!==!0&&(e.cancelBubble=!0),S.onCloseClick&&S.onCloseClick(e),x(!0)}),S.onclick&&E.click(function(e){S.onclick(e),x()})}function l(){E.hide(),E[S.showMethod]({duration:S.showDuration,easing:S.showEasing,complete:S.onShown}),S.timeOut>0&&(O=setTimeout(x,S.timeOut),P.maxHideTime=parseFloat(S.timeOut),P.hideEta=(new Date).getTime()+P.maxHideTime,S.progressBar&&(P.intervalId=setInterval(C,10)))}function s(){t.iconClass&&E.addClass(S.toastClass).addClass(T)}function d(){S.newestOnTop?h.prepend(E):h.append(E)}function c(){if(t.title){var e=t.title;S.escapeHtml&&(e=n(t.title)),H.append(e).addClass(S.titleClass),E.append(H)}}function u(){if(t.message){var e=t.message;S.escapeHtml&&(e=n(t.message)),M.append(e).addClass(S.messageClass),E.append(M)}}function p(){S.closeButton&&(A.addClass(S.closeClass).attr(\"role\",\"button\"),E.prepend(A))}function b(){S.progressBar&&(q.addClass(S.progressClass),E.prepend(q))}function v(){S.rtl&&E.addClass(\"rtl\")}function w(e,t){if(e.preventDuplicates){if(t.message===y)return!0;y=t.message}return!1}function x(t){var o=t&&S.closeMethod!==!1?S.closeMethod:S.hideMethod,n=t&&S.closeDuration!==!1?S.closeDuration:S.hideDuration,i=t&&S.closeEasing!==!1?S.closeEasing:S.hideEasing;return!e(\":focus\",E).length||t?(clearTimeout(P.intervalId),E[o]({duration:n,easing:i,complete:function(){g(E),clearTimeout(O),S.onHidden&&\"hidden\"!==I.state&&S.onHidden(),I.state=\"hidden\",I.endTime=new Date,f(I)}})):void 0}function $(){(S.timeOut>0||S.extendedTimeOut>0)&&(O=setTimeout(x,S.extendedTimeOut),P.maxHideTime=parseFloat(S.extendedTimeOut),P.hideEta=(new Date).getTime()+P.maxHideTime)}function _(){clearTimeout(O),P.hideEta=0,E.stop(!0,!0)[S.showMethod]({duration:S.showDuration,easing:S.showEasing})}function C(){var e=100*((P.hideEta-(new Date).getTime())/P.maxHideTime);q.width(e+\"%\")}var S=m(),T=t.iconClass||S.iconClass;if(\"undefined\"!=typeof t.optionsOverride&&(S=e.extend(S,t.optionsOverride),T=t.optionsOverride.iconClass||T),!w(S,t)){k++,h=o(S,!0);var O=null,E=e(\"<div/>\"),H=e(\"<div/>\"),M=e(\"<div/>\"),q=e(\"<div/>\"),A=e(S.closeHtml),P={intervalId:null,hideEta:null,maxHideTime:null},I={toastId:k,state:\"visible\",startTime:new Date,options:S,map:t};return i(),l(),r(),f(I),S.debug&&console&&console.log(I),E}}function m(){return e.extend({},p(),x.options)}function g(e){h||(h=o()),e.is(\":visible\")||(e.remove(),e=null,0===h.children().length&&(h.remove(),y=void 0))}var h,v,y,k=0,w={error:\"error\",info:\"info\",success:\"success\",warning:\"warning\"},x={clear:l,remove:s,error:t,getContainer:o,info:n,options:{},subscribe:i,success:a,version:\"2.1.3\",warning:r};return x}()})}(\"function\"==typeof define&&define.amd?define:function(e,t){\"undefined\"!=typeof module&&module.exports?module.exports=t((typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null)):window.toastr=t(window.jQuery)});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/denea/mosaico/src/js/viewmodel.js":{"file":"/Users/denea/mosaico/src/js/viewmodel.js","source":"(function (global){\n\"use strict\";function initializeEditor(e,t,o,a){function i(e){return e.replace(/<replacedcc[^>]* condition=\"([^\"]*)\"[^>]*>([\\s\\S]*?)<\\/replacedcc>/g,function(e,t,o){var a=\"<!--[if \"+t.replace(/&amp;/,\"&\")+\"]>\";return a+=o.replace(/<!-- cc:bc:([A-Za-z:]*) -->(<\\/cc>)?<!-- cc:ac:\\1 -->/g,\"</$1>\").replace(/><\\/cc><!-- cc:sc -->/g,\"/>\").replace(/<!-- cc:bo:([A-Za-z:]*) --><cc/g,\"<$1\").replace(/^.*<!-- cc:start -->/,\"\").replace(/<!-- cc:end -->.*$/,\"\"),a+=\"<![endif]-->\"})}var l={galleryRecent:ko.observableArray([]).extend({paging:16}),galleryRemote:ko.observableArray([]).extend({paging:16}),selectedBlock:ko.observable(null),selectedItem:ko.observable(null),selectedTool:ko.observable(0),selectedImageTab:ko.observable(0),dragging:ko.observable(!1),draggingImage:ko.observable(!1),galleryLoaded:ko.observable(!1),showPreviewFrame:ko.observable(!1),previewMode:ko.observable(\"mobile\"),showToolbox:ko.observable(!0),showTheme:ko.observable(!1),showGallery:ko.observable(!1),debug:ko.observable(!1),contentListeners:ko.observable(0),logoPath:\"dist/img/mosaico32.png\",logoUrl:\".\",logoAlt:\"mosaico\"};return l.content=e,l.blockDefs=t,l.notifier=toastr,l.tt=function(e,t){if(\"undefined\"!=typeof t)for(var o in t)t.hasOwnProperty(o)&&(e=e.replace(new RegExp(\"__\"+o+\"__\",\"g\"),t[o]));return e},l.t=l.tt,l.ut=function(e,t){return t},l.templatePath=o,l.remoteUrlProcessor=function(e){return e},l.remoteFileProcessor=function(e){return\"undefined\"!=typeof e.url&&(e.url=l.remoteUrlProcessor(e.url)),\"undefined\"!=typeof e.thumbnailUrl&&(e.thumbnailUrl=l.remoteUrlProcessor(e.thumbnailUrl)),e},l.loadGallery=function(){l.galleryLoaded(\"loading\");var e=a?a:\"/upload/\";$.getJSON(e,function(e){for(var t=0;t<e.files.length;t++)e.files[t]=l.remoteFileProcessor(e.files[t]);l.galleryLoaded(e.files.length),l.galleryRemote(e.files.reverse())}).fail(function(){l.galleryLoaded(!1),l.notifier.error(l.t(\"Unexpected error listing files\"))})},l.fileToImage=function(e){return e.url},l.removeBlock=function(e,t){ko.utils.unwrapObservable(l.selectedBlock)==ko.utils.unwrapObservable(e)&&l.selectBlock(null,!0);var o=t.blocks.remove(e);return l.notifier.info(l.t(\"Block removed: use undo button to restore it...\")),o},l.duplicateBlock=function(e,t){var o=ko.utils.unwrapObservable(e),a=ko.toJS(ko.utils.unwrapObservable(t.blocks)[o]);\"undefined\"!=typeof a.id&&(a.id=\"\"),t.blocks.splice(o+1,0,a)},l.moveBlock=function(e,t,o){var a=ko.utils.unwrapObservable(e),i=ko.utils.unwrapObservable(t.blocks);if(o&&a>0||!o&&a<i.length-1){var n=a+(o?-1:1),r=i[n];l.startMultiple(),t.blocks.splice(n,1),t.blocks.splice(a,0,r),l.stopMultiple()}},l.loadDefaultBlocks=function(){var e=ko.toJS(l.content().mainBlocks);e.blocks=[];for(var t=ko.utils.unwrapObservable(l.blockDefs),o=0;o<t.length;o++){var a=ko.toJS(t[o]);a.id=\"block_\"+o,e.blocks.push(a)}performanceAwareCaller(\"setMainBlocks\",l.content().mainBlocks._wrap.bind(l.content().mainBlocks,e))},l.addImage=function(e){var t=$(\"#main-wysiwyg-area .selectable-img.selecteditem\");return 1==t.length&&\"object\"==typeof e&&\"undefined\"!=typeof e.url?(ko.contextFor(t[0])._src(e.url),!0):!1},l.addBlock=function(e){var t,o=l.selectedBlock();if(null!==o)for(var a=l.content().mainBlocks().blocks().length-1;a>=0;a--)if(l.content().mainBlocks().blocks()[a]()==o){t=a;break}var i;\"undefined\"!=typeof t?(i=t+1,l.content().mainBlocks().blocks.splice(i,0,e),l.notifier.info(l.t(\"New block added after the selected one (__pos__)\",{pos:i}))):(l.content().mainBlocks().blocks.push(e),i=l.content().mainBlocks().blocks().length-1,l.notifier.info(l.t(\"New block added at the model bottom (__pos__)\",{pos:i})));var n=l.content().mainBlocks().blocks()[i]();return l.selectBlock(n,!0),!1},l.findObjectsOfType=function(e,t){var o=[],a=ko.utils.unwrapObservable(e);for(var i in a)if(a.hasOwnProperty(i)){var l=ko.utils.unwrapObservable(a[i]);if(i.match(/Blocks$/))for(var n=ko.utils.unwrapObservable(l.blocks),r=0;r<n.length;r++){var d=ko.utils.unwrapObservable(n[r]);(null===t||ko.utils.unwrapObservable(d.type)==t)&&o.push(d)}else\"object\"==typeof l&&null!==l&&(null===t||ko.utils.unwrapObservable(l.type)==t)&&o.push(l)}return o},l.placeholderHelper={element:function(e){return $(e[0].outerHTML).removeClass(\"ui-draggable\").addClass(\"sortable-placeholder\").css(\"display\",\"block\").css(\"position\",\"relative\").css(\"width\",\"100%\").css(\"height\",\"auto\").css(\"opacity\",\".8\")[0]},update:function(){}},l.startMultiple=function(){\"undefined\"!=typeof l.setUndoModeMerge&&l.setUndoModeMerge()},l.stopMultiple=function(){\"undefined\"!=typeof l.setUndoModeOnce&&l.setUndoModeOnce()},l.localGlobalSwitch=function(e,t){var o=e();return null===o?e(t()):e(null),!1},l.selectItem=function(e,t,o){var a=ko.utils.peekObservable(e);return\"undefined\"!=typeof o&&l.selectBlock(o,!1,!0),a!=t&&(e(t),null!==t&&0===l.selectedTool()&&l.selectedTool(1)),!1}.bind(l,l.selectedItem),l.isSelectedItem=function(e){return l.selectedItem()==e},l.selectBlock=function(e,t,o,a){var i=ko.utils.peekObservable(e);a||l.selectItem(null),i!=t&&(e(t),l.showGallery(!1),null===t||o||0!==l.selectedTool()||l.selectedTool(1))}.bind(l,l.selectedBlock),l.countSubscriptions=function(e,t){var o=0;for(var a in e)if(e.hasOwnProperty(a)){var i=e[a];if(ko.isObservable(i)&&(\"undefined\"!=typeof i._defaultComputed&&(\"undefined\"!=typeof t&&console.log(t+\"/\"+a+\"/_\",i._defaultComputed.getSubscriptionsCount()),o+=i._defaultComputed.getSubscriptionsCount()),\"undefined\"!=typeof t&&console.log(t+\"/\"+a+\"/-\",i.getSubscriptionsCount()),o+=i.getSubscriptionsCount(),i=ko.utils.unwrapObservable(i)),\"object\"==typeof i&&null!==i){var n=l.countSubscriptions(i,\"undefined\"!=typeof t?t+\"/\"+a+\"@\":void 0);\"undefined\"!=typeof t&&console.log(t+\"/\"+a+\"@\",n),o+=n}}return o},l.loopSubscriptionsCount=function(){var e=l.countSubscriptions(l.content());global.document.getElementById(\"subscriptionsCount\").innerHTML=e,global.setTimeout(l.loopSubscriptionsCount,1e3)},l.export=function(){var e=performanceAwareCaller(\"exportHTML\",l.exportHTML);return e},l.exportHTML=function(){var e=\"exportframe\";$(\"body\").append('<iframe id=\"'+e+'\" data-bind=\"bindIframe: $data\"></iframe>');var t=global.document.getElementById(e);ko.applyBindings(l,t),ko.cleanNode(t),l.inline&&l.inline(t.contentWindow.document);var o=t.contentWindow.document.doctype,a=\"<!DOCTYPE \"+o.name+(o.publicId?' PUBLIC \"'+o.publicId+'\"':\"\")+(!o.publicId&&o.systemId?\" SYSTEM\":\"\")+(o.systemId?' \"'+o.systemId+'\"':\"\")+\">\",n=a+\"\\n\"+t.contentWindow.document.documentElement.outerHTML;ko.removeNode(t),n=n.replace(/<script ([^>]* )?type=\"text\\/html\"[^>]*>[\\s\\S]*?<\\/script>/gm,\"\"),n=n.replace(/<!-- ko ((?!--).)*? -->/g,\"\"),n=n.replace(/<!-- \\/ko -->/g,\"\"),n=n.replace(/ data-bind=\"[^\"]*\"/gm,\"\"),n=n.replace(/ data-mce-(href|src|style)=\"[^\"]*\"/gm,\"\"),n=n.replace(/ style=\"[^\"]*\"([^>]*) replaced(style=\"[^\"]*\")/gm,\"$1 $2\"),n=n.replace(/ replaced(style=\"[^\"]*\")([^>]*) style=\"[^\"]*\"/gm,\" $1$2\"),n=n.replace(/ replaced(style=\"[^\"]*\")/gm,\" $1\"),n=n.replace(/ http-equiv=\"[^\"]*\"([^>]*) replaced(http-equiv=\"[^\"]*\")/gm,\"$1 $2\"),n=n.replace(/ replaced(http-equiv=\"[^\"]*\")([^>]*) http-equiv=\"[^\"]*\"/gm,\" $1$2\"),n=n.replace(/ replaced(http-equiv=\"[^\"]*\")/gm,\" $1\"),n=i(n);var r=n.match(/ data-[^ =]+(=\"[^\"]+\")? /)||n.match(/ replaced([^= ]*=)/);return r&&console.warn(\"Output HTML contains unexpected data- attributes or replaced attributes\",r),n},l.exportHTMLtoTextarea=function(e){$(e).val(l.exportHTML())},l.exportJSONtoTextarea=function(e){$(e).val(l.exportJSON())},l.importJSONfromTextarea=function(e){l.importJSON($(e).val())},l.exportMetadata=function(){var e=ko.toJSON(l.metadata);return e},l.exportJSON=function(){var e=ko.toJSON(l.content);return e},l.exportJS=function(){return ko.toJS(l.content)},l.importJSON=function(e){var t=ko.utils.parseJson(e);l.content._wrap(t)},l.exportTheme=function(){var e={},t=l.content().theme(),o=function(e,t,a){for(var i in a)if(a.hasOwnProperty(i)){var l=ko.utils.unwrapObservable(a[i]);null!==l&&\"object\"==typeof l?o(i+\".\",t,l):t[e+i]=l}};o(\"\",e,t);var a=\"\";for(var i in e)e.hasOwnProperty(i)&&\"type\"!=i&&(a+=i+\": \"+e[i]+\";\"+\"\\n\");return a},l.loadImage=function(e){l.galleryRecent.unshift(e),l.selectedImageTab(0)},l.dialog=function(e,t){$(e).dialog(t)},l.log=function(){},l.selectedImageTab.subscribe(function(e){1==e&&l.galleryLoaded()===!1&&l.loadGallery()},l,\"change\"),l}var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../bower_components/console-browserify/index.js\"),performanceAwareCaller=require(\"./timed-call.js\").timedCall,toastr=require(\"./../../bower_components/toastr/toastr.js\");toastr.options={closeButton:!1,debug:!1,positionClass:\"toast-bottom-full-width\",target:\"#mo-body\",onclick:null,showDuration:\"300\",hideDuration:\"1000\",timeOut:\"5000\",extendedTimeOut:\"1000\",showEasing:\"swing\",hideEasing:\"linear\",showMethod:\"fadeIn\",hideMethod:\"fadeOut\"},module.exports=initializeEditor;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./timed-call.js":"/Users/denea/mosaico/src/js/timed-call.js","./../../bower_components/toastr/toastr.js":"/Users/denea/mosaico/bower_components/toastr/toastr.js"}},"/Users/denea/mosaico/bower_components/knockoutjs-reactor/src/knockout.reactor.js":{"file":"/Users/denea/mosaico/bower_components/knockoutjs-reactor/src/knockout.reactor.js","source":"(function (global){\n!function(e){\"function\"==typeof require&&\"object\"==typeof exports&&\"object\"==typeof module?e((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null)):\"function\"==typeof define&&define.amd?define([\"knockout\"],e):e(window.ko)}(function(e){e.subscribable.fn.watch=function(t,o,n,i){var a=typeof t;return\"boolean\"===a||\"undefined\"===a?e.watch(this,{enabled:t!==!1}):\"function\"!==a||e.isSubscribable(t)?e.watch(t,o,n,i||this):e.watch(this,o||{},t,i||this),this},e.watch=function(t,o,n,i){function a(s,d,c,u,f,p){if(s&&0!==o.depth&&(-1===o.depth||c.length<(o.depth||1))){if(o.watchedOnly&&!s.watchable&&s!=t)return;if((o.enabled===!1||o.enabled===!0)&&(s.watchable=o.enabled),s.watchable===!1)return;o.seal===!0&&(s.watchable=!1);var b=typeof s;if(\"object\"===b||\"function\"===b){if(s._watcher===i)return;if(o.hide&&e.utils.arrayIndexOf(o.hide,s)>-1)return;var m=[].concat(c,d&&d!==t?d:[]);if(\"function\"!==b){if(\"[object Object]\"===Object.prototype.toString.call(s))e.utils.objectForEach(s,function(t,n){if(n=o.getter?o.getter.call(i,m,s,t):n){if(o.wrap){var r=Object.prototype.toString.call(n);\"[object Function]\"!==r&&\"[object Object]\"!==r&&(o.beforeWrap&&o.beforeWrap.call(i,m,s,n)===!1||(n=s[t]=\"[object Array]\"===r?e.observableArray(n):e.observable(n)))}o.unloop&&(n._watcher=u?void 0:i);var l=a(n,f?null:s,m,u,null,t);o.tagFields&&void 0===n._fieldName&&(l||\"parentsOnly\"!==o.tagFields&&\"function\"==typeof n||\"object\"==typeof n)&&(n._fieldName=t)}});else if(o.hideArrays!==!0)for(var g=0;g<s.length;g++)a(s[g],f?null:s,m,u);return!0}if(\"function\"==typeof s.notifySubscribers&&n){if(o.enabled===!0&&s.watchable===!1)return;if(u||!o.beforeWatch||o.beforeWatch.call(i,m,s,p)!==!1){var h=\"function\"==typeof s.pop;if(u?r(s):l(s,h,m,f),h)return a(s(),f?null:s,m,u,!0),!0;if(o.hideWrappedValues!==!0)return a(s(),f?null:s,m,u,!0)}}}}}function r(e){var t=e[s];if(!t)throw\"Subscriptions field (.\"+s+\") not defined for observable child \"+(e._fieldName||\"\");if(t.change)for(var n=t.change.length-1;n>=0;n--)t.change[n]._watcher===i&&t.change[n].dispose();if(t.beforeChange&&(o.mutable||o.oldValues>0))for(var n=t.beforeChange.length-1;n>=0;n--)t.beforeChange[n]._watcher===i&&t.beforeChange[n].dispose();if(t.arrayChange)for(var n=t.arrayChange.length-1;n>=0;n--)t.arrayChange[n]._watcher===i&&t.arrayChange[n].dispose()}function l(t,r,l,s){r?t.subscribe(function(o){e.utils.arrayForEach(o,function(e){var o=n.call(i,l,t,e);void 0!==o&&i(o),e.moved||setTimeout(function(){a(e.value,s?null:t,l,\"deleted\"===e.status)},0)})},void 0,\"arrayChange\")._watcher=i:(t.subscribe(function(){if(t.watchable!==!1){var e=n.call(i,l,t);void 0!==e&&i(e),o.mutable&&\"object\"==typeof t()&&a(t(),s?null:t,l)}},null,\"change\")._watcher=i,(o.oldValues>0||o.mutable)&&(t.subscribe(function(e){if(o.oldValues>0){var n=t.oldValues?t.oldValues:t.oldValues=[];for(n.unshift(e);n.length>o.oldValues;)n.pop()}o.mutable&&\"object\"==typeof e&&a(e,s?null:t,l,!1,!0)},null,\"beforeChange\")._watcher=i))}\"function\"==typeof o&&(i=i||n,n=o,o={}),i=i||this;var s;switch(\"function\"==typeof e.subscription||e.version){case!0:s=\"_subscriptions\";break;case\"3.0.0\":s=\"F\";break;case\"3.1.0\":s=\"H\";break;case\"3.2.0\":s=\"M\";break;case\"3.3.0\":s=\"G\";break;case\"3.4.0\":s=\"K\";break;case\"3.4.1\":s=\"K\";break;default:throw\"Unsupported Knockout version. Only v3.0.0 to v3.4.1 are supported when minified. Current version is \"+e.version}return\"function\"!=typeof t||e.isSubscribable(t)?(a(t,null,[]),{dispose:function(){a(t,null,[],!0)}}):e.computed(t,n,o)}});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/denea/mosaico/bower_components/knockout-undomanager/knockout-undomanager.js":{"file":"/Users/denea/mosaico/bower_components/knockout-undomanager/knockout-undomanager.js","source":"(function (global){\n!function(e){\"function\"==typeof require&&\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),require(\"./../knockoutjs-reactor/src/knockout.reactor.js\")):\"function\"==typeof define&&define.amd?define([\"knockout\",\"knockoutjs-reactor\",\"exports\"],e):e(ko,ko.watch)}(function(e,t){var o=function(o,i){var n,a=e.observableArray(),r=e.observableArray(),l=0,d=1,s=2,c=l,u=0,p=1,f=2,b=3,m=u,g={levels:100,undoLabel:\"undo (#COUNT#)\",redoLabel:\"redo (#COUNT#)\"};i=\"object\"==typeof i?e.utils.extend(g,i):g;var v=function(e){c==d?y(e,r):c==s?y(e,a):c==l&&(y(e,a),r.removeAll())},k=function(e,t){return\"undefined\"!=typeof e.mergedAction?e.mergedAction(t):null},y=function(e,t){if(t().length>0){var o=k(t()[t().length-1],e);if(null!==o)return t()[t().length-1]=o,void 0}t().length>=i.levels&&t.shift(),n=t,t.push(e)},h=function(t,o,i){return{name:e.computed(function(){return e.utils.unwrapObservable(t).replace(/#COUNT#/,i().length)}),enabled:e.computed(function(){return 0!==i().length}),execute:function(){var e=i.pop();if(e){var t=c;c=o;var a=m;m=b,e(),w(n),m=a,c=t}return!0}}},w=function(e){if(\"undefined\"==typeof e)throw\"Unexpected operation: stack cleaner called with undefined stack\";e().length>0&&\"undefined\"!=typeof e()[e().length-1].mergedAction&&delete e()[e().length-1].mergedAction},x=function(e,t){var o=function(e,t){e(),t()}.bind(void 0,e,t);return\"undefined\"!=typeof e.mergedAction&&(o.mergedAction=e.mergedAction),o},$=function(e,t,o){if(\"undefined\"!=typeof t)e(t);else{if(!o)throw\"Unexpected condition: no item and no child.oldValues!\";if(\"deleted\"==o.status)e.splice(o.index,0,o.value);else{if(\"added\"!=o.status)throw\"Unsupproted item.status: \"+o.status;e.splice(o.index,1)}}},C=function(e,t,o,i,n){return e.bind(void 0,o,i,n)},S=C,q=function(e,t,o){var i=\"undefined\"!=typeof t.oldValues?t.oldValues[0]:void 0,n=S($,e,t,i,o);m!=p&&(m==b?\"undefined\"!=typeof n&&(n.mergedAction=function(e){return\"undefined\"!=typeof e.mergeMe&&e.mergeMe?x(e,this):null},n.mergeMe=!0):\"undefined\"!=typeof n&&(t.oldValues&&m==f&&(n.mergedAction=function(e,t,o){return\"object\"==typeof o.mergeableAction&&e==o.mergeableAction.child?this:null}.bind(n,t,o),n.mergeableAction={child:t,item:o}),o&&\"deleted\"==o.status&&(n.mergedAction=function(e,t,o){return\"object\"==typeof o.mergeableMove&&t.value==o.mergeableMove.item.value?x(o,this):(console.log(\"UR\",\"not mergeable\",typeof o.mergeableMove),null)}.bind(n,t,o)),o&&\"added\"==o.status&&(n.mergeableMove={child:t,item:o})),\"undefined\"!=typeof n&&v(n))},O={depth:-1,oldValues:1,mutable:!0,tagFields:!0},M={},T=\"function\"==typeof t?t:e.watch,H=T(o,O,q,M);return{push:v,undoCommand:h(i.undoLabel,d,a),redoCommand:h(i.redoLabel,s,r),reset:function(){a.removeAll(),r.removeAll()},setModeOnce:function(){m=f,w(a)},setModeMerge:function(){m=b,w(a)},setModeNormal:function(){m=u,w(a)},setModeIgnore:function(){m=p,w(a)},setUndoActionMaker:function(e){S=e},dispose:function(){H.dispose()}}};return o});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../knockoutjs-reactor/src/knockout.reactor.js":"/Users/denea/mosaico/bower_components/knockoutjs-reactor/src/knockout.reactor.js"}},"/Users/denea/mosaico/src/js/undomanager/undomain.js":{"file":"/Users/denea/mosaico/src/js/undomanager/undomain.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),undoManager=require(\"./../../../bower_components/knockout-undomanager/knockout-undomanager.js\"),undoserializer=require(\"./undoserializer.js\"),addUndoStackExtensionMaker=function(e){return function(t){t.contentListeners(t.contentListeners()+2);var o=undoManager(t.content,{levels:100,undoLabel:ko.computed(function(){return t.t(\"Undo (#COUNT#)\")}),redoLabel:ko.computed(function(){return t.t(\"Redo\")})});return t.undo=o.undoCommand,t.undo.execute=e.bind(t,\"undo\",t.undo.execute),t.redo=o.redoCommand,t.redo.execute=e.bind(t,\"redo\",t.redo.execute),t.undoReset=e.bind(t,\"undoReset\",o.reset),t.setUndoModeMerge=o.setModeMerge,t.setUndoModeOnce=o.setModeOnce,o.setModeIgnore(),o.setUndoActionMaker(undoserializer.makeUndoAction.bind(void 0,t.content)),undoserializer.watchEnabled(!0),{pause:function(){o.setModeIgnore()},run:function(){o.setModeOnce()},init:function(){o.setModeOnce()},dispose:function(){t.contentListeners(t.contentListeners()-2),undoserializer.watchEnabled(!1),o.dispose()}}}};module.exports=addUndoStackExtensionMaker;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy91bmRvbWFuYWdlci91bmRvbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFFQSxJQUFJLElBQUssUUFBUSxZQUNiLFlBQWMsUUFBUSx3QkFDdEIsZUFBaUIsUUFBUSx1QkFFekIsMkJBQTZCLFNBQVMsR0FDeEMsTUFBTyxVQUFTLEdBRWQsRUFBVSxpQkFBaUIsRUFBVSxtQkFBcUIsRUFHMUQsSUFBSSxHQUFnQixZQUFZLEVBQVUsU0FDeEMsT0FBUSxJQUNSLFVBQVcsR0FBRyxTQUFTLFdBQWEsTUFBTyxHQUFVLEVBQUUsb0JBQ3ZELFVBQVcsR0FBRyxTQUFTLFdBQWEsTUFBTyxHQUFVLEVBQUUsV0FhekQsT0FYQSxHQUFVLEtBQU8sRUFBYyxZQUMvQixFQUFVLEtBQUssUUFBVSxFQUF1QixLQUFLLEVBQVcsT0FBUSxFQUFVLEtBQUssU0FDdkYsRUFBVSxLQUFPLEVBQWMsWUFDL0IsRUFBVSxLQUFLLFFBQVUsRUFBdUIsS0FBSyxFQUFXLE9BQVEsRUFBVSxLQUFLLFNBQ3ZGLEVBQVUsVUFBWSxFQUF1QixLQUFLLEVBQVcsWUFBYSxFQUFjLE9BQ3hGLEVBQVUsaUJBQW1CLEVBQWMsYUFDM0MsRUFBVSxnQkFBa0IsRUFBYyxZQUMxQyxFQUFjLGdCQUNkLEVBQWMsbUJBQW1CLGVBQWUsZUFBZSxLQUFLLE9BQVcsRUFBVSxVQUN6RixlQUFlLGNBQWEsSUFHMUIsTUFBTyxXQUNMLEVBQWMsaUJBRWhCLElBQUssV0FDSCxFQUFjLGVBRWhCLEtBQU0sV0FDSixFQUFjLGVBRWhCLFFBQVMsV0FDUCxFQUFVLGlCQUFpQixFQUFVLG1CQUFxQixHQUMxRCxlQUFlLGNBQWEsR0FDNUIsRUFBYyxhQU90QixRQUFPLFFBQVUiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG52YXIgdW5kb01hbmFnZXIgPSByZXF1aXJlKCdrbm9ja291dC11bmRvbWFuYWdlcicpO1xudmFyIHVuZG9zZXJpYWxpemVyID0gcmVxdWlyZShcIi4vdW5kb3NlcmlhbGl6ZXIuanNcIik7XG5cbnZhciBhZGRVbmRvU3RhY2tFeHRlbnNpb25NYWtlciA9IGZ1bmN0aW9uKHBlcmZvcm1hbmNlQXdhcmVDYWxsZXIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZpZXdNb2RlbCkge1xuXG4gICAgdmlld01vZGVsLmNvbnRlbnRMaXN0ZW5lcnModmlld01vZGVsLmNvbnRlbnRMaXN0ZW5lcnMoKSArIDIpO1xuXG4gICAgLy8gVE9ETyB0aGUgbGFiZWxzIHNob3VsZCBiZSBjb21wdXRlZCBvYnNlcnZhYmxlcyAobmVlZHMgY2hhbmdlcyBpbiB1bmRvbWFuYWdlciBwcm9qZWN0cylcbiAgICB2YXIgdW5kb1JlZG9TdGFjayA9IHVuZG9NYW5hZ2VyKHZpZXdNb2RlbC5jb250ZW50LCB7XG4gICAgICBsZXZlbHM6IDEwMCxcbiAgICAgIHVuZG9MYWJlbDoga28uY29tcHV0ZWQoZnVuY3Rpb24oKSB7IHJldHVybiB2aWV3TW9kZWwudChcIlVuZG8gKCNDT1VOVCMpXCIpOyB9KSxcbiAgICAgIHJlZG9MYWJlbDoga28uY29tcHV0ZWQoZnVuY3Rpb24oKSB7IHJldHVybiB2aWV3TW9kZWwudChcIlJlZG9cIik7IH0pXG4gICAgfSk7XG4gICAgdmlld01vZGVsLnVuZG8gPSB1bmRvUmVkb1N0YWNrLnVuZG9Db21tYW5kO1xuICAgIHZpZXdNb2RlbC51bmRvLmV4ZWN1dGUgPSBwZXJmb3JtYW5jZUF3YXJlQ2FsbGVyLmJpbmQodmlld01vZGVsLCAndW5kbycsIHZpZXdNb2RlbC51bmRvLmV4ZWN1dGUpO1xuICAgIHZpZXdNb2RlbC5yZWRvID0gdW5kb1JlZG9TdGFjay5yZWRvQ29tbWFuZDtcbiAgICB2aWV3TW9kZWwucmVkby5leGVjdXRlID0gcGVyZm9ybWFuY2VBd2FyZUNhbGxlci5iaW5kKHZpZXdNb2RlbCwgJ3JlZG8nLCB2aWV3TW9kZWwucmVkby5leGVjdXRlKTtcbiAgICB2aWV3TW9kZWwudW5kb1Jlc2V0ID0gcGVyZm9ybWFuY2VBd2FyZUNhbGxlci5iaW5kKHZpZXdNb2RlbCwgJ3VuZG9SZXNldCcsIHVuZG9SZWRvU3RhY2sucmVzZXQpO1xuICAgIHZpZXdNb2RlbC5zZXRVbmRvTW9kZU1lcmdlID0gdW5kb1JlZG9TdGFjay5zZXRNb2RlTWVyZ2U7XG4gICAgdmlld01vZGVsLnNldFVuZG9Nb2RlT25jZSA9IHVuZG9SZWRvU3RhY2suc2V0TW9kZU9uY2U7XG4gICAgdW5kb1JlZG9TdGFjay5zZXRNb2RlSWdub3JlKCk7XG4gICAgdW5kb1JlZG9TdGFjay5zZXRVbmRvQWN0aW9uTWFrZXIodW5kb3NlcmlhbGl6ZXIubWFrZVVuZG9BY3Rpb24uYmluZCh1bmRlZmluZWQsIHZpZXdNb2RlbC5jb250ZW50KSk7XG4gICAgdW5kb3NlcmlhbGl6ZXIud2F0Y2hFbmFibGVkKHRydWUpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdXNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdW5kb1JlZG9TdGFjay5zZXRNb2RlSWdub3JlKCk7XG4gICAgICB9LFxuICAgICAgcnVuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdW5kb1JlZG9TdGFjay5zZXRNb2RlT25jZSgpO1xuICAgICAgfSxcbiAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB1bmRvUmVkb1N0YWNrLnNldE1vZGVPbmNlKCk7XG4gICAgICB9LFxuICAgICAgZGlzcG9zZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZpZXdNb2RlbC5jb250ZW50TGlzdGVuZXJzKHZpZXdNb2RlbC5jb250ZW50TGlzdGVuZXJzKCkgLSAyKTtcbiAgICAgICAgdW5kb3NlcmlhbGl6ZXIud2F0Y2hFbmFibGVkKGZhbHNlKTtcbiAgICAgICAgdW5kb1JlZG9TdGFjay5kaXNwb3NlKCk7XG4gICAgICB9XG4gICAgfTtcblxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBhZGRVbmRvU3RhY2tFeHRlbnNpb25NYWtlcjsiXX0=","deps":{"./undoserializer.js":"/Users/denea/mosaico/src/js/undomanager/undoserializer.js","./../../../bower_components/knockout-undomanager/knockout-undomanager.js":"/Users/denea/mosaico/bower_components/knockout-undomanager/knockout-undomanager.js"}},"/Users/denea/mosaico/bower_components/evol-colorpicker/js/evol.colorpicker.min.js":{"file":"/Users/denea/mosaico/bower_components/evol-colorpicker/js/evol.colorpicker.min.js","source":"!function(e){var t=0,o=window.navigator.userAgent,n=o.indexOf(\"MSIE \")>0,i=n?\"-ie\":\"\",a=n?!1:/mozilla/.test(o.toLowerCase())&&!/webkit/.test(o.toLowerCase()),r=[],l=[\"ffffff\",\"000000\",\"eeece1\",\"1f497d\",\"4f81bd\",\"c0504d\",\"9bbb59\",\"8064a2\",\"4bacc6\",\"f79646\"],s=[\"f2f2f2\",\"7f7f7f\",\"ddd9c3\",\"c6d9f0\",\"dbe5f1\",\"f2dcdb\",\"ebf1dd\",\"e5e0ec\",\"dbeef3\",\"fdeada\",\"d8d8d8\",\"595959\",\"c4bd97\",\"8db3e2\",\"b8cce4\",\"e5b9b7\",\"d7e3bc\",\"ccc1d9\",\"b7dde8\",\"fbd5b5\",\"bfbfbf\",\"3f3f3f\",\"938953\",\"548dd4\",\"95b3d7\",\"d99694\",\"c3d69b\",\"b2a2c7\",\"92cddc\",\"fac08f\",\"a5a5a5\",\"262626\",\"494429\",\"17365d\",\"366092\",\"953734\",\"76923c\",\"5f497a\",\"31859b\",\"e36c09\",\"7f7f7f\",\"0c0c0c\",\"1d1b10\",\"0f243e\",\"244061\",\"632423\",\"4f6128\",\"3f3151\",\"205867\",\"974806\"],d=[\"c00000\",\"ff0000\",\"ffc000\",\"ffff00\",\"92d050\",\"00b050\",\"00b0f0\",\"0070c0\",\"002060\",\"7030a0\"],u=[[\"003366\",\"336699\",\"3366cc\",\"003399\",\"000099\",\"0000cc\",\"000066\"],[\"006666\",\"006699\",\"0099cc\",\"0066cc\",\"0033cc\",\"0000ff\",\"3333ff\",\"333399\"],[\"669999\",\"009999\",\"33cccc\",\"00ccff\",\"0099ff\",\"0066ff\",\"3366ff\",\"3333cc\",\"666699\"],[\"339966\",\"00cc99\",\"00ffcc\",\"00ffff\",\"33ccff\",\"3399ff\",\"6699ff\",\"6666ff\",\"6600ff\",\"6600cc\"],[\"339933\",\"00cc66\",\"00ff99\",\"66ffcc\",\"66ffff\",\"66ccff\",\"99ccff\",\"9999ff\",\"9966ff\",\"9933ff\",\"9900ff\"],[\"006600\",\"00cc00\",\"00ff00\",\"66ff99\",\"99ffcc\",\"ccffff\",\"ccccff\",\"cc99ff\",\"cc66ff\",\"cc33ff\",\"cc00ff\",\"9900cc\"],[\"003300\",\"009933\",\"33cc33\",\"66ff66\",\"99ff99\",\"ccffcc\",\"ffffff\",\"ffccff\",\"ff99ff\",\"ff66ff\",\"ff00ff\",\"cc00cc\",\"660066\"],[\"333300\",\"009900\",\"66ff33\",\"99ff66\",\"ccff99\",\"ffffcc\",\"ffcccc\",\"ff99cc\",\"ff66cc\",\"ff33cc\",\"cc0099\",\"993399\"],[\"336600\",\"669900\",\"99ff33\",\"ccff66\",\"ffff99\",\"ffcc99\",\"ff9999\",\"ff6699\",\"ff3399\",\"cc3399\",\"990099\"],[\"666633\",\"99cc00\",\"ccff33\",\"ffff66\",\"ffcc66\",\"ff9966\",\"ff6666\",\"ff0066\",\"d60094\",\"993366\"],[\"a58800\",\"cccc00\",\"ffff00\",\"ffcc00\",\"ff9933\",\"ff6600\",\"ff0033\",\"cc0066\",\"660033\"],[\"996633\",\"cc9900\",\"ff9900\",\"cc6600\",\"ff3300\",\"ff0000\",\"cc0000\",\"990033\"],[\"663300\",\"996600\",\"cc3300\",\"993300\",\"990000\",\"800000\",\"993333\"]],c=\"#0000ffff\",f=function(e){var t=e.toString(16);return 1==t.length&&(t=\"0\"+t),t},p=function(e){return f(Number(e))},b=function(e){var t=f(e);return t+t+t},m=function(e){if(e.length>10){var t=1+e.indexOf(\"(\"),o=e.indexOf(\")\"),n=e.substring(t,o).split(\",\");return[\"#\",p(n[0]),p(n[1]),p(n[2])].join(\"\")}return e};e.widget(\"evol.colorpicker\",{version:\"3.2.1\",options:{color:null,showOn:\"both\",hideButton:!1,displayIndicator:!0,transparentColor:!1,history:!0,defaultPalette:\"theme\",strings:\"Theme Colors,Standard Colors,Web Colors,Theme Colors,Back to Palette,History,No history yet.\"},_active:!1,_create:function(){var o=this;switch(this._paletteIdx=\"theme\"==this.options.defaultPalette?1:2,this._id=\"evo-cp\"+t++,this._enabled=!0,this.options.showOn=this.options.hideButton?\"focus\":this.options.showOn,this.element.get(0).tagName){case\"INPUT\":var r=this.options.color,l=this.element,s=(\"focus\"===this.options.showOn?\"\":\"evo-pointer \")+\"evo-colorind\"+(a?\"-ff\":i)+(this.options.hideButton?\" evo-hidden-button\":\"\"),d=\"\";if(this._isPopup=!0,this._palette=null,null!==r)l.val(r);else{var u=l.val();\"\"!==u&&(r=this.options.color=u)}r===c?s+=\" evo-transparent\":d=null!==r?\"background-color:\"+r:\"\",l.addClass(\"colorPicker \"+this._id).wrap('<div style=\"width:'+(this.options.hideButton?this.element.width():this.element.width()+32)+\"px;\"+(n?\"margin-bottom:-21px;\":\"\")+(a?\"padding:1px 0;\":\"\")+'\"></div>').after('<div class=\"'+s+'\" style=\"'+d+'\"></div>').on(\"keyup onpaste\",function(){var t=e(this).val();t!=o.options.color&&o._setValue(t,!0)});var f=this.options.showOn;(\"both\"===f||\"focus\"===f)&&l.on(\"focus\",function(){o.showPalette()}),(\"both\"===f||\"button\"===f)&&l.next().on(\"click\",function(e){return e.stopPropagation(),o.showPalette(),!1});break;default:this._isPopup=!1,this._palette=this.element.html(this._paletteHTML()).attr(\"aria-haspopup\",\"true\"),this._bindColors()}if(this.options.history&&(r&&this._add2History(r),this.options.initialHistory)){var p=this.options.initialHistory;for(var b in p)this._add2History(p[b])}},_paletteHTML:function(){var e=this._paletteIdx=Math.abs(this._paletteIdx),t=this.options,o=t.strings.split(\",\"),n='<div class=\"evo-pop'+i+' ui-widget ui-widget-content ui-corner-all\"'+(this._isPopup?' style=\"position:absolute\"':\"\")+\"><span>\"+this[\"_paletteHTML\"+e]()+'</span><div class=\"evo-more\"><a href=\"javascript:void(0)\">'+o[1+e]+\"</a>\";return t.history&&(n+='<a href=\"javascript:void(0)\" class=\"evo-hist\">'+o[5]+\"</a>\"),n+=\"</div>\",t.displayIndicator&&(n+=this._colorIndHTML(this.options.color)+this._colorIndHTML(\"\")),n+=\"</div>\"},_colorIndHTML:function(e){var t=n?\"evo-colorbox-ie \":\"\",o=\"\";return e?e===c?t+=\"evo-transparent\":o=\"background-color:\"+e:o=\"display:none\",'<div class=\"evo-color\" style=\"float:left\"><div style=\"'+o+'\" class=\"'+t+'\"></div><span>'+(e?e:\"\")+\"</span></div>\"},_paletteHTML1:function(){for(var e=this.options,t=e.strings.split(\",\"),o='<td style=\"background-color:#',a=n?'\"><div style=\"width:2px;\"></div></td>':'\"><span/></td>',r='<tr><th colspan=\"10\" class=\"ui-widget-content\">',u='<table class=\"evo-palette'+i+'\">'+r+t[0]+\"</th></tr><tr>\",c=0;10>c;c++)u+=o+l[c]+a;for(u+=\"</tr>\",n||(u+='<tr><th colspan=\"10\"></th></tr>'),u+='<tr class=\"top\">',c=0;10>c;c++)u+=o+s[c]+a;for(var f=1;4>f;f++)for(u+='</tr><tr class=\"in\">',c=0;10>c;c++)u+=o+s[10*f+c]+a;for(u+='</tr><tr class=\"bottom\">',c=40;50>c;c++)u+=o+s[c]+a;for(u+=\"</tr>\"+r,e.transparentColor&&(u+='<div class=\"evo-transparent evo-tr-box\"></div>'),u+=t[1]+\"</th></tr><tr>\",c=0;10>c;c++)u+=o+d[c]+a;return u+=\"</tr></table>\"},_paletteHTML2:function(){for(var e,t,o='<td style=\"background-color:#',a=n?'\"><div style=\"width:5px;\"></div></td>':'\"><span/></td>',r='<table class=\"evo-palette2'+i+'\"><tr>',l=\"</tr></table>\",s='<div class=\"evo-palcenter\">',d=0,c=u.length;c>d;d++){s+=r;var f=u[d];for(e=0,t=f.length;t>e;e++)s+=o+f[e]+a;s+=l}s+='<div class=\"evo-sep\"/>';var p=\"\";for(s+=r,e=255;e>10;e-=10)s+=o+b(e)+a,e-=10,p+=o+b(e)+a;return s+=l+r+p+l+\"</div>\"},_switchPalette:function(t){if(this._enabled){var o,n,i,a=this.options.strings.split(\",\");if(e(t).hasClass(\"evo-hist\")){var l=['<table class=\"evo-palette\"><tr><th class=\"ui-widget-content\">',a[5],\"</th></tr></tr></table>\",'<div class=\"evo-cHist\">'];if(0===r.length)l.push(\"<p>&nbsp;\",a[6],\"</p>\");else for(var s=r.length-1;s>-1;s--)9===r[s].length?l.push('<div class=\"evo-transparent\"></div>'):l.push('<div style=\"background-color:',r[s],'\"></div>');l.push(\"</div>\"),o=-this._paletteIdx,n=l.join(\"\"),i=a[4]}else this._paletteIdx<0?(o=-this._paletteIdx,this._palette.find(\".evo-hist\").show()):o=2==this._paletteIdx?1:2,n=this[\"_paletteHTML\"+o](),i=a[o+1],this._paletteIdx=o;this._paletteIdx=o;var d=this._palette.find(\".evo-more\").prev().html(n).end().children().eq(0).html(i);0>o&&d.next().hide()}},_downOrUpPositioning:function(){for(var e=this.element,t=0;null!==e&&100>t;){if(\"visible\"!=e.css(\"overflow\")){var o=this._palette.offset().top+this._palette.height(),n=e.offset().top+e.height(),i=this._palette.offset().top-this._palette.height()-this.element.outerHeight(),a=e.offset().top,r=o>n&&i>a;r?this._palette.css({bottom:this.element.outerHeight()+\"px\"}):this._palette.css({bottom:\"auto\"});break}if(\"HTML\"==e[0].tagName)break;e=e.offsetParent(),t++}},showPalette:function(){if(this._enabled&&(this._active=!0,e(\".colorPicker\").not(\".\"+this._id).colorpicker(\"hidePalette\"),null===this._palette)){this._palette=this.element.next().after(this._paletteHTML()).next().on(\"click\",function(e){return e.stopPropagation(),!1}),this._bindColors();var t=this;this._isPopup&&(this._downOrUpPositioning(),e(document.body).on(\"click.\"+t._id,function(e){e.target!=t.element.get(0)&&t.hidePalette()}).on(\"keyup.\"+t._id,function(e){27===e.keyCode&&t.hidePalette()}))}return this},hidePalette:function(){if(this._isPopup&&this._palette){e(document.body).off(\"click.\"+this._id);var t=this;this._palette.off(\"mouseover click\",\"td,.evo-transparent\").fadeOut(function(){t._palette.remove(),t._palette=t._cTxt=null}).find(\".evo-more a\").off(\"click\")}return this},_bindColors:function(){var t=this,o=this.options,n=this._palette.find(\"div.evo-color\"),i=o.history?\"td,.evo-cHist>div\":\"td\";o.transparentColor&&(i+=\",.evo-transparent\"),this._cTxt1=n.eq(0).children().eq(0),this._cTxt2=n.eq(1).children().eq(0),this._palette.on(\"click\",i,function(){if(t._enabled){var o=e(this);t._setValue(o.hasClass(\"evo-transparent\")?c:m(o.attr(\"style\").substring(17))),t._active=!1}}).on(\"mouseover\",i,function(){if(t._enabled){var o=e(this),n=o.hasClass(\"evo-transparent\")?c:m(o.attr(\"style\").substring(17));t.options.displayIndicator&&t._setColorInd(n,2),t._active&&t.element.trigger(\"mouseover.color\",n)}}).find(\".evo-more a\").on(\"click\",function(){t._switchPalette(this)})},val:function(e){return\"undefined\"==typeof e?this.options.color:(this._setValue(e),this)},_setValue:function(e,t){e=e.replace(/ /g,\"\"),this.options.color=e,this._isPopup?(t||this.hidePalette(),this._setBoxColor(this.element.val(e).next(),e)):this._setColorInd(e,1),this.options.history&&this._paletteIdx>0&&this._add2History(e),this.element.trigger(\"change.color\",e)},_setColorInd:function(e,t){var o=this[\"_cTxt\"+t];this._setBoxColor(o,e),o.next().html(e)},_setBoxColor:function(e,t){t===c?e.addClass(\"evo-transparent\").removeAttr(\"style\"):e.removeClass(\"evo-transparent\").attr(\"style\",\"background-color:\"+t)},_setOption:function(e,t){\"color\"==e?this._setValue(t,!0):this.options[e]=t},_add2History:function(e){for(var t=r.length,o=0;t>o;o++)if(e==r[o])return;t>27&&r.shift(),r.push(e)},clear:function(){this.hidePalette().val(\"\")},enable:function(){var e=this.element;return this._isPopup?e.removeAttr(\"disabled\"):e.css({opacity:\"1\",\"pointer-events\":\"auto\"}),\"focus\"!==this.options.showOn&&this.element.next().addClass(\"evo-pointer\"),e.removeAttr(\"aria-disabled\"),this._enabled=!0,this},disable:function(){var e=this.element;return this._isPopup?e.attr(\"disabled\",\"disabled\"):(this.hidePalette(),e.css({opacity:\"0.3\",\"pointer-events\":\"none\"})),\"focus\"!==this.options.showOn&&this.element.next().removeClass(\"evo-pointer\"),e.attr(\"aria-disabled\",\"true\"),this._enabled=!1,this},isDisabled:function(){return!this._enabled},destroy:function(){e(document.body).off(\"click.\"+this._id),this._palette&&(this._palette.off(\"mouseover click\",\"td,.evo-cHist>div,.evo-transparent\").find(\".evo-more a\").off(\"click\"),this._isPopup&&this._palette.remove(),this._palette=this._cTxt=null),this._isPopup&&this.element.next().off(\"click\").remove().end().off(\"focus\").unwrap(),this.element.removeClass(\"colorPicker \"+this.id).empty(),e.Widget.prototype.destroy.call(this)}})}(jQuery);\n//# sourceMappingURL=data:application/json;base64,","deps":{}},"/Users/denea/mosaico/src/js/bindings/colorpicker.js":{"file":"/Users/denea/mosaico/src/js/bindings/colorpicker.js","source":"(function (global){\n\"use strict\";require(\"./../../../bower_components/evol-colorpicker/js/evol.colorpicker.min.js\");var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),kojqui=(typeof window !== \"undefined\" ? window['kojqui'] : typeof global !== \"undefined\" ? global['kojqui'] : null),ColorPicker=function(){kojqui.BindingHandler.call(this,\"colorpicker\")};ColorPicker.prototype=kojqui.utils.createObject(kojqui.BindingHandler.prototype),ColorPicker.prototype.constructor=ColorPicker,ColorPicker.prototype.init=function(e,t,o){var a=t(),i=a.color,n=ko.computed({read:i,write:i,disposeWhenNodeIsRemoved:e}),l=function(){return n};ko.bindingHandlers.value.init(e,l,o);var r=function(e,t){\"undefined\"!=typeof t&&n(t)};$(e).on(\"change.color\",r),ko.computed({read:function(){var t={color:ko.utils.unwrapObservable(n),showOn:\"button\"};for(var o in a)\"color\"!==o&&a.hasOwnProperty(o)&&(t[o]=ko.utils.unwrapObservable(a[o]));$(e).colorpicker(t)},disposeWhenNodeIsRemoved:e}),ko.utils.domNodeDisposal.addDisposeCallback(e,function(){$(e).off(\"change.color\",r),$(e).colorpicker(\"destroy\")})},kojqui.utils.register(ColorPicker);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9jb2xvcnBpY2tlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFHQSxTQUFRLG1CQUVSLElBQUksR0FBSSxRQUFRLFVBQ1osR0FBSyxRQUFRLFlBQ2IsT0FBUyxRQUFRLHFCQUdqQixZQUFjLFdBQ2hCLE9BQU8sZUFBZSxLQUFLLEtBQU0sZUFFbkMsYUFBWSxVQUFZLE9BQU8sTUFBTSxhQUFhLE9BQU8sZUFBZSxXQUN4RSxZQUFZLFVBQVUsWUFBYyxZQUVwQyxZQUFZLFVBQVUsS0FBTyxTQUFTLEVBQVMsRUFBZSxHQUM1RCxHQUFJLEdBQUssSUFDTCxFQUFRLEVBQUcsTUFJWCxFQUFRLEdBQUcsVUFDYixLQUFNLEVBQ04sTUFBTyxFQUNQLHlCQUEwQixJQUV4QixFQUFRLFdBQ1YsTUFBTyxHQUdULElBQUcsZ0JBQWdCLE1BQU0sS0FBSyxFQUFTLEVBQU8sRUFFOUMsSUFBSSxHQUFtQixTQUFTLEVBQU8sR0FDaEIsbUJBQVYsSUFBdUIsRUFBTSxHQUUxQyxHQUFFLEdBQVMsR0FBRyxlQUFnQixHQUU5QixHQUFHLFVBQ0QsS0FBTSxXQUNKLEdBQUksSUFDRixNQUFPLEdBQUcsTUFBTSxpQkFBaUIsR0FDakMsT0FBUSxTQUVWLEtBQUssR0FBSSxLQUFRLEdBQ0YsVUFBVCxHQUFvQixFQUFHLGVBQWUsS0FBTyxFQUFJLEdBQVEsR0FBRyxNQUFNLGlCQUFpQixFQUFHLElBQzVGLEdBQUUsR0FBUyxZQUFZLElBRXpCLHlCQUEwQixJQUc1QixHQUFHLE1BQU0sZ0JBQWdCLG1CQUFtQixFQUFTLFdBQ25ELEVBQUUsR0FBUyxJQUFJLGVBQWdCLEdBQy9CLEVBQUUsR0FBUyxZQUFZLGNBSTNCLE9BQU8sTUFBTSxTQUFTIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIGdsb2JhbCBnbG9iYWw6IGZhbHNlICovXG5cbnJlcXVpcmUoXCJldm9sLWNvbG9ycGlja2VyXCIpO1xuXG52YXIgJCA9IHJlcXVpcmUoXCJqcXVlcnlcIik7XG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG52YXIga29qcXVpID0gcmVxdWlyZShcImtub2Nrb3V0LWpxdWVyeXVpXCIpO1xuXG5cbnZhciBDb2xvclBpY2tlciA9IGZ1bmN0aW9uKCkge1xuICBrb2pxdWkuQmluZGluZ0hhbmRsZXIuY2FsbCh0aGlzLCAnY29sb3JwaWNrZXInKTtcbn07XG5Db2xvclBpY2tlci5wcm90b3R5cGUgPSBrb2pxdWkudXRpbHMuY3JlYXRlT2JqZWN0KGtvanF1aS5CaW5kaW5nSGFuZGxlci5wcm90b3R5cGUpO1xuQ29sb3JQaWNrZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ29sb3JQaWNrZXI7XG5cbkNvbG9yUGlja2VyLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24oZWxlbWVudCwgdmFsdWVBY2Nlc3NvciwgYWxsQmluZGluZ3MpIHtcbiAgdmFyIHZhID0gdmFsdWVBY2Nlc3NvcigpO1xuICB2YXIgdmFsdWUgPSB2YS5jb2xvcjtcblxuICAvLyBJbiBvcmRlciB0byBoYXZlIGEgY29ycmVjdCBkZXBlbmRlbmN5IHRyYWNraW5nIGluIFwiaWZTdWJzXCIgd2UgaGF2ZSB0byBlbnN1cmUgd2UgdXNlIGEgc2luZ2xlIGNvbXB1dGVyIGZvciBlYWNoIGVkaXRhYmxlXG4gIC8vIHByb3BlcnR5LiBHaXZlbiB0aGlzIGJpbmRpbmcgbmVlZHMgMiBvZiB0aGVtLCB3ZSBjcmVhdGUgYSBjb21wdXRlZCBzbyB0byBcInByb3h5XCIgdGhlIGRlcGVuZGVuY2llcy5cbiAgdmFyIG5ld0RPID0ga28uY29tcHV0ZWQoe1xuICAgIHJlYWQ6IHZhbHVlLFxuICAgIHdyaXRlOiB2YWx1ZSxcbiAgICBkaXNwb3NlV2hlbk5vZGVJc1JlbW92ZWQ6IGVsZW1lbnRcbiAgfSk7XG4gIHZhciBuZXdWQSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBuZXdETztcbiAgfTtcblxuICBrby5iaW5kaW5nSGFuZGxlcnMudmFsdWUuaW5pdChlbGVtZW50LCBuZXdWQSwgYWxsQmluZGluZ3MpO1xuXG4gIHZhciBjaGFuZ2VQcm9wYWdhdG9yID0gZnVuY3Rpb24oZXZlbnQsIGNvbG9yKSB7XG4gICAgaWYgKHR5cGVvZiBjb2xvciAhPT0gJ3VuZGVmaW5lZCcpIG5ld0RPKGNvbG9yKTtcbiAgfTtcbiAgJChlbGVtZW50KS5vbignY2hhbmdlLmNvbG9yJywgY2hhbmdlUHJvcGFnYXRvcik7XG5cbiAga28uY29tcHV0ZWQoe1xuICAgIHJlYWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG9wdCA9IHtcbiAgICAgICAgY29sb3I6IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUobmV3RE8pLFxuICAgICAgICBzaG93T246ICdidXR0b24nXG4gICAgICB9O1xuICAgICAgZm9yICh2YXIgcHJvcCBpbiB2YSlcbiAgICAgICAgaWYgKHByb3AgIT09ICdjb2xvcicgJiYgdmEuaGFzT3duUHJvcGVydHkocHJvcCkpIG9wdFtwcm9wXSA9IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUodmFbcHJvcF0pO1xuICAgICAgJChlbGVtZW50KS5jb2xvcnBpY2tlcihvcHQpO1xuICAgIH0sXG4gICAgZGlzcG9zZVdoZW5Ob2RlSXNSZW1vdmVkOiBlbGVtZW50XG4gIH0pO1xuXG4gIGtvLnV0aWxzLmRvbU5vZGVEaXNwb3NhbC5hZGREaXNwb3NlQ2FsbGJhY2soZWxlbWVudCwgZnVuY3Rpb24oKSB7XG4gICAgJChlbGVtZW50KS5vZmYoJ2NoYW5nZS5jb2xvcicsIGNoYW5nZVByb3BhZ2F0b3IpO1xuICAgICQoZWxlbWVudCkuY29sb3JwaWNrZXIoJ2Rlc3Ryb3knKTtcbiAgfSk7XG5cbn07XG5rb2pxdWkudXRpbHMucmVnaXN0ZXIoQ29sb3JQaWNrZXIpOyJdfQ==","deps":{"./../../../bower_components/evol-colorpicker/js/evol.colorpicker.min.js":"/Users/denea/mosaico/bower_components/evol-colorpicker/js/evol.colorpicker.min.js"}},"/Users/denea/mosaico/src/js/ko-bindings.js":{"file":"/Users/denea/mosaico/src/js/ko-bindings.js","source":"\"use strict\";require(\"./../../bower_components/knockout-sortable/build/knockout-sortable.min.js\"),require(\"./bindings/jqueryui-spinner.js\"),require(\"./bindings/jqueryui-tabs.js\"),require(\"./bindings/colorpicker.js\"),require(\"./bindings/blocks.js\"),require(\"./bindings/csstext.js\"),require(\"./bindings/bind-iframe.js\"),require(\"./bindings/droppable.js\"),require(\"./bindings/fileupload.js\"),require(\"./bindings/virtuals.js\"),require(\"./bindings/wysiwygs.js\"),require(\"./bindings/scrollfix.js\"),require(\"./bindings/if-subs.js\"),require(\"./bindings/extsortables.js\"),require(\"./bindings/eventable.js\"),require(\"./bindings/tooltips.js\"),require(\"./bindings/extender-pagination.js\"),require(\"./bindings/validated-value.js\"),require(\"./bindings/scrollintoview.js\");\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtvLWJpbmRpbmdzLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiXSwibWFwcGluZ3MiOiJBQUFBLFlBRUFBLFNBQVEscUJBRVJBLFFBQVEsa0NBQ1JBLFFBQVEsK0JBQ1JBLFFBQVEsNkJBQ1JBLFFBQVEsd0JBQ1JBLFFBQVEseUJBQ1JBLFFBQVEsNkJBQ1JBLFFBQVEsMkJBQ1JBLFFBQVEsNEJBQ1JBLFFBQVEsMEJBQ1JBLFFBQVEsMEJBQ1JBLFFBQVEsMkJBQ1JBLFFBQVEseUJBQ1JBLFFBQVEsOEJBQ1JBLFFBQVEsMkJBQ1JBLFFBQVEsMEJBQ1JBLFFBQVEscUNBQ1JBLFFBQVEsaUNBQ1JBLFFBQVEiLCJmaWxlIjoib3V0LmpzLm1hcCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5yZXF1aXJlKFwia25vY2tvdXQtc29ydGFibGVcIik7XG5cbnJlcXVpcmUoXCIuL2JpbmRpbmdzL2pxdWVyeXVpLXNwaW5uZXIuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9qcXVlcnl1aS10YWJzLmpzXCIpO1xucmVxdWlyZShcIi4vYmluZGluZ3MvY29sb3JwaWNrZXIuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9ibG9ja3MuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9jc3N0ZXh0LmpzXCIpO1xucmVxdWlyZShcIi4vYmluZGluZ3MvYmluZC1pZnJhbWUuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9kcm9wcGFibGUuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9maWxldXBsb2FkLmpzXCIpO1xucmVxdWlyZShcIi4vYmluZGluZ3MvdmlydHVhbHMuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy93eXNpd3lncy5qc1wiKTtcbnJlcXVpcmUoXCIuL2JpbmRpbmdzL3Njcm9sbGZpeC5qc1wiKTtcbnJlcXVpcmUoXCIuL2JpbmRpbmdzL2lmLXN1YnMuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9leHRzb3J0YWJsZXMuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9ldmVudGFibGUuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy90b29sdGlwcy5qc1wiKTtcbnJlcXVpcmUoXCIuL2JpbmRpbmdzL2V4dGVuZGVyLXBhZ2luYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy92YWxpZGF0ZWQtdmFsdWUuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9zY3JvbGxpbnRvdmlldy5qc1wiKTsiXX0=","deps":{"./../../bower_components/knockout-sortable/build/knockout-sortable.min.js":"/Users/denea/mosaico/bower_components/knockout-sortable/build/knockout-sortable.min.js","./bindings/csstext.js":"/Users/denea/mosaico/src/js/bindings/csstext.js","./bindings/droppable.js":"/Users/denea/mosaico/src/js/bindings/droppable.js","./bindings/extender-pagination.js":"/Users/denea/mosaico/src/js/bindings/extender-pagination.js","./bindings/jqueryui-spinner.js":"/Users/denea/mosaico/src/js/bindings/jqueryui-spinner.js","./bindings/jqueryui-tabs.js":"/Users/denea/mosaico/src/js/bindings/jqueryui-tabs.js","./bindings/blocks.js":"/Users/denea/mosaico/src/js/bindings/blocks.js","./bindings/bind-iframe.js":"/Users/denea/mosaico/src/js/bindings/bind-iframe.js","./bindings/fileupload.js":"/Users/denea/mosaico/src/js/bindings/fileupload.js","./bindings/virtuals.js":"/Users/denea/mosaico/src/js/bindings/virtuals.js","./bindings/scrollfix.js":"/Users/denea/mosaico/src/js/bindings/scrollfix.js","./bindings/if-subs.js":"/Users/denea/mosaico/src/js/bindings/if-subs.js","./bindings/eventable.js":"/Users/denea/mosaico/src/js/bindings/eventable.js","./bindings/validated-value.js":"/Users/denea/mosaico/src/js/bindings/validated-value.js","./bindings/tooltips.js":"/Users/denea/mosaico/src/js/bindings/tooltips.js","./bindings/scrollintoview.js":"/Users/denea/mosaico/src/js/bindings/scrollintoview.js","./bindings/colorpicker.js":"/Users/denea/mosaico/src/js/bindings/colorpicker.js","./bindings/extsortables.js":"/Users/denea/mosaico/src/js/bindings/extsortables.js","./bindings/wysiwygs.js":"/Users/denea/mosaico/src/js/bindings/wysiwygs.js"}},"/Users/denea/mosaico/src/js/converter/checkmodel.js":{"file":"/Users/denea/mosaico/src/js/converter/checkmodel.js","source":"\"use strict\";var console=require(\"./../../../bower_components/console-browserify/index.js\"),checkModel=function(e,t,o,n,i){var a,r,l,s=0;if(\"undefined\"==typeof i&&(i=!1),\"undefined\"!=typeof t&&\"function\"==typeof t.splice)for(a={},r=0;r<t.length;r++)a[t[r].type]=t[r];else a=t;for(var d in e)if(e.hasOwnProperty(d))if(l=\"undefined\"!=typeof n?n+\".\"+d:d,o.hasOwnProperty(d))if(typeof o[d]!=typeof e[d])null!==o[d]&&null!==e[d]&&(\"string\"==typeof o[d]?String(e[d])!=e[d]&&(console.log(\"TODO Different type 1 \",l,typeof o[d],typeof e[d],o[d],e[d]),s=Math.max(s,2)):\"number\"==typeof o[d]?Number(e[d])!=e[d]&&(console.log(\"TODO Different type 2 \",l,typeof o[d],typeof e[d],o[d],e[d]),s=Math.max(s,2)):(console.log(\"TODO Different type 3 \",l,typeof o[d],typeof e[d],o[d],e[d]),s=Math.max(s,2)));else if(\"object\"==typeof e[d])if(null!==e[d])if(\"undefined\"!=typeof e[d].splice){if(e[d].length>0)if(o[d].length>0){var u=0;for(r=0;r<o[d].length;r++)if(\"string\"==typeof o[d][r].type){for(;u<e[d].length&&e[d][u].type!==o[d][r].type;)console.log(\"ignoring \",l,e[d][u].type,\" block type in reference not found in model\"),u++;if(u>=e[d].length){console.log(\"WARN cannot find \",l,o[d][r].type,\" block in reference\"),s=Math.max(s,2);break}s=Math.max(s,checkModel(e[d][u],void 0,o[d][r],l+\"[\"+r+\".\"+o[d][r].type+\"]\"))}}else for(r=0;r<e[d].length;r++)\"string\"!=typeof e[d][r].type?(console.log(\"TODO found an object with no type\",l,e[d][r]),s=Math.max(s,2)):a.hasOwnProperty(e[d][r].type)?s=Math.max(s,checkModel(a[e[d][r].type],a,e[d][r],l+\"[\"+r+\".\"+e[d][r].type+\"]\")):(console.warn(\"TODO the model uses a block type not defined by the template. REMOVING IT!!\",l,e[d][r]),e[d].splice(r,1),r--,s=Math.max(s,2))}else null===o[d]?i?(console.log(\"WARN Null object in model \",l,\"instead of\",e[d],\"deleting it\"),s=Math.max(s,2),delete e[d]):(console.log(\"INFO Null object in model \",l,\"instead of\",e[d],\"cloning it from the reference\"),s=Math.max(s,1),o[d]=e[d]):s=Math.max(s,checkModel(e[d],a,o[d],l,i));else null!==o[d]&&(console.log(\"TODO Null in reference but not null in model\",l,o[d]),s=Math.max(s,2));else\"string\"!=typeof e[d]&&\"boolean\"!=typeof e[d]&&\"number\"!=typeof e[d]&&(console.log(\"TODO unsupported type\",l,typeof e[d]),s=Math.max(s,2));else i?(console.warn(\"WARN Property \",l,\"found in model is not defined by template: removing it!\"),s=Math.max(s,2),delete e[d]):(console.log(\"INFO Property \",l,\"missing in model, cloning from reference!\"),s=Math.max(s,1),o[d]=e[d]);return i||(s=Math.max(s,checkModel(o,t,e,\"undefined\"!=typeof n?n+\"!R\":\"!R\",!0))),s};module.exports=checkModel;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js"}},"/Users/denea/mosaico/src/js/converter/editor.js":{"file":"/Users/denea/mosaico/src/js/converter/editor.js","source":"\"use strict\";var console=require(\"./../../../bower_components/console-browserify/index.js\"),elaborateDeclarations=require(\"./declarations.js\"),utils=require(\"./utils.js\"),modelDef=require(\"./model.js\"),_getOptionsObject=function(e){for(var t=e.split(\"|\"),o={},n=0;n<t.length;n++){var i=t[n].split(\"=\");o[i[0]]=i.length>1?i[1]:i[0]}return o},_filterProps=function(e,t,o){var n=[];for(var i in e)if(!i.match(/^customStyle$/)&&!i.match(/^_/)&&e.hasOwnProperty(i)){var a=null!==e[i]&&\"undefined\"!=typeof e[i]._category&&\"style\"==e[i]._category;if(\"id\"==i||\"type\"==i||i.match(/Blocks$/));else if(\"styler\"==t)(a||o>0)&&n.push(i);else if(\"edit\"==t){var r=null!==e[i]&&\"undefined\"!=typeof e[i]._category&&\"content\"==e[i]._category&&(\"undefined\"==typeof e[i]._context||\"block\"!=e[i]._context);r&&n.push(i)}else\"undefined\"==typeof t&&n.push(i)}return n},_propInput=function(e,t,o,n,i){var a,r=\"\";if(null!==e&&\"undefined\"!=typeof e._widget&&(a=e._widget),\"undefined\"==typeof a)throw\"Unknown data type for \"+t;var l=\"focusable: true\";if(\"edit\"==n&&(l+=\", event: { focus: function(ui, event) { $($element).click(); } } \"),r+='<label class=\"data-'+a+'\"'+(\"boolean\"==a?\" data-bind=\\\"event: { mousedown: function(ui, evt) { if (evt.button == 0) { var input = $($element).find('input'); var ch = input.prop('checked'); setTimeout(function() { input.click(); input.prop('checked', !ch); input.trigger('change'); }, 0); } } }, click: function(ui, evt) { evt.preventDefault(); }, clickBubble: false\\\"\":\"\")+\">\",\"undefined\"!=typeof i&&\"undefined\"!=typeof i[a]){var s=i[a],d={};if(\"undefined\"!=typeof s.parameters)for(var u in s.parameters)s.parameters.hasOwnProperty(u)&&\"undefined\"!=typeof e[\"_\"+u]&&(d[u]=e[\"_\"+u]);r+=s.html(o,l,d)}else if(\"boolean\"==a)r+='<input type=\"checkbox\" value=\"nothing\" data-bind=\"checked: '+o+\", \"+l+'\" />',r+='<span class=\"checkbox-replacer\" ></span>';else if(\"color\"==a)r+='<input size=\"7\" type=\"text\" data-bind=\"colorpicker: { color: '+o+\", strings: $root.t('Theme Colors,Standard Colors,Web Colors,Theme Colors,Back to Palette,History,No history yet.') }, \"+\", \"+l+'\" />';else if(\"select\"==a){if(\"undefined\"!=typeof e._options){var c=_getOptionsObject(e._options);r+='<select data-bind=\"value: '+o+\", \"+l+'\">';for(var p in c)c.hasOwnProperty(p)&&(r+='<option value=\"'+p+\"\\\" data-bind=\\\"text: $root.ut('template', '\"+utils.addSlashes(c[p])+\"')\\\">\"+c[p]+\"</option>\");r+=\"</select>\"}}else if(\"font\"==a)r+='<select type=\"text\" data-bind=\"value: '+o+\", \"+l+'\">',r+='<optgroup label=\"Sans-Serif Fonts\">',r+='<option value=\"Arial,Helvetica,sans-serif\">Arial</option>',r+=\"<option value=\\\"'Comic Sans MS',cursive,sans-serif\\\">Comic Sans MS</option>\",r+='<option value=\"Impact,Charcoal,sans-serif\">Impact</option>',r+=\"<option value=\\\"'Trebuchet MS',Helvetica,sans-serif\\\">Trebuchet MS</option>\",r+='<option value=\"Verdana,Geneva,sans-serif\">Verdana</option>',r+=\"</optgroup>\",r+='<optgroup label=\"Serif Fonts\">',r+='<option value=\"Georgia,serif\">Georgia</option>',r+=\"<option value=\\\"'Times New Roman',Times,serif\\\">Times New Roman</option>\",r+=\"</optgroup>\",r+='<optgroup label=\"Monospace Fonts\">',r+=\"<option value=\\\"'Courier New',Courier,monospace\\\">Courier New</option>\",r+=\"</optgroup>\",r+=\"</select>\";else if(\"url\"==a)r+='<div class=\"ui-textbutton\">',r+='<input class=\"ui-textbutton-input\" size=\"7\" type=\"url\" pattern=\"(mailto:.+@.+|https?://.+\\\\..+|\\\\[.*\\\\].*)\" value=\"nothing\" data-bind=\"css: { withButton: typeof $root.linkDialog !== \\'undefined\\' }, validatedValue: '+o+\", \"+l+'\" />',r+=\"<a class=\\\"ui-textbutton-button\\\" data-bind=\\\"visible: typeof $root.linkDialog !== 'undefined', click: typeof $root.linkDialog !== 'undefined' ? $root.linkDialog.bind($element.previousSibling) : false, button: { icons: { primary: 'fa fa-fw fa-ellipsis-h' }, label: 'Opzioni', text: false }\\\">Opzioni</a>\",r+=\"</div>\";else if(\"integer\"==a){var f=0,b=1e3;null!==e&&\"undefined\"!=typeof e._max&&(b=e._max),null!==e&&\"undefined\"!=typeof e._min&&(f=e._min);var m=b-f>=100?10:1,g=5*m;r+='<input class=\"number-spinner\" size=\"7\" step=\"'+m+'\" type=\"number\" value=\"-1\" data-bind=\"spinner: { min: '+f+\", max: \"+b+\", page: \"+g+\", value: \"+o+\" }, valueUpdate: ['change', 'spin']\"+\", \"+l+'\" />'}else r+='<input size=\"7\" type=\"text\" value=\"nothing\" data-bind=\"value: '+o+\", \"+l+'\" />';return r+=\"</label>\"},_getGlobalStyleProp=function(e,t,o,n){var i;return(\"object\"!=typeof t||null===t||\"undefined\"!=typeof t._widget)&&\"undefined\"!=typeof o&&\"undefined\"!=typeof n&&n.length>0&&\"object\"==typeof e&&\"undefined\"!=typeof e[n]&&(i=e[n]),i},_propEditor=function(e,t,o,n,i,a,r,l,s,d,u,c,p,f,b){if(\"undefined\"==typeof s&&(s=0),\"undefined\"!=typeof r&&\"object\"==typeof n&&null!==n&&\"undefined\"==typeof n._usecount)return console.log(\"TODO EDITOR ignoring\",a,\"property because it is not used by the template\",\"prop:\",r,\"type:\",l,\"level:\",s,e._templateName),\"\";var m,g=\"undefined\"!=typeof c?r+\"._defaultComputed\":r,h=\"\",v=g,y=1,k=1;if(\"object\"==typeof n&&null!==n&&\"undefined\"==typeof n._widget||\"undefined\"==typeof c&&(y+=1),\"undefined\"==typeof c&&\"undefined\"!=typeof d&&(k+=d),\"undefined\"!=typeof r&&p&&(h+=\"<!-- ko ifSubs: { data: \"+v+\", threshold: \"+k+\", gutter: \"+y+\" } -->\"),\"undefined\"==typeof r||null!==n&&\"undefined\"!=typeof n._name||console.log(\"TODO WARN Missing label for property \",r),\"undefined\"==typeof r&&null!==n&&\"undefined\"==typeof n._name&&console.log(\"TODO WARN Missing label for object \",n.type),\"object\"==typeof n&&null!==n&&\"undefined\"==typeof n._widget){var w=_filterProps(n,l,s),_=\"styler\"==l&&null!==n&&\"undefined\"!=typeof n.customStyle&&\"undefined\"!=typeof c,x=\"\",$=\"\";\"undefined\"!=typeof r&&\"edit\"==l&&(x=\", click: function(obj, evt) { $root.selectItem(\"+r+\", $data); return false }, clickBubble: false, css: { selecteditem: $root.isSelectedItem(\"+r+\") }, scrollIntoView: $root.isSelectedItem(\"+r+\"), \",$+=\" selectable\"),_&&($+=\" supportsCustomStyles\"),h+='<div class=\"objEdit level'+s+$+'\" data-bind=\"tooltips: {}'+x+'\">';var O=null!==n&&\"undefined\"!=typeof n._name?n._name:\"undefined\"!=typeof r?\"[\"+r+\"]\":\"\";if(_){var S=\"Stile\";\"undefined\"!=typeof i&&null!==i&&\"undefined\"!=typeof i._name?S=i._name:console.log(\"TODO missing label for theme section \",r,null!==n?n.type:\"-\"),O=\"<span class=\\\"blockSelectionMethod\\\" data-bind=\\\"text: customStyle() ? $root.ut('template', '\"+utils.addSlashes(O)+\"') : $root.ut('template', '\"+utils.addSlashes(S)+\"')\\\">Block</span>\"}else O=\"<span data-bind=\\\"text: $root.ut('template', '\"+utils.addSlashes(O)+\"')\\\">\"+O+\"</span>\";if(m=null!==n&&\"undefined\"!=typeof n._help?' title=\"'+utils.addSlashes(n._help)+\"\\\" data-bind=\\\"attr: { title: $root.ut('template', '\"+utils.addSlashes(n._help)+\"') }\\\"\":\"\",h+=\"<span\"+m+' class=\"objLabel level'+s+'\">'+O+\"</span>\",\"edit\"==l&&\"undefined\"!=typeof n._blockDescription&&(h+=\"<div class=\\\"blockDescription\\\" data-bind=\\\"html: $root.ut('template', '\"+utils.addSlashes(n._blockDescription)+\"')\\\">\"+n._blockDescription+\"</div>\"),_&&(h+='<label class=\"data-boolean blockCheck\" data-bind=\"tooltips: { }\">',h+='<input type=\"checkbox\" value=\"nothing\" data-bind=\"focusable: true, checked: customStyle\" />',h+='<span title=\"Switch between global and block level styles editing\" data-bind=\"attr: { title: $root.t(\\'Switch between global and block level styles editing\\') }\" class=\"checkbox-replacer checkbox-replacer-onoff\"></span>',h+=\"</label>\",h+=\"<!-- ko template: { name: 'customstyle', if: customStyle } --><!-- /ko -->\"),\"undefined\"!=typeof r&&(h+=\"<!-- ko with: \"+r+\" -->\",1==s&&\"undefined\"!=typeof r&&\"undefined\"!=typeof n._previewBindings&&\"undefined\"!=typeof e)){\"undefined\"!=typeof f&&(h+='<!-- ko with: $root.content() --><div class=\"objPreview\" data-bind=\"'+f+'\"></div><!-- /ko -->'),\"undefined\"!=typeof b&&(h+='<!-- ko with: $parent --><div class=\"objPreview\" data-bind=\"'+b+'\"></div><!-- /ko -->');var C=elaborateDeclarations(void 0,n._previewBindings,o,e.bind(this,a+\".\"));h+='<div class=\"objPreview\"><div class=\"objPreviewInner\" data-bind=\"'+C+'\"></div></div>'}var T;0===s&&\"undefined\"!=typeof n._previewBindings&&(T=elaborateDeclarations(void 0,n._previewBindings,o,e.bind(this,a.length>0?a+\".\":\"\")));var E,A,D,M,H=h.length;for(E=0;E<w.length;E++)A=a.length>0?a+\".\"+w[E]:w[E],(\"object\"!=typeof n[w[E]]||null===n[w[E]]||\"undefined\"!=typeof n[w[E]]._widget)&&(M=void 0,0===s&&\"theme\"==w[E]?h+=_propEditor(e,t,o,n[w[E]],D,A,w[E],l,0,d,void 0,void 0,p,f):(M=_getGlobalStyleProp(u,n[w[E]],w[E],A),h+=_propEditor(e,t,o,n[w[E]],D,A,w[E],l,s+1,d,u,M,p,f,T)));for(E=0;E<w.length;E++)A=a.length>0?a+\".\"+w[E]:w[E],\"object\"==typeof n[w[E]]&&null!==n[w[E]]&&\"undefined\"==typeof n[w[E]]._widget&&(M=void 0,0===s&&\"theme\"==w[E]?h+=_propEditor(e,t,o,n[w[E]],D,A,w[E],l,0,d,void 0,void 0,p,f):(M=_getGlobalStyleProp(u,n[w[E]],w[E],A),h+=_propEditor(e,t,o,n[w[E]],D,A,w[E],l,s+1,d,u,M,p,f,T)));var B=h.length-H;if(0===B){if(\"object\"==typeof n&&null!==n&&\"template\"==n._context)return\"\";h+='<div class=\"objEmpty\" data-bind=\"html: $root.t(\\'Selected element has no editable properties\\')\">Selected element has no editable properties</div>'}\"undefined\"!=typeof r&&(h+=\"<!-- /ko -->\"),h+=\"</div>\"}else{var j=!0;if(\"undefined\"==typeof u&&(j=!1),null===n||\"object\"!=typeof n||\"undefined\"!=typeof n._widget){var q=[];\"undefined\"!=typeof c&&q.push(\"css: { notnull: \"+r+\"() !== null }\"),m=null!==n&&\"undefined\"!=typeof n._help?' title=\"'+utils.addSlashes(n._help)+\"\\\" data-bind=\\\"attr: { title: $root.ut('template', '\"+utils.addSlashes(n._help)+\"') }\\\"\":\"\",m.length>0&&q.push(\"tooltips: {}\");var P=q.length>0?'data-bind=\"'+utils.addSlashes(q.join())+'\"':\"\";h+='<div class=\"propEditor '+(j?\"checkboxes\":\"\")+'\"'+P+\">\";var I=null!==n&&\"undefined\"!=typeof n._name?n._name:\"undefined\"!=typeof r?\"[\"+r+\"]\":\"\";I=\"<span data-bind=\\\"text: $root.ut('template', '\"+utils.addSlashes(I)+\"')\\\">\"+I+\"</span>\",h+=\"<span\"+m+' class=\"propLabel\">'+I+\"</span>\",h+='<div class=\"propInput '+(\"undefined\"!=typeof u?\"local\":\"\")+'\" data-bind=\"css: { default: '+r+'() === null }\">',h+=_propInput(n,r,g,l,t),h+=\"</div>\",\"undefined\"!=typeof c&&(h+='<div class=\"propInput global\" data-bind=\"css: { overridden: '+r+'() !== null }\">',h+=_propInput(n,r,c,l,t),h+=\"</div>\",j&&(h+='<div class=\"propCheck\"><label data-bind=\"tooltips: {}\"><input type=\"checkbox\" data-bind=\"focusable: true, click: function(evt, obj) { $root.localGlobalSwitch('+r+\", \"+c+\"); return true; }, checked: \"+r+'() !== null\">',h+='<span class=\"checkbox-replacer\" data-bind=\"css: { checked: '+r+\"() !== null }, attr: { title: $root.t('This style is specific for this block: click here to remove the custom style and revert to the theme value') }\\\"></span>\",h+=\"</label></div>\")),h+=\"</div>\"}else h+=null===n||\"object\"!=typeof n?'<div class=\"propEditor unknown\">[A|'+r+\"|\"+typeof n+\"]</div>\":'<div class=\"propEditor unknown\">[B|'+r+\"|\"+typeof n+\"]</div>\"}return\"undefined\"!=typeof r&&p&&(h+=\"<!-- /ko -->\",h+=\"<!-- ko ifSubs: { not: true, data: \"+v+\", threshold: \"+k+\", gutter: 0 } -->\",h+='<span class=\"label notused\">('+r+\")</span>\",h+=\"<!-- /ko -->\"),h},createBlockEditor=function(e,t,o,n,i,a,r,l,s,d,u,c){\"undefined\"==typeof u&&(u=!0);var p,f=modelDef.getDef(e,a),b=modelDef.getDef(e,i);\"undefined\"!=typeof b._previewBindings&&\"thaeme\"!=a&&\"styler\"==r&&(p=elaborateDeclarations(void 0,b._previewBindings,n,modelDef.getBindValue.bind(void 0,e,o,i,i,\"\")));var m,g=\"undefined\"!=typeof d&&d?e[a]._globalStyles:void 0,h=\"undefined\"!=typeof d&&d?e[a]._globalStyle:void 0;if(\"undefined\"!=typeof h){var v=modelDef.getDef(e,\"theme\");m=v[h.replace(/^(\\$theme|_theme_)\\./,\"\")]}var y=modelDef.getBindValue.bind(void 0,e,o,i,a);y._templateName=a;var k='<div class=\"editor\">';k+='<div class=\"blockType'+(\"undefined\"!=typeof g?\" withdefaults\":\"\")+'\">'+f.type+\"</div>\";var w=_propEditor(y,t,n,f,m,\"\",void 0,r,c,s,g,h,u,p);w.length>0&&(k+=w),k+=\"</div>\",l(k,a,r)},createBlockEditors=function(e,t,o,n,i,a,r,l){createBlockEditor(e,t,o,n,i,a,\"edit\",r,l),createBlockEditor(e,t,o,n,i,a,\"styler\",r,l,!0)},generateEditors=function(e,t,o,n,i){var a,r=e._defs,l=e.templateName,s=e._blocks,d=[];for(a=0;a<s.length;a++)\"undefined\"!=typeof s[a].container&&d.push(modelDef.generateModel(r,s[a].block)),createBlockEditors(r,t,void 0,o,s[a].root,s[a].block,n,i);return\"undefined\"!=typeof r.theme&&createBlockEditor(r,t,void 0,o,l,\"theme\",\"styler\",n,void 0,!1,!1,-1),d};module.exports=generateEditors;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./utils.js":"/Users/denea/mosaico/src/js/converter/utils.js","./model.js":"/Users/denea/mosaico/src/js/converter/model.js","./declarations.js":"/Users/denea/mosaico/src/js/converter/declarations.js"}},"/Users/denea/mosaico/src/js/bindings/script-template.js":{"file":"/Users/denea/mosaico/src/js/bindings/script-template.js","source":"(function (global){\n\"use strict\";function pushTemplate(e,t){var o=global.document.createElement(\"script\");o.setAttribute(\"type\",\"text/html\"),o.setAttribute(\"id\",e),o.text=t,global.document.body.appendChild(o)}function removeTemplate(e){var t=global.document.getElementById(e);t&&t.parentNode.removeChild(t)}function init(){}function getTemplateContent(e){var t=global.document.getElementById(e);return t?t.innerHTML:void 0}module.exports={init:init,addTemplate:pushTemplate,removeTemplate:removeTemplate,getTemplateContent:getTemplateContent};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9zY3JpcHQtdGVtcGxhdGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBR0EsU0FBUyxjQUFhLEVBQWMsR0FDbEMsR0FBSSxHQUFZLE9BQU8sU0FBUyxjQUFjLFNBQzlDLEdBQVUsYUFBYSxPQUFRLGFBQy9CLEVBQVUsYUFBYSxLQUFNLEdBQzdCLEVBQVUsS0FBTyxFQUNqQixPQUFPLFNBQVMsS0FBSyxZQUFZLEdBR25DLFFBQVMsZ0JBQWUsR0FDdEIsR0FBSSxHQUFLLE9BQU8sU0FBUyxlQUFlLEVBQ3BDLElBQUksRUFBRyxXQUFXLFlBQVksR0FHcEMsUUFBUyxTQUVULFFBQVMsb0JBQW1CLEdBQzFCLEdBQUksR0FBSyxPQUFPLFNBQVMsZUFBZSxFQUN4QyxPQUFJLEdBQVcsRUFBRyxVQUNOLE9BR2QsT0FBTyxTQUNMLEtBQU0sS0FDTixZQUFhLGFBQ2IsZUFBZ0IsZUFDaEIsbUJBQW9CIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIGdsb2JhbHMgZ2xvYmFsOiBmYWxzZSAqL1xuXG5mdW5jdGlvbiBwdXNoVGVtcGxhdGUodGVtcGxhdGVOYW1lLCB0ZW1wbGF0ZVRleHQpIHtcbiAgdmFyIHNjcmlwdFRhZyA9IGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgc2NyaXB0VGFnLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0L2h0bWwnKTtcbiAgc2NyaXB0VGFnLnNldEF0dHJpYnV0ZSgnaWQnLCB0ZW1wbGF0ZU5hbWUpO1xuICBzY3JpcHRUYWcudGV4dCA9IHRlbXBsYXRlVGV4dDtcbiAgZ2xvYmFsLmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0VGFnKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlVGVtcGxhdGUodGVtcGxhdGVOYW1lKSB7XG4gIHZhciBlbCA9IGdsb2JhbC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0ZW1wbGF0ZU5hbWUpO1xuICBpZiAoZWwpIGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWwpO1xufVxuXG5mdW5jdGlvbiBpbml0KCkge31cblxuZnVuY3Rpb24gZ2V0VGVtcGxhdGVDb250ZW50KGlkKSB7XG4gIHZhciBlbCA9IGdsb2JhbC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gIGlmIChlbCkgcmV0dXJuIGVsLmlubmVySFRNTDtcbiAgZWxzZSByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaW5pdDogaW5pdCxcbiAgYWRkVGVtcGxhdGU6IHB1c2hUZW1wbGF0ZSxcbiAgcmVtb3ZlVGVtcGxhdGU6IHJlbW92ZVRlbXBsYXRlLFxuICBnZXRUZW1wbGF0ZUNvbnRlbnQ6IGdldFRlbXBsYXRlQ29udGVudFxufTsiXX0=","deps":{}},"/Users/denea/mosaico/src/js/bindings/string-template.js":{"file":"/Users/denea/mosaico/src/js/bindings/string-template.js","source":"(function (global){\n\"use strict\";function createStringTemplateEngine(e){var t=e.makeTemplateSource;return e.makeTemplateSource=function(e){return\"undefined\"!=typeof templates[e]?new ko.templateSources.stringTemplate(e,templates[e]):t(e)},e}function pushTemplate(e,t){templates[e]=t}function removeTemplate(e){\"undefined\"!=typeof templates[e]?templates[e]=void 0:origTemplateSystem.removeTemplate(e)}function init(){ko.setTemplateEngine(createStringTemplateEngine(new ko.nativeTemplateEngine))}function getTemplateContent(e){return\"undefined\"!=typeof templates[e]?templates[e]:origTemplateSystem.getTemplateContent(e)}var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),origTemplateSystem=require(\"./script-template.js\"),templates={};ko.templateSources.stringTemplate=function(e,t){this.templateName=e,this.template=t,this._data={}},ko.utils.extend(ko.templateSources.stringTemplate.prototype,{data:function(e,t){return 1===arguments.length?this._data[e]:(this._data[e]=t,void 0)},text:function(e){return 0===arguments.length?this.template:(this.template=e,void 0)}}),module.exports={init:init,addTemplate:pushTemplate,removeTemplate:removeTemplate,getTemplateContent:getTemplateContent};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9zdHJpbmctdGVtcGxhdGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBa0NBLFNBQVMsNEJBQTJCLEdBQ2xDLEdBQUksR0FBTyxFQUFlLGtCQVExQixPQVBBLEdBQWUsbUJBQXFCLFNBQVMsR0FDM0MsTUFBdUMsbUJBQTVCLFdBQVUsR0FDWixHQUFJLElBQUcsZ0JBQWdCLGVBQWUsRUFBYyxVQUFVLElBRTlELEVBQUssSUFHVCxFQUdULFFBQVMsY0FBYSxFQUFjLEdBQ2xDLFVBQVUsR0FBZ0IsRUFHNUIsUUFBUyxnQkFBZSxHQUNpQixtQkFBNUIsV0FBVSxHQUNuQixVQUFVLEdBQWdCLE9BRTFCLG1CQUFtQixlQUFlLEdBSXRDLFFBQVMsUUFDUCxHQUFHLGtCQUFrQiwyQkFBMkIsR0FBSSxJQUFHLHVCQUd6RCxRQUFTLG9CQUFtQixHQUMxQixNQUE2QixtQkFBbEIsV0FBVSxHQUNaLFVBQVUsR0FFVixtQkFBbUIsbUJBQW1CLEdBaEVqRCxHQUFJLElBQUssUUFBUSxZQUNiLG1CQUFxQixRQUFRLHdCQUU3QixZQUdKLElBQUcsZ0JBQWdCLGVBQWlCLFNBQVMsRUFBYyxHQUN6RCxLQUFLLGFBQWUsRUFDcEIsS0FBSyxTQUFXLEVBQ2hCLEtBQUssVUFHUCxHQUFHLE1BQU0sT0FBTyxHQUFHLGdCQUFnQixlQUFlLFdBQ2hELEtBQU0sU0FBUyxFQUFLLEdBRWxCLE1BQXlCLEtBQXJCLFVBQVUsT0FDTCxLQUFLLE1BQU0sSUFHcEIsS0FBSyxNQUFNLEdBQU8sRUFBbEIsU0FFRixLQUFNLFNBQVMsR0FFYixNQUF5QixLQUFyQixVQUFVLE9BQ0wsS0FBSyxVQUVkLEtBQUssU0FBVyxFQUFoQixXQTBDSixPQUFPLFNBQ0wsS0FBTSxLQUNOLFlBQWEsYUFDYixlQUFnQixlQUNoQixtQkFBb0IiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG52YXIgb3JpZ1RlbXBsYXRlU3lzdGVtID0gcmVxdWlyZShcIi4vc2NyaXB0LXRlbXBsYXRlLmpzXCIpO1xuXG52YXIgdGVtcGxhdGVzID0ge307XG5cbi8vZGVmaW5lIGEgdGVtcGxhdGUgc291cmNlIHRoYXQgc2ltcGx5IHRyZWF0cyB0aGUgdGVtcGxhdGUgbmFtZSBhcyBpdHMgY29udGVudFxua28udGVtcGxhdGVTb3VyY2VzLnN0cmluZ1RlbXBsYXRlID0gZnVuY3Rpb24odGVtcGxhdGVOYW1lLCB0ZW1wbGF0ZSkge1xuICB0aGlzLnRlbXBsYXRlTmFtZSA9IHRlbXBsYXRlTmFtZTtcbiAgdGhpcy50ZW1wbGF0ZSA9IHRlbXBsYXRlO1xuICB0aGlzLl9kYXRhID0ge307XG59O1xuXG5rby51dGlscy5leHRlbmQoa28udGVtcGxhdGVTb3VyY2VzLnN0cmluZ1RlbXBsYXRlLnByb3RvdHlwZSwge1xuICBkYXRhOiBmdW5jdGlvbihrZXksIHZhbHVlKSB7XG4gICAgLy8gY29uc29sZS5sb2coXCJkYXRhXCIsIGtleSwgdmFsdWUsIHRoaXMudGVtcGxhdGVOYW1lKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2RhdGFba2V5XTtcbiAgICB9XG5cbiAgICB0aGlzLl9kYXRhW2tleV0gPSB2YWx1ZTtcbiAgfSxcbiAgdGV4dDogZnVuY3Rpb24odmFsdWUpIHtcbiAgICAvLyBjb25zb2xlLmxvZyhcInRleHRcIiwgdmFsdWUsIHRoaXMudGVtcGxhdGVOYW1lKVxuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gdGhpcy50ZW1wbGF0ZTtcbiAgICB9XG4gICAgdGhpcy50ZW1wbGF0ZSA9IHZhbHVlO1xuICB9XG59KTtcblxuXG4vL21vZGlmeSBhbiBleGlzdGluZyB0ZW1wbGF0ZUVuZ2luZSB0byB3b3JrIHdpdGggc3RyaW5nIHRlbXBsYXRlc1xuZnVuY3Rpb24gY3JlYXRlU3RyaW5nVGVtcGxhdGVFbmdpbmUodGVtcGxhdGVFbmdpbmUpIHtcbiAgdmFyIG9yaWcgPSB0ZW1wbGF0ZUVuZ2luZS5tYWtlVGVtcGxhdGVTb3VyY2U7XG4gIHRlbXBsYXRlRW5naW5lLm1ha2VUZW1wbGF0ZVNvdXJjZSA9IGZ1bmN0aW9uKHRlbXBsYXRlTmFtZSkge1xuICAgIGlmICh0eXBlb2YgdGVtcGxhdGVzW3RlbXBsYXRlTmFtZV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm4gbmV3IGtvLnRlbXBsYXRlU291cmNlcy5zdHJpbmdUZW1wbGF0ZSh0ZW1wbGF0ZU5hbWUsIHRlbXBsYXRlc1t0ZW1wbGF0ZU5hbWVdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG9yaWcodGVtcGxhdGVOYW1lKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB0ZW1wbGF0ZUVuZ2luZTtcbn1cblxuZnVuY3Rpb24gcHVzaFRlbXBsYXRlKHRlbXBsYXRlTmFtZSwgdGVtcGxhdGVUZXh0KSB7XG4gIHRlbXBsYXRlc1t0ZW1wbGF0ZU5hbWVdID0gdGVtcGxhdGVUZXh0O1xufVxuXG5mdW5jdGlvbiByZW1vdmVUZW1wbGF0ZSh0ZW1wbGF0ZU5hbWUpIHtcbiAgaWYgKHR5cGVvZiB0ZW1wbGF0ZXNbdGVtcGxhdGVOYW1lXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB0ZW1wbGF0ZXNbdGVtcGxhdGVOYW1lXSA9IHVuZGVmaW5lZDtcbiAgfSBlbHNlIHtcbiAgICBvcmlnVGVtcGxhdGVTeXN0ZW0ucmVtb3ZlVGVtcGxhdGUodGVtcGxhdGVOYW1lKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0KCkge1xuICBrby5zZXRUZW1wbGF0ZUVuZ2luZShjcmVhdGVTdHJpbmdUZW1wbGF0ZUVuZ2luZShuZXcga28ubmF0aXZlVGVtcGxhdGVFbmdpbmUoKSkpO1xufVxuXG5mdW5jdGlvbiBnZXRUZW1wbGF0ZUNvbnRlbnQoaWQpIHtcbiAgaWYgKHR5cGVvZiB0ZW1wbGF0ZXNbaWRdICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiB0ZW1wbGF0ZXNbaWRdO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBvcmlnVGVtcGxhdGVTeXN0ZW0uZ2V0VGVtcGxhdGVDb250ZW50KGlkKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaW5pdDogaW5pdCxcbiAgYWRkVGVtcGxhdGU6IHB1c2hUZW1wbGF0ZSxcbiAgcmVtb3ZlVGVtcGxhdGU6IHJlbW92ZVRlbXBsYXRlLFxuICBnZXRUZW1wbGF0ZUNvbnRlbnQ6IGdldFRlbXBsYXRlQ29udGVudFxufTsiXX0=","deps":{"./script-template.js":"/Users/denea/mosaico/src/js/bindings/script-template.js"}},"/Users/denea/mosaico/src/js/bindings/choose-template.js":{"file":"/Users/denea/mosaico/src/js/bindings/choose-template.js","source":"\"use strict\";module.exports=require(\"./string-template.js\");\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNob29zZS10ZW1wbGF0ZS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJtYXBwaW5ncyI6IkFBQUEsWUFLQUEsUUFBT0MsUUFBVUMsUUFBUSIsImZpbGUiOiJvdXQuanMubWFwIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIHNjcmlwdCB0ZW1wbGF0ZSBpcyB0aGUgb25lIHByb3ZpZGVkIGJ5IEtPIGFuZCBkZWFscyB3aXRoIHRlbXBhbHRlcyBkZWZpbmVkIGFzIDxzY3JpcHQgdHlwZT10ZXh0L2h0bWwuXG4vLyBzdHJpbmcgdGVtcGxhdGUgZGVmaW5lcyB0aGVtIGluIG1lbW9yeSBhbmQgYXZvaWRzIHBvbGx1dGluZyB0aGUgSFRNTDogc2VlbXMgdG8gd29yayBiZXR0ZXIgaW4gTW9zYWljby5cblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3N0cmluZy10ZW1wbGF0ZS5qcycpO1xuLy8gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3NjcmlwdC10ZW1wbGF0ZS5qcycpOyJdfQ==","deps":{"./string-template.js":"/Users/denea/mosaico/src/js/bindings/string-template.js"}},"/Users/denea/mosaico/node_modules/os-browserify/browser.js":{"file":"/Users/denea/mosaico/node_modules/os-browserify/browser.js","source":"exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n","deps":{}},"/Users/denea/mosaico/bower_components/knockout.wrap/knockout.wrap.js":{"file":"/Users/denea/mosaico/bower_components/knockout.wrap/knockout.wrap.js","source":"(function (global){\n!function(e){\"function\"==typeof require&&\"object\"==typeof exports&&\"object\"==typeof module?e((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),exports):\"function\"==typeof define&&define.amd?define([\"knockout\",\"exports\"],e):e(ko,ko.wrap={})}(function(e,t){function o(e){var t=typeof e;return\"object\"===t&&(e?e.constructor==Date?t=\"date\":\"[object Array]\"==Object.prototype.toString.call(e)&&(t=\"array\"):t=\"null\"),t}function n(t){var o={};for(var n in t){var i=t[n];e.isComputed(i)||(o[n]=r(i))}return o}function i(e){var t=[];if(!e||0==e.length)return t;for(var o=0,n=e.length;n>o;++o)t.push(r(e[o]));return t}function r(t){var a=e.isObservable(t);if(a){var l=t();return r(l)}return\"array\"==o(t)?i(t):\"object\"==o(t)?n(t):t}function a(){f=[{obj:null,wrapped:null,lvl:\"\"}]}function l(t,o,n){for(var i=0;i<f.length;++i)if(f[i].obj===t)return f[i].wrapped;var r={};for(var a in t){var l=t[a];f.push({obj:t,wrapped:r,lvl:d()+\"/\"+a}),r[a]=u(l,o,n),f.pop()}return o&&o[d()]&&(r=o[d()](r)),c()&&e.track(r),n?e.observable(r):r}function s(t,o,n){var i=e.observableArray();if(!t||0==t.length)return i;for(var r=0,a=t.length;a>r;++r)i.push(u(t[r],o,n));return i}function d(){return f[f.length-1].lvl}function u(t,n,i){if(\"array\"==o(t))return s(t,n,i);if(\"object\"==o(t))return l(t,n,i);if(c()||\"function\"==typeof t)return t;var r=e.observable();return r(t),r}function c(){return null!=e.track}t.fromJS=function(e,t,o){return a(),u(e,t,o)},t.updateFromJS=function(t,o,n,i){return a(),t(e.utils.unwrapObservable(u(o,n,i)))},t.fromJSON=function(o,n,i){var r=e.utils.parseJson(o);return arguments[0]=r,t.fromJS.apply(this,n,i)},t.toJS=function(e){return r(e)},t.toJSON=function(o){var n=t.toJS(o);return e.utils.stringifyJson(n)};var f});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/denea/mosaico/src/js/converter/wrapper.js":{"file":"/Users/denea/mosaico/src/js/converter/wrapper.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),kowrap=require(\"./../../../bower_components/knockout.wrap/knockout.wrap.js\"),console=require(\"./../../../bower_components/console-browserify/index.js\"),_getOptionsObject=function(e){for(var t=e.split(\"|\"),o={},n=0;n<t.length;n++){var i=t[n].split(\"=\");o[i[0]]=i.length>1?i[1]:i[0]}return o},_makeComputed=function(e,t,o,n,i,a){var r=ko.computed({read:function(){var o=e();if(null===o){var r=ko.utils.unwrapObservable(n);return\"undefined\"==typeof r||\"custom\"==r?ko.utils.unwrapObservable(t):a[r][i]}return o},write:function(r){var l,s=ko.utils.unwrapObservable(n);if(l=\"undefined\"==typeof s||\"custom\"==s?ko.utils.peekObservable(t):a[s][i],o)r==l?e(null):e(r);else{var d=ko.utils.peekObservable(e);(r!=l||null!==d)&&e(r)}}});return r},_nextVariantFunction=function(e,t,o){for(var n,i=e.utils.unwrapObservable(t),a=0;a<o.length&&(n=e.utils.peekObservable(o[a]),n!=i);a++);a==o.length&&(console.warn(\"Didn't find a variant!\",t,i,o),a=o.length-1);var r=a+1;r==o.length&&(r=0);var l=e.utils.peekObservable(o[r]);t(l)},_getVariants=function(e){var t,o=e._variant;if(\"object\"!=typeof e[o]||\"undefined\"==typeof e[o]._widget||\"string\"!=typeof e[o]._options&&\"boolean\"!==e[o]._widget)throw console.error(\"Unexpected variant declaration\",o,e[o]),\"Unexpected variant declaration: cannot find property \"+o+\" or its _options string and it is not a boolean\";return t=\"string\"==typeof e[o]._options?Object.keys(_getOptionsObject(e[o]._options)):[!0,!1]},_makeComputedFunction=function(e,t,o,n,i,a,r){if(\"undefined\"==typeof e){if(\"undefined\"==typeof n.utils.unwrapObservable(r).type)throw console.log(\"TODO ERROR Found a non-typed def \",e,r),\"Found a non-typed def \"+e;var l=n.utils.unwrapObservable(n.utils.unwrapObservable(r).type);e=t[l],\"object\"!=typeof e&&console.log(\"TODO ERROR Found a non-object def \",e,\"for\",l)}\"undefined\"==typeof i&&\"undefined\"!=typeof a&&a&&(i=r);var s=\"$root.content().\",d=e._globalStyles;if(\"undefined\"!=typeof d)for(var u in d)if(d.hasOwnProperty(u)){var c,p,f,m=\"$root.content().theme().scheme\";if(d[u].substr(0,s.length)!=s)throw\"UNEXPECTED globalStyle path (\"+d[u]+\") outside selfPath (\"+s+\")\";f=d[u].substr(s.length),p=i,m.substr(0,s.length)==s?c=m.substr(s.length):(console.log(\"IS THIS CORRECT?\",m,s),c=m);for(var b=p,g=f.split(\"().\"),h=\"\",v=!0,k=0;k<g.length;k++)p=n.utils.unwrapObservable(p)[g[k]],v?\"theme\"==g[k]&&(v=!1):(h.length>0&&(h+=\".\"),h+=g[k]);for(var y=c.split(\"().\"),w=0;w<y.length;w++)b=n.utils.unwrapObservable(b)[y[w]];for(var x=!0,_=u.split(\".\"),$=r,C=0;C<_.length;C++)$=n.utils.unwrapObservable($)[_[C]];if(!n.isObservable($))throw\"Unexpected non observable target \"+u+\"/\"+h;$._defaultComputed=_makeComputed($,p,x,b,h,o)}if(\"undefined\"!=typeof e._variant){for(var O=e._variant.split(\".\"),S=r,T=n.utils.unwrapObservable(r),A=0;A<O.length;A++)S=n.utils.unwrapObservable(S)[O[A]];if(\"undefined\"!=typeof S._defaultComputed&&(console.log(\"Found variant on a style property: beware variants should be only used on content properties because they don't match the theme fallback behaviour\",e._variant),S=S._defaultComputed),\"undefined\"==typeof S)throw console.log(\"ERROR looking for variant target\",e._variant,r),\"ERROR looking for variant target \"+e._variant;T._nextVariant=_nextVariantFunction.bind(S,n,S,_getVariants(e))}for(var E in e)if(e.hasOwnProperty(E)){var H=e[E];if(\"object\"==typeof H&&null!==H&&\"undefined\"!=typeof H._context&&\"block\"==H._context){var q=i[E](),M=_makeComputedFunction(t[E],t,o,n,i,a,q);r[E](M)}else if(\"object\"==typeof H&&null!==H&&\"blocks\"==H.type){for(var D,I,P,B=i[E](),j=B.blocks(),R=0;R<j.length;R++)D=n.utils.unwrapObservable(j[R]),I=n.utils.unwrapObservable(D.type),P=_makeComputedFunction(t[I],t,o,n,i,a,D),j[R](P);var F=B.blocks;_augmentBlocksObservable(F,_blockInstrumentFunction.bind(B,void 0,t,o,n,void 0,i,a)),i[E]._wrap=_makeBlocksWrap.bind(i[E],F._instrumentBlock),i[E]._unwrap=_unwrap.bind(i[E])}}return r},_augmentBlocksObservable=function(e,t){e._instrumentBlock=t,\"undefined\"==typeof e.origPush&&(e.origPush=e.push,e.push=_makePush.bind(e),e.origSplice=e.splice,e.splice=_makeSplice.bind(e))},_makeBlocksWrap=function(e,t){var o=ko.toJS(t),n=o.blocks;o.blocks=[];var i=kowrap.fromJS(o,void 0,!0)();_augmentBlocksObservable(i.blocks,e);for(var a=0;a<n.length;a++){var r=ko.toJS(n[a]);r.id=\"block_\"+a,i.blocks.push(r)}this(i)},_makePush=function(){if(arguments.length>1)throw\"Array push with multiple arguments not implemented\";if(arguments.length>0&&ko.isObservable(arguments[0])&&(\"function\"==typeof arguments[0]._unwrap?arguments[0]=arguments[0]._unwrap():console.log(\"WARN: pushing observable with no _unwrap function (TODO remove me, expected condition)\")),ko.isObservable(arguments[0]))return this.origPush.apply(this,arguments);var e=this._instrumentBlock(arguments[0]);return this.origPush.apply(this,[e])},_makeSplice=function(){if(arguments.length>3)throw\"Array splice with multiple objects not implemented\";if(arguments.length>2&&ko.isObservable(arguments[2])&&(\"function\"==typeof arguments[2]._unwrap?arguments[2]=arguments[2]._unwrap():console.log(\"WARN: splicing observable with no _unwrap function (TODO remove me, expected condition)\")),arguments.length>2&&!ko.isObservable(arguments[2])){var e=this._instrumentBlock(arguments[2]);return this.origSplice.apply(this,[arguments[0],arguments[1],e])}return this.origSplice.apply(this,arguments)},_blockInstrumentFunction=function(e,t,o,n,i,a,r,l){\"undefined\"==typeof i&&(i=l);var s;s={\"\":_makeComputedFunction.bind(i,e,t,o,n,a,r)};var d=kowrap.fromJS(i,s,!0);return d._unwrap=_unwrap.bind(d),d},_wrap=function(e,t){var o=ko.utils.unwrapObservable(e(ko,t,void 0,!0));this(o)},_unwrap=function(){return ko.toJS(this)},_modelInstrument=function(e,t,o){var n=_blockInstrumentFunction.bind(void 0,t,o,o.themes),i=n(ko,e,void 0,!0);return i._wrap=_wrap.bind(i,n),i._unwrap=_unwrap.bind(i),i};module.exports=_modelInstrument;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./../../../bower_components/knockout.wrap/knockout.wrap.js":"/Users/denea/mosaico/bower_components/knockout.wrap/knockout.wrap.js"}},"/Users/denea/mosaico/src/js/converter/domutils.js":{"file":"/Users/denea/mosaico/src/js/converter/domutils.js","source":"(function (global){\n\"use strict\";function _extend(e,t){if(t)for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o]);return e}var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),objExtend=function(e,t){return\"function\"==typeof $.extend?$.extend(!0,e,t):_extend(e,JSON.parse(JSON.stringify(t)))},getAttribute=function(e,t){var o=$(e).attr(t);return\"undefined\"==typeof o&&(o=null),o},setAttribute=function(e,t,o){$(e).attr(t,o)},removeAttribute=function(e,t){$(e).removeAttr(t)},getInnerText=function(e){return $(e).text()},getInnerHtml=function(e){return $(e).html()},getLowerTagName=function(e){return\"\"===e.tagName&&\"string\"==typeof e.name?e.name.toLowerCase():\"\"!==e.tagName?e.tagName.toLowerCase():$(e).prop(\"tagName\").toLowerCase()},setContent=function(e,t){$(e).html(t)},replaceHtml=function(e,t){$(e).replaceWith(t)},removeElements=function(e,t){t&&\"undefined\"!=typeof e.detach&&e.detach(),e.remove()};module.exports={getAttribute:getAttribute,setAttribute:setAttribute,removeAttribute:removeAttribute,getInnerText:getInnerText,getInnerHtml:getInnerHtml,getLowerTagName:getLowerTagName,setContent:setContent,replaceHtml:replaceHtml,removeElements:removeElements,objExtend:objExtend};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9jb252ZXJ0ZXIvZG9tdXRpbHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBUUEsU0FBUyxTQUFRLEVBQVEsR0FDdkIsR0FBSSxFQUNGLElBQUssR0FBSSxLQUFRLEdBQ1gsRUFBTyxlQUFlLEtBQ3hCLEVBQU8sR0FBUSxFQUFPLEdBSTVCLE9BQU8sR0FWVCxHQUFJLEdBQUksUUFBUSxVQWFaLFVBQVksU0FBUyxFQUFLLEdBQzVCLE1BQXVCLGtCQUFaLEdBQUUsT0FDSixFQUFFLFFBQU8sRUFBTSxFQUFLLEdBRXBCLFFBQVEsRUFBSyxLQUFLLE1BQU0sS0FBSyxVQUFVLE1BSTlDLGFBQWUsU0FBUyxFQUFTLEdBQ25DLEdBQUksR0FBTSxFQUFFLEdBQVMsS0FBSyxFQUUxQixPQURrQixtQkFBUCxLQUFvQixFQUFNLE1BQzlCLEdBSUwsYUFBZSxTQUFTLEVBQVMsRUFBVyxHQUM5QyxFQUFFLEdBQVMsS0FBSyxFQUFXLElBSXpCLGdCQUFrQixTQUFTLEVBQVMsR0FDdEMsRUFBRSxHQUFTLFdBQVcsSUFJcEIsYUFBZSxTQUFTLEdBQzFCLE1BQU8sR0FBRSxHQUFTLFFBS2hCLGFBQWUsU0FBUyxHQUMxQixNQUFPLEdBQUUsR0FBUyxRQUloQixnQkFBa0IsU0FBUyxHQUk3QixNQUF3QixLQUFwQixFQUFRLFNBQXlDLGdCQUFoQixHQUFRLEtBQXlCLEVBQVEsS0FBSyxjQUMzRCxLQUFwQixFQUFRLFFBQXVCLEVBQVEsUUFBUSxjQUM1QyxFQUFFLEdBQVMsS0FBSyxXQUFXLGVBSWhDLFdBQWEsU0FBUyxFQUFTLEdBQ2pDLEVBQUUsR0FBUyxLQUFLLElBSWQsWUFBYyxTQUFTLEVBQVMsR0FDbEMsRUFBRSxHQUFTLFlBQVksSUFJckIsZUFBaUIsU0FBUyxFQUFXLEdBQ25DLEdBQXlDLG1CQUFyQixHQUFVLFFBQXdCLEVBQVUsU0FFcEUsRUFBVSxTQUdaLFFBQU8sU0FDTCxhQUFjLGFBQ2QsYUFBYyxhQUNkLGdCQUFpQixnQkFDakIsYUFBYyxhQUNkLGFBQWMsYUFDZCxnQkFBaUIsZ0JBQ2pCLFdBQVksV0FDWixZQUFhLFlBQ2IsZUFBZ0IsZUFDaEIsVUFBVyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIFRoaXMgZGVhbHMgd2l0aCBDaGVlcmlvL2pRdWVyeSBpc3N1ZXMuXG4vLyBNb3N0IG9mIHRoaXMgY291bGQgYmUgZG9uZSB3aXRob3V0IGpRdWVyeSwgdG9vLCBidXQgalF1ZXJ5IGlzIGVhc2llciB0byBiZSBtb2NrZWQgd2l0aCBDaGVlcmlvXG4vLyBPdGhlcndpc2Ugd2Ugd291bGQgbmVlZCBqc0RvbSB0byBydW4gdGhlIGNvbXBpbGVyIGluIHRoZSBzZXJ2ZXIgKHdpdGhvdXQgYSByZWFsIGJyb3dzZXIpXG5cbnZhciAkID0gcmVxdWlyZShcImpxdWVyeVwiKTtcblxuZnVuY3Rpb24gX2V4dGVuZCh0YXJnZXQsIHNvdXJjZSkge1xuICBpZiAoc291cmNlKSB7XG4gICAgZm9yICh2YXIgcHJvcCBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChzb3VyY2UuaGFzT3duUHJvcGVydHkocHJvcCkpIHtcbiAgICAgICAgdGFyZ2V0W3Byb3BdID0gc291cmNlW3Byb3BdO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG52YXIgb2JqRXh0ZW5kID0gZnVuY3Rpb24ob2JqLCBleHRlbmRlcikge1xuICBpZiAodHlwZW9mICQuZXh0ZW5kID09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gJC5leHRlbmQodHJ1ZSwgb2JqLCBleHRlbmRlcik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIF9leHRlbmQob2JqLCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGV4dGVuZGVyKSkpO1xuICB9XG59O1xuXG52YXIgZ2V0QXR0cmlidXRlID0gZnVuY3Rpb24oZWxlbWVudCwgYXR0cmlidXRlKSB7XG4gIHZhciByZXMgPSAkKGVsZW1lbnQpLmF0dHIoYXR0cmlidXRlKTtcbiAgaWYgKHR5cGVvZiByZXMgPT0gJ3VuZGVmaW5lZCcpIHJlcyA9IG51bGw7XG4gIHJldHVybiByZXM7XG4gIC8vIHJldHVybiBlbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyaWJ1dGUpO1xufTtcblxudmFyIHNldEF0dHJpYnV0ZSA9IGZ1bmN0aW9uKGVsZW1lbnQsIGF0dHJpYnV0ZSwgdmFsdWUpIHtcbiAgJChlbGVtZW50KS5hdHRyKGF0dHJpYnV0ZSwgdmFsdWUpO1xuICAvLyBlbGVtZW50LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGUsIHZhbHVlKTtcbn07XG5cbnZhciByZW1vdmVBdHRyaWJ1dGUgPSBmdW5jdGlvbihlbGVtZW50LCBhdHRyaWJ1dGUpIHtcbiAgJChlbGVtZW50KS5yZW1vdmVBdHRyKGF0dHJpYnV0ZSk7XG4gIC8vIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZSk7XG59O1xuXG52YXIgZ2V0SW5uZXJUZXh0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICByZXR1cm4gJChlbGVtZW50KS50ZXh0KCk7XG4gIC8vIGlmICh0eXBlb2YgZWxlbWVudC5pbm5lclRleHQgIT0gJ3VuZGVmaW5lZCcpIHJldHVybiBlbGVtZW50LmlubmVyVGV4dDtcbiAgLy8gZWxzZSByZXR1cm4gZWxlbWVudC50ZXh0Q29udGVudDtcbn07XG5cbnZhciBnZXRJbm5lckh0bWwgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gIHJldHVybiAkKGVsZW1lbnQpLmh0bWwoKTtcbiAgLy8gcmV0dXJuIGVsZW1lbnQuaW5uZXJIVE1MO1xufTtcblxudmFyIGdldExvd2VyVGFnTmFtZSA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgLy8gc29tZXRpbWVzIGNoZWVyaW8gZG9lc24ndCBoYXZlIHRhZ05hbWUgYnV0IFwibmFtZVwiLlxuICAvLyBCcm93c2VycyBoYXZlIFwibmFtZVwiIHdpdGggZW1wdHkgc3RyaW5nXG4gIC8vIFNvbWV0aW1lcyBjaGVlcmlvIGhhcyB0YWdOYW1lIGJ1dCBubyBwcm9wIGZ1bmN0aW9uLlxuICBpZiAoZWxlbWVudC50YWdOYW1lID09PSAnJyAmJiB0eXBlb2YgZWxlbWVudC5uYW1lID09ICdzdHJpbmcnKSByZXR1cm4gZWxlbWVudC5uYW1lLnRvTG93ZXJDYXNlKCk7XG4gIGlmIChlbGVtZW50LnRhZ05hbWUgIT09ICcnKSByZXR1cm4gZWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCk7XG4gIHJldHVybiAkKGVsZW1lbnQpLnByb3AoXCJ0YWdOYW1lXCIpLnRvTG93ZXJDYXNlKCk7XG4gIC8vIHJldHVybiBlbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKTtcbn07XG5cbnZhciBzZXRDb250ZW50ID0gZnVuY3Rpb24oZWxlbWVudCwgY29udGVudCkge1xuICAkKGVsZW1lbnQpLmh0bWwoY29udGVudCk7XG4gIC8vIGVsZW1lbnQuaW5uZXJIVE1MID0gY29udGVudDtcbn07XG5cbnZhciByZXBsYWNlSHRtbCA9IGZ1bmN0aW9uKGVsZW1lbnQsIGh0bWwpIHtcbiAgJChlbGVtZW50KS5yZXBsYWNlV2l0aChodG1sKTtcbiAgLy8gZWxlbWVudC5vdXRlckhUTUwgPSBodG1sO1xufTtcblxudmFyIHJlbW92ZUVsZW1lbnRzID0gZnVuY3Rpb24oJGVsZW1lbnRzLCB0cnlEZXRhY2gpIHtcbiAgaWYgKHRyeURldGFjaCAmJiB0eXBlb2YgJGVsZW1lbnRzLmRldGFjaCAhPT0gJ3VuZGVmaW5lZCcpICRlbGVtZW50cy5kZXRhY2goKTtcbiAgLy8gTk9URTogd2UgZG9uJ3QgbmVlZCBhbiBlbHNlLCBhcyBkZXRhY2ggaXMgc2ltcGx5IGFuIG9wdGltaXphdGlvblxuICAkZWxlbWVudHMucmVtb3ZlKCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0QXR0cmlidXRlOiBnZXRBdHRyaWJ1dGUsXG4gIHNldEF0dHJpYnV0ZTogc2V0QXR0cmlidXRlLFxuICByZW1vdmVBdHRyaWJ1dGU6IHJlbW92ZUF0dHJpYnV0ZSxcbiAgZ2V0SW5uZXJUZXh0OiBnZXRJbm5lclRleHQsXG4gIGdldElubmVySHRtbDogZ2V0SW5uZXJIdG1sLFxuICBnZXRMb3dlclRhZ05hbWU6IGdldExvd2VyVGFnTmFtZSxcbiAgc2V0Q29udGVudDogc2V0Q29udGVudCxcbiAgcmVwbGFjZUh0bWw6IHJlcGxhY2VIdG1sLFxuICByZW1vdmVFbGVtZW50czogcmVtb3ZlRWxlbWVudHMsXG4gIG9iakV4dGVuZDogb2JqRXh0ZW5kXG59OyJdfQ==","deps":{}},"/Users/denea/mosaico/src/js/converter/model.js":{"file":"/Users/denea/mosaico/src/js/converter/model.js","source":"\"use strict\";var objExtend=require(\"./domutils.js\").objExtend,console=require(\"./../../../bower_components/console-browserify/index.js\"),_valueSet=function(e,t,o,n){var i=o.indexOf(\".\");if(-1==i)if(\"undefined\"==typeof t[o])console.log(\"Undefined prop \"+o+\" while setting value \"+n+\" in model._valueSet\");else if(null===t[o])\"object\"==typeof n&&null!==n&&\"undefined\"==typeof n.push&&console.log(\"nullpropobjectvalue\",o,n),t[o]=n;else if(\"object\"==typeof t[o]&&\"function\"==typeof t[o].push){var r;if(\"string\"==typeof n){var a=n.match(/^\\[(.*)\\]$/);if(null===a)throw\"Unexpected default value for array property \"+o+\": \"+n;r=a[1].split(\",\")}else{if(\"object\"!=typeof n||\"undefined\"==typeof n.push)throw\"Unexpected default value for array property \"+o+\": \"+n+\" typeof \"+typeof n;r=n}for(var l=[],s=0;s<r.length;s++)\"@\"==r[s].substr(0,1)?l.push(_generateModel(e,r[s].substr(1))):r[s].length>0&&l.push(r[s]);t[o]=l}else\"string\"==typeof t[o]||\"boolean\"==typeof t[o]?t[o]=n:\"object\"==typeof t[o]&&null!==t[o]&&\"undefined\"!=typeof t[o]._widget?(\"object\"==typeof n&&null!==n&&console.log(\"objectvalue\",o,t[o]._widget,n),t[o]=n):console.log(\"setting\",typeof t[o],t[o],o,n);else{var d=o.substr(0,i);_valueSet(e,t[d],o.substr(i+1),n)}},_modelCreateOrUpdateBlockDef=function(e,t,o,n){if(\"undefined\"!=typeof e[t]&&e[t]._initialized&&!e[t]._writeable)throw console.log(\"_modelCreateOrUpdateBlockDef\",e,t,o,n),\"Trying to alter non writeable model: \"+t+\" / \"+o;if(\"undefined\"==typeof e[t]&&(e[t]={_writeable:!0},\"undefined\"==typeof n&&(n={}),\"undefined\"==typeof n.category&&\"undefined\"==typeof e[t]._category&&(n.category=t.match(/(^t|.T)heme$/)||t.match(/(^s|.S)tyle$/)||t.match(/(^c|.C)olor$/)||t.match(/(^r|.R)adius$/)?\"style\":\"content\")),\"undefined\"!=typeof n){if(\"undefined\"!=typeof n.name&&(e[t]._name=n.name),\"undefined\"!=typeof n.themeOverride&&(e[t]._themeOverride=n.themeOverride),\"undefined\"!=typeof n.globalStyle){e[t]._globalStyle=n.globalStyle;var i=n.globalStyle.replace(/^(\\$theme|_theme_)\\./,\"\"),r=i.indexOf(\".\"),a=-1!=r?i.substr(0,r):i;_modelCreateOrUpdateBlockDef(e,\"theme\",a),(\"undefined\"==typeof e[t]._themeOverride||e[t]._themeOverride)&&_modelCreateOrUpdateBlockDef(e,t,\"customStyle=false\")}\"undefined\"!=typeof n.contextName&&(e[t]._context=n.contextName,\"block\"==n.contextName&&\"undefined\"==typeof e[t]._globalStyle&&(e[t]._globalStyle=\"_theme_.bodyTheme\",_modelCreateOrUpdateBlockDef(e,\"theme\",\"bodyTheme\"),(\"undefined\"==typeof e[t]._themeOverride||e[t]._themeOverride)&&_modelCreateOrUpdateBlockDef(e,t,\"customStyle=false\"))),\"undefined\"!=typeof n.extend&&(e[t].type=n.extend)}for(var l in n)n.hasOwnProperty(l)&&\"undefined\"!=typeof n[l]&&-1==[\"name\",\"extend\",\"contextName\",\"globalStyle\",\"themeOverride\"].indexOf(l)&&(e[t][\"_\"+l]=n[l]);\"undefined\"!=typeof o&&o.length>0&&(e[t]._props=\"undefined\"!=typeof e[t]._props&&e[t]._props.length>0?e[t]._props+\" \"+o:o)},_removePrefix=function(e){var t=e.match(/^[^A-Z]+([A-Z])(.*)$/);return null!==t?t[1].toLowerCase()+t[2]:null},_generateModelFromDef=function(e,t){var o={};for(var n in e)if(!n.match(/^_.*/)&&e.hasOwnProperty(n)){var i=e[n];if(\"object\"==typeof i&&null!==i&&\"undefined\"!=typeof i._complex&&i._complex)o[n]=_generateModelFromDef(i,t);else if(\"type\"==n)o[n]=i;else{if(\"object\"!=typeof i)throw console.error(\"Unexpected model def\",n,i,e),\"Unexpected model def [\"+n+\"]=\"+i;o[n]=null}}if(\"undefined\"!=typeof e._defaultValues){var r=e._defaultValues;for(var a in r)r.hasOwnProperty(a)&&_valueSet(t,o,a,r[a])}return o},_generateModel=function(e,t){var o=_getModelDef(e,t,!1,!0);return _generateModelFromDef(o,e)},_getDef=function(e,t){return _getModelDef(e,t,!1,!0)},_getModelDef=function(e,t,o,n){if(\"undefined\"==typeof e[t]){if(-1!=t.indexOf(\" \"))return null;var i=_removePrefix(t);return null!==i?_getModelDef(e,i,o,n):null}var r=e[t];if(\"object\"!=typeof r)throw\"Block definition must be an object: found \"+r+\" for \"+t;if(\"undefined\"==typeof r._initialized){if(\"undefined\"==typeof r.type&&(r.type=-1==t.indexOf(\" \")?t:t.substr(t.indexOf(\" \")+1)),r.type!=t&&\"undefined\"==typeof r._widget){var a=_getModelDef(e,r.type,!0),l=objExtend(a,r);r=l,e[t]=r}else\"undefined\"==typeof r._widget&&\"undefined\"==typeof r._props&&\"undefined\"==typeof r._complex;r._writeable=!0,r._initialized=!0}if(\"undefined\"!=typeof r._props){var s=r._props;if(s=s.split(\" \"),s.length>0&&\"undefined\"==typeof r._writeable)throw console.error(\"Altering a non writable object \",t,s,r),\"Altering a non writable object: \"+t+\" def: \"+s;\"undefined\"==typeof r._processedDefs&&(r._processedDefs={}),\"undefined\"==typeof r._globalStyles&&(r._globalStyles={}),\"undefined\"==typeof r._defaultValues&&(r._defaultValues={});for(var d=0;d<s.length;d++){var u=s[d];if(0!==u.length){var c=u,f=null,p=u.match(/^([^=\\[\\]]+)(\\[\\])?(=?)(.*)$/);if(null!==p&&(u=p[1],\"[]\"==p[2]&&(\"undefined\"==typeof r[u]&&(r[u]=[]),f=[]),\"=\"==p[3]&&(f=u.match(/(^v|V)isible$/)?\"true\"==String(p[4]).toLowerCase():u.match(/^customStyle$/)?\"true\"==String(p[4]).toLowerCase():p[4])),null!==f&&\"undefined\"==typeof r._defaultValues[u]&&(r._defaultValues[u]=f),\"undefined\"==typeof r[u]){var m=_getModelDef(e,t+\" \"+u,!0);null===m&&(m=_getModelDef(e,u,!0)),r[u]=m}r._processedDefs[u]=c,r._complex=!0}}delete r._props}if(o){r._writeable=!1;var b=objExtend({},r);return b}if(n)return r._writeable=!1,r;if(\"undefined\"==typeof r._writeable||r._writeable===!1)throw\"Retrieving non writeable object definition: \"+t;return r},_increaseUseCount=function(e,t){if(e){if(\"undefined\"==typeof t._usecount)throw console.error(\"ERROR trying to bind an unused property while readonly\",t),\"ERROR trying to bind an unused property\"}else\"undefined\"==typeof t._usecount&&(t._usecount=0),t._usecount++},ensureGlobalStyle=function(e,t,o,n,i,r,a,l){var s=o(r,a,l);if(\"undefined\"==typeof e[n]._globalStyles[i]){if(t)throw\"Cannot find _globalStyle for \"+i+\" in \"+n+\"!\";(-1!=i.indexOf(\".\")||\"object\"==typeof e[n][i]&&\"undefined\"!=typeof e[n][i]._widget)&&(e[n]._globalStyles[i]=s)}else if(e[n]._globalStyles[i]!=s)throw\"Unexpected conflicting globalStyle [2] for \"+n+\"/\"+i+\": old=\"+e[n]._globalStyles[i]+\" new=\"+s},modelEnsurePathAndGetBindValue=function(e,t,o,n,i,r,a,l,s,d){var u,c,f;if(\"$\"==a.substr(0,1)){console.warn(\"DEPRECATED $ in bindingProvider: \",a,i);var p=a.indexOf(\".\");if(-1==p)throw\"Unexpected fullPath: \"+a+\"/\"+r+\"/\"+i+\"/\"+l+\"/\"+s;if(u=a.substr(1,p-1),f=a.substr(p+1),\"theme\"!=u)throw\"Unexpected $ sequence: \"+u+\" in \"+a;var m=f.indexOf(\".\");u=f.substr(0,m),f=f.substr(m+1),c=\"$root.content().theme().\"+u+\"().\"+f.replace(new RegExp(\"\\\\.\",\"g\"),\"().\")}else if(\"#\"==a.substr(0,1))console.warn(\"DEPRECATED # in bindingProvider: \",a,i),u=n,f=a.substr(1),c=\"$root.content().\"+f.replace(new RegExp(\"\\\\.\",\"g\"),\"().\");else if(\"_theme_.\"==a.substr(0,8)){var b=a.indexOf(\".\",8);u=a.substr(8,b-8),f=a.substr(b+1),c=\"$root.content().theme().\"+u+\"().\"+f.replace(new RegExp(\"\\\\.\",\"g\"),\"().\")}else\"_root_.\"==a.substr(0,7)?(u=n,f=a.substr(7),c=\"$root.content().\"+f.replace(new RegExp(\"\\\\.\",\"g\"),\"().\")):(u=i,f=r+a,c=a.replace(new RegExp(\"\\\\.\",\"g\"),\"().\"));if(\"undefined\"==typeof t[u])throw\"Cannot find model def for [\"+u+\"]\";var g=f.indexOf(\".\"),h=-1==g?f:f.substr(0,g);if(-1!=u.indexOf(\"-\"))throw console.error(\"ERROR cannot use - for block names\",u),\"ERROR unexpected char in block name: \"+u;if(-1!=h.indexOf(\"-\"))throw console.error(\"ERROR cannot use - for property names\",h),\"ERROR unexpected char in property name: \"+u;if(e)return\"undefined\"!=typeof t[u]._globalStyle&&\"undefined\"!=typeof t[u][h]&&\"style\"==t[u][h]._category&&(c+=\"._defaultComputed\"),c;var v;if(e){if(\"undefined\"!=typeof l)throw\"Cannot use defaultValue in readonly mode!\";if(s)throw\"Cannot use overrideDefault in readonly mode for \"+u+\"/\"+f+\"/\"+s+\"!\";if(\"undefined\"!=typeof d)throw\"Cannot set category for \"+u+\"/\"+f+\"/\"+d+\" in readonly mode!\";v=_getModelDef(t,u,!1,!0)}else t[u]._writeable===!1&&console.log(\"TODO debug use cases for this condition\",u,f),v=_getModelDef(t,u,t[u]._writeable===!1);if(null===v)throw\"Unexpected model for [\"+u+\"]\";if(\"undefined\"==typeof v[h]){if(e)throw\"Cannot find path \"+h+\" for \"+u+\"!\";_modelCreateOrUpdateBlockDef(t,u,h),v=_getModelDef(t,u,!1)}\"undefined\"!=typeof t[u]._globalStyle&&\"undefined\"!=typeof t[u][h]&&null!==t[u][h]&&\"style\"==t[u][h]._category&&(c+=\"._defaultComputed\");var y=v;try{if(_increaseUseCount(e,y),-1!=g){var k=f;do{var w=k.substr(0,g);if(\"undefined\"==typeof y[w])throw\"Found an unexpected prop \"+w+\" for model \"+u+\" for \"+f;y=y[w],_increaseUseCount(e,y),k=k.substr(g+1),g=k.indexOf(\".\")}while(-1!=g);if(\"undefined\"==typeof y[k]||null===y[k])throw\"Found an unexpected path termination \"+k+\" for model \"+u+\" for \"+f;y=y[k]}else y=y[f];if(\"undefined\"==typeof y||null===y)throw\"Unexpected null model for \"+u+\"/\"+r+\"/\"+a;\"undefined\"!=typeof d&&(y._category=d),_increaseUseCount(e,y)}catch(x){throw console.error(\"TODO ERROR Property lookup exception\",x,u,f,i,a,t),x}if(\"undefined\"!=typeof t[u]._globalStyle&&\"object\"==typeof t[u][h]&&null!==t[u][h]&&\"undefined\"!=typeof t[u][h]._category&&\"style\"==t[u][h]._category){var _=modelEnsurePathAndGetBindValue.bind(void 0,e,t,o,n,i,\"\"),$=-1!=f.indexOf(\".\")?f.substr(f.indexOf(\".\")):\"\";if(-1!=$.indexOf(\".\",1))throw\"TODO unsupported object nesting! \"+f;var O=t[u]._globalStyle+\".\"+h;\"object\"==typeof t[u][h]&&null!==t[u][h]&&\"undefined\"!=typeof t[u][h]._globalStyle&&(O=t[u][h]._globalStyle),ensureGlobalStyle(t,e,_,u,h,O,void 0,!1);var C=O+$;if(\"undefined\"==typeof l&&null!==t[u]._defaultValues[f]&&(l=t[u]._defaultValues[f]),ensureGlobalStyle(t,e,_,u,f,C,l,s),\"undefined\"!=typeof l){if(e)throw console.error(\"Cannot set a new theme default value\",C.substr(7),l,\"while in readonly mode\"),\"Cannot set a new theme default value (\"+l+\") for \"+C.substr(7)+\" while in readonly mode!\";o(\"default\",C.substr(7),l)}l=null}if(\"undefined\"!=typeof l)if(\"undefined\"==typeof t[u]._defaultValues[f]||\"undefined\"!=typeof s&&s){if(e)throw\"Cannot set new _defaultValues [1] for \"+f+\" in \"+u+\"!\";t[u]._defaultValues[f]=l}else if(null===l){if(e&&null!==t[u]._defaultValues[f])throw\"Cannot set new _defaultValues [2] for \"+f+\" in \"+u+\"!\";t[u]._defaultValues[f]=null}else if(t[u]._defaultValues[f]!=l)throw console.error(\"TODO error!!! Trying to set a new default value for \"+u+\" \"+f+\" while it already exists (current: \"+t[u]._defaultValues[f]+\", new: \"+l+\")\"),\"Trying to set a new default value for \"+u+\" \"+f+\" while it already exists (current: \"+t[u].defaultValues[f]+\", new: \"+l+\")\";return c},generateResultModel=function(e){var t=e._defs,o=e.templateName,n=_generateModel(t,o);return\"undefined\"!=typeof t.theme&&(n.theme=_generateModel(t,\"theme\")),n};module.exports={ensurePathAndGetBindValue:modelEnsurePathAndGetBindValue.bind(void 0,!1),getBindValue:modelEnsurePathAndGetBindValue.bind(void 0,!0),generateModel:_generateModel,generateResultModel:generateResultModel,getDef:_getDef,createOrUpdateBlockDef:_modelCreateOrUpdateBlockDef};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./domutils.js":"/Users/denea/mosaico/src/js/converter/domutils.js"}},"/Users/denea/mosaico/src/js/converter/declarations.js":{"file":"/Users/denea/mosaico/src/js/converter/declarations.js","source":"\"use strict\";var converterUtils=require(\"./utils.js\"),cssParse=require(\"./../../../bower_components/mensch/lib/parser.js\"),console=require(\"./../../../bower_components/console-browserify/index.js\"),domutils=require(\"./domutils.js\"),_declarationValueLookup=function(e,t,o){for(var n=e.length-1;n>=0;n--)if(\"property\"==e[n].type&&e[n].name==t)return _declarationValueUrlPrefixer(e[n].value,o);return null},_propToCamelCase=function(e){return e.replace(/-([a-z])/g,function(e,t){return t.toUpperCase()})},_declarationValueUrlPrefixer=function(e,t){if(e.match(/url\\(.*\\)/)){var o=e.replace(/(url\\()([^\\)]*)(\\))/g,function(e,o,n,i){var r=n.trim(),a=n.trim().charAt(0);\"'\"==a||'\"'==a?r=r.substr(1,r.length-2):a=\"\";var l=t(r);return null!==l?o+a+l+a+i:e});return o}return e},elaborateDeclarations=function(e,t,o,n,i,r,a){var l=\"object\"==typeof r&&null!==r?r:{},s=null,d=0;if(\"undefined\"==typeof t){var u=cssParse(\"#{\\n\"+e+\"}\",{comments:!0,position:!0});t=u.stylesheet.rules[0].declarations,d=1}for(var c=t.length-1;c>=0;c--)if(\"property\"==t[c].type)if(a===!0&&\"display\"==t[c].name&&\"none\"==t[c].value)null===s&&(s=e),s=converterUtils.removeStyle(s,t[c].position.start,t[c].position.end,d,0,0,\"\");else{var f=t[c].name.match(/^-ko-(bind-|attr-)?([a-z0-9-]*?)(-if|-ifnot)?$/);if(null!==f){null===s&&\"undefined\"!=typeof e&&(s=e);var p,b,m,g=\"attr-\"==f[1],h=\"bind-\"==f[1],v=f[2],y=\"-if\"==f[3]||\"-ifnot\"==f[3];if(y){p=t[c].name.substr(0,t[c].name.length-f[3].length);var k=_declarationValueLookup(t,p,o);if(null===k)throw\"Unable to find declaration \"+p+\" for \"+t[c].name}else{if((g||h)&&\"undefined\"==typeof i&&\"undefined\"!=typeof e)throw\"Attributes and bind declarations are only allowed in inline styles!\";var w,_=!0;if(g?(m=domutils.getAttribute(i,v),_=!1,w=\"virtualAttr\"):h?(w=null,\"text\"==v?\"undefined\"!=typeof i?m=domutils.getInnerText(i):_=!1:\"html\"==v?\"undefined\"!=typeof i?m=domutils.getInnerHtml(i):_=!1:_=!1):(_=\"undefined\"!=typeof e,_&&(m=_declarationValueLookup(t,v,o)),w=\"virtualStyle\"),_&&null===m)throw console.error(\"Cannot find default value for\",t[c].name,t),\"Cannot find default value for \"+t[c].name+\": \"+t[c].value+\" in \"+i+\" (\"+typeof e+\"/\"+v+\")\";var x=m,S=h||g?-1!=v.indexOf(\"-\")?\"'\"+v+\"'\":v:_propToCamelCase(v);try{b=converterUtils.expressionBinding(t[c].value,n,x)}catch(O){throw console.error(\"Model ensure path failed\",O.stack,\"name\",t[c].name,\"value\",t[c].value,\"default\",m,\"element\",i),O}null!==w&&\"undefined\"==typeof l[w]&&(l[w]={}),\"virtualAttr\"==w&&\"href\"==S&&(w=null,S=\"wysiwygHref\",\"undefined\"!=typeof i&&null!==i&&domutils.removeAttribute(i,\"href\"));var C=_declarationValueLookup(t,t[c].name+\"-if\",o),$=!1;if(null===C)C=_declarationValueLookup(t,t[c].name+\"-ifnot\",o),$=!0;else if(null!==_declarationValueLookup(t,t[c].name+\"-ifnot\",o))throw\"Unexpected error: cannot use both -if and -ifnot property conditions\";if(null!==C)try{var T=converterUtils.conditionBinding(C,n);b=($?\"!\":\"\")+\"(\"+T+\") ? \"+b+\" : null\"}catch(O){throw console.error(\"Unable to deal with -ko style binding condition\",C,t[c].name),O}null!==w?l[w][S]=b:l[S]=b}if(null!==s)try{if(\"undefined\"!=typeof i&&null!==i)s=converterUtils.removeStyle(s,t[c].position.start,t[c].position.end,d,0,0,\"\");else{var A=\"\";y||(A=v+\": <!-- ko text: \"+b+\" -->\"+m+\"<!-- /ko -->\"),s=converterUtils.removeStyle(s,t[c].position.start,t[c].position.end,d,0,0,A)}}catch(O){throw console.warn(\"Remove style failed\",O,\"name\",t[c]),O}}else{var E=_declarationValueUrlPrefixer(t[c].value,o);if(E!=t[c].value&&(null===s&&\"undefined\"!=typeof e&&(s=e),null!==s))try{s=converterUtils.removeStyle(s,t[c].position.start,t[c].position.end,d,0,0,t[c].name+\": \"+E)}catch(O){throw console.log(\"Remove style failed replacing url\",O,\"name\",t[c]),O}var j=_propToCamelCase(t[c].name),M=\"virtualAttrStyle\",D=\"undefined\"!=typeof l.virtualStyle?l.virtualStyle[j]:void 0,P=\" \";\"undefined\"==typeof l[M]&&(l[M]=\"''\",P=\"\"),\"undefined\"!=typeof D?(l[M]=\"'\"+t[c].name+\": '+(\"+D+\")+';\"+P+\"'+\"+l[M],delete l.virtualStyle[j]):l[M]=\"'\"+t[c].name+\": \"+converterUtils.addSlashes(E)+\";\"+P+\"'+\"+l[M]}}if(\"undefined\"!=typeof i&&null!==i){for(var B in l.virtualStyle)if(l.virtualStyle.hasOwnProperty(B))throw console.log(\"Unexpected virtualStyle binding after conversion to virtualAttr.style\",B,l.virtualStyle[B],e),\"Unexpected virtualStyle binding after conversion to virtualAttr.style for \"+B;delete l.virtualStyle;var H=domutils.getAttribute(i,\"data-bind\"),q=(null!==H?H+\", \":\"\")+_bindingSerializer(l);domutils.setAttribute(i,\"data-bind\",q)}if(\"undefined\"==typeof e){var I=!1;for(var R in l.virtualStyle)if(l.virtualStyle.hasOwnProperty(R)){I=!0;break}if(I){if(\"undefined\"!=typeof l.virtualAttrStyle){var U=l.virtualAttrStyle;delete l.virtualAttrStyle,l.virtualAttrStyle=U}}else delete l.virtualStyle;return _bindingSerializer(l)}return s},_bindingSerializer=function(e){var t=[];for(var o in e)e.hasOwnProperty(o)&&(\"object\"==typeof e[o]?t.push(o+\": \"+\"{ \"+_bindingSerializer(e[o])+\" }\"):t.push(o+\": \"+e[o]));return t.reverse().join(\", \")};module.exports=elaborateDeclarations;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./../../../bower_components/mensch/lib/parser.js":"/Users/denea/mosaico/bower_components/mensch/lib/parser.js","./utils.js":"/Users/denea/mosaico/src/js/converter/utils.js","./domutils.js":"/Users/denea/mosaico/src/js/converter/domutils.js"}},"/Users/denea/mosaico/src/js/converter/stylesheet.js":{"file":"/Users/denea/mosaico/src/js/converter/stylesheet.js","source":"\"use strict\";var cssParse=require(\"./../../../bower_components/mensch/lib/parser.js\"),console=require(\"./../../../bower_components/console-browserify/index.js\"),converterUtils=require(\"./utils.js\"),elaborateDeclarations=require(\"./declarations.js\"),_processStyleSheetRules_processBlockDef=function(e,t){for(var o,n,i,r=0;r<t.length;r++)if(\"rule\"==t[r].type){for(var a=t[r].selectors,l=!1,s=!1,d=0;d<a.length;d++)a[d].match(/:preview$/)?s=!0:l=!0;if(s&&l)throw console.log(\"cannot mix selectors type (:preview and declarations) in @supports -ko-blockdefs \",a),\"Cannot mix selectors type (:preview and declarations) in @supports -ko-blockdefs\";if(!s&&!l)throw console.log(\"cannot find known selectors in @supports -ko-blockdefs \",a),\"Cannot find known selectors in @supports -ko-blockdefs\";if(l){o=\"\",n={},i=t[r].declarations;for(var u=0;u<i.length;u++)\"property\"==i[u].type&&(\"label\"==i[u].name?n.name=i[u].value:\"context\"==i[u].name?n.contextName=i[u].value:\"properties\"==i[u].name?o=i[u].value:\"theme\"==i[u].name?n.globalStyle=\"_theme_.\"+i[u].value:\"themeOverride\"==i[u].name?n.themeOverride=\"true\"==String(i[u].value).toLowerCase():n[i[u].name]=i[u].value);for(var c=0;c<a.length;c++)e(a[c],o,n)}if(s)for(var f=0;f<a.length;f++){var p=a[f].substr(0,a[f].indexOf(\":\")),b=t[r].declarations;e(p,void 0,{previewBindings:b})}}},processStylesheetRules=function(e,t,o,n,i,r,a,l){var s=e,d=null;if(\"undefined\"==typeof t){var u=cssParse(e,{comments:!0,position:!0});if(\"stylesheet\"!=u.type||\"undefined\"==typeof u.stylesheet)throw console.log(\"unable to process styleSheet\",u),\"Unable to parse stylesheet\";t=u.stylesheet.rules}for(var c,f=t.length-1;f>=0;f--){if(\"supports\"==t[f].type&&\"-ko-blockdefs\"==t[f].name)_processStyleSheetRules_processBlockDef(n,t[f].rules),s=converterUtils.removeStyle(s,t[f].position.start,d,0,0,0,\"\");else if(\"media\"==t[f].type||\"supports\"==t[f].type)s=processStylesheetRules(s,t[f].rules,o,n,i,r,a,l);else if(\"comment\"==t[f].type);else if(\"rule\"==t[f].type){for(var p=t[f].selectors,b=\"\",m=null,g=0;g<p.length;g++){b.length>0&&(b+=\", \");var h=p[g].match(/\\[data-ko-block=([^ ]*)\\]/);if(null!==h){if(null!==m&&m!=h[1])throw\"Found multiple block-match attribute selectors: cannot translate it (\"+m+\" vs \"+h[1]+\")\";m=h[1]}b+=\"<!-- ko text: templateMode =='wysiwyg' ? '#main-wysiwyg-area ' : '' --><!-- /ko -->\"+p[g]}if(m){var v=\"<!-- ko foreach: $root.findObjectsOfType($data, '\"+m+\"') -->\",y=\"<!-- /ko -->\",k=d,w=\" \";t[f].declarations.length>0&&(t[f].declarations[0].position.start.line!=t[f].position.end.line&&(w=\"\\n\"+new Array(t[f].position.start.col).join(\" \")),k=t[f].declarations[t[f].declarations.length-1].position.end),null===k?s+=w+y:s=k==d?converterUtils.removeStyle(s,k,d,0,0,0,w+y):converterUtils.removeStyle(s,k,d,0,0,0,w+\"}\"+w+y),b=v+w+b.replace(new RegExp(\"\\\\[data-ko-block=\"+m+\"\\\\]\",\"g\"),\"<!-- ko text: '#'+id() -->\"+m+\"<!-- /ko -->\"),n(m,\"\",{contextName:\"block\"})}var _=m?m:l;c=o.bind(this,_,\"\");var x=elaborateDeclarations(s,t[f].declarations,r,c);null!==x&&(s=x),s=converterUtils.removeStyle(s,t[f].position.start,t[f].position.end,0,0,0,b)}else console.log(\"Unknown rule type\",t[f].type,\"while parsing <style> rules\");d=t[f].position.start}return s};module.exports=processStylesheetRules;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./../../../bower_components/mensch/lib/parser.js":"/Users/denea/mosaico/bower_components/mensch/lib/parser.js","./utils.js":"/Users/denea/mosaico/src/js/converter/utils.js","./declarations.js":"/Users/denea/mosaico/src/js/converter/declarations.js"}},"/Users/denea/mosaico/bower_components/juice/lib/property.js":{"file":"/Users/denea/mosaico/bower_components/juice/lib/property.js","source":"\"use strict\";function Property(e,t,o,n,i){this.prop=e,this.value=t,this.selector=o,this.priority=n||0,this.additionalPriority=i||[]}module.exports=exports=Property;var utils=require(\"./utils\");Property.prototype.compareFunc=function(e){var t=[];t.push.apply(t,this.selector.specificity()),t.push.apply(t,this.additionalPriority),t[0]+=this.priority;var o=[];return o.push.apply(o,e.selector.specificity()),o.push.apply(o,e.additionalPriority),o[0]+=e.priority,utils.compareFunc(t,o)},Property.prototype.compare=function(e){var t=this.compareFunc(e);return 1===t?this:e},Property.prototype.toString=function(){return this.prop+\": \"+this.value.replace(/['\"]+/g,\"\")+\";\"};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3BlcnR5LmpzIl0sIm5hbWVzIjpbIlByb3BlcnR5IiwicHJvcCIsInZhbHVlIiwic2VsZWN0b3IiLCJwcmlvcml0eSIsImFkZGl0aW9uYWxQcmlvcml0eSIsInRoaXMiLCJtb2R1bGUiLCJleHBvcnRzIiwidXRpbHMiLCJyZXF1aXJlIiwicHJvdG90eXBlIiwiY29tcGFyZUZ1bmMiLCJwcm9wZXJ0eSIsImEiLCJwdXNoIiwiYXBwbHkiLCJzcGVjaWZpY2l0eSIsImIiLCJjb21wYXJlIiwid2lubmVyIiwidG9TdHJpbmciLCJyZXBsYWNlIl0sIm1hcHBpbmdzIjoiQUFBQSxZQXFCQSxTQUFTQSxVQUFTQyxFQUFNQyxFQUFPQyxFQUFVQyxFQUFVQyxHQUNqREMsS0FBS0wsS0FBT0EsRUFDWkssS0FBS0osTUFBUUEsRUFDYkksS0FBS0gsU0FBV0EsRUFDaEJHLEtBQUtGLFNBQVdBLEdBQVksRUFDNUJFLEtBQUtELG1CQUFxQkEsTUF4QjVCRSxPQUFPQyxRQUFVQSxRQUFVUixRQU0zQixJQUFJUyxPQUFRQyxRQUFRLFVBMkJwQlYsVUFBU1csVUFBVUMsWUFBYyxTQUFTQyxHQUN4QyxHQUFJQyxLQUNKQSxHQUFFQyxLQUFLQyxNQUFNRixFQUFHUixLQUFLSCxTQUFTYyxlQUM5QkgsRUFBRUMsS0FBS0MsTUFBTUYsRUFBR1IsS0FBS0Qsb0JBQ3JCUyxFQUFFLElBQU1SLEtBQUtGLFFBQ2IsSUFBSWMsS0FJSixPQUhBQSxHQUFFSCxLQUFLQyxNQUFNRSxFQUFHTCxFQUFTVixTQUFTYyxlQUNsQ0MsRUFBRUgsS0FBS0MsTUFBTUUsRUFBR0wsRUFBU1Isb0JBQ3pCYSxFQUFFLElBQU1MLEVBQVNULFNBQ1ZLLE1BQU1HLFlBQVlFLEVBQUdJLElBRzlCbEIsU0FBU1csVUFBVVEsUUFBVSxTQUFTTixHQUNwQyxHQUFJTyxHQUFTZCxLQUFLTSxZQUFZQyxFQUM5QixPQUFlLEtBQVhPLEVBQXFCZCxLQUNsQk8sR0FVVGIsU0FBU1csVUFBVVUsU0FBVyxXQUM1QixNQUFPZixNQUFLTCxLQUFPLEtBQU9LLEtBQUtKLE1BQU1vQixRQUFRLFNBQVUsSUFBTSIsImZpbGUiOiJvdXQuanMubWFwIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMgPSBQcm9wZXJ0eTtcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxuLyoqXG4gKiBDU1MgcHJvcGVydHkgY29uc3RydWN0b3IuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHByb3BlcnR5XG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7U2VsZWN0b3J9IHNlbGVjdG9yIHRoZSBwcm9wZXJ0eSBvcmlnaW5hdGVzIGZyb21cbiAqIEBwYXJhbSB7SW50ZWdlcn0gcHJpb3JpdHkgMCBmb3Igbm9ybWFsIHByb3BlcnRpZXMsIDIgZm9yICFpbXBvcnRhbnQgcHJvcGVydGllcy5cbiAqIEBwYXJhbSB7QXJyYXl9IGFkZGl0aW9uYWwgYXJyYXkgb2YgaW50ZWdlcnMgcmVwcmVzZW50aW5nIG1vcmUgZGV0YWlsZWQgcHJpb3JpdGllcyAoc29ydGluZylcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gUHJvcGVydHkocHJvcCwgdmFsdWUsIHNlbGVjdG9yLCBwcmlvcml0eSwgYWRkaXRpb25hbFByaW9yaXR5KSB7XG4gIHRoaXMucHJvcCA9IHByb3A7XG4gIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgdGhpcy5zZWxlY3RvciA9IHNlbGVjdG9yO1xuICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHkgfHwgMDtcbiAgdGhpcy5hZGRpdGlvbmFsUHJpb3JpdHkgPSBhZGRpdGlvbmFsUHJpb3JpdHkgfHwgW107XG59XG5cbi8qKlxuICogQ29tcGFyZXMgd2l0aCBhbm90aGVyIFByb3BlcnR5IGJhc2VkIG9uIFNlbGVjdG9yI3NwZWNpZmljaXR5LlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUHJvcGVydHkucHJvdG90eXBlLmNvbXBhcmVGdW5jID0gZnVuY3Rpb24ocHJvcGVydHkpIHtcbiAgdmFyIGEgPSBbXTtcbiAgYS5wdXNoLmFwcGx5KGEsIHRoaXMuc2VsZWN0b3Iuc3BlY2lmaWNpdHkoKSk7XG4gIGEucHVzaC5hcHBseShhLCB0aGlzLmFkZGl0aW9uYWxQcmlvcml0eSk7XG4gIGFbMF0gKz0gdGhpcy5wcmlvcml0eTtcbiAgdmFyIGIgPSBbXTtcbiAgYi5wdXNoLmFwcGx5KGIsIHByb3BlcnR5LnNlbGVjdG9yLnNwZWNpZmljaXR5KCkpO1xuICBiLnB1c2guYXBwbHkoYiwgcHJvcGVydHkuYWRkaXRpb25hbFByaW9yaXR5KTtcbiAgYlswXSArPSBwcm9wZXJ0eS5wcmlvcml0eTtcbiAgcmV0dXJuIHV0aWxzLmNvbXBhcmVGdW5jKGEsIGIpO1xufTtcblxuUHJvcGVydHkucHJvdG90eXBlLmNvbXBhcmUgPSBmdW5jdGlvbihwcm9wZXJ0eSkge1xuICB2YXIgd2lubmVyID0gdGhpcy5jb21wYXJlRnVuYyhwcm9wZXJ0eSk7XG4gIGlmICh3aW5uZXIgPT09IDEpIHJldHVybiB0aGlzO1xuICByZXR1cm4gcHJvcGVydHk7XG59O1xuXG5cbi8qKlxuICogUmV0dXJucyBDU1MgcHJvcGVydHlcbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblByb3BlcnR5LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5wcm9wICsgJzogJyArIHRoaXMudmFsdWUucmVwbGFjZSgvWydcIl0rL2csICcnKSArICc7Jztcbn07XG4iXX0=","deps":{"./utils":"/Users/denea/mosaico/bower_components/juice/lib/utils.js"}},"/Users/denea/mosaico/bower_components/jsep/src/jsep.js":{"file":"/Users/denea/mosaico/bower_components/jsep/src/jsep.js","source":"!function(e){\"use strict\";var t=\"Compound\",o=\"Identifier\",n=\"MemberExpression\",r=\"Literal\",i=\"ThisExpression\",a=\"CallExpression\",l=\"UnaryExpression\",s=\"BinaryExpression\",d=\"LogicalExpression\",u=\"ConditionalExpression\",c=\"ArrayExpression\",f=46,p=44,b=39,m=34,g=40,h=41,v=91,y=93,k=63,w=59,x=58,_=function(e,t){var o=new Error(e+\" at character \"+t);throw o.index=t,o.description=e,o},S=!0,O={\"-\":S,\"!\":S,\"~\":S,\"+\":S},C={\"||\":1,\"&&\":2,\"|\":3,\"^\":4,\"&\":5,\"==\":6,\"!=\":6,\"===\":6,\"!==\":6,\"<\":7,\">\":7,\"<=\":7,\">=\":7,\"<<\":8,\">>\":8,\">>>\":8,\"+\":9,\"-\":9,\"*\":10,\"/\":10,\"%\":10},$=function(e){var t,o=0;for(var n in e)(t=n.length)>o&&e.hasOwnProperty(n)&&(o=t);return o},T=$(O),E=$(C),A={\"true\":!0,\"false\":!1,\"null\":null},j=\"this\",D=function(e){return C[e]||0},M=function(e,t,o){var n=\"||\"===e||\"&&\"===e?d:s;return{type:n,operator:e,left:t,right:o}},P=function(e){return e>=48&&57>=e},B=function(e){return 36===e||95===e||e>=65&&90>=e||e>=97&&122>=e||e>=128&&!C[String.fromCharCode(e)]},H=function(e){return 36===e||95===e||e>=65&&90>=e||e>=97&&122>=e||e>=48&&57>=e||e>=128&&!C[String.fromCharCode(e)]},q=function(e){for(var s,d,S=0,$=e.charAt,q=e.charCodeAt,I=function(t){return $.call(e,t)},R=function(t){return q.call(e,t)},U=e.length,L=function(){for(var e=R(S);32===e||9===e||10===e||13===e;)e=R(++S)},N=function(){var e,t,o=V();return L(),R(S)!==k?o:(S++,e=N(),e||_(\"Expected expression\",S),L(),R(S)===x?(S++,t=N(),t||_(\"Expected expression\",S),{type:u,test:o,consequent:e,alternate:t}):(_(\"Expected :\",S),void 0))},F=function(){L();for(var t=e.substr(S,E),o=t.length;o>0;){if(C.hasOwnProperty(t))return S+=o,t;t=t.substr(0,--o)}return!1},V=function(){var e,t,o,n,r,i,a,l;if(i=z(),t=F(),!t)return i;for(r={value:t,prec:D(t)},a=z(),a||_(\"Expected expression after \"+t,S),n=[i,r,a];(t=F())&&(o=D(t),0!==o);){for(r={value:t,prec:o};n.length>2&&o<=n[n.length-2].prec;)a=n.pop(),t=n.pop().value,i=n.pop(),e=M(t,i,a),n.push(e);e=z(),e||_(\"Expected expression after \"+t,S),n.push(r,e)}for(l=n.length-1,e=n[l];l>1;)e=M(n[l-1].value,n[l-2],e),l-=2;return e},z=function(){var t,o,n;if(L(),t=R(S),P(t)||t===f)return G();if(t===b||t===m)return W();if(B(t)||t===g)return Z();if(t===v)return Q();for(o=e.substr(S,T),n=o.length;n>0;){if(O.hasOwnProperty(o))return S+=n,{type:l,operator:o,argument:z(),prefix:!0};o=o.substr(0,--n)}return!1},G=function(){for(var e,t,o=\"\";P(R(S));)o+=I(S++);if(R(S)===f)for(o+=I(S++);P(R(S));)o+=I(S++);if(e=I(S),\"e\"===e||\"E\"===e){for(o+=I(S++),e=I(S),(\"+\"===e||\"-\"===e)&&(o+=I(S++));P(R(S));)o+=I(S++);P(R(S-1))||_(\"Expected exponent (\"+o+I(S)+\")\",S)}return t=R(S),B(t)?_(\"Variable names cannot start with a number (\"+o+I(S)+\")\",S):t===f&&_(\"Unexpected period\",S),{type:r,value:parseFloat(o),raw:o}},W=function(){for(var e,t=\"\",o=I(S++),n=!1;U>S;){if(e=I(S++),e===o){n=!0;break}if(\"\\\\\"===e)switch(e=I(S++)){case\"n\":t+=\"\\n\";break;case\"r\":t+=\"\\r\";break;case\"t\":t+=\"\t\";break;case\"b\":t+=\"\\b\";break;case\"f\":t+=\"\\f\";break;case\"v\":t+=\"\u000b\";break;default:t+=\"\\\\\"+e}else t+=e}return n||_('Unclosed quote after \"'+t+'\"',S),{type:r,value:t,raw:o+t+o}},J=function(){var t,n=R(S),a=S;for(B(n)?S++:_(\"Unexpected \"+I(S),S);U>S&&(n=R(S),H(n));)S++;return t=e.slice(a,S),A.hasOwnProperty(t)?{type:r,value:A[t],raw:t}:t===j?{type:i}:{type:o,name:t}},Y=function(e){for(var o,n,r=[],i=!1;U>S;){if(L(),o=R(S),o===e){i=!0,S++;break}o===p?S++:(n=N(),n&&n.type!==t||_(\"Expected comma\",S),r.push(n))}return i||_(\"Expected \"+String.fromCharCode(e),S),r},Z=function(){var e,t;for(e=R(S),t=e===g?X():J(),L(),e=R(S);e===f||e===v||e===g;)S++,e===f?(L(),t={type:n,computed:!1,object:t,property:J()}):e===v?(t={type:n,computed:!0,object:t,property:N()},L(),e=R(S),e!==y&&_(\"Unclosed [\",S),S++):e===g&&(t={type:a,arguments:Y(h),callee:t}),L(),e=R(S);return t},X=function(){S++;var e=N();return L(),R(S)===h?(S++,e):(_(\"Unclosed (\",S),void 0)},Q=function(){return S++,{type:c,elements:Y(y)}},K=[];U>S;)s=R(S),s===w||s===p?S++:(d=N())?K.push(d):U>S&&_('Unexpected \"'+I(S)+'\"',S);return 1===K.length?K[0]:{type:t,body:K}};if(q.version=\"<%= version %>\",q.toString=function(){return\"JavaScript Expression Parser (JSEP) v\"+q.version},q.addUnaryOp=function(e){return T=Math.max(e.length,T),O[e]=S,this},q.addBinaryOp=function(e,t){return E=Math.max(e.length,E),C[e]=t,this},q.addLiteral=function(e,t){return A[e]=t,this},q.removeUnaryOp=function(e){return delete O[e],e.length===T&&(T=$(O)),this},q.removeAllUnaryOps=function(){return O={},T=0,this},q.removeBinaryOp=function(e){return delete C[e],e.length===E&&(E=$(C)),this},q.removeAllBinaryOps=function(){return C={},E=0,this},q.removeLiteral=function(e){return delete A[e],this},q.removeAllLiterals=function(){return A={},this},\"undefined\"==typeof exports){var I=e.jsep;e.jsep=q,q.noConflict=function(){return e.jsep===q&&(e.jsep=I),q}}else\"undefined\"!=typeof module&&module.exports?exports=module.exports=q:exports.parse=q}(this);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzZXAuanMiXSwibmFtZXMiOlsicm9vdCIsIkNPTVBPVU5EIiwiSURFTlRJRklFUiIsIk1FTUJFUl9FWFAiLCJMSVRFUkFMIiwiVEhJU19FWFAiLCJDQUxMX0VYUCIsIlVOQVJZX0VYUCIsIkJJTkFSWV9FWFAiLCJMT0dJQ0FMX0VYUCIsIkNPTkRJVElPTkFMX0VYUCIsIkFSUkFZX0VYUCIsIlBFUklPRF9DT0RFIiwiQ09NTUFfQ09ERSIsIlNRVU9URV9DT0RFIiwiRFFVT1RFX0NPREUiLCJPUEFSRU5fQ09ERSIsIkNQQVJFTl9DT0RFIiwiT0JSQUNLX0NPREUiLCJDQlJBQ0tfQ09ERSIsIlFVTUFSS19DT0RFIiwiU0VNQ09MX0NPREUiLCJDT0xPTl9DT0RFIiwidGhyb3dFcnJvciIsIm1lc3NhZ2UiLCJpbmRleCIsImVycm9yIiwiRXJyb3IiLCJkZXNjcmlwdGlvbiIsInQiLCJ1bmFyeV9vcHMiLCItIiwiISIsIn4iLCIrIiwiYmluYXJ5X29wcyIsInx8IiwiJiYiLCJ8IiwiXiIsIiYiLCI9PSIsIiE9IiwiPT09IiwiIT09IiwiPCIsIj4iLCI8PSIsIj49IiwiPDwiLCI+PiIsIj4+PiIsIioiLCIvIiwiJSIsImdldE1heEtleUxlbiIsIm9iaiIsImxlbiIsIm1heF9sZW4iLCJrZXkiLCJsZW5ndGgiLCJoYXNPd25Qcm9wZXJ0eSIsIm1heF91bm9wX2xlbiIsIm1heF9iaW5vcF9sZW4iLCJsaXRlcmFscyIsInRydWUiLCJmYWxzZSIsIm51bGwiLCJ0aGlzX3N0ciIsImJpbmFyeVByZWNlZGVuY2UiLCJvcF92YWwiLCJjcmVhdGVCaW5hcnlFeHByZXNzaW9uIiwib3BlcmF0b3IiLCJsZWZ0IiwicmlnaHQiLCJ0eXBlIiwiaXNEZWNpbWFsRGlnaXQiLCJjaCIsImlzSWRlbnRpZmllclN0YXJ0IiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiaXNJZGVudGlmaWVyUGFydCIsImpzZXAiLCJleHByIiwiY2hfaSIsIm5vZGUiLCJjaGFyQXRGdW5jIiwiY2hhckF0IiwiY2hhckNvZGVBdEZ1bmMiLCJjaGFyQ29kZUF0IiwiZXhwckkiLCJpIiwiY2FsbCIsImV4cHJJQ29kZSIsImdvYmJsZVNwYWNlcyIsImdvYmJsZUV4cHJlc3Npb24iLCJjb25zZXF1ZW50IiwiYWx0ZXJuYXRlIiwidGVzdCIsImdvYmJsZUJpbmFyeUV4cHJlc3Npb24iLCJnb2JibGVCaW5hcnlPcCIsInRvX2NoZWNrIiwic3Vic3RyIiwidGNfbGVuIiwiYmlvcCIsInByZWMiLCJzdGFjayIsImJpb3BfaW5mbyIsImdvYmJsZVRva2VuIiwidmFsdWUiLCJwb3AiLCJwdXNoIiwiZ29iYmxlTnVtZXJpY0xpdGVyYWwiLCJnb2JibGVTdHJpbmdMaXRlcmFsIiwiZ29iYmxlVmFyaWFibGUiLCJnb2JibGVBcnJheSIsImFyZ3VtZW50IiwicHJlZml4IiwiY2hDb2RlIiwibnVtYmVyIiwicGFyc2VGbG9hdCIsInJhdyIsInN0ciIsInF1b3RlIiwiY2xvc2VkIiwiZ29iYmxlSWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJzdGFydCIsInNsaWNlIiwibmFtZSIsImdvYmJsZUFyZ3VtZW50cyIsInRlcm1pbmF0aW9uIiwiYXJncyIsImdvYmJsZUdyb3VwIiwiY29tcHV0ZWQiLCJvYmplY3QiLCJwcm9wZXJ0eSIsImFyZ3VtZW50cyIsImNhbGxlZSIsImVsZW1lbnRzIiwibm9kZXMiLCJib2R5IiwidmVyc2lvbiIsInRvU3RyaW5nIiwiYWRkVW5hcnlPcCIsIm9wX25hbWUiLCJNYXRoIiwibWF4IiwidGhpcyIsImFkZEJpbmFyeU9wIiwicHJlY2VkZW5jZSIsImFkZExpdGVyYWwiLCJsaXRlcmFsX25hbWUiLCJsaXRlcmFsX3ZhbHVlIiwicmVtb3ZlVW5hcnlPcCIsInJlbW92ZUFsbFVuYXJ5T3BzIiwicmVtb3ZlQmluYXJ5T3AiLCJyZW1vdmVBbGxCaW5hcnlPcHMiLCJyZW1vdmVMaXRlcmFsIiwicmVtb3ZlQWxsTGl0ZXJhbHMiLCJleHBvcnRzIiwib2xkX2pzZXAiLCJub0NvbmZsaWN0IiwibW9kdWxlIiwicGFyc2UiXSwibWFwcGluZ3MiOiJDQUtDLFNBQVVBLEdBQ1YsWUFNQSxJQUFJQyxHQUFXLFdBQ2RDLEVBQWEsYUFDYkMsRUFBYSxtQkFDYkMsRUFBVSxVQUNWQyxFQUFXLGlCQUNYQyxFQUFXLGlCQUNYQyxFQUFZLGtCQUNaQyxFQUFhLG1CQUNiQyxFQUFjLG9CQUNkQyxFQUFrQix3QkFDbEJDLEVBQVksa0JBRVpDLEVBQWMsR0FDZEMsRUFBYyxHQUNkQyxFQUFjLEdBQ2RDLEVBQWMsR0FDZEMsRUFBYyxHQUNkQyxFQUFjLEdBQ2RDLEVBQWMsR0FDZEMsRUFBYyxHQUNkQyxFQUFjLEdBQ2RDLEVBQWMsR0FDZEMsRUFBYyxHQUVkQyxFQUFhLFNBQVNDLEVBQVNDLEdBQzlCLEdBQUlDLEdBQVEsR0FBSUMsT0FBTUgsRUFBVSxpQkFBbUJDLEVBR25ELE1BRkFDLEdBQU1ELE1BQVFBLEVBQ2RDLEVBQU1FLFlBQWNKLEVBQ2RFLEdBT1BHLEdBQUksRUFHSkMsR0FBYUMsSUFBS0YsRUFBR0csSUFBS0gsRUFBR0ksSUFBS0osRUFBR0ssSUFBS0wsR0FJMUNNLEdBQ0NDLEtBQU0sRUFBR0MsS0FBTSxFQUFHQyxJQUFLLEVBQUlDLElBQUssRUFBSUMsSUFBSyxFQUN6Q0MsS0FBTSxFQUFHQyxLQUFNLEVBQUdDLE1BQU8sRUFBR0MsTUFBTyxFQUNuQ0MsSUFBSyxFQUFJQyxJQUFLLEVBQUlDLEtBQU0sRUFBSUMsS0FBTSxFQUNsQ0MsS0FBSyxFQUFJQyxLQUFNLEVBQUdDLE1BQU8sRUFDekJqQixJQUFLLEVBQUdILElBQUssRUFDYnFCLElBQUssR0FBSUMsSUFBSyxHQUFJQyxJQUFLLElBR3hCQyxFQUFlLFNBQVNDLEdBQ3ZCLEdBQWlCQyxHQUFiQyxFQUFVLENBQ2QsS0FBSSxHQUFJQyxLQUFPSCxJQUNWQyxFQUFNRSxFQUFJQyxRQUFVRixHQUFXRixFQUFJSyxlQUFlRixLQUNyREQsRUFBVUQsRUFHWixPQUFPQyxJQUVSSSxFQUFlUCxFQUFhekIsR0FDNUJpQyxFQUFnQlIsRUFBYXBCLEdBSTdCNkIsR0FDQ0MsUUFBUSxFQUNSQyxTQUFTLEVBQ1RDLE9BQVEsTUFHVEMsRUFBVyxPQUVYQyxFQUFtQixTQUFTQyxHQUMzQixNQUFPbkMsR0FBV21DLElBQVcsR0FJOUJDLEVBQXlCLFNBQVVDLEVBQVVDLEVBQU1DLEdBQ2xELEdBQUlDLEdBQXFCLE9BQWJILEdBQWtDLE9BQWJBLEVBQXFCL0QsRUFBY0QsQ0FDcEUsUUFDQ21FLEtBQU1BLEVBQ05ILFNBQVVBLEVBQ1ZDLEtBQU1BLEVBQ05DLE1BQU9BLElBSVRFLEVBQWlCLFNBQVNDLEdBQ3pCLE1BQVFBLElBQU0sSUFBWSxJQUFOQSxHQUVyQkMsRUFBb0IsU0FBU0QsR0FDNUIsTUFBZSxNQUFQQSxHQUFzQixLQUFQQSxHQUNwQkEsR0FBTSxJQUFZLElBQU5BLEdBQ1pBLEdBQU0sSUFBWSxLQUFOQSxHQUNHQSxHQUFNLE1BQVExQyxFQUFXNEMsT0FBT0MsYUFBYUgsS0FFaEVJLEVBQW1CLFNBQVNKLEdBQzNCLE1BQWUsTUFBUEEsR0FBc0IsS0FBUEEsR0FDcEJBLEdBQU0sSUFBWSxJQUFOQSxHQUNaQSxHQUFNLElBQVksS0FBTkEsR0FDWkEsR0FBTSxJQUFZLElBQU5BLEdBQ0dBLEdBQU0sTUFBUTFDLEVBQVc0QyxPQUFPQyxhQUFhSCxLQU1oRUssRUFBTyxTQUFTQyxHQW1aZixJQWhaQSxHQThZYUMsR0FBTUMsRUE5WWY1RCxFQUFRLEVBQ1g2RCxFQUFhSCxFQUFLSSxPQUNsQkMsRUFBaUJMLEVBQUtNLFdBQ3RCQyxFQUFRLFNBQVNDLEdBQUssTUFBT0wsR0FBV00sS0FBS1QsRUFBTVEsSUFDbkRFLEVBQVksU0FBU0YsR0FBSyxNQUFPSCxHQUFlSSxLQUFLVCxFQUFNUSxJQUMzRC9CLEVBQVN1QixFQUFLdkIsT0FHZGtDLEVBQWUsV0FHZCxJQUZBLEdBQUlqQixHQUFLZ0IsRUFBVXBFLEdBRU4sS0FBUG9ELEdBQW9CLElBQVBBLEdBQW1CLEtBQVBBLEdBQW9CLEtBQVBBLEdBQzNDQSxFQUFLZ0IsSUFBWXBFLElBS25Cc0UsRUFBbUIsV0FDbEIsR0FDQ0MsR0FBWUMsRUFEVEMsRUFBT0MsR0FHWCxPQURBTCxLQUNHRCxFQUFVcEUsS0FBV0wsRUF3QmhCOEUsR0F0QlB6RSxJQUNBdUUsRUFBYUQsSUFDVEMsR0FDSHpFLEVBQVcsc0JBQXVCRSxHQUVuQ3FFLElBQ0dELEVBQVVwRSxLQUFXSCxHQUN2QkcsSUFDQXdFLEVBQVlGLElBQ1JFLEdBQ0gxRSxFQUFXLHNCQUF1QkUsSUFHbENrRCxLQUFNakUsRUFDTndGLEtBQU1BLEVBQ05GLFdBQVlBLEVBQ1pDLFVBQVdBLEtBR1oxRSxFQUFXLGFBQWNFLEdBQXpCRixVQVdINkUsRUFBaUIsV0FDaEJOLEdBRUEsS0FEQSxHQUFVTyxHQUFXbEIsRUFBS21CLE9BQU83RSxFQUFPc0MsR0FBZ0J3QyxFQUFTRixFQUFTekMsT0FDcEUyQyxFQUFTLEdBQUcsQ0FDakIsR0FBR3BFLEVBQVcwQixlQUFld0MsR0FFNUIsTUFEQTVFLElBQVM4RSxFQUNGRixDQUVSQSxHQUFXQSxFQUFTQyxPQUFPLElBQUtDLEdBRWpDLE9BQU8sR0FLUkosRUFBeUIsV0FDeEIsR0FBVWQsR0FBTW1CLEVBQU1DLEVBQU1DLEVBQU9DLEVBQVdsQyxFQUFNQyxFQUFPaUIsQ0FRM0QsSUFKQWxCLEVBQU9tQyxJQUNQSixFQUFPSixLQUdISSxFQUNILE1BQU8vQixFQWNSLEtBVEFrQyxHQUFjRSxNQUFPTCxFQUFNQyxLQUFNcEMsRUFBaUJtQyxJQUVsRDlCLEVBQVFrQyxJQUNKbEMsR0FDSG5ELEVBQVcsNkJBQStCaUYsRUFBTS9FLEdBRWpEaUYsR0FBU2pDLEVBQU1rQyxFQUFXakMsSUFHbkI4QixFQUFPSixPQUNiSyxFQUFPcEMsRUFBaUJtQyxHQUVaLElBQVRDLElBSDZCLENBU2hDLElBSEFFLEdBQWNFLE1BQU9MLEVBQU1DLEtBQU1BLEdBR3pCQyxFQUFNOUMsT0FBUyxHQUFPNkMsR0FBUUMsRUFBTUEsRUFBTTlDLE9BQVMsR0FBRzZDLE1BQzdEL0IsRUFBUWdDLEVBQU1JLE1BQ2ROLEVBQU9FLEVBQU1JLE1BQU1ELE1BQ25CcEMsRUFBT2lDLEVBQU1JLE1BQ2J6QixFQUFPZCxFQUF1QmlDLEVBQU0vQixFQUFNQyxHQUMxQ2dDLEVBQU1LLEtBQUsxQixFQUdaQSxHQUFPdUIsSUFDSHZCLEdBQ0g5RCxFQUFXLDZCQUErQmlGLEVBQU0vRSxHQUVqRGlGLEVBQU1LLEtBQUtKLEVBQVd0QixHQUt2QixJQUZBTSxFQUFJZSxFQUFNOUMsT0FBUyxFQUNuQnlCLEVBQU9xQixFQUFNZixHQUNQQSxFQUFJLEdBQ1ROLEVBQU9kLEVBQXVCbUMsRUFBTWYsRUFBSSxHQUFHa0IsTUFBT0gsRUFBTWYsRUFBSSxHQUFJTixHQUNoRU0sR0FBSyxDQUVOLE9BQU9OLElBS1J1QixFQUFjLFdBQ2IsR0FBSS9CLEdBQUl3QixFQUFVRSxDQUtsQixJQUhBVCxJQUNBakIsRUFBS2dCLEVBQVVwRSxHQUVabUQsRUFBZUMsSUFBT0EsSUFBT2pFLEVBRS9CLE1BQU9vRyxJQUNELElBQUduQyxJQUFPL0QsR0FBZStELElBQU85RCxFQUV0QyxNQUFPa0csSUFDRCxJQUFHbkMsRUFBa0JELElBQU9BLElBQU83RCxFQUV6QyxNQUFPa0csSUFDRCxJQUFJckMsSUFBTzNELEVBQ2pCLE1BQU9pRyxJQUlQLEtBRkFkLEVBQVdsQixFQUFLbUIsT0FBTzdFLEVBQU9xQyxHQUM5QnlDLEVBQVNGLEVBQVN6QyxPQUNaMkMsRUFBUyxHQUFHLENBQ2pCLEdBQUd6RSxFQUFVK0IsZUFBZXdDLEdBRTNCLE1BREE1RSxJQUFTOEUsR0FFUjVCLEtBQU1wRSxFQUNOaUUsU0FBVTZCLEVBQ1ZlLFNBQVVSLElBQ1ZTLFFBQVEsRUFHVmhCLEdBQVdBLEVBQVNDLE9BQU8sSUFBS0MsR0FHakMsT0FBTyxHQUtUUyxFQUF1QixXQUV0QixJQURBLEdBQWlCbkMsR0FBSXlDLEVBQWpCQyxFQUFTLEdBQ1AzQyxFQUFlaUIsRUFBVXBFLEtBQzlCOEYsR0FBVTdCLEVBQU1qRSxJQUdqQixJQUFHb0UsRUFBVXBFLEtBQVdiLEVBR3ZCLElBRkEyRyxHQUFVN0IsRUFBTWpFLEtBRVZtRCxFQUFlaUIsRUFBVXBFLEtBQzlCOEYsR0FBVTdCLEVBQU1qRSxJQUtsQixJQURBb0QsRUFBS2EsRUFBTWpFLEdBQ0QsTUFBUG9ELEdBQXFCLE1BQVBBLEVBQVksQ0FNNUIsSUFMQTBDLEdBQVU3QixFQUFNakUsS0FDaEJvRCxFQUFLYSxFQUFNakUsSUFDRCxNQUFQb0QsR0FBcUIsTUFBUEEsS0FDaEIwQyxHQUFVN0IsRUFBTWpFLE1BRVhtRCxFQUFlaUIsRUFBVXBFLEtBQzlCOEYsR0FBVTdCLEVBQU1qRSxJQUVibUQsR0FBZWlCLEVBQVVwRSxFQUFNLEtBQ2xDRixFQUFXLHNCQUF3QmdHLEVBQVM3QixFQUFNakUsR0FBUyxJQUFLQSxHQWNsRSxNQVRBNkYsR0FBU3pCLEVBQVVwRSxHQUVoQnFELEVBQWtCd0MsR0FDcEIvRixFQUFXLDhDQUNSZ0csRUFBUzdCLEVBQU1qRSxHQUFTLElBQUtBLEdBQ3ZCNkYsSUFBVzFHLEdBQ3BCVyxFQUFXLG9CQUFxQkUsSUFJaENrRCxLQUFNdkUsRUFDTnlHLE1BQU9XLFdBQVdELEdBQ2xCRSxJQUFLRixJQU1QTixFQUFzQixXQUdyQixJQUZBLEdBQXNEcEMsR0FBbEQ2QyxFQUFNLEdBQUlDLEVBQVFqQyxFQUFNakUsS0FBVW1HLEdBQVMsRUFFakNoRSxFQUFSbkMsR0FBZ0IsQ0FFckIsR0FEQW9ELEVBQUthLEVBQU1qRSxLQUNSb0QsSUFBTzhDLEVBQU8sQ0FDaEJDLEdBQVMsQ0FDVCxPQUNNLEdBQVUsT0FBUC9DLEVBR1QsT0FEQUEsRUFBS2EsRUFBTWpFLE1BRVYsSUFBSyxJQUFLaUcsR0FBTyxJQUFNLE1BQ3ZCLEtBQUssSUFBS0EsR0FBTyxJQUFNLE1BQ3ZCLEtBQUssSUFBS0EsR0FBTyxHQUFNLE1BQ3ZCLEtBQUssSUFBS0EsR0FBTyxJQUFNLE1BQ3ZCLEtBQUssSUFBS0EsR0FBTyxJQUFNLE1BQ3ZCLEtBQUssSUFBS0EsR0FBTyxHQUFRLE1BQ3pCLFNBQVVBLEdBQU8sS0FBTzdDLE1BR3pCNkMsSUFBTzdDLEVBUVQsTUFKSStDLElBQ0hyRyxFQUFXLHlCQUF5Qm1HLEVBQUksSUFBS2pHLElBSTdDa0QsS0FBTXZFLEVBQ055RyxNQUFPYSxFQUNQRCxJQUFLRSxFQUFRRCxFQUFNQyxJQVFyQkUsRUFBbUIsV0FDbEIsR0FBMENDLEdBQXRDakQsRUFBS2dCLEVBQVVwRSxHQUFRc0csRUFBUXRHLENBUW5DLEtBTkdxRCxFQUFrQkQsR0FDcEJwRCxJQUVBRixFQUFXLGNBQWdCbUUsRUFBTWpFLEdBQVFBLEdBRzVCbUMsRUFBUm5DLElBQ0xvRCxFQUFLZ0IsRUFBVXBFLEdBQ1p3RCxFQUFpQkosS0FDbkJwRCxHQU9GLE9BRkFxRyxHQUFhM0MsRUFBSzZDLE1BQU1ELEVBQU90RyxHQUU1QnVDLEVBQVNILGVBQWVpRSxJQUV6Qm5ELEtBQU12RSxFQUNOeUcsTUFBTzdDLEVBQVM4RCxHQUNoQkwsSUFBS0ssR0FFR0EsSUFBZTFELEdBQ2ZPLEtBQU10RSxJQUdkc0UsS0FBTXpFLEVBQ04rSCxLQUFNSCxJQVVUSSxFQUFrQixTQUFTQyxHQUUxQixJQURBLEdBQUkvQyxHQUFpQkMsRUFBWCtDLEtBQWlCUixHQUFTLEVBQ3RCaEUsRUFBUm5DLEdBQWdCLENBR3JCLEdBRkFxRSxJQUNBVixFQUFPUyxFQUFVcEUsR0FDZDJELElBQVMrQyxFQUFhLENBQ3hCUCxHQUFTLEVBQ1RuRyxHQUNBLE9BQ1UyRCxJQUFTdkUsRUFDbkJZLEtBRUE0RCxFQUFPVSxJQUNIVixHQUFRQSxFQUFLVixPQUFTMUUsR0FDekJzQixFQUFXLGlCQUFrQkUsR0FFOUIyRyxFQUFLckIsS0FBSzFCLElBTVosTUFIS3VDLElBQ0pyRyxFQUFXLFlBQWN3RCxPQUFPQyxhQUFhbUQsR0FBYzFHLEdBRXJEMkcsR0FPUmxCLEVBQWlCLFdBQ2hCLEdBQUk5QixHQUFNQyxDQVVWLEtBVEFELEVBQU9TLEVBQVVwRSxHQUdoQjRELEVBREVELElBQVNwRSxFQUNKcUgsSUFFQVIsSUFFUi9CLElBQ0FWLEVBQU9TLEVBQVVwRSxHQUNYMkQsSUFBU3hFLEdBQWV3RSxJQUFTbEUsR0FBZWtFLElBQVNwRSxHQUM5RFMsSUFDRzJELElBQVN4RSxHQUNYa0YsSUFDQVQsR0FDQ1YsS0FBTXhFLEVBQ05tSSxVQUFVLEVBQ1ZDLE9BQVFsRCxFQUNSbUQsU0FBVVgsTUFFRnpDLElBQVNsRSxHQUNsQm1FLEdBQ0NWLEtBQU14RSxFQUNObUksVUFBVSxFQUNWQyxPQUFRbEQsRUFDUm1ELFNBQVV6QyxLQUVYRCxJQUNBVixFQUFPUyxFQUFVcEUsR0FDZDJELElBQVNqRSxHQUNYSSxFQUFXLGFBQWNFLEdBRTFCQSxLQUNTMkQsSUFBU3BFLElBRWxCcUUsR0FDQ1YsS0FBTXJFLEVBQ05tSSxVQUFhUCxFQUFnQmpILEdBQzdCeUgsT0FBUXJELElBR1ZTLElBQ0FWLEVBQU9TLEVBQVVwRSxFQUVsQixPQUFPNEQsSUFRUmdELEVBQWMsV0FDYjVHLEdBQ0EsSUFBSTRELEdBQU9VLEdBRVgsT0FEQUQsS0FDR0QsRUFBVXBFLEtBQVdSLEdBQ3ZCUSxJQUNPNEQsSUFFUDlELEVBQVcsYUFBY0UsR0FBekJGLFNBT0Y0RixFQUFjLFdBRWIsTUFEQTFGLE1BRUNrRCxLQUFNaEUsRUFDTmdJLFNBQVVULEVBQWdCL0csS0FJNUJ5SCxLQUVhaEYsRUFBUm5DLEdBQ0wyRCxFQUFPUyxFQUFVcEUsR0FJZDJELElBQVMvRCxHQUFlK0QsSUFBU3ZFLEVBQ25DWSxLQUdJNEQsRUFBT1UsS0FDVjZDLEVBQU03QixLQUFLMUIsR0FHTXpCLEVBQVJuQyxHQUNURixFQUFXLGVBQWlCbUUsRUFBTWpFLEdBQVMsSUFBS0EsRUFNbkQsT0FBb0IsS0FBakJtSCxFQUFNaEYsT0FDRGdGLEVBQU0sSUFHWmpFLEtBQU0xRSxFQUNONEksS0FBTUQsR0ErR1YsSUF6R0ExRCxFQUFLNEQsUUFBVSxpQkFDZjVELEVBQUs2RCxTQUFXLFdBQWEsTUFBTyx3Q0FBMEM3RCxFQUFLNEQsU0FPbkY1RCxFQUFLOEQsV0FBYSxTQUFTQyxHQUVGLE1BRHhCbkYsR0FBZW9GLEtBQUtDLElBQUlGLEVBQVFyRixPQUFRRSxHQUN4Q2hDLEVBQVVtSCxHQUFXcEgsRUFBVXVILE1BU2hDbEUsRUFBS21FLFlBQWMsU0FBU0osRUFBU0ssR0FHcEMsTUFGQXZGLEdBQWdCbUYsS0FBS0MsSUFBSUYsRUFBUXJGLE9BQVFHLEdBQ3pDNUIsRUFBVzhHLEdBQVdLLEVBQ2ZGLE1BU1JsRSxFQUFLcUUsV0FBYSxTQUFTQyxFQUFjQyxHQUV4QyxNQURBekYsR0FBU3dGLEdBQWdCQyxFQUNsQkwsTUFRUmxFLEVBQUt3RSxjQUFnQixTQUFTVCxHQUs3QixhQUpPbkgsR0FBVW1ILEdBQ2RBLEVBQVFyRixTQUFXRSxJQUNyQkEsRUFBZVAsRUFBYXpCLElBRXRCc0gsTUFPUmxFLEVBQUt5RSxrQkFBb0IsV0FJeEIsTUFIQTdILE1BQ0FnQyxFQUFlLEVBRVJzRixNQVFSbEUsRUFBSzBFLGVBQWlCLFNBQVNYLEdBSzlCLGFBSk85RyxHQUFXOEcsR0FDZkEsRUFBUXJGLFNBQVdHLElBQ3JCQSxFQUFnQlIsRUFBYXBCLElBRXZCaUgsTUFPUmxFLEVBQUsyRSxtQkFBcUIsV0FJekIsTUFIQTFILE1BQ0E0QixFQUFnQixFQUVUcUYsTUFRUmxFLEVBQUs0RSxjQUFnQixTQUFTTixHQUU3QixhQURPeEYsR0FBU3dGLEdBQ1RKLE1BT1JsRSxFQUFLNkUsa0JBQW9CLFdBR3hCLE1BRkEvRixNQUVPb0YsTUFJZSxtQkFBWlksU0FBeUIsQ0FDbkMsR0FBSUMsR0FBV2pLLEVBQUtrRixJQUVwQmxGLEdBQUtrRixLQUFPQSxFQUVaQSxFQUFLZ0YsV0FBYSxXQUlqQixNQUhHbEssR0FBS2tGLE9BQVNBLElBQ2hCbEYsRUFBS2tGLEtBQU8rRSxHQUVOL0UsT0FJYyxtQkFBWGlGLFNBQTBCQSxPQUFPSCxRQUMzQ0EsUUFBVUcsT0FBT0gsUUFBVTlFLEVBRTNCOEUsUUFBUUksTUFBUWxGLEdBR2pCa0UiLCJmaWxlIjoib3V0LmpzLm1hcCIsInNvdXJjZXNDb250ZW50IjpbIi8vICAgICBKYXZhU2NyaXB0IEV4cHJlc3Npb24gUGFyc2VyIChKU0VQKSA8JT0gdmVyc2lvbiAlPlxuLy8gICAgIEpTRVAgbWF5IGJlIGZyZWVseSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2Vcbi8vICAgICBodHRwOi8vanNlcC5mcm9tLnNvL1xuXG4vKmdsb2JhbCBtb2R1bGU6IHRydWUsIGV4cG9ydHM6IHRydWUsIGNvbnNvbGU6IHRydWUgKi9cbihmdW5jdGlvbiAocm9vdCkge1xuXHQndXNlIHN0cmljdCc7XG5cdC8vIE5vZGUgVHlwZXNcblx0Ly8gLS0tLS0tLS0tLVxuXG5cdC8vIFRoaXMgaXMgdGhlIGZ1bGwgc2V0IG9mIHR5cGVzIHRoYXQgYW55IEpTRVAgbm9kZSBjYW4gYmUuXG5cdC8vIFN0b3JlIHRoZW0gaGVyZSB0byBzYXZlIHNwYWNlIHdoZW4gbWluaWZpZWRcblx0dmFyIENPTVBPVU5EID0gJ0NvbXBvdW5kJyxcblx0XHRJREVOVElGSUVSID0gJ0lkZW50aWZpZXInLFxuXHRcdE1FTUJFUl9FWFAgPSAnTWVtYmVyRXhwcmVzc2lvbicsXG5cdFx0TElURVJBTCA9ICdMaXRlcmFsJyxcblx0XHRUSElTX0VYUCA9ICdUaGlzRXhwcmVzc2lvbicsXG5cdFx0Q0FMTF9FWFAgPSAnQ2FsbEV4cHJlc3Npb24nLFxuXHRcdFVOQVJZX0VYUCA9ICdVbmFyeUV4cHJlc3Npb24nLFxuXHRcdEJJTkFSWV9FWFAgPSAnQmluYXJ5RXhwcmVzc2lvbicsXG5cdFx0TE9HSUNBTF9FWFAgPSAnTG9naWNhbEV4cHJlc3Npb24nLFxuXHRcdENPTkRJVElPTkFMX0VYUCA9ICdDb25kaXRpb25hbEV4cHJlc3Npb24nLFxuXHRcdEFSUkFZX0VYUCA9ICdBcnJheUV4cHJlc3Npb24nLFxuXG5cdFx0UEVSSU9EX0NPREUgPSA0NiwgLy8gJy4nXG5cdFx0Q09NTUFfQ09ERSAgPSA0NCwgLy8gJywnXG5cdFx0U1FVT1RFX0NPREUgPSAzOSwgLy8gc2luZ2xlIHF1b3RlXG5cdFx0RFFVT1RFX0NPREUgPSAzNCwgLy8gZG91YmxlIHF1b3Rlc1xuXHRcdE9QQVJFTl9DT0RFID0gNDAsIC8vIChcblx0XHRDUEFSRU5fQ09ERSA9IDQxLCAvLyApXG5cdFx0T0JSQUNLX0NPREUgPSA5MSwgLy8gW1xuXHRcdENCUkFDS19DT0RFID0gOTMsIC8vIF1cblx0XHRRVU1BUktfQ09ERSA9IDYzLCAvLyA/XG5cdFx0U0VNQ09MX0NPREUgPSA1OSwgLy8gO1xuXHRcdENPTE9OX0NPREUgID0gNTgsIC8vIDpcblxuXHRcdHRocm93RXJyb3IgPSBmdW5jdGlvbihtZXNzYWdlLCBpbmRleCkge1xuXHRcdFx0dmFyIGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UgKyAnIGF0IGNoYXJhY3RlciAnICsgaW5kZXgpO1xuXHRcdFx0ZXJyb3IuaW5kZXggPSBpbmRleDtcblx0XHRcdGVycm9yLmRlc2NyaXB0aW9uID0gbWVzc2FnZTtcblx0XHRcdHRocm93IGVycm9yO1xuXHRcdH0sXG5cblx0Ly8gT3BlcmF0aW9uc1xuXHQvLyAtLS0tLS0tLS0tXG5cblx0Ly8gU2V0IGB0YCB0byBgdHJ1ZWAgdG8gc2F2ZSBzcGFjZSAod2hlbiBtaW5pZmllZCwgbm90IGd6aXBwZWQpXG5cdFx0dCA9IHRydWUsXG5cdC8vIFVzZSBhIHF1aWNrbHktYWNjZXNzaWJsZSBtYXAgdG8gc3RvcmUgYWxsIG9mIHRoZSB1bmFyeSBvcGVyYXRvcnNcblx0Ly8gVmFsdWVzIGFyZSBzZXQgdG8gYHRydWVgIChpdCByZWFsbHkgZG9lc24ndCBtYXR0ZXIpXG5cdFx0dW5hcnlfb3BzID0geyctJzogdCwgJyEnOiB0LCAnfic6IHQsICcrJzogdH0sXG5cdC8vIEFsc28gdXNlIGEgbWFwIGZvciB0aGUgYmluYXJ5IG9wZXJhdGlvbnMgYnV0IHNldCB0aGVpciB2YWx1ZXMgdG8gdGhlaXJcblx0Ly8gYmluYXJ5IHByZWNlZGVuY2UgZm9yIHF1aWNrIHJlZmVyZW5jZTpcblx0Ly8gc2VlIFtPcmRlciBvZiBvcGVyYXRpb25zXShodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL09yZGVyX29mX29wZXJhdGlvbnMjUHJvZ3JhbW1pbmdfbGFuZ3VhZ2UpXG5cdFx0YmluYXJ5X29wcyA9IHtcblx0XHRcdCd8fCc6IDEsICcmJic6IDIsICd8JzogMywgICdeJzogNCwgICcmJzogNSxcblx0XHRcdCc9PSc6IDYsICchPSc6IDYsICc9PT0nOiA2LCAnIT09JzogNixcblx0XHRcdCc8JzogNywgICc+JzogNywgICc8PSc6IDcsICAnPj0nOiA3LFxuXHRcdFx0Jzw8Jzo4LCAgJz4+JzogOCwgJz4+Pic6IDgsXG5cdFx0XHQnKyc6IDksICctJzogOSxcblx0XHRcdCcqJzogMTAsICcvJzogMTAsICclJzogMTBcblx0XHR9LFxuXHQvLyBHZXQgcmV0dXJuIHRoZSBsb25nZXN0IGtleSBsZW5ndGggb2YgYW55IG9iamVjdFxuXHRcdGdldE1heEtleUxlbiA9IGZ1bmN0aW9uKG9iaikge1xuXHRcdFx0dmFyIG1heF9sZW4gPSAwLCBsZW47XG5cdFx0XHRmb3IodmFyIGtleSBpbiBvYmopIHtcblx0XHRcdFx0aWYoKGxlbiA9IGtleS5sZW5ndGgpID4gbWF4X2xlbiAmJiBvYmouaGFzT3duUHJvcGVydHkoa2V5KSkge1xuXHRcdFx0XHRcdG1heF9sZW4gPSBsZW47XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXhfbGVuO1xuXHRcdH0sXG5cdFx0bWF4X3Vub3BfbGVuID0gZ2V0TWF4S2V5TGVuKHVuYXJ5X29wcyksXG5cdFx0bWF4X2Jpbm9wX2xlbiA9IGdldE1heEtleUxlbihiaW5hcnlfb3BzKSxcblx0Ly8gTGl0ZXJhbHNcblx0Ly8gLS0tLS0tLS0tLVxuXHQvLyBTdG9yZSB0aGUgdmFsdWVzIHRvIHJldHVybiBmb3IgdGhlIHZhcmlvdXMgbGl0ZXJhbHMgd2UgbWF5IGVuY291bnRlclxuXHRcdGxpdGVyYWxzID0ge1xuXHRcdFx0J3RydWUnOiB0cnVlLFxuXHRcdFx0J2ZhbHNlJzogZmFsc2UsXG5cdFx0XHQnbnVsbCc6IG51bGxcblx0XHR9LFxuXHQvLyBFeGNlcHQgZm9yIGB0aGlzYCwgd2hpY2ggaXMgc3BlY2lhbC4gVGhpcyBjb3VsZCBiZSBjaGFuZ2VkIHRvIHNvbWV0aGluZyBsaWtlIGAnc2VsZidgIGFzIHdlbGxcblx0XHR0aGlzX3N0ciA9ICd0aGlzJyxcblx0Ly8gUmV0dXJucyB0aGUgcHJlY2VkZW5jZSBvZiBhIGJpbmFyeSBvcGVyYXRvciBvciBgMGAgaWYgaXQgaXNuJ3QgYSBiaW5hcnkgb3BlcmF0b3Jcblx0XHRiaW5hcnlQcmVjZWRlbmNlID0gZnVuY3Rpb24ob3BfdmFsKSB7XG5cdFx0XHRyZXR1cm4gYmluYXJ5X29wc1tvcF92YWxdIHx8IDA7XG5cdFx0fSxcblx0Ly8gVXRpbGl0eSBmdW5jdGlvbiAoZ2V0cyBjYWxsZWQgZnJvbSBtdWx0aXBsZSBwbGFjZXMpXG5cdC8vIEFsc28gbm90ZSB0aGF0IGBhICYmIGJgIGFuZCBgYSB8fCBiYCBhcmUgKmxvZ2ljYWwqIGV4cHJlc3Npb25zLCBub3QgYmluYXJ5IGV4cHJlc3Npb25zXG5cdFx0Y3JlYXRlQmluYXJ5RXhwcmVzc2lvbiA9IGZ1bmN0aW9uIChvcGVyYXRvciwgbGVmdCwgcmlnaHQpIHtcblx0XHRcdHZhciB0eXBlID0gKG9wZXJhdG9yID09PSAnfHwnIHx8IG9wZXJhdG9yID09PSAnJiYnKSA/IExPR0lDQUxfRVhQIDogQklOQVJZX0VYUDtcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdG9wZXJhdG9yOiBvcGVyYXRvcixcblx0XHRcdFx0bGVmdDogbGVmdCxcblx0XHRcdFx0cmlnaHQ6IHJpZ2h0XG5cdFx0XHR9O1xuXHRcdH0sXG5cdFx0Ly8gYGNoYCBpcyBhIGNoYXJhY3RlciBjb2RlIGluIHRoZSBuZXh0IHRocmVlIGZ1bmN0aW9uc1xuXHRcdGlzRGVjaW1hbERpZ2l0ID0gZnVuY3Rpb24oY2gpIHtcblx0XHRcdHJldHVybiAoY2ggPj0gNDggJiYgY2ggPD0gNTcpOyAvLyAwLi4uOVxuXHRcdH0sXG5cdFx0aXNJZGVudGlmaWVyU3RhcnQgPSBmdW5jdGlvbihjaCkge1xuXHRcdFx0cmV0dXJuIChjaCA9PT0gMzYpIHx8IChjaCA9PT0gOTUpIHx8IC8vIGAkYCBhbmQgYF9gXG5cdFx0XHRcdFx0KGNoID49IDY1ICYmIGNoIDw9IDkwKSB8fCAvLyBBLi4uWlxuXHRcdFx0XHRcdChjaCA+PSA5NyAmJiBjaCA8PSAxMjIpIHx8IC8vIGEuLi56XG4gICAgICAgICAgICAgICAgICAgIChjaCA+PSAxMjggJiYgIWJpbmFyeV9vcHNbU3RyaW5nLmZyb21DaGFyQ29kZShjaCldKTsgLy8gYW55IG5vbi1BU0NJSSB0aGF0IGlzIG5vdCBhbiBvcGVyYXRvclxuXHRcdH0sXG5cdFx0aXNJZGVudGlmaWVyUGFydCA9IGZ1bmN0aW9uKGNoKSB7XG5cdFx0XHRyZXR1cm4gKGNoID09PSAzNikgfHwgKGNoID09PSA5NSkgfHwgLy8gYCRgIGFuZCBgX2Bcblx0XHRcdFx0XHQoY2ggPj0gNjUgJiYgY2ggPD0gOTApIHx8IC8vIEEuLi5aXG5cdFx0XHRcdFx0KGNoID49IDk3ICYmIGNoIDw9IDEyMikgfHwgLy8gYS4uLnpcblx0XHRcdFx0XHQoY2ggPj0gNDggJiYgY2ggPD0gNTcpIHx8IC8vIDAuLi45XG4gICAgICAgICAgICAgICAgICAgIChjaCA+PSAxMjggJiYgIWJpbmFyeV9vcHNbU3RyaW5nLmZyb21DaGFyQ29kZShjaCldKTsgLy8gYW55IG5vbi1BU0NJSSB0aGF0IGlzIG5vdCBhbiBvcGVyYXRvclxuXHRcdH0sXG5cblx0XHQvLyBQYXJzaW5nXG5cdFx0Ly8gLS0tLS0tLVxuXHRcdC8vIGBleHByYCBpcyBhIHN0cmluZyB3aXRoIHRoZSBwYXNzZWQgaW4gZXhwcmVzc2lvblxuXHRcdGpzZXAgPSBmdW5jdGlvbihleHByKSB7XG5cdFx0XHQvLyBgaW5kZXhgIHN0b3JlcyB0aGUgY2hhcmFjdGVyIG51bWJlciB3ZSBhcmUgY3VycmVudGx5IGF0IHdoaWxlIGBsZW5ndGhgIGlzIGEgY29uc3RhbnRcblx0XHRcdC8vIEFsbCBvZiB0aGUgZ29iYmxlcyBiZWxvdyB3aWxsIG1vZGlmeSBgaW5kZXhgIGFzIHdlIG1vdmUgYWxvbmdcblx0XHRcdHZhciBpbmRleCA9IDAsXG5cdFx0XHRcdGNoYXJBdEZ1bmMgPSBleHByLmNoYXJBdCxcblx0XHRcdFx0Y2hhckNvZGVBdEZ1bmMgPSBleHByLmNoYXJDb2RlQXQsXG5cdFx0XHRcdGV4cHJJID0gZnVuY3Rpb24oaSkgeyByZXR1cm4gY2hhckF0RnVuYy5jYWxsKGV4cHIsIGkpOyB9LFxuXHRcdFx0XHRleHBySUNvZGUgPSBmdW5jdGlvbihpKSB7IHJldHVybiBjaGFyQ29kZUF0RnVuYy5jYWxsKGV4cHIsIGkpOyB9LFxuXHRcdFx0XHRsZW5ndGggPSBleHByLmxlbmd0aCxcblxuXHRcdFx0XHQvLyBQdXNoIGBpbmRleGAgdXAgdG8gdGhlIG5leHQgbm9uLXNwYWNlIGNoYXJhY3RlclxuXHRcdFx0XHRnb2JibGVTcGFjZXMgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHR2YXIgY2ggPSBleHBySUNvZGUoaW5kZXgpO1xuXHRcdFx0XHRcdC8vIHNwYWNlIG9yIHRhYlxuXHRcdFx0XHRcdHdoaWxlKGNoID09PSAzMiB8fCBjaCA9PT0gOSB8fCBjaCA9PT0gMTAgfHwgY2ggPT09IDEzKSB7XG5cdFx0XHRcdFx0XHRjaCA9IGV4cHJJQ29kZSgrK2luZGV4KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gVGhlIG1haW4gcGFyc2luZyBmdW5jdGlvbi4gTXVjaCBvZiB0aGlzIGNvZGUgaXMgZGVkaWNhdGVkIHRvIHRlcm5hcnkgZXhwcmVzc2lvbnNcblx0XHRcdFx0Z29iYmxlRXhwcmVzc2lvbiA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHZhciB0ZXN0ID0gZ29iYmxlQmluYXJ5RXhwcmVzc2lvbigpLFxuXHRcdFx0XHRcdFx0Y29uc2VxdWVudCwgYWx0ZXJuYXRlO1xuXHRcdFx0XHRcdGdvYmJsZVNwYWNlcygpO1xuXHRcdFx0XHRcdGlmKGV4cHJJQ29kZShpbmRleCkgPT09IFFVTUFSS19DT0RFKSB7XG5cdFx0XHRcdFx0XHQvLyBUZXJuYXJ5IGV4cHJlc3Npb246IHRlc3QgPyBjb25zZXF1ZW50IDogYWx0ZXJuYXRlXG5cdFx0XHRcdFx0XHRpbmRleCsrO1xuXHRcdFx0XHRcdFx0Y29uc2VxdWVudCA9IGdvYmJsZUV4cHJlc3Npb24oKTtcblx0XHRcdFx0XHRcdGlmKCFjb25zZXF1ZW50KSB7XG5cdFx0XHRcdFx0XHRcdHRocm93RXJyb3IoJ0V4cGVjdGVkIGV4cHJlc3Npb24nLCBpbmRleCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRnb2JibGVTcGFjZXMoKTtcblx0XHRcdFx0XHRcdGlmKGV4cHJJQ29kZShpbmRleCkgPT09IENPTE9OX0NPREUpIHtcblx0XHRcdFx0XHRcdFx0aW5kZXgrKztcblx0XHRcdFx0XHRcdFx0YWx0ZXJuYXRlID0gZ29iYmxlRXhwcmVzc2lvbigpO1xuXHRcdFx0XHRcdFx0XHRpZighYWx0ZXJuYXRlKSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhyb3dFcnJvcignRXhwZWN0ZWQgZXhwcmVzc2lvbicsIGluZGV4KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHRcdHR5cGU6IENPTkRJVElPTkFMX0VYUCxcblx0XHRcdFx0XHRcdFx0XHR0ZXN0OiB0ZXN0LFxuXHRcdFx0XHRcdFx0XHRcdGNvbnNlcXVlbnQ6IGNvbnNlcXVlbnQsXG5cdFx0XHRcdFx0XHRcdFx0YWx0ZXJuYXRlOiBhbHRlcm5hdGVcblx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHRocm93RXJyb3IoJ0V4cGVjdGVkIDonLCBpbmRleCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJldHVybiB0ZXN0O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBTZWFyY2ggZm9yIHRoZSBvcGVyYXRpb24gcG9ydGlvbiBvZiB0aGUgc3RyaW5nIChlLmcuIGArYCwgYD09PWApXG5cdFx0XHRcdC8vIFN0YXJ0IGJ5IHRha2luZyB0aGUgbG9uZ2VzdCBwb3NzaWJsZSBiaW5hcnkgb3BlcmF0aW9ucyAoMyBjaGFyYWN0ZXJzOiBgPT09YCwgYCE9PWAsIGA+Pj5gKVxuXHRcdFx0XHQvLyBhbmQgbW92ZSBkb3duIGZyb20gMyB0byAyIHRvIDEgY2hhcmFjdGVyIHVudGlsIGEgbWF0Y2hpbmcgYmluYXJ5IG9wZXJhdGlvbiBpcyBmb3VuZFxuXHRcdFx0XHQvLyB0aGVuLCByZXR1cm4gdGhhdCBiaW5hcnkgb3BlcmF0aW9uXG5cdFx0XHRcdGdvYmJsZUJpbmFyeU9wID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0Z29iYmxlU3BhY2VzKCk7XG5cdFx0XHRcdFx0dmFyIGJpb3AsIHRvX2NoZWNrID0gZXhwci5zdWJzdHIoaW5kZXgsIG1heF9iaW5vcF9sZW4pLCB0Y19sZW4gPSB0b19jaGVjay5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUodGNfbGVuID4gMCkge1xuXHRcdFx0XHRcdFx0aWYoYmluYXJ5X29wcy5oYXNPd25Qcm9wZXJ0eSh0b19jaGVjaykpIHtcblx0XHRcdFx0XHRcdFx0aW5kZXggKz0gdGNfbGVuO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdG9fY2hlY2s7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR0b19jaGVjayA9IHRvX2NoZWNrLnN1YnN0cigwLCAtLXRjX2xlbik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBUaGlzIGZ1bmN0aW9uIGlzIHJlc3BvbnNpYmxlIGZvciBnb2JibGluZyBhbiBpbmRpdmlkdWFsIGV4cHJlc3Npb24sXG5cdFx0XHRcdC8vIGUuZy4gYDFgLCBgMSsyYCwgYGErKGIqMiktTWF0aC5zcXJ0KDIpYFxuXHRcdFx0XHRnb2JibGVCaW5hcnlFeHByZXNzaW9uID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0dmFyIGNoX2ksIG5vZGUsIGJpb3AsIHByZWMsIHN0YWNrLCBiaW9wX2luZm8sIGxlZnQsIHJpZ2h0LCBpO1xuXG5cdFx0XHRcdFx0Ly8gRmlyc3QsIHRyeSB0byBnZXQgdGhlIGxlZnRtb3N0IHRoaW5nXG5cdFx0XHRcdFx0Ly8gVGhlbiwgY2hlY2sgdG8gc2VlIGlmIHRoZXJlJ3MgYSBiaW5hcnkgb3BlcmF0b3Igb3BlcmF0aW5nIG9uIHRoYXQgbGVmdG1vc3QgdGhpbmdcblx0XHRcdFx0XHRsZWZ0ID0gZ29iYmxlVG9rZW4oKTtcblx0XHRcdFx0XHRiaW9wID0gZ29iYmxlQmluYXJ5T3AoKTtcblxuXHRcdFx0XHRcdC8vIElmIHRoZXJlIHdhc24ndCBhIGJpbmFyeSBvcGVyYXRvciwganVzdCByZXR1cm4gdGhlIGxlZnRtb3N0IG5vZGVcblx0XHRcdFx0XHRpZighYmlvcCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGxlZnQ7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB3ZSBuZWVkIHRvIHN0YXJ0IGEgc3RhY2sgdG8gcHJvcGVybHkgcGxhY2UgdGhlIGJpbmFyeSBvcGVyYXRpb25zIGluIHRoZWlyXG5cdFx0XHRcdFx0Ly8gcHJlY2VkZW5jZSBzdHJ1Y3R1cmVcblx0XHRcdFx0XHRiaW9wX2luZm8gPSB7IHZhbHVlOiBiaW9wLCBwcmVjOiBiaW5hcnlQcmVjZWRlbmNlKGJpb3ApfTtcblxuXHRcdFx0XHRcdHJpZ2h0ID0gZ29iYmxlVG9rZW4oKTtcblx0XHRcdFx0XHRpZighcmlnaHQpIHtcblx0XHRcdFx0XHRcdHRocm93RXJyb3IoXCJFeHBlY3RlZCBleHByZXNzaW9uIGFmdGVyIFwiICsgYmlvcCwgaW5kZXgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRzdGFjayA9IFtsZWZ0LCBiaW9wX2luZm8sIHJpZ2h0XTtcblxuXHRcdFx0XHRcdC8vIFByb3Blcmx5IGRlYWwgd2l0aCBwcmVjZWRlbmNlIHVzaW5nIFtyZWN1cnNpdmUgZGVzY2VudF0oaHR0cDovL3d3dy5lbmdyLm11bi5jYS9+dGhlby9NaXNjL2V4cF9wYXJzaW5nLmh0bSlcblx0XHRcdFx0XHR3aGlsZSgoYmlvcCA9IGdvYmJsZUJpbmFyeU9wKCkpKSB7XG5cdFx0XHRcdFx0XHRwcmVjID0gYmluYXJ5UHJlY2VkZW5jZShiaW9wKTtcblxuXHRcdFx0XHRcdFx0aWYocHJlYyA9PT0gMCkge1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGJpb3BfaW5mbyA9IHsgdmFsdWU6IGJpb3AsIHByZWM6IHByZWMgfTtcblxuXHRcdFx0XHRcdFx0Ly8gUmVkdWNlOiBtYWtlIGEgYmluYXJ5IGV4cHJlc3Npb24gZnJvbSB0aGUgdGhyZWUgdG9wbW9zdCBlbnRyaWVzLlxuXHRcdFx0XHRcdFx0d2hpbGUgKChzdGFjay5sZW5ndGggPiAyKSAmJiAocHJlYyA8PSBzdGFja1tzdGFjay5sZW5ndGggLSAyXS5wcmVjKSkge1xuXHRcdFx0XHRcdFx0XHRyaWdodCA9IHN0YWNrLnBvcCgpO1xuXHRcdFx0XHRcdFx0XHRiaW9wID0gc3RhY2sucG9wKCkudmFsdWU7XG5cdFx0XHRcdFx0XHRcdGxlZnQgPSBzdGFjay5wb3AoKTtcblx0XHRcdFx0XHRcdFx0bm9kZSA9IGNyZWF0ZUJpbmFyeUV4cHJlc3Npb24oYmlvcCwgbGVmdCwgcmlnaHQpO1xuXHRcdFx0XHRcdFx0XHRzdGFjay5wdXNoKG5vZGUpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRub2RlID0gZ29iYmxlVG9rZW4oKTtcblx0XHRcdFx0XHRcdGlmKCFub2RlKSB7XG5cdFx0XHRcdFx0XHRcdHRocm93RXJyb3IoXCJFeHBlY3RlZCBleHByZXNzaW9uIGFmdGVyIFwiICsgYmlvcCwgaW5kZXgpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0c3RhY2sucHVzaChiaW9wX2luZm8sIG5vZGUpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGkgPSBzdGFjay5sZW5ndGggLSAxO1xuXHRcdFx0XHRcdG5vZGUgPSBzdGFja1tpXTtcblx0XHRcdFx0XHR3aGlsZShpID4gMSkge1xuXHRcdFx0XHRcdFx0bm9kZSA9IGNyZWF0ZUJpbmFyeUV4cHJlc3Npb24oc3RhY2tbaSAtIDFdLnZhbHVlLCBzdGFja1tpIC0gMl0sIG5vZGUpO1xuXHRcdFx0XHRcdFx0aSAtPSAyO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gbm9kZTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBBbiBpbmRpdmlkdWFsIHBhcnQgb2YgYSBiaW5hcnkgZXhwcmVzc2lvbjpcblx0XHRcdFx0Ly8gZS5nLiBgZm9vLmJhcihiYXopYCwgYDFgLCBgXCJhYmNcImAsIGAoYSAlIDIpYCAoYmVjYXVzZSBpdCdzIGluIHBhcmVudGhlc2lzKVxuXHRcdFx0XHRnb2JibGVUb2tlbiA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHZhciBjaCwgdG9fY2hlY2ssIHRjX2xlbjtcblxuXHRcdFx0XHRcdGdvYmJsZVNwYWNlcygpO1xuXHRcdFx0XHRcdGNoID0gZXhwcklDb2RlKGluZGV4KTtcblxuXHRcdFx0XHRcdGlmKGlzRGVjaW1hbERpZ2l0KGNoKSB8fCBjaCA9PT0gUEVSSU9EX0NPREUpIHtcblx0XHRcdFx0XHRcdC8vIENoYXIgY29kZSA0NiBpcyBhIGRvdCBgLmAgd2hpY2ggY2FuIHN0YXJ0IG9mZiBhIG51bWVyaWMgbGl0ZXJhbFxuXHRcdFx0XHRcdFx0cmV0dXJuIGdvYmJsZU51bWVyaWNMaXRlcmFsKCk7XG5cdFx0XHRcdFx0fSBlbHNlIGlmKGNoID09PSBTUVVPVEVfQ09ERSB8fCBjaCA9PT0gRFFVT1RFX0NPREUpIHtcblx0XHRcdFx0XHRcdC8vIFNpbmdsZSBvciBkb3VibGUgcXVvdGVzXG5cdFx0XHRcdFx0XHRyZXR1cm4gZ29iYmxlU3RyaW5nTGl0ZXJhbCgpO1xuXHRcdFx0XHRcdH0gZWxzZSBpZihpc0lkZW50aWZpZXJTdGFydChjaCkgfHwgY2ggPT09IE9QQVJFTl9DT0RFKSB7IC8vIG9wZW4gcGFyZW50aGVzaXNcblx0XHRcdFx0XHRcdC8vIGBmb29gLCBgYmFyLmJhemBcblx0XHRcdFx0XHRcdHJldHVybiBnb2JibGVWYXJpYWJsZSgpO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoY2ggPT09IE9CUkFDS19DT0RFKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZ29iYmxlQXJyYXkoKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dG9fY2hlY2sgPSBleHByLnN1YnN0cihpbmRleCwgbWF4X3Vub3BfbGVuKTtcblx0XHRcdFx0XHRcdHRjX2xlbiA9IHRvX2NoZWNrLmxlbmd0aDtcblx0XHRcdFx0XHRcdHdoaWxlKHRjX2xlbiA+IDApIHtcblx0XHRcdFx0XHRcdFx0aWYodW5hcnlfb3BzLmhhc093blByb3BlcnR5KHRvX2NoZWNrKSkge1xuXHRcdFx0XHRcdFx0XHRcdGluZGV4ICs9IHRjX2xlbjtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogVU5BUllfRVhQLFxuXHRcdFx0XHRcdFx0XHRcdFx0b3BlcmF0b3I6IHRvX2NoZWNrLFxuXHRcdFx0XHRcdFx0XHRcdFx0YXJndW1lbnQ6IGdvYmJsZVRva2VuKCksXG5cdFx0XHRcdFx0XHRcdFx0XHRwcmVmaXg6IHRydWVcblx0XHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHRvX2NoZWNrID0gdG9fY2hlY2suc3Vic3RyKDAsIC0tdGNfbGVuKTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblx0XHRcdFx0Ly8gUGFyc2Ugc2ltcGxlIG51bWVyaWMgbGl0ZXJhbHM6IGAxMmAsIGAzLjRgLCBgLjVgLiBEbyB0aGlzIGJ5IHVzaW5nIGEgc3RyaW5nIHRvXG5cdFx0XHRcdC8vIGtlZXAgdHJhY2sgb2YgZXZlcnl0aGluZyBpbiB0aGUgbnVtZXJpYyBsaXRlcmFsIGFuZCB0aGVuIGNhbGxpbmcgYHBhcnNlRmxvYXRgIG9uIHRoYXQgc3RyaW5nXG5cdFx0XHRcdGdvYmJsZU51bWVyaWNMaXRlcmFsID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0dmFyIG51bWJlciA9ICcnLCBjaCwgY2hDb2RlO1xuXHRcdFx0XHRcdHdoaWxlKGlzRGVjaW1hbERpZ2l0KGV4cHJJQ29kZShpbmRleCkpKSB7XG5cdFx0XHRcdFx0XHRudW1iZXIgKz0gZXhwckkoaW5kZXgrKyk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYoZXhwcklDb2RlKGluZGV4KSA9PT0gUEVSSU9EX0NPREUpIHsgLy8gY2FuIHN0YXJ0IHdpdGggYSBkZWNpbWFsIG1hcmtlclxuXHRcdFx0XHRcdFx0bnVtYmVyICs9IGV4cHJJKGluZGV4KyspO1xuXG5cdFx0XHRcdFx0XHR3aGlsZShpc0RlY2ltYWxEaWdpdChleHBySUNvZGUoaW5kZXgpKSkge1xuXHRcdFx0XHRcdFx0XHRudW1iZXIgKz0gZXhwckkoaW5kZXgrKyk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Y2ggPSBleHBySShpbmRleCk7XG5cdFx0XHRcdFx0aWYoY2ggPT09ICdlJyB8fCBjaCA9PT0gJ0UnKSB7IC8vIGV4cG9uZW50IG1hcmtlclxuXHRcdFx0XHRcdFx0bnVtYmVyICs9IGV4cHJJKGluZGV4KyspO1xuXHRcdFx0XHRcdFx0Y2ggPSBleHBySShpbmRleCk7XG5cdFx0XHRcdFx0XHRpZihjaCA9PT0gJysnIHx8IGNoID09PSAnLScpIHsgLy8gZXhwb25lbnQgc2lnblxuXHRcdFx0XHRcdFx0XHRudW1iZXIgKz0gZXhwckkoaW5kZXgrKyk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR3aGlsZShpc0RlY2ltYWxEaWdpdChleHBySUNvZGUoaW5kZXgpKSkgeyAvL2V4cG9uZW50IGl0c2VsZlxuXHRcdFx0XHRcdFx0XHRudW1iZXIgKz0gZXhwckkoaW5kZXgrKyk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZighaXNEZWNpbWFsRGlnaXQoZXhwcklDb2RlKGluZGV4LTEpKSApIHtcblx0XHRcdFx0XHRcdFx0dGhyb3dFcnJvcignRXhwZWN0ZWQgZXhwb25lbnQgKCcgKyBudW1iZXIgKyBleHBySShpbmRleCkgKyAnKScsIGluZGV4KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblxuXHRcdFx0XHRcdGNoQ29kZSA9IGV4cHJJQ29kZShpbmRleCk7XG5cdFx0XHRcdFx0Ly8gQ2hlY2sgdG8gbWFrZSBzdXJlIHRoaXMgaXNuJ3QgYSB2YXJpYWJsZSBuYW1lIHRoYXQgc3RhcnQgd2l0aCBhIG51bWJlciAoMTIzYWJjKVxuXHRcdFx0XHRcdGlmKGlzSWRlbnRpZmllclN0YXJ0KGNoQ29kZSkpIHtcblx0XHRcdFx0XHRcdHRocm93RXJyb3IoJ1ZhcmlhYmxlIG5hbWVzIGNhbm5vdCBzdGFydCB3aXRoIGEgbnVtYmVyICgnICtcblx0XHRcdFx0XHRcdFx0XHRcdG51bWJlciArIGV4cHJJKGluZGV4KSArICcpJywgaW5kZXgpO1xuXHRcdFx0XHRcdH0gZWxzZSBpZihjaENvZGUgPT09IFBFUklPRF9DT0RFKSB7XG5cdFx0XHRcdFx0XHR0aHJvd0Vycm9yKCdVbmV4cGVjdGVkIHBlcmlvZCcsIGluZGV4KTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0dHlwZTogTElURVJBTCxcblx0XHRcdFx0XHRcdHZhbHVlOiBwYXJzZUZsb2F0KG51bWJlciksXG5cdFx0XHRcdFx0XHRyYXc6IG51bWJlclxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gUGFyc2VzIGEgc3RyaW5nIGxpdGVyYWwsIHN0YXJpbmcgd2l0aCBzaW5nbGUgb3IgZG91YmxlIHF1b3RlcyB3aXRoIGJhc2ljIHN1cHBvcnQgZm9yIGVzY2FwZSBjb2Rlc1xuXHRcdFx0XHQvLyBlLmcuIGBcImhlbGxvIHdvcmxkXCJgLCBgJ3RoaXMgaXNcXG5KU0VQJ2Bcblx0XHRcdFx0Z29iYmxlU3RyaW5nTGl0ZXJhbCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHZhciBzdHIgPSAnJywgcXVvdGUgPSBleHBySShpbmRleCsrKSwgY2xvc2VkID0gZmFsc2UsIGNoO1xuXG5cdFx0XHRcdFx0d2hpbGUoaW5kZXggPCBsZW5ndGgpIHtcblx0XHRcdFx0XHRcdGNoID0gZXhwckkoaW5kZXgrKyk7XG5cdFx0XHRcdFx0XHRpZihjaCA9PT0gcXVvdGUpIHtcblx0XHRcdFx0XHRcdFx0Y2xvc2VkID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYoY2ggPT09ICdcXFxcJykge1xuXHRcdFx0XHRcdFx0XHQvLyBDaGVjayBmb3IgYWxsIG9mIHRoZSBjb21tb24gZXNjYXBlIGNvZGVzXG5cdFx0XHRcdFx0XHRcdGNoID0gZXhwckkoaW5kZXgrKyk7XG5cdFx0XHRcdFx0XHRcdHN3aXRjaChjaCkge1xuXHRcdFx0XHRcdFx0XHRcdGNhc2UgJ24nOiBzdHIgKz0gJ1xcbic7IGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdGNhc2UgJ3InOiBzdHIgKz0gJ1xccic7IGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdGNhc2UgJ3QnOiBzdHIgKz0gJ1xcdCc7IGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdGNhc2UgJ2InOiBzdHIgKz0gJ1xcYic7IGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdGNhc2UgJ2YnOiBzdHIgKz0gJ1xcZic7IGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdGNhc2UgJ3YnOiBzdHIgKz0gJ1xceDBCJzsgYnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0ZGVmYXVsdCA6IHN0ciArPSAnXFxcXCcgKyBjaDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0c3RyICs9IGNoO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmKCFjbG9zZWQpIHtcblx0XHRcdFx0XHRcdHRocm93RXJyb3IoJ1VuY2xvc2VkIHF1b3RlIGFmdGVyIFwiJytzdHIrJ1wiJywgaW5kZXgpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHR0eXBlOiBMSVRFUkFMLFxuXHRcdFx0XHRcdFx0dmFsdWU6IHN0cixcblx0XHRcdFx0XHRcdHJhdzogcXVvdGUgKyBzdHIgKyBxdW90ZVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gR29iYmxlcyBvbmx5IGlkZW50aWZpZXJzXG5cdFx0XHRcdC8vIGUuZy46IGBmb29gLCBgX3ZhbHVlYCwgYCR4MWBcblx0XHRcdFx0Ly8gQWxzbywgdGhpcyBmdW5jdGlvbiBjaGVja3MgaWYgdGhhdCBpZGVudGlmaWVyIGlzIGEgbGl0ZXJhbDpcblx0XHRcdFx0Ly8gKGUuZy4gYHRydWVgLCBgZmFsc2VgLCBgbnVsbGApIG9yIGB0aGlzYFxuXHRcdFx0XHRnb2JibGVJZGVudGlmaWVyID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0dmFyIGNoID0gZXhwcklDb2RlKGluZGV4KSwgc3RhcnQgPSBpbmRleCwgaWRlbnRpZmllcjtcblxuXHRcdFx0XHRcdGlmKGlzSWRlbnRpZmllclN0YXJ0KGNoKSkge1xuXHRcdFx0XHRcdFx0aW5kZXgrKztcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dGhyb3dFcnJvcignVW5leHBlY3RlZCAnICsgZXhwckkoaW5kZXgpLCBpbmRleCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0d2hpbGUoaW5kZXggPCBsZW5ndGgpIHtcblx0XHRcdFx0XHRcdGNoID0gZXhwcklDb2RlKGluZGV4KTtcblx0XHRcdFx0XHRcdGlmKGlzSWRlbnRpZmllclBhcnQoY2gpKSB7XG5cdFx0XHRcdFx0XHRcdGluZGV4Kys7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWRlbnRpZmllciA9IGV4cHIuc2xpY2Uoc3RhcnQsIGluZGV4KTtcblxuXHRcdFx0XHRcdGlmKGxpdGVyYWxzLmhhc093blByb3BlcnR5KGlkZW50aWZpZXIpKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHR0eXBlOiBMSVRFUkFMLFxuXHRcdFx0XHRcdFx0XHR2YWx1ZTogbGl0ZXJhbHNbaWRlbnRpZmllcl0sXG5cdFx0XHRcdFx0XHRcdHJhdzogaWRlbnRpZmllclxuXHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHR9IGVsc2UgaWYoaWRlbnRpZmllciA9PT0gdGhpc19zdHIpIHtcblx0XHRcdFx0XHRcdHJldHVybiB7IHR5cGU6IFRISVNfRVhQIH07XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHRcdHR5cGU6IElERU5USUZJRVIsXG5cdFx0XHRcdFx0XHRcdG5hbWU6IGlkZW50aWZpZXJcblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIEdvYmJsZXMgYSBsaXN0IG9mIGFyZ3VtZW50cyB3aXRoaW4gdGhlIGNvbnRleHQgb2YgYSBmdW5jdGlvbiBjYWxsXG5cdFx0XHRcdC8vIG9yIGFycmF5IGxpdGVyYWwuIFRoaXMgZnVuY3Rpb24gYWxzbyBhc3N1bWVzIHRoYXQgdGhlIG9wZW5pbmcgY2hhcmFjdGVyXG5cdFx0XHRcdC8vIGAoYCBvciBgW2AgaGFzIGFscmVhZHkgYmVlbiBnb2JibGVkLCBhbmQgZ29iYmxlcyBleHByZXNzaW9ucyBhbmQgY29tbWFzXG5cdFx0XHRcdC8vIHVudGlsIHRoZSB0ZXJtaW5hdG9yIGNoYXJhY3RlciBgKWAgb3IgYF1gIGlzIGVuY291bnRlcmVkLlxuXHRcdFx0XHQvLyBlLmcuIGBmb28oYmFyLCBiYXopYCwgYG15X2Z1bmMoKWAsIG9yIGBbYmFyLCBiYXpdYFxuXHRcdFx0XHRnb2JibGVBcmd1bWVudHMgPSBmdW5jdGlvbih0ZXJtaW5hdGlvbikge1xuXHRcdFx0XHRcdHZhciBjaF9pLCBhcmdzID0gW10sIG5vZGUsIGNsb3NlZCA9IGZhbHNlO1xuXHRcdFx0XHRcdHdoaWxlKGluZGV4IDwgbGVuZ3RoKSB7XG5cdFx0XHRcdFx0XHRnb2JibGVTcGFjZXMoKTtcblx0XHRcdFx0XHRcdGNoX2kgPSBleHBySUNvZGUoaW5kZXgpO1xuXHRcdFx0XHRcdFx0aWYoY2hfaSA9PT0gdGVybWluYXRpb24pIHsgLy8gZG9uZSBwYXJzaW5nXG5cdFx0XHRcdFx0XHRcdGNsb3NlZCA9IHRydWU7XG5cdFx0XHRcdFx0XHRcdGluZGV4Kys7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChjaF9pID09PSBDT01NQV9DT0RFKSB7IC8vIGJldHdlZW4gZXhwcmVzc2lvbnNcblx0XHRcdFx0XHRcdFx0aW5kZXgrKztcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSBnb2JibGVFeHByZXNzaW9uKCk7XG5cdFx0XHRcdFx0XHRcdGlmKCFub2RlIHx8IG5vZGUudHlwZSA9PT0gQ09NUE9VTkQpIHtcblx0XHRcdFx0XHRcdFx0XHR0aHJvd0Vycm9yKCdFeHBlY3RlZCBjb21tYScsIGluZGV4KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRhcmdzLnB1c2gobm9kZSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICghY2xvc2VkKSB7XG5cdFx0XHRcdFx0XHR0aHJvd0Vycm9yKCdFeHBlY3RlZCAnICsgU3RyaW5nLmZyb21DaGFyQ29kZSh0ZXJtaW5hdGlvbiksIGluZGV4KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIGFyZ3M7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gR29iYmxlIGEgbm9uLWxpdGVyYWwgdmFyaWFibGUgbmFtZS4gVGhpcyB2YXJpYWJsZSBuYW1lIG1heSBpbmNsdWRlIHByb3BlcnRpZXNcblx0XHRcdFx0Ly8gZS5nLiBgZm9vYCwgYGJhci5iYXpgLCBgZm9vWydiYXInXS5iYXpgXG5cdFx0XHRcdC8vIEl0IGFsc28gZ29iYmxlcyBmdW5jdGlvbiBjYWxsczpcblx0XHRcdFx0Ly8gZS5nLiBgTWF0aC5hY29zKG9iai5hbmdsZSlgXG5cdFx0XHRcdGdvYmJsZVZhcmlhYmxlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0dmFyIGNoX2ksIG5vZGU7XG5cdFx0XHRcdFx0Y2hfaSA9IGV4cHJJQ29kZShpbmRleCk7XG5cblx0XHRcdFx0XHRpZihjaF9pID09PSBPUEFSRU5fQ09ERSkge1xuXHRcdFx0XHRcdFx0bm9kZSA9IGdvYmJsZUdyb3VwKCk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdG5vZGUgPSBnb2JibGVJZGVudGlmaWVyKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGdvYmJsZVNwYWNlcygpO1xuXHRcdFx0XHRcdGNoX2kgPSBleHBySUNvZGUoaW5kZXgpO1xuXHRcdFx0XHRcdHdoaWxlKGNoX2kgPT09IFBFUklPRF9DT0RFIHx8IGNoX2kgPT09IE9CUkFDS19DT0RFIHx8IGNoX2kgPT09IE9QQVJFTl9DT0RFKSB7XG5cdFx0XHRcdFx0XHRpbmRleCsrO1xuXHRcdFx0XHRcdFx0aWYoY2hfaSA9PT0gUEVSSU9EX0NPREUpIHtcblx0XHRcdFx0XHRcdFx0Z29iYmxlU3BhY2VzKCk7XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSB7XG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogTUVNQkVSX0VYUCxcblx0XHRcdFx0XHRcdFx0XHRjb21wdXRlZDogZmFsc2UsXG5cdFx0XHRcdFx0XHRcdFx0b2JqZWN0OiBub2RlLFxuXHRcdFx0XHRcdFx0XHRcdHByb3BlcnR5OiBnb2JibGVJZGVudGlmaWVyKClcblx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZihjaF9pID09PSBPQlJBQ0tfQ09ERSkge1xuXHRcdFx0XHRcdFx0XHRub2RlID0ge1xuXHRcdFx0XHRcdFx0XHRcdHR5cGU6IE1FTUJFUl9FWFAsXG5cdFx0XHRcdFx0XHRcdFx0Y29tcHV0ZWQ6IHRydWUsXG5cdFx0XHRcdFx0XHRcdFx0b2JqZWN0OiBub2RlLFxuXHRcdFx0XHRcdFx0XHRcdHByb3BlcnR5OiBnb2JibGVFeHByZXNzaW9uKClcblx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdFx0Z29iYmxlU3BhY2VzKCk7XG5cdFx0XHRcdFx0XHRcdGNoX2kgPSBleHBySUNvZGUoaW5kZXgpO1xuXHRcdFx0XHRcdFx0XHRpZihjaF9pICE9PSBDQlJBQ0tfQ09ERSkge1xuXHRcdFx0XHRcdFx0XHRcdHRocm93RXJyb3IoJ1VuY2xvc2VkIFsnLCBpbmRleCk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0aW5kZXgrKztcblx0XHRcdFx0XHRcdH0gZWxzZSBpZihjaF9pID09PSBPUEFSRU5fQ09ERSkge1xuXHRcdFx0XHRcdFx0XHQvLyBBIGZ1bmN0aW9uIGNhbGwgaXMgYmVpbmcgbWFkZTsgZ29iYmxlIGFsbCB0aGUgYXJndW1lbnRzXG5cdFx0XHRcdFx0XHRcdG5vZGUgPSB7XG5cdFx0XHRcdFx0XHRcdFx0dHlwZTogQ0FMTF9FWFAsXG5cdFx0XHRcdFx0XHRcdFx0J2FyZ3VtZW50cyc6IGdvYmJsZUFyZ3VtZW50cyhDUEFSRU5fQ09ERSksXG5cdFx0XHRcdFx0XHRcdFx0Y2FsbGVlOiBub2RlXG5cdFx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRnb2JibGVTcGFjZXMoKTtcblx0XHRcdFx0XHRcdGNoX2kgPSBleHBySUNvZGUoaW5kZXgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gbm9kZTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBSZXNwb25zaWJsZSBmb3IgcGFyc2luZyBhIGdyb3VwIG9mIHRoaW5ncyB3aXRoaW4gcGFyZW50aGVzZXMgYCgpYFxuXHRcdFx0XHQvLyBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCBpdCBuZWVkcyB0byBnb2JibGUgdGhlIG9wZW5pbmcgcGFyZW50aGVzaXNcblx0XHRcdFx0Ly8gYW5kIHRoZW4gdHJpZXMgdG8gZ29iYmxlIGV2ZXJ5dGhpbmcgd2l0aGluIHRoYXQgcGFyZW50aGVzaXMsIGFzc3VtaW5nXG5cdFx0XHRcdC8vIHRoYXQgdGhlIG5leHQgdGhpbmcgaXQgc2hvdWxkIHNlZSBpcyB0aGUgY2xvc2UgcGFyZW50aGVzaXMuIElmIG5vdCxcblx0XHRcdFx0Ly8gdGhlbiB0aGUgZXhwcmVzc2lvbiBwcm9iYWJseSBkb2Vzbid0IGhhdmUgYSBgKWBcblx0XHRcdFx0Z29iYmxlR3JvdXAgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpbmRleCsrO1xuXHRcdFx0XHRcdHZhciBub2RlID0gZ29iYmxlRXhwcmVzc2lvbigpO1xuXHRcdFx0XHRcdGdvYmJsZVNwYWNlcygpO1xuXHRcdFx0XHRcdGlmKGV4cHJJQ29kZShpbmRleCkgPT09IENQQVJFTl9DT0RFKSB7XG5cdFx0XHRcdFx0XHRpbmRleCsrO1xuXHRcdFx0XHRcdFx0cmV0dXJuIG5vZGU7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRocm93RXJyb3IoJ1VuY2xvc2VkICgnLCBpbmRleCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIFJlc3BvbnNpYmxlIGZvciBwYXJzaW5nIEFycmF5IGxpdGVyYWxzIGBbMSwgMiwgM11gXG5cdFx0XHRcdC8vIFRoaXMgZnVuY3Rpb24gYXNzdW1lcyB0aGF0IGl0IG5lZWRzIHRvIGdvYmJsZSB0aGUgb3BlbmluZyBicmFja2V0XG5cdFx0XHRcdC8vIGFuZCB0aGVuIHRyaWVzIHRvIGdvYmJsZSB0aGUgZXhwcmVzc2lvbnMgYXMgYXJndW1lbnRzLlxuXHRcdFx0XHRnb2JibGVBcnJheSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGluZGV4Kys7XG5cdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdHR5cGU6IEFSUkFZX0VYUCxcblx0XHRcdFx0XHRcdGVsZW1lbnRzOiBnb2JibGVBcmd1bWVudHMoQ0JSQUNLX0NPREUpXG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHRub2RlcyA9IFtdLCBjaF9pLCBub2RlO1xuXG5cdFx0XHR3aGlsZShpbmRleCA8IGxlbmd0aCkge1xuXHRcdFx0XHRjaF9pID0gZXhwcklDb2RlKGluZGV4KTtcblxuXHRcdFx0XHQvLyBFeHByZXNzaW9ucyBjYW4gYmUgc2VwYXJhdGVkIGJ5IHNlbWljb2xvbnMsIGNvbW1hcywgb3IganVzdCBpbmZlcnJlZCB3aXRob3V0IGFueVxuXHRcdFx0XHQvLyBzZXBhcmF0b3JzXG5cdFx0XHRcdGlmKGNoX2kgPT09IFNFTUNPTF9DT0RFIHx8IGNoX2kgPT09IENPTU1BX0NPREUpIHtcblx0XHRcdFx0XHRpbmRleCsrOyAvLyBpZ25vcmUgc2VwYXJhdG9yc1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdC8vIFRyeSB0byBnb2JibGUgZWFjaCBleHByZXNzaW9uIGluZGl2aWR1YWxseVxuXHRcdFx0XHRcdGlmKChub2RlID0gZ29iYmxlRXhwcmVzc2lvbigpKSkge1xuXHRcdFx0XHRcdFx0bm9kZXMucHVzaChub2RlKTtcblx0XHRcdFx0XHQvLyBJZiB3ZSB3ZXJlbid0IGFibGUgdG8gZmluZCBhIGJpbmFyeSBleHByZXNzaW9uIGFuZCBhcmUgb3V0IG9mIHJvb20sIHRoZW5cblx0XHRcdFx0XHQvLyB0aGUgZXhwcmVzc2lvbiBwYXNzZWQgaW4gcHJvYmFibHkgaGFzIHRvbyBtdWNoXG5cdFx0XHRcdFx0fSBlbHNlIGlmKGluZGV4IDwgbGVuZ3RoKSB7XG5cdFx0XHRcdFx0XHR0aHJvd0Vycm9yKCdVbmV4cGVjdGVkIFwiJyArIGV4cHJJKGluZGV4KSArICdcIicsIGluZGV4KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhlcmUncyBvbmx5IG9uZSBleHByZXNzaW9uIGp1c3QgdHJ5IHJldHVybmluZyB0aGUgZXhwcmVzc2lvblxuXHRcdFx0aWYobm9kZXMubGVuZ3RoID09PSAxKSB7XG5cdFx0XHRcdHJldHVybiBub2Rlc1swXTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0dHlwZTogQ09NUE9VTkQsXG5cdFx0XHRcdFx0Ym9keTogbm9kZXNcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdC8vIFRvIGJlIGZpbGxlZCBpbiBieSB0aGUgdGVtcGxhdGVcblx0anNlcC52ZXJzaW9uID0gJzwlPSB2ZXJzaW9uICU+Jztcblx0anNlcC50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gJ0phdmFTY3JpcHQgRXhwcmVzc2lvbiBQYXJzZXIgKEpTRVApIHYnICsganNlcC52ZXJzaW9uOyB9O1xuXG5cdC8qKlxuXHQgKiBAbWV0aG9kIGpzZXAuYWRkVW5hcnlPcFxuXHQgKiBAcGFyYW0ge3N0cmluZ30gb3BfbmFtZSBUaGUgbmFtZSBvZiB0aGUgdW5hcnkgb3AgdG8gYWRkXG5cdCAqIEByZXR1cm4ganNlcFxuXHQgKi9cblx0anNlcC5hZGRVbmFyeU9wID0gZnVuY3Rpb24ob3BfbmFtZSkge1xuXHRcdG1heF91bm9wX2xlbiA9IE1hdGgubWF4KG9wX25hbWUubGVuZ3RoLCBtYXhfdW5vcF9sZW4pO1xuXHRcdHVuYXJ5X29wc1tvcF9uYW1lXSA9IHQ7IHJldHVybiB0aGlzO1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBAbWV0aG9kIGpzZXAuYWRkQmluYXJ5T3Bcblx0ICogQHBhcmFtIHtzdHJpbmd9IG9wX25hbWUgVGhlIG5hbWUgb2YgdGhlIGJpbmFyeSBvcCB0byBhZGRcblx0ICogQHBhcmFtIHtudW1iZXJ9IHByZWNlZGVuY2UgVGhlIHByZWNlZGVuY2Ugb2YgdGhlIGJpbmFyeSBvcCAoY2FuIGJlIGEgZmxvYXQpXG5cdCAqIEByZXR1cm4ganNlcFxuXHQgKi9cblx0anNlcC5hZGRCaW5hcnlPcCA9IGZ1bmN0aW9uKG9wX25hbWUsIHByZWNlZGVuY2UpIHtcblx0XHRtYXhfYmlub3BfbGVuID0gTWF0aC5tYXgob3BfbmFtZS5sZW5ndGgsIG1heF9iaW5vcF9sZW4pO1xuXHRcdGJpbmFyeV9vcHNbb3BfbmFtZV0gPSBwcmVjZWRlbmNlO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBAbWV0aG9kIGpzZXAuYWRkTGl0ZXJhbFxuXHQgKiBAcGFyYW0ge3N0cmluZ30gbGl0ZXJhbF9uYW1lIFRoZSBuYW1lIG9mIHRoZSBsaXRlcmFsIHRvIGFkZFxuXHQgKiBAcGFyYW0geyp9IGxpdGVyYWxfdmFsdWUgVGhlIHZhbHVlIG9mIHRoZSBsaXRlcmFsXG5cdCAqIEByZXR1cm4ganNlcFxuXHQgKi9cblx0anNlcC5hZGRMaXRlcmFsID0gZnVuY3Rpb24obGl0ZXJhbF9uYW1lLCBsaXRlcmFsX3ZhbHVlKSB7XG5cdFx0bGl0ZXJhbHNbbGl0ZXJhbF9uYW1lXSA9IGxpdGVyYWxfdmFsdWU7XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH07XG5cblx0LyoqXG5cdCAqIEBtZXRob2QganNlcC5yZW1vdmVVbmFyeU9wXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBvcF9uYW1lIFRoZSBuYW1lIG9mIHRoZSB1bmFyeSBvcCB0byByZW1vdmVcblx0ICogQHJldHVybiBqc2VwXG5cdCAqL1xuXHRqc2VwLnJlbW92ZVVuYXJ5T3AgPSBmdW5jdGlvbihvcF9uYW1lKSB7XG5cdFx0ZGVsZXRlIHVuYXJ5X29wc1tvcF9uYW1lXTtcblx0XHRpZihvcF9uYW1lLmxlbmd0aCA9PT0gbWF4X3Vub3BfbGVuKSB7XG5cdFx0XHRtYXhfdW5vcF9sZW4gPSBnZXRNYXhLZXlMZW4odW5hcnlfb3BzKTtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH07XG5cblx0LyoqXG5cdCAqIEBtZXRob2QganNlcC5yZW1vdmVBbGxVbmFyeU9wc1xuXHQgKiBAcmV0dXJuIGpzZXBcblx0ICovXG5cdGpzZXAucmVtb3ZlQWxsVW5hcnlPcHMgPSBmdW5jdGlvbigpIHtcblx0XHR1bmFyeV9vcHMgPSB7fTtcblx0XHRtYXhfdW5vcF9sZW4gPSAwO1xuXHRcdFxuXHRcdHJldHVybiB0aGlzO1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBAbWV0aG9kIGpzZXAucmVtb3ZlQmluYXJ5T3Bcblx0ICogQHBhcmFtIHtzdHJpbmd9IG9wX25hbWUgVGhlIG5hbWUgb2YgdGhlIGJpbmFyeSBvcCB0byByZW1vdmVcblx0ICogQHJldHVybiBqc2VwXG5cdCAqL1xuXHRqc2VwLnJlbW92ZUJpbmFyeU9wID0gZnVuY3Rpb24ob3BfbmFtZSkge1xuXHRcdGRlbGV0ZSBiaW5hcnlfb3BzW29wX25hbWVdO1xuXHRcdGlmKG9wX25hbWUubGVuZ3RoID09PSBtYXhfYmlub3BfbGVuKSB7XG5cdFx0XHRtYXhfYmlub3BfbGVuID0gZ2V0TWF4S2V5TGVuKGJpbmFyeV9vcHMpO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcztcblx0fTtcblxuXHQvKipcblx0ICogQG1ldGhvZCBqc2VwLnJlbW92ZUFsbEJpbmFyeU9wc1xuXHQgKiBAcmV0dXJuIGpzZXBcblx0ICovXG5cdGpzZXAucmVtb3ZlQWxsQmluYXJ5T3BzID0gZnVuY3Rpb24oKSB7XG5cdFx0YmluYXJ5X29wcyA9IHt9O1xuXHRcdG1heF9iaW5vcF9sZW4gPSAwO1xuXHRcdFxuXHRcdHJldHVybiB0aGlzO1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBAbWV0aG9kIGpzZXAucmVtb3ZlTGl0ZXJhbFxuXHQgKiBAcGFyYW0ge3N0cmluZ30gbGl0ZXJhbF9uYW1lIFRoZSBuYW1lIG9mIHRoZSBsaXRlcmFsIHRvIHJlbW92ZVxuXHQgKiBAcmV0dXJuIGpzZXBcblx0ICovXG5cdGpzZXAucmVtb3ZlTGl0ZXJhbCA9IGZ1bmN0aW9uKGxpdGVyYWxfbmFtZSkge1xuXHRcdGRlbGV0ZSBsaXRlcmFsc1tsaXRlcmFsX25hbWVdO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBAbWV0aG9kIGpzZXAucmVtb3ZlQWxsTGl0ZXJhbHNcblx0ICogQHJldHVybiBqc2VwXG5cdCAqL1xuXHRqc2VwLnJlbW92ZUFsbExpdGVyYWxzID0gZnVuY3Rpb24oKSB7XG5cdFx0bGl0ZXJhbHMgPSB7fTtcblx0XHRcblx0XHRyZXR1cm4gdGhpcztcblx0fTtcblxuXHQvLyBJbiBkZXNrdG9wIGVudmlyb25tZW50cywgaGF2ZSBhIHdheSB0byByZXN0b3JlIHRoZSBvbGQgdmFsdWUgZm9yIGBqc2VwYFxuXHRpZiAodHlwZW9mIGV4cG9ydHMgPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0dmFyIG9sZF9qc2VwID0gcm9vdC5qc2VwO1xuXHRcdC8vIFRoZSBzdGFyIG9mIHRoZSBzaG93ISBJdCdzIGEgZnVuY3Rpb24hXG5cdFx0cm9vdC5qc2VwID0ganNlcDtcblx0XHQvLyBBbmQgYSBjb3VydGVvdXMgZnVuY3Rpb24gd2lsbGluZyB0byBtb3ZlIG91dCBvZiB0aGUgd2F5IGZvciBvdGhlciBzaW1pbGFybHktbmFtZWQgb2JqZWN0cyFcblx0XHRqc2VwLm5vQ29uZmxpY3QgPSBmdW5jdGlvbigpIHtcblx0XHRcdGlmKHJvb3QuanNlcCA9PT0ganNlcCkge1xuXHRcdFx0XHRyb290LmpzZXAgPSBvbGRfanNlcDtcblx0XHRcdH1cblx0XHRcdHJldHVybiBqc2VwO1xuXHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0Ly8gSW4gTm9kZS5KUyBlbnZpcm9ubWVudHNcblx0XHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRcdGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGpzZXA7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGV4cG9ydHMucGFyc2UgPSBqc2VwO1xuXHRcdH1cblx0fVxufSh0aGlzKSk7XG4iXX0=","deps":{}},"/Users/denea/mosaico/src/js/converter/utils.js":{"file":"/Users/denea/mosaico/src/js/converter/utils.js","source":"\"use strict\";var console=require(\"./../../../bower_components/console-browserify/index.js\"),jsep=require(\"./../../../bower_components/jsep/src/jsep.js\");jsep.addBinaryOp(\"or\",1),jsep.addBinaryOp(\"and\",2),jsep.addBinaryOp(\"eq\",6),jsep.addBinaryOp(\"neq\",6),jsep.addBinaryOp(\"lt\",7),jsep.addBinaryOp(\"lte\",7),jsep.addBinaryOp(\"gt\",7),jsep.addBinaryOp(\"gte\",7);var addSlashes=function(e){return e.replace(/[\\\\\"']/g,\"\\\\$&\").replace(/\\u0000/g,\"\\\\0\")},removeStyle=function(e,t,o,n,i,r,a){for(var l=e.split(\"\\n\"),s=i,d=r,u=1+n;u<t.line;u++)s+=l[u-1-n].length+1;if(s+=t.col,null!==o){for(var c=1+n;c<o.line;c++)d+=l[c-1-n].length+1;d+=o.col}else d+=e.length+1;var f=e.substr(0,s-1)+a+e.substr(d-1);return f},expressionGenerator=function(e,t,o){function n(e){switch(e){case\"or\":return\"||\";case\"and\":return\"&&\";case\"lt\":return\"<\";case\"lte\":return\"<=\";case\"gt\":return\">\";case\"gte\":return\">=\";case\"eq\":return\"==\";case\"neq\":return\"!=\";default:return e}}function i(e,t,o,r){if(\"undefined\"==typeof o&&(o=!0),\"undefined\"!=typeof r&&\"Identifier\"!==e.type&&\"MemberExpression\"!==e.type&&console.log(\"Cannot apply default value to variable when using expressions\"),\"BinaryExpression\"===e.type||\"LogicalExpression\"===e.type)return\"(\"+i(e.left,t,o)+\" \"+n(e.operator)+\" \"+i(e.right,t,o)+\")\";if(\"CallExpression\"===e.type){var a=e.arguments.map(function(e){return i(e,t,o)});return i(e.callee,t,o)+\"(\"+a.join(\", \")+\")\"}if(\"UnaryExpression\"===e.type)return e.operator+i(e.argument,t,o);if(\"MemberExpression\"==e.type&&e.computed)throw\"Unexpected computed member expression\";if(\"MemberExpression\"!=e.type||e.computed){if(\"Literal\"===e.type)return e.raw;if(\"Identifier\"===e.type){var l=e.name;return o?t(l,r)+\"()\":l}if(\"ConditionalExpression\"===e.type)return\"(\"+i(e.test,t,o)+\" ? \"+i(e.consequent,t,o)+\" : \"+i(e.alternate,t,o)+\")\";throw\"Compound\"===e.type?\"Syntax error in expression: operator expected after \"+i(e.body[0],t,!1):\"Found an unsupported expression type: \"+e.type}var s=i(e.object,t,!1)+\".\"+i(e.property,t,!1);return o&&\"Math\"!==e.object.name&&\"Color\"!==e.object.name&&\"Util\"!==e.object.name?t(s,r)+\"()\":s}return i(e,t,void 0,o)},expressionBinding=function(e,t,o){var n;if(\"undefined\"!=typeof o&&null!==o){var i=e.trim().replace(/@\\[([^\\]]+)\\]|@([a-zA-Z0-9\\._]+)\\b/g,\"###var###\");if(i=i.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\"\\\\$&\"),\"###var###\"==i)n=[null,o];else if(i=\"^\"+i.replace(/###var###/g,\"(.+)\")+\"$\",n=o.trim().match(new RegExp(i)),!n)throw console.log(\"Cannot find matches\",n,\"for\",o,e,i,e),\"Cannot find default value for \"+e+\" in \"+o}try{var r=0,a=\"'\"+e.replace(/@\\[([^\\]]+)\\]|@([a-zA-Z0-9\\._]+)\\b|(')/g,function(e,o,i,a){if(a)return\"\\\\\"+a;r++;var l,s=o||i;if(n&&(\"undefined\"!=typeof n[r]?l=n[r].trim():console.log(\"ABZZZ Cannot find default value for\",s,\"in\",n,\"as\",r)),o){var d=jsep(o),u=expressionGenerator(d,t,l);return\"'+\"+u+\"+'\"}return\"'+\"+t(s,l)+\"()+'\"})+\"'\";return a=a.replace(/(^|[^\\\\])''\\+/g,\"$1\").replace(/\\+''/g,\"\"),0===r&&\"false\"!==a&&\"true\"!==a&&console.error(\"Unexpected expression with no valid @variable references\",e),a}catch(l){throw\"Exception parsing expression \"+e+\" \"+l}},conditionBinding=function(e,t){var o=jsep(e),n=expressionGenerator(o,t);return n};module.exports={addSlashes:addSlashes,removeStyle:removeStyle,conditionBinding:conditionBinding,expressionBinding:expressionBinding};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./../../../bower_components/jsep/src/jsep.js":"/Users/denea/mosaico/bower_components/jsep/src/jsep.js"}},"/Users/denea/mosaico/src/js/converter/parser.js":{"file":"/Users/denea/mosaico/src/js/converter/parser.js","source":"(function (global){\n\"use strict\";function conditional_replace(e){return e.replace(/<!--\\[if ([^\\]]*)\\]>((?:(?!--)[\\s\\S])*?)<!\\[endif\\]-->/g,function(e,t,o){var n=\"<!-- cc:start -->\";n+=o.replace(/<([A-Za-z:]+)/g,\"<!-- cc:bo:$1 --><cc\").replace(/<\\/([A-Za-z:]+)>/g,\"<!-- cc:bc:$1 --></cc><!-- cc:ac:$1 -->\").replace(/\\/>/g,\"/><!-- cc:sc -->\"),n+=\"<!-- cc:end -->\";var i='<replacedcc condition=\"'+t+'\" style=\"display: none\">';return i+=$(\"<div>\").append($(n)).html().replace(/^<!-- cc:start -->/,\"\").replace(/<!-- cc:end -->$/,\"\"),i+=\"</replacedcc>\"})}var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),converterUtils=require(\"./utils.js\"),elaborateDeclarations=require(\"./declarations.js\"),processStylesheetRules=require(\"./stylesheet.js\"),modelDef=require(\"./model.js\"),domutils=require(\"./domutils.js\"),wrapElementWithCondition=function(e,t,o){var n=domutils.getAttribute(t,e);try{var i=converterUtils.conditionBinding(n,o);$(t).before(\"<!-- ko if: \"+i+\" -->\"),$(t).after(\"<!-- /ko -->\"),domutils.removeAttribute(t,e)}catch(a){throw console.warn(\"Model ensure path failed in if/variant\",t,n,e),a}},replacedAttributes=function(e,t){domutils.setAttribute(e,t,domutils.getAttribute(e,\"replaced\"+t))},processStyle=function(e,t,o,n){var i,a=domutils.getAttribute(e,\"replacedstyle\"),r=null;n&&(i={uniqueId:\"$data\",attr:{id:\"id\"}});var l=null!==domutils.getAttribute(e,\"data-ko-display\");r=elaborateDeclarations(a,void 0,t,o,e,i,l),null===r?r=a:domutils.removeAttribute(e,\"replacedstyle\"),null!==r&&(r.trim().length>0?domutils.setAttribute(e,\"style\",r):domutils.removeAttribute(e,\"style\"))},_fixRelativePath=function(e,t,o,n){var i=domutils.getAttribute(n,e),a=t(i);null!==a&&domutils.setAttribute(n,e,a)},processBlock=function(e,t,o,n,i,a,r,l,s,d){try{var c;if(\"block\"==a)c=domutils.getAttribute(e,\"data-ko-block\"),domutils.removeAttribute(e,\"data-ko-block\");else{if(\"template\"!=a)throw\"Unexpected context name while processing block: \"+a;c=r}$(\"[data-ko-remove]\",e).remove();for(var u=$(\"[data-ko-block]\",e).replaceWith(\"<replacedblock>\"),p=[\"href\",\"src\",\"data-ko-placeholder-src\",\"background\"],f=0;f<p.length;f++){var m=_fixRelativePath.bind(void 0,p[f],i);$(\"[\"+p[f]+\"]\",e).each(m)}var b=domutils.getAttribute(e,\"data-ko-properties\");null===b&&(b=\"\"),$(\"[data-ko-properties]\",e).each(function(e,t){b.length>0&&(b+=\" \"),b+=domutils.getAttribute(t,\"data-ko-properties\"),domutils.removeAttribute(t,\"data-ko-properties\")}),modelDef.createOrUpdateBlockDef(t,c,b,{contextName:a});var g=modelDef.ensurePathAndGetBindValue.bind(void 0,t,o,r,c,\"\");\"block\"==a&&g(\"id\",\"\"),$(\"style\",e).each(function(e,n){var a=domutils.getInnerHtml(n),l=modelDef.createOrUpdateBlockDef.bind(void 0,t),s=modelDef.ensurePathAndGetBindValue.bind(void 0,t,o,r),u=processStylesheetRules(a,void 0,s,l,o,i,r,c);if(u!=a)if(\"\"!==u.trim()){var p=d(u);domutils.setAttribute(n,\"data-bind\",\"template: { name: '\"+p+\"' }\"),domutils.setContent(n,\"\")}else domutils.removeElements($(n))}),processStyle(e,i,g,s);for(var h=[\"data-ko-display\",\"data-ko-editable\",\"data-ko-wrap\",\"href\"],v=0;v<h.length;v++){var k=domutils.getAttribute(e,h[v]);if(k)throw console.warn(\"ERROR: Unsupported \"+h[v]+\" used together with data-ko-block\",e),\"ERROR: Unsupported \"+h[v]+\" used together with data-ko-block\"}return $(\"[data-ko-link]\",e).each(function(e,t){var o=domutils.getAttribute(t,\"data-ko-link\"),n=domutils.getAttribute(t,\"replacedstyle\");(\"undefined\"==typeof n||null===n)&&(n=\"\"),n=\"\"!==n?\"-ko-attr-href: @\"+o+\"; \"+n:\"-ko-attr-href: @\"+o,domutils.setAttribute(t,\"replacedstyle\",n),domutils.setAttribute(t,\"data-ko-wrap\",o),domutils.removeAttribute(t,\"data-ko-link\")}),$(\"[replacedstyle]\",e).each(function(e,t){processStyle(t,i,g,!1)}),$(\"[replacedhttp-equiv]\",e).each(function(e,t){replacedAttributes(t,\"http-equiv\")}),$(\"[data-ko-display]\",e).each(function(e,t){wrapElementWithCondition(\"data-ko-display\",t,g)}),$(\"[data-ko-editable]\",e).each(function(e,t){var o,n,i,a,r,l,s=domutils.getAttribute(t,\"data-ko-editable\");if(s.lastIndexOf(\".\")>0){var c=s.substr(0,s.lastIndexOf(\".\"));r=g(c)}else r=g(s);if(l=\"wysiwygClick: function(obj, evt) { $root.selectItem(\"+r+\", $data); return false }, clickBubble: false, wysiwygCss: { selecteditem: $root.isSelectedItem(\"+r+\") }, scrollIntoView: $root.isSelectedItem(\"+r+\")\",\"img\"!=domutils.getLowerTagName(t)){n=domutils.getInnerHtml(t);var u=g(s,n,!0,\"wysiwyg\");if(o=\"\",domutils.getAttribute(t,\"id\")||(o+=\"wysiwygId: id()+'_\"+s.replace(\".\",\"_\")+\"', \"),\"undefined\"!=typeof l&&(o+=l+\", \"),o+=\"wysiwygOrHtml: \"+u,\"td\"==domutils.getLowerTagName(t)){var p=$('<div data-ko-wrap=\"false\" style=\"width: 100%; height: 100%\"></div>')[0];domutils.setAttribute(p,\"data-bind\",o);var f=domutils.getInnerHtml($(\"<div></div>\").append(p));domutils.setContent(t,f)}else i=domutils.getAttribute(t,\"data-bind\"),a=(null!==i?i+\", \":\"\")+o,domutils.setAttribute(t,\"data-bind\",a),domutils.setContent(t,\"\");domutils.removeAttribute(t,\"data-ko-editable\")}else{var m=domutils.getAttribute(t,\"width\");if(\"\"===m&&(m=null),null===m)throw console.error(\"ERROR: data-ko-editable images must declare a WIDTH attribute!\",t),\"ERROR: data-ko-editable images must declare a WIDTH attribute!\";var b=domutils.getAttribute(t,\"height\");\"\"===b&&(b=null);var h=domutils.getAttribute(t,\"align\");i=domutils.getAttribute(t,\"data-bind\");var v=i&&i.match(/virtualAttr: {[^}]* height: ([^,}]*)[,}]/);v&&(b=v[1]);var k=i&&i.match(/virtualAttr: {[^}]* width: ([^,}]*)[,}]/);k&&(m=k[1]);var y;n=domutils.getAttribute(t,\"data-ko-placeholder-src\");var w=\"\";n?w=domutils.getAttribute(t,\"src\"):n=domutils.getAttribute(t,\"src\");var x;m&&b?x=m+\"+'x'+\"+b:b?m||(x=\"'h'+\"+b+\"+''\"):x=\"'w'+\"+m+\"+''\";var _,C=b||domutils.getAttribute(t,\"data-ko-placeholder-height\"),S=m||domutils.getAttribute(t,\"data-ko-placeholder-width\");if(domutils.removeAttribute(t,\"src\"),domutils.removeAttribute(t,\"data-ko-editable\"),domutils.removeAttribute(t,\"data-ko-placeholder-height\"),domutils.removeAttribute(t,\"data-ko-placeholder-width\"),domutils.removeAttribute(t,\"data-ko-placeholder-src\"),n&&(_=\"{ width: \"+S+\", height: \"+C+\", text: \"+x+\"}\"),!S||!C)throw console.error(\"IMG data-ko-editable must declare width and height attributes, or their placeholder counterparts data-ko-placeholder-width/data-ko-placeholder-height\",t),\"ERROR: IMG data-ko-editable MUST declare width and height attributes, or their placeholder counterparts data-ko-placeholder-width/data-ko-placeholder-height\";var T=g(s,w,!1,\"wysiwyg\");o=\"wysiwygSrc: { width: \"+m+\", height: \"+b+\", src: \"+T+\", placeholder: \"+_+\" }\",a=(null!==i?i+\", \":\"\")+o,domutils.setAttribute(t,\"data-bind\",a);var A=d(t),O=\"{ width: \"+m;\"left\"==h?O+=\", float: 'left'\":\"right\"==h?O+=\", float: 'right'\":\"center\"==h?console.log(\"non so cosa fa align=center su una img e quindi non so come simularne l'editing\"):\"top\"==h?O+=\", verticalAlign: 'top'\":\"middle\"==h?O+=\", verticalAlign: 'middle'\":\"bottom\"==h&&(O+=\", verticalAlign: 'bottom'\"),O+=\"}\",$(t).before(\"<!-- ko wysiwygImg: { _data: $data, _item: \"+r+\", _template: '\"+A+\"', _editTemplate: 'img-wysiwyg', _src: \"+T+\", _width: \"+m+\", _height: \"+b+\", _align: \"+(null===h?void 0:\"'\"+h+\"'\")+\", _size: \"+x+\", _method: \"+y+\", _placeholdersrc: \"+_+\", _stylebind: \"+O+\" } -->\"),$(t).after(\"<!-- /ko -->\")}}),$(\"[href]\",e).each(function(e,t){var o=domutils.getAttribute(t,\"href\"),n=\"wysiwygHref: '\"+converterUtils.addSlashes(o)+\"'\",i=domutils.getAttribute(t,\"data-bind\"),a=(null!==i?i+\", \":\"\")+n;domutils.setAttribute(t,\"data-bind\",a)}),$(\"replacedblock\",e).each(function(e,a){var s=u[e],p=processBlock(s,t,o,n,i,\"block\",c,l,!0,d),f=modelDef.ensurePathAndGetBindValue(t,o,r,c,\"\",p);$(a).before(\"<!-- ko block: { data: \"+converterUtils.addSlashes(f)+\", template: 'block' } -->\"),$(a).after(\"<!-- /ko -->\"),$(a).remove()}),$($(\"[data-ko-wrap]\",e).get().reverse(),e).each(function(e,t){var o=domutils.getAttribute(t,\"data-ko-wrap\");if(\"undefined\"==typeof o||\"\"===o||\"true\"===o)throw\"Unsupported empty value for data-ko-wrap: use false value if you want to always remove the tag\";var n,i,a=converterUtils.conditionBinding(o,g),r=domutils.getAttribute(t,\"data-bind\");if(\"\"!==r&&null!==r&&r.match(/(block|wysiwygOrHtml):/)){var l=\"<!-- ko \"+r+\" -->\"+domutils.getInnerHtml(t)+\"<!-- /ko -->\";n=d(l),domutils.removeAttribute(t,\"data-ko-wrap\"),i=d(t),domutils.replaceHtml(t,\"<!-- ko template: /* special */ (typeof templateMode != 'undefined' && templateMode == 'wysiwyg') || \"+a+\" ? '\"+i+\"' : '\"+n+\"' --><!-- /ko -->\")}else n=d(domutils.getInnerHtml(t)),domutils.removeAttribute(t,\"data-ko-wrap\"),domutils.setContent(t,\"<!-- ko template: '\"+n+\"' --><!-- /ko -->\"),i=d(t),domutils.replaceHtml(t,\"<!-- ko template: (typeof templateMode != 'undefined' && templateMode == 'wysiwyg') || \"+a+\" ? '\"+i+\"' : '\"+n+\"' --><!-- /ko -->\")}),d(e,c,\"show\"),n(r,c,a,l),c}catch(y){throw console.error(\"Exception while parsing the template\",y,e),y}},translateTemplate=function(e,t,o,n){var i={},a=conditional_replace(t.replace(/(<[^>]+\\s)(style|http-equiv)(=\"[^\"]*\"[^>]*>)/gi,function(e,t,o,n){return t+\"replaced\"+o+n})),r=$(a),l=r[0],s=[],d=function(e,t,o,n){s.push({root:e,block:t,context:o,container:n})},c=function(e,t,o){if(\"undefined\"==typeof i.themes&&(i.themes={}),\"undefined\"==typeof i.themes[e]&&(i.themes[e]={}),\"undefined\"==typeof i.themes[e][t]||null===i.themes[e][t])i.themes[e][t]=o;else if(\"undefined\"!=typeof o&&null!==o){var n=i.themes[e][t];n!=o&&console.log(\"Error setting a new default for property \"+t+\" in theme \"+e+\". old:\"+n+\" new:\"+o+\"!\")}},u=$(\"[data-ko-container]\",r),p={};u.each(function(e,t){var o=domutils.getAttribute(t,\"data-ko-container\")+\"Blocks\";domutils.removeAttribute(t,\"data-ko-container\"),domutils.setAttribute(t,\"data-bind\",\"block: \"+o);var n=$(\"> [data-ko-block]\",t);domutils.removeElements(n,!0),p[o]=n}),modelDef.createOrUpdateBlockDef(i,\"id\"),modelDef.createOrUpdateBlockDef(i,\"bodyTheme\"),modelDef.createOrUpdateBlockDef(i,\"blocks\",\"blocks[]\"),modelDef.createOrUpdateBlockDef(i,\"text\"),processBlock(l,i,c,d,o,\"template\",e,void 0,!1,n);var f=function(t,a,r){processBlock(r,i,c,d,o,\"block\",e,t,!0,n)};for(var m in p)if(p.hasOwnProperty(m)){var b=p[m],g=m;modelDef.ensurePathAndGetBindValue(i,c,e,e,\"\",g+\".blocks\",\"[]\"),b.each(f.bind(void 0,g))}var h={_defs:i,templateName:e,_blocks:s};return\"undefined\"!=typeof i[e]._version&&(h.version=i[e]._version),h};module.exports=translateTemplate;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./model.js":"/Users/denea/mosaico/src/js/converter/model.js","./domutils.js":"/Users/denea/mosaico/src/js/converter/domutils.js","./declarations.js":"/Users/denea/mosaico/src/js/converter/declarations.js","./utils.js":"/Users/denea/mosaico/src/js/converter/utils.js","./stylesheet.js":"/Users/denea/mosaico/src/js/converter/stylesheet.js"}},"/Users/denea/mosaico/src/js/converter/main.js":{"file":"/Users/denea/mosaico/src/js/converter/main.js","source":"\"use strict\";var modelDef=require(\"./model.js\"),wrappedResultModel=function(e){var t=e._defs,o=e.templateName,a=modelDef.getDef(t,o),i=modelDef.generateResultModel(e),l=require(\"./wrapper.js\"),n=l(i,a,t);return n},translateTemplate=function(){var e=require(\"./parser.js\");return e.apply(e,arguments)},generateEditors=function(){var e=require(\"./editor.js\");return e.apply(e,arguments)},checkModel=function(){var e=require(\"./checkmodel.js\");return e.apply(e,arguments)};module.exports={translateTemplate:translateTemplate,wrappedResultModel:wrappedResultModel,generateResultModel:modelDef.generateResultModel,generateEditors:generateEditors,checkModel:checkModel};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsibW9kZWxEZWYiLCJyZXF1aXJlIiwid3JhcHBlZFJlc3VsdE1vZGVsIiwidGVtcGxhdGVEZWYiLCJkZWZzIiwiX2RlZnMiLCJ0ZW1wbGF0ZU5hbWUiLCJmaW5hbE1vZGVsQ29udGVudERlZiIsImdldERlZiIsImZpbmFsTW9kZWxDb250ZW50IiwiZ2VuZXJhdGVSZXN1bHRNb2RlbCIsIndyYXBwZXIiLCJyZXMiLCJ0cmFuc2xhdGVUZW1wbGF0ZSIsInR0IiwiYXBwbHkiLCJhcmd1bWVudHMiLCJnZW5lcmF0ZUVkaXRvcnMiLCJnZSIsImNoZWNrTW9kZWwiLCJjbSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFlBR0EsSUFBSUEsVUFBV0MsUUFBUSxjQUVuQkMsbUJBQXFCLFNBQVNDLEdBQ2hDLEdBQUlDLEdBQU9ELEVBQVlFLE1BQ25CQyxFQUFlSCxFQUFZRyxhQUMzQkMsRUFBdUJQLFNBQVNRLE9BQU9KLEVBQU1FLEdBRTdDRyxFQUFvQlQsU0FBU1Usb0JBQW9CUCxHQUVqRFEsRUFBVVYsUUFBUSxnQkFDbEJXLEVBQU1ELEVBQVFGLEVBQW1CRixFQUFzQkgsRUFFM0QsT0FBT1EsSUFJTEMsa0JBQW9CLFdBQ3RCLEdBQUlDLEdBQUtiLFFBQVEsY0FDakIsT0FBT2EsR0FBR0MsTUFBTUQsRUFBSUUsWUFJbEJDLGdCQUFrQixXQUNwQixHQUFJQyxHQUFLakIsUUFBUSxjQUNqQixPQUFPaUIsR0FBR0gsTUFBTUcsRUFBSUYsWUFHbEJHLFdBQWEsV0FDZixHQUFJQyxHQUFLbkIsUUFBUSxrQkFDakIsT0FBT21CLEdBQUdMLE1BQU1LLEVBQUlKLFdBR3RCSyxRQUFPQyxTQUNMVCxrQkFBbUJBLGtCQUNuQlgsbUJBQW9CQSxtQkFDcEJRLG9CQUFxQlYsU0FBU1Usb0JBQzlCTyxnQkFBaUJBLGdCQUNqQkUsV0FBWUEiLCJmaWxlIjoib3V0LmpzLm1hcCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogZ2xvYmFsIGdsb2JhbDogZmFsc2UgKi9cblxudmFyIG1vZGVsRGVmID0gcmVxdWlyZShcIi4vbW9kZWwuanNcIik7XG5cbnZhciB3cmFwcGVkUmVzdWx0TW9kZWwgPSBmdW5jdGlvbih0ZW1wbGF0ZURlZikge1xuICB2YXIgZGVmcyA9IHRlbXBsYXRlRGVmLl9kZWZzO1xuICB2YXIgdGVtcGxhdGVOYW1lID0gdGVtcGxhdGVEZWYudGVtcGxhdGVOYW1lO1xuICB2YXIgZmluYWxNb2RlbENvbnRlbnREZWYgPSBtb2RlbERlZi5nZXREZWYoZGVmcywgdGVtcGxhdGVOYW1lKTtcblxuICB2YXIgZmluYWxNb2RlbENvbnRlbnQgPSBtb2RlbERlZi5nZW5lcmF0ZVJlc3VsdE1vZGVsKHRlbXBsYXRlRGVmKTtcblxuICB2YXIgd3JhcHBlciA9IHJlcXVpcmUoXCIuL3dyYXBwZXIuanNcIik7XG4gIHZhciByZXMgPSB3cmFwcGVyKGZpbmFsTW9kZWxDb250ZW50LCBmaW5hbE1vZGVsQ29udGVudERlZiwgZGVmcyk7XG5cbiAgcmV0dXJuIHJlcztcbn07XG5cbi8vIHJlcXVpcmVzIG9ubHkgd2hlbiBpbXBvcnRlZFxudmFyIHRyYW5zbGF0ZVRlbXBsYXRlID0gZnVuY3Rpb24oKSB7XG4gIHZhciB0dCA9IHJlcXVpcmUoJy4vcGFyc2VyLmpzJyk7XG4gIHJldHVybiB0dC5hcHBseSh0dCwgYXJndW1lbnRzKTtcbn07XG5cbi8vIHJlcXVpcmVzIG9ubHkgd2hlbiBpbXBvcnRlZFxudmFyIGdlbmVyYXRlRWRpdG9ycyA9IGZ1bmN0aW9uKCkge1xuICB2YXIgZ2UgPSByZXF1aXJlKCcuL2VkaXRvci5qcycpO1xuICByZXR1cm4gZ2UuYXBwbHkoZ2UsIGFyZ3VtZW50cyk7XG59O1xuXG52YXIgY2hlY2tNb2RlbCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgY20gPSByZXF1aXJlKCcuL2NoZWNrbW9kZWwuanMnKTtcbiAgcmV0dXJuIGNtLmFwcGx5KGNtLCBhcmd1bWVudHMpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHRyYW5zbGF0ZVRlbXBsYXRlOiB0cmFuc2xhdGVUZW1wbGF0ZSxcbiAgd3JhcHBlZFJlc3VsdE1vZGVsOiB3cmFwcGVkUmVzdWx0TW9kZWwsXG4gIGdlbmVyYXRlUmVzdWx0TW9kZWw6IG1vZGVsRGVmLmdlbmVyYXRlUmVzdWx0TW9kZWwsXG4gIGdlbmVyYXRlRWRpdG9yczogZ2VuZXJhdGVFZGl0b3JzLFxuICBjaGVja01vZGVsOiBjaGVja01vZGVsXG59OyJdfQ==","deps":{"./checkmodel.js":"/Users/denea/mosaico/src/js/converter/checkmodel.js","./model.js":"/Users/denea/mosaico/src/js/converter/model.js","./wrapper.js":"/Users/denea/mosaico/src/js/converter/wrapper.js","./editor.js":"/Users/denea/mosaico/src/js/converter/editor.js","./parser.js":"/Users/denea/mosaico/src/js/converter/parser.js"}},"/Users/denea/mosaico/src/js/template-loader.js":{"file":"/Users/denea/mosaico/src/js/template-loader.js","source":"(function (global){\n\"use strict\";function _viewModelPluginInstance(e){var t;return{viewModel:function(o){t=e(o)},init:function(){\"undefined\"!=typeof t&&\"undefined\"!=typeof t.init&&t.init()},dispose:function(){\"undefined\"!=typeof t&&\"undefined\"!=typeof t.dispose&&t.dispose()}}}var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),kojqui=(typeof window !== \"undefined\" ? window['kojqui'] : typeof global !== \"undefined\" ? global['kojqui'] : null),templateConverter=require(\"./converter/main.js\"),console=require(\"./../../bower_components/console-browserify/index.js\"),initializeViewmodel=require(\"./viewmodel.js\"),templateSystem=require(\"./bindings/choose-template.js\"),pluginsCall=function(e,t,o,a){var i,l,d,r,n;n=[],\"undefined\"!=typeof a&&a?(i=e.length-1,l=0,d=-1):(i=0,l=e.length-1,d=1);for(var s=i;s!=l+d;s+=d)\"undefined\"!=typeof e[s][t]&&(r=e[s][t].apply(e[s],o),\"undefined\"!=typeof r&&n.push(r));return n},origDisposeCallback=ko.utils.domNodeDisposal.addDisposeCallback;ko.utils.domNodeDisposal.addDisposeCallback=function(e,t){var o=function(e){try{t(e)}catch(o){console.warn(\"Caught unexpected dispose callback exception\",o)}};origDisposeCallback(e,o)};var bindingPluginMaker=function(e){return{viewModel:function(t){try{e(\"applyBindings\",ko.applyBindings.bind(void 0,t))}catch(o){throw console.warn(o,o.stack),o}},dispose:function(){try{e(\"unapplyBindings\",ko.cleanNode.bind(this,global.document.body))}catch(t){throw console.warn(t,t.stack),t}}}},templateCreator=function(e,t,o,a){var i=o;for(\"undefined\"!=typeof o&&\"undefined\"!=typeof a&&(\"object\"!=typeof t||\"replacedhtml\"!=t.tagName.toLowerCase())&&(i+=\"-\"+a);\"undefined\"==typeof i||null===i||e.exists(i);)i=\"anonymous-\"+Math.floor(1e5*Math.random()+1);if(\"object\"==typeof t&&\"replacedhtml\"==t.tagName.toLowerCase()){var l=$(t),d=$(\"replacedhead\",l),r=$(\"replacedbody\",l);e.adder(i+\"-head\",d.html()||\"\"),e.adder(i+\"-show\",r.html()||\"\"),e.adder(i+\"-preview\",l.html()),e.adder(i+\"-wysiwyg\",l.html()),d.children().detach(),d.html(\"<!-- ko block: content --><!-- /ko -->\"),d.before(\"<!-- ko withProperties: { templateMode: 'head' } -->\"),d.after(\"<!-- /ko -->\"),r.html(\"<!-- ko block: content --><!-- /ko -->\"),e.adder(i+\"-iframe\",l[0].outerHTML)}else\"object\"==typeof t?e.adder(i,t.outerHTML):e.adder(i,t);return i},_templateUrlConverter=function(e,t){return t.match(/^[^\\/]*:/)||t.match(/^\\//)||t.match(/^\\[/)||t.match(/^#?$/)?null:e+t},templateLoader=function(e,t,o,a,i,l){var d=\"string\"==typeof t?t:o.template,r=\"./\",n=d.lastIndexOf(\"/\");-1!=n&&(r=d.substr(0,n+1));var s,c=_templateUrlConverter.bind(void 0,r);s=\"undefined\"==typeof o?{template:d,name:\"No name\",created:Date.now()}:o,$.get(d,function(t){var o=templateCompiler(e,c,\"template\",t,a,s,i,l);o.init()})},templateCompiler=function(e,t,o,a,i,l,d,r){var n=a.match(/^([\\S\\s]*)([<]html[^>]*>[\\S\\s]*<\\/html>)([\\S\\s]*)$/i);if(null===n)throw\"Unable to find <html> opening and closing tags in the template\";var s=n[1],c={\"<html\":0,\"<head\":0,\"<body\":0,\"</html\":0,\"</body\":0,\"</head\":0},p=n[2].replace(/(<\\/?)(html|head|body)([^>]*>)/gi,function(e,t,o,a){return c[(t+o).toLowerCase()]+=1,t+\"replaced\"+o+a});for(var m in c)if(c.hasOwnProperty(m)&&1!=c[m]){if(0===c[m])throw\"ERROR: missing mandatory element \"+m+\">\";if(c[m]>1)throw\"ERROR: multiple element \"+m+\"> occourences are not supported (found \"+c[m]+\" occourences)\"}var b=n[3],u=[],f=\"+$root.contentListeners()\",h=[];if(\"undefined\"!=typeof d)for(var g=0;g<d.length;g++)\"function\"==typeof d[g]?h.push(_viewModelPluginInstance(d[g])):h.push(d[g]);var v=[],k={adder:function(e,t){if(\"string\"!=typeof t)throw\"Template system: cannot create new template \"+e;var o=t.match(/(data)?-ko-[^ =:]*/g);o&&console.error(\"ERROR: found unexpected -ko- attribute in compiled template\",e,\", you probably mispelled it:\",o),templateSystem.addTemplate(e,t),v.push(e)},exists:function(e){var t=templateSystem.getTemplateContent(e);return\"undefined\"!=typeof t?!0:!1},dispose:function(){for(var e=v.length-1;e>=0;e--)templateSystem.removeTemplate(v[e])}};ko.bindingHandlers.block.templateExists=k.exists;for(var y=templateCreator.bind(void 0,k),w=e(\"translateTemplate\",templateConverter.translateTemplate.bind(void 0,o,p,t,y)),x=e(\"generateModel\",templateConverter.wrappedResultModel.bind(void 0,w)),S={},C=pluginsCall(h,\"widget\",[$,ko,kojqui]),B=0;B<C.length;B++)S[C[B].widget]=C[B];u.push.apply(u,e(\"generateEditors\",templateConverter.generateEditors.bind(void 0,w,S,t,y,f)));var _=!1;if(\"undefined\"!=typeof i&&null!==i){var T;T=\"string\"==typeof i?ko.utils.parseJson(i):i;var M=e(\"checkModel\",templateConverter.checkModel.bind(void 0,x._unwrap(),u,T));2==M&&(console.error(\"Trying to compile an incompatible template version!\",x._unwrap(),u,T),_=!0);try{x._wrap(T)}catch(P){console.error(\"Unable to inject model content!\",P),_=!0}}var D=s+templateSystem.getTemplateContent(o+\"-iframe\").replace(/(<\\/?)replaced(html|head|body)([^>]*>)/gi,function(e,t,o,a){return t+o+a})+b,L=ko.bindingHandlers.bindIframe.tpl;ko.bindingHandlers.bindIframe.tpl=D;var F={dispose:function(){ko.bindingHandlers.bindIframe.tpl=L}};h.push(F),h.push(k);var O=e(\"initializeViewmodel\",initializeViewmodel.bind(this,x,u,t,r));O.metadata=l;var E=\"0.16.0\";return\"undefined\"!=typeof O.metadata.editorversion&&O.metadata.editorversion!==E&&console.warn(\"The model being loaded has been created with an older editor version\",O.metadata.editorversion,\"vs\",E),O.metadata.editorversion=E,\"undefined\"!=typeof w.version&&(\"undefined\"!=typeof O.metadata.templateversion&&O.metadata.templateversion!==w.version&&console.error(\"The model being loaded has been created with a different template version\",w.version,\"vs\",O.metadata.templateversion),O.metadata.templateversion=w.version),templateSystem.init(),h.push(bindingPluginMaker(e)),pluginsCall(h,\"viewModel\",[O]),_&&$(\"#incompatible-template\").dialog({modal:!0,appendTo:\"#mo-body\",buttons:{Ok:function(){$(this).dialog(\"close\")}}}),{model:O,init:function(){pluginsCall(h,\"init\",void 0,!0)},dispose:function(){pluginsCall(h,\"dispose\",void 0,!0)}}},checkFeature=function(e,t){if(!t())throw console.warn(\"Missing feature\",e),\"Missing feature \"+e},isCompatible=function(){try{return checkFeature(\"matchMedia\",function(){return\"undefined\"!=typeof global.matchMedia}),checkFeature(\"XMLHttpRequest 2\",function(){return\"XMLHttpRequest\"in global&&\"withCredentials\"in new global.XMLHttpRequest}),checkFeature(\"ES5 strict\",function(){return function(){return\"undefined\"==typeof this}()}),checkFeature(\"CSS borderRadius\",function(){return\"undefined\"!=typeof global.document.body.style.borderRadius}),checkFeature(\"CSS boxShadow\",function(){return\"undefined\"!=typeof global.document.body.style.boxShadow}),checkFeature(\"CSS boxSizing\",function(){return\"undefined\"!=typeof global.document.body.style.boxSizing}),checkFeature(\"CSS backgroundSize\",function(){return\"undefined\"!=typeof global.document.body.style.backgroundSize}),checkFeature(\"CSS backgroundOrigin\",function(){return\"undefined\"!=typeof global.document.body.style.backgroundOrigin}),checkBadBrowserExtensions(),!0}catch(e){return!1}},checkBadBrowserExtensions=function(){var e=\"checkbadbrowsersframe\",t=ko.bindingHandlers.bindIframe.tpl;ko.bindingHandlers.bindIframe.tpl='<!DOCTYPE html>\\r\\n<html>\\r\\n<head><title>A</title>\\r\\n</head>\\r\\n<body><p style=\"color: blue\" align=\"right\" data-bind=\"style: { color: \\'red\\' }\">B</p><div data-bind=\"text: content\"></div></body>\\r\\n</html>\\r\\n',$(\"body\").append('<iframe id=\"'+e+'\" data-bind=\"bindIframe: $data\"></iframe>');var o=global.document.getElementById(e);ko.applyBindings({content:\"dummy content\"},o);var a=o.contentWindow.document.doctype,i=\"<!DOCTYPE \"+a.name+(a.publicId?' PUBLIC \"'+a.publicId+'\"':\"\")+(!a.publicId&&a.systemId?\" SYSTEM\":\"\")+(a.systemId?' \"'+a.systemId+'\"':\"\")+\">\",l=i+\"\\n\"+o.contentWindow.document.documentElement.outerHTML;ko.cleanNode(o),ko.removeNode(o),ko.bindingHandlers.bindIframe.tpl=t;var d='<!DOCTYPE html>\\n<html><head><title>A</title>\\n</head>\\n<body><p align=\"right\" style=\"color: red;\" data-bind=\"style: { color: \\'red\\' }\">B</p><div data-bind=\"text: content\">dummy content</div>\\n\\n</body></html>',r='<!DOCTYPE html>\\n<html><head><title>A</title>\\n</head>\\n<body><p style=\"color: red;\" data-bind=\"style: { color: \\'red\\' }\" align=\"right\">B</p><div data-bind=\"text: content\">dummy content</div>\\n\\n</body></html>',n='<!DOCTYPE html>\\n<html><head><title>A</title>\\n</head>\\n<body><p style=\"color: red;\" align=\"right\" data-bind=\"style: { color: \\'red\\' }\">B</p><div data-bind=\"text: content\">dummy content</div>\\n\\n</body></html>';if(d!==l&&r!==l&&n!==l)throw console.info(\"BadBrowser.FrameContentCheck\",l.length,d.length,r.length,n.length,l==d,l==r,l==n),console.info(l),\"Unexpected frame content. Misbehaving browser: \"+l.length+\"/\"+d.length+\"/\"+r.length+\"/\"+n.length},fixPageEvents=function(){global.addEventListener&&(global.addEventListener(\"drag\",function(e){e=e||global.event,e.preventDefault()},!1),global.addEventListener(\"dragstart\",function(e){e=e||global.event,e.preventDefault()},!1),global.addEventListener(\"dragover\",function(e){e=e||global.event,e.preventDefault()},!1),global.addEventListener(\"drop\",function(e){e=e||global.event,e.preventDefault()},!1),global.document.body.addEventListener(\"drop\",function(e){e.preventDefault()},!1)),global.document.ondragstart&&(global.document.ondragstart=function(){return!1})};module.exports={compile:templateCompiler,load:templateLoader,isCompatible:isCompatible,fixPageEvents:fixPageEvents};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./viewmodel.js":"/Users/denea/mosaico/src/js/viewmodel.js","./bindings/choose-template.js":"/Users/denea/mosaico/src/js/bindings/choose-template.js","./converter/main.js":"/Users/denea/mosaico/src/js/converter/main.js"}},"/Users/denea/mosaico/bower_components/slick/parser.js":{"file":"/Users/denea/mosaico/bower_components/slick/parser.js","source":"\"use strict\";var escapeRe=/([-.*+?^${}()|[\\]\\/\\\\])/g,unescapeRe=/\\\\/g,escape=function(e){return(e+\"\").replace(escapeRe,\"\\\\$1\")},unescape=function(e){return(e+\"\").replace(unescapeRe,\"\")},slickRe=RegExp(\"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\".replace(/<combinator>/,\"[\"+escape(\">+~`!@$%^&={}\\\\;</\")+\"]\").replace(/<unicode>/g,\"(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])\").replace(/<unicode1>/g,\"(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])\")),Part=function(e){this.combinator=e||\" \",this.tag=\"*\"};Part.prototype.toString=function(){if(!this.raw){var e,t,o=\"\";if(o+=this.tag||\"*\",this.id&&(o+=\"#\"+this.id),this.classes&&(o+=\".\"+this.classList.join(\".\")),this.attributes)for(e=0;t=this.attributes[e++];)o+=\"[\"+t.name+(t.operator?t.operator+'\"'+t.value+'\"':\"\")+\"]\";if(this.pseudos)for(e=0;t=this.pseudos[e++];)o+=\":\"+t.name,t.value&&(o+=\"(\"+t.value+\")\");this.raw=o}return this.raw};var Expression=function(){this.length=0};Expression.prototype.toString=function(){if(!this.raw){for(var e,t=\"\",o=0;e=this[o++];)1!==o&&(t+=\" \"),\" \"!==e.combinator&&(t+=e.combinator+\" \"),t+=e;this.raw=t}return this.raw};var replacer=function(e,t,o,n,r,i,a,l,s,d,u,c,f,p,m,b){var g,h;if((t||!this.length)&&(g=this[this.length++]=new Expression,t))return\"\";if(g||(g=this[this.length-1]),(o||n||!g.length)&&(h=g[g.length++]=new Part(o)),h||(h=g[g.length-1]),r)h.tag=unescape(r);else if(i)h.id=unescape(i);else if(a){var v=unescape(a),y=h.classes||(h.classes={});if(!y[v]){y[v]=escape(a);var k=h.classList||(h.classList=[]);k.push(v),k.sort()}}else f?(b=b||m,(h.pseudos||(h.pseudos=[])).push({type:1==c.length?\"class\":\"element\",name:unescape(f),escapedName:escape(f),value:b?unescape(b):null,escapedValue:b?escape(b):null})):l&&(u=u?escape(u):null,(h.attributes||(h.attributes=[])).push({operator:s,name:unescape(l),escapedName:escape(l),value:u?unescape(u):null,escapedValue:u?escape(u):null}));return\"\"},Expressions=function(e){this.length=0;for(var t,o=this,n=e;e;){if(t=e.replace(slickRe,function(){return replacer.apply(o,arguments)}),t===e)throw new Error(n+\" is an invalid expression\");e=t}};Expressions.prototype.toString=function(){if(!this.raw){for(var e,t=[],o=0;e=this[o++];)t.push(e);this.raw=t.join(\", \")}return this.raw};var cache={},parse=function(e){return null==e?null:(e=(\"\"+e).replace(/^\\s+|\\s+$/g,\"\"),cache[e]||(cache[e]=new Expressions(e)))};module.exports=parse;\n//# sourceMappingURL=data:application/json;base64,","deps":{}},"/Users/denea/mosaico/bower_components/juice/lib/selector.js":{"file":"/Users/denea/mosaico/bower_components/juice/lib/selector.js","source":"\"use strict\";function Selector(e,t){this.text=e,this.spec=void 0,this.styleAttribute=t||!1}function parse(e){try{return parser(e)[0]}catch(t){return[]}}var parser=require(\"./../../slick/parser\");module.exports=exports=Selector,Selector.prototype.parsed=function(){return this.tokens||(this.tokens=parse(this.text)),this.tokens},Selector.prototype.specificity=function(){function e(o,n){for(var i=n||parse(o),r=[t?1:0,0,0,0],a=[],l=0;l<i.length;l++){var s=i[l],d=s.pseudos;if(s.id&&r[1]++,s.attributes&&(r[2]+=s.attributes.length),s.classList&&(r[2]+=s.classList.length),s.tag&&\"*\"!==s.tag&&r[3]++,d){r[3]+=d.length;for(var u=0;u<d.length;u++)\"not\"===d[u].name&&(a.push(d[u].value),r[3]--)}}for(var c=a.length;c--;)for(var f=e(a[c]),p=4;p--;)r[p]+=f[p];return r}var t=this.styleAttribute;return this.spec||(this.spec=e(this.text,this.parsed())),this.spec};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbGVjdG9yLmpzIl0sIm5hbWVzIjpbIlNlbGVjdG9yIiwidGV4dCIsInN0eWxlQXR0cmlidXRlIiwidGhpcyIsInNwZWMiLCJ1bmRlZmluZWQiLCJwYXJzZSIsInBhcnNlciIsImUiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInByb3RvdHlwZSIsInBhcnNlZCIsInRva2VucyIsInNwZWNpZmljaXR5IiwiZXhwcmVzc2lvbnMiLCJub3RzIiwiaSIsImxlbmd0aCIsImV4cHJlc3Npb24iLCJwc2V1ZG9zIiwiaWQiLCJhdHRyaWJ1dGVzIiwiY2xhc3NMaXN0IiwidGFnIiwicCIsIm5hbWUiLCJwdXNoIiwidmFsdWUiLCJpaSIsIm5vdCIsImpqIl0sIm1hcHBpbmdzIjoiQUFBQSxZQWNBLFNBQVNBLFVBQVNDLEVBQU1DLEdBQ3RCQyxLQUFLRixLQUFPQSxFQUNaRSxLQUFLQyxLQUFPQyxPQUNaRixLQUFLRCxlQUFpQkEsSUFBa0IsRUF5RTFDLFFBQVNJLE9BQU1MLEdBQ2IsSUFDRSxNQUFPTSxRQUFPTixHQUFNLEdBQ3BCLE1BQU9PLEdBQ1AsVUE1RkosR0FBSUQsUUFBU0UsUUFBUSxlQUVyQkMsUUFBT0MsUUFBVUEsUUFBVVgsU0FzQjNCQSxTQUFTWSxVQUFVQyxPQUFTLFdBRTFCLE1BREtWLE1BQUtXLFNBQVVYLEtBQUtXLE9BQVNSLE1BQU1ILEtBQUtGLE9BQ3RDRSxLQUFLVyxRQVNkZCxTQUFTWSxVQUFVRyxZQUFjLFdBSy9CLFFBQVNBLEdBQVlkLEVBQU1ZLEdBS3pCLElBQUssR0FKREcsR0FBY0gsR0FBVVAsTUFBTUwsR0FDOUJHLEdBQVFGLEVBQWlCLEVBQUksRUFBRyxFQUFHLEVBQUcsR0FDdENlLEtBRUtDLEVBQUksRUFBR0EsRUFBSUYsRUFBWUcsT0FBUUQsSUFBSyxDQUMzQyxHQUFJRSxHQUFhSixFQUFZRSxHQUN6QkcsRUFBVUQsRUFBV0MsT0FhekIsSUFWSUQsRUFBV0UsSUFBTWxCLEVBQUssS0FHdEJnQixFQUFXRyxhQUFjbkIsRUFBSyxJQUFNZ0IsRUFBV0csV0FBV0osUUFDMURDLEVBQVdJLFlBQWFwQixFQUFLLElBQU1nQixFQUFXSSxVQUFVTCxRQUd4REMsRUFBV0ssS0FBMEIsTUFBbkJMLEVBQVdLLEtBQWVyQixFQUFLLEtBR2pEaUIsRUFBUyxDQUNYakIsRUFBSyxJQUFNaUIsRUFBUUYsTUFFbkIsS0FBSyxHQUFJTyxHQUFJLEVBQUdBLEVBQUlMLEVBQVFGLE9BQVFPLElBQ1YsUUFBcEJMLEVBQVFLLEdBQUdDLE9BQ2JWLEVBQUtXLEtBQUtQLEVBQVFLLEdBQUdHLE9BQ3JCekIsRUFBSyxPQU1iLElBQUssR0FBSTBCLEdBQUtiLEVBQUtFLE9BQVFXLEtBRXpCLElBQUssR0FEREMsR0FBTWhCLEVBQVlFLEVBQUthLElBQ2xCRSxFQUFLLEVBQUdBLEtBQVM1QixFQUFLNEIsSUFBT0QsRUFBSUMsRUFHNUMsT0FBTzVCLEdBekNULEdBQUlGLEdBQWlCQyxLQUFLRCxjQUUxQixPQURLQyxNQUFLQyxPQUFRRCxLQUFLQyxLQUFPVyxFQUFZWixLQUFLRixLQUFNRSxLQUFLVSxXQUNuRFYsS0FBS0MiLCJmaWxlIjoib3V0LmpzLm1hcCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHBhcnNlciA9IHJlcXVpcmUoJ3NsaWNrL3BhcnNlcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMgPSBTZWxlY3RvcjtcblxuLyoqXG4gKiBDU1Mgc2VsZWN0b3IgY29uc3RydWN0b3IuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHNlbGVjdG9yIHRleHRcbiAqIEBwYXJhbSB7QXJyYXl9IG9wdGlvbmFsbHksIHByZWNhbGN1bGF0ZWQgc3BlY2lmaWNpdHlcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gU2VsZWN0b3IodGV4dCwgc3R5bGVBdHRyaWJ1dGUpIHtcbiAgdGhpcy50ZXh0ID0gdGV4dDtcbiAgdGhpcy5zcGVjID0gdW5kZWZpbmVkO1xuICB0aGlzLnN0eWxlQXR0cmlidXRlID0gc3R5bGVBdHRyaWJ1dGUgfHwgZmFsc2U7XG59XG5cbi8qKlxuICogR2V0IHBhcnNlZCBzZWxlY3Rvci5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblNlbGVjdG9yLnByb3RvdHlwZS5wYXJzZWQgPSBmdW5jdGlvbigpIHtcbiAgaWYgKCF0aGlzLnRva2VucykgeyB0aGlzLnRva2VucyA9IHBhcnNlKHRoaXMudGV4dCk7IH1cbiAgcmV0dXJuIHRoaXMudG9rZW5zO1xufTtcblxuLyoqXG4gKiBMYXp5IHNwZWNpZmljaXR5IGdldHRlclxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuU2VsZWN0b3IucHJvdG90eXBlLnNwZWNpZmljaXR5ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBzdHlsZUF0dHJpYnV0ZSA9IHRoaXMuc3R5bGVBdHRyaWJ1dGU7XG4gIGlmICghdGhpcy5zcGVjKSB7IHRoaXMuc3BlYyA9IHNwZWNpZmljaXR5KHRoaXMudGV4dCwgdGhpcy5wYXJzZWQoKSk7IH1cbiAgcmV0dXJuIHRoaXMuc3BlYztcblxuICBmdW5jdGlvbiBzcGVjaWZpY2l0eSh0ZXh0LCBwYXJzZWQpIHtcbiAgICB2YXIgZXhwcmVzc2lvbnMgPSBwYXJzZWQgfHwgcGFyc2UodGV4dCk7XG4gICAgdmFyIHNwZWMgPSBbc3R5bGVBdHRyaWJ1dGUgPyAxIDogMCwgMCwgMCwgMF07XG4gICAgdmFyIG5vdHMgPSBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXhwcmVzc2lvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBleHByZXNzaW9uID0gZXhwcmVzc2lvbnNbaV07XG4gICAgICB2YXIgcHNldWRvcyA9IGV4cHJlc3Npb24ucHNldWRvcztcblxuICAgICAgLy8gaWQgYXdhcmRzIGEgcG9pbnQgaW4gdGhlIHNlY29uZCBjb2x1bW5cbiAgICAgIGlmIChleHByZXNzaW9uLmlkKSB7IHNwZWNbMV0rKzsgfVxuXG4gICAgICAvLyBjbGFzc2VzIGFuZCBhdHRyaWJ1dGVzIGF3YXJkIGEgcG9pbnQgZWFjaCBpbiB0aGUgdGhpcmQgY29sdW1uXG4gICAgICBpZiAoZXhwcmVzc2lvbi5hdHRyaWJ1dGVzKSB7IHNwZWNbMl0gKz0gZXhwcmVzc2lvbi5hdHRyaWJ1dGVzLmxlbmd0aDsgfVxuICAgICAgaWYgKGV4cHJlc3Npb24uY2xhc3NMaXN0KSB7IHNwZWNbMl0gKz0gZXhwcmVzc2lvbi5jbGFzc0xpc3QubGVuZ3RoOyB9XG5cbiAgICAgIC8vIHRhZyBhd2FyZHMgYSBwb2ludCBpbiB0aGUgZm91cnRoIGNvbHVtblxuICAgICAgaWYgKGV4cHJlc3Npb24udGFnICYmIGV4cHJlc3Npb24udGFnICE9PSAnKicpIHsgc3BlY1szXSsrOyB9XG5cbiAgICAgIC8vIHBzZXVkb3MgYXdhcmQgYSBwb2ludCBlYWNoIGluIHRoZSBmb3VydGggY29sdW1uXG4gICAgICBpZiAocHNldWRvcykge1xuICAgICAgICBzcGVjWzNdICs9IHBzZXVkb3MubGVuZ3RoO1xuXG4gICAgICAgIGZvciAodmFyIHAgPSAwOyBwIDwgcHNldWRvcy5sZW5ndGg7IHArKykge1xuICAgICAgICAgIGlmIChwc2V1ZG9zW3BdLm5hbWUgPT09ICdub3QnKSB7XG4gICAgICAgICAgICBub3RzLnB1c2gocHNldWRvc1twXS52YWx1ZSk7XG4gICAgICAgICAgICBzcGVjWzNdLS07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaWkgPSBub3RzLmxlbmd0aDsgaWktLTspIHtcbiAgICAgIHZhciBub3QgPSBzcGVjaWZpY2l0eShub3RzW2lpXSk7XG4gICAgICBmb3IgKHZhciBqaiA9IDQ7IGpqLS07KSB7IHNwZWNbampdICs9IG5vdFtqal07IH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3BlYztcbiAgfVxufTtcblxuLyoqXG4gKiBQYXJzZXMgYSBzZWxlY3RvciBhbmQgcmV0dXJucyB0aGUgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzZWxlY3RvclxuICogQGFwaSBwcml2YXRlLlxuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHRleHQpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcGFyc2VyKHRleHQpWzBdO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG59XG4iXX0=","deps":{"./../../slick/parser":"/Users/denea/mosaico/bower_components/slick/parser.js"}},"/Users/denea/mosaico/bower_components/mensch/lib/stringify.js":{"file":"/Users/denea/mosaico/bower_components/mensch/lib/stringify.js","source":"function stringify(e,t){var o;t||(t={}),_indentation=t.indentation||\"\",_compress=!!t.compress,_comments=!!t.comments,_compress?_n=_s=\"\":(_n=\"\\n\",_s=\" \"),TIMER&&(o=Date.now());var n=reduce(e.stylesheet.rules,stringifyNode).join(\"\\n\").trim();return TIMER&&debug(\"ran in\",Date.now()-o+\"ms\"),n}function indent(e){return this.level||(this.level=1),e?(this.level+=e,void 0):_compress?\"\":Array(this.level).join(_indentation||\"\")}function stringifyAtRule(e){return\"@\"+e.type+\" \"+e.value+\";\"+_n}function stringifyAtGroup(e){var t=\"\",o=e.prefix||\"\";e.name&&(t=\" \"+e.name);var n=\"page\"!==e.type;return\"@\"+o+e.type+t+_s+stringifyBlock(e,n)+_n}function stringifyComment(e){return _comments?\"/*\"+(e.text||\"\")+\"*/\"+_n:\"\"}function stringifyRule(e){var t;return e.selectors?t=e.selectors.join(\",\"+_n):(t=\"@\"+e.type,t+=e.name?\" \"+e.name:\"\"),indent()+t+_s+stringifyBlock(e)+_n}function reduce(e,t){return e.reduce(function(e,o){var n=\"comment\"===o.type?stringifyComment(o):t(o);return n&&e.push(n),e},[])}function stringifyBlock(e,t){var o=e.declarations,n=stringifyDeclaration;return e.rules&&(o=e.rules,n=stringifyRule),o=stringifyChildren(o,n),o&&(o=_n+o+(t?\"\":_n)),\"{\"+o+indent()+\"}\"}function stringifyChildren(e,t){if(!e)return\"\";indent(1);var o=reduce(e,t);return indent(-1),o.length?o.join(_n):\"\"}function stringifyDeclaration(e){return\"property\"===e.type?stringifyProperty(e):(DEBUG&&debug(\"stringifyDeclaration: unexpected node:\",JSON.stringify(e)),void 0)}function stringifyNode(e){switch(e.type){case\"rule\":return stringifyRule(e);case\"media\":case\"keyframes\":return stringifyAtGroup(e);case\"comment\":return stringifyComment(e);case\"import\":case\"charset\":case\"namespace\":return stringifyAtRule(e);case\"font-face\":case\"supports\":case\"viewport\":case\"document\":case\"page\":return stringifyAtGroup(e)}DEBUG&&debug(\"stringifyNode: unexpected node: \"+JSON.stringify(e))}function stringifyProperty(e){var t=e.name?e.name+\":\"+_s:\"\";return indent()+t+e.value+\";\"}var DEBUG=!1,TIMER=!1,debug=require(\"./debug\")(\"stringify\"),_comments,_compress,_indentation,_n,_s;exports=module.exports=stringify;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./debug":"/Users/denea/mosaico/bower_components/mensch/lib/debug.js"}},"/Users/denea/mosaico/bower_components/mensch/lib/debug.js":{"file":"/Users/denea/mosaico/bower_components/mensch/lib/debug.js","source":"(function (process){\nfunction debug(e){return _debug.bind(null,e)}function _debug(e){var t=[].slice.call(arguments,1);t.unshift(\"[\"+e+\"]\"),process.stderr.write(t.join(\" \")+\"\\n\")}exports=module.exports=debug;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvd2VyX2NvbXBvbmVudHMvbWVuc2NoL2xpYi9kZWJ1Zy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBRUEsUUFBUyxPQUFNLEdBQ2IsTUFBTyxRQUFPLEtBQUssS0FBTSxHQUczQixRQUFTLFFBQU8sR0FDZCxHQUFJLE1BQVUsTUFBTSxLQUFLLFVBQVcsRUFDcEMsR0FBSyxRQUFRLElBQU0sRUFBUSxLQUMzQixRQUFRLE9BQU8sTUFBTSxFQUFLLEtBQUssS0FBTyxNQVR4QyxRQUFVLE9BQU8sUUFBVSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZGVidWc7XG5cbmZ1bmN0aW9uIGRlYnVnKGxhYmVsKSB7XG4gIHJldHVybiBfZGVidWcuYmluZChudWxsLCBsYWJlbCk7XG59XG5cbmZ1bmN0aW9uIF9kZWJ1ZyhsYWJlbCkge1xuICB2YXIgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgYXJncy51bnNoaWZ0KCdbJyArIGxhYmVsICsgJ10nKTtcbiAgcHJvY2Vzcy5zdGRlcnIud3JpdGUoYXJncy5qb2luKCcgJykgKyAnXFxuJyk7XG59Il19","deps":{"_process":"/Users/denea/mosaico/node_modules/process/browser.js"}},"/Users/denea/mosaico/bower_components/mensch/lib/parser.js":{"file":"/Users/denea/mosaico/bower_components/mensch/lib/parser.js","source":"function parse(e,t){var o;t||(t={}),_comments=!!t.comments,_position=!!t.position,_depth=0,_tokens=Array.isArray(e)?e.slice():lex(e);var n,r,i=[];for(TIMER&&(o=Date.now());r=next();)n=parseToken(r),n&&i.push(n);return TIMER&&debug(\"ran in\",Date.now()-o+\"ms\"),{type:\"stylesheet\",stylesheet:{rules:i}}}function astNode(e,t){t||(t={});for(var o,n=[\"type\",\"name\",\"value\"],r={},i=0;i<n.length;++i)o=n[i],e[o]&&(r[o]=t[o]||e[o]);for(n=Object.keys(t),i=0;i<n.length;++i)o=n[i],r[o]||(r[o]=t[o]);return _position&&(r.position={start:e.start,end:e.end}),DEBUG&&debug(\"astNode:\",JSON.stringify(r,null,2)),r}function next(){var e=_tokens.shift();return DEBUG&&debug(\"next:\",JSON.stringify(e,null,2)),e}function parseAtGroup(e){_depth+=1;var t={};switch(e.type){case\"font-face\":case\"viewport\":t.declarations=parseDeclarations();break;case\"page\":t.prefix=e.prefix,t.declarations=parseDeclarations();break;default:t.prefix=e.prefix,t.rules=parseRules()}return astNode(e,t)}function parseAtImport(e){return astNode(e)}function parseCharset(e){return astNode(e)}function parseComment(e){return astNode(e,{text:e.text})}function parseNamespace(e){return astNode(e)}function parseProperty(e){return astNode(e)}function parseSelector(e){function t(e){return e.trim()}return astNode(e,{type:\"rule\",selectors:e.text.split(\",\").map(t),declarations:parseDeclarations(e)})}function parseToken(e){switch(e.type){case\"property\":return parseProperty(e);case\"selector\":return parseSelector(e);case\"at-group-end\":return _depth-=1,void 0;case\"media\":case\"keyframes\":return parseAtGroup(e);case\"comment\":if(_comments)return parseComment(e);break;case\"charset\":return parseCharset(e);case\"import\":return parseAtImport(e);case\"namespace\":return parseNamespace(e);case\"font-face\":case\"supports\":case\"viewport\":case\"document\":case\"page\":return parseAtGroup(e)}DEBUG&&debug(\"parseToken: unexpected token:\",JSON.stringify(e))}function parseTokensWhile(e){for(var t,o,n=[];(o=next())&&e&&e(o);)t=parseToken(o),t&&n.push(t);return o&&\"end\"!==o.type&&_tokens.unshift(o),n}function parseDeclarations(){return parseTokensWhile(function(e){return\"property\"===e.type||\"comment\"===e.type})}function parseRules(){return parseTokensWhile(function(){return _depth})}var DEBUG=!1,TIMER=!1,debug=require(\"./debug\")(\"parse\"),lex=require(\"./lexer\");exports=module.exports=parse;var _comments,_depth,_position,_tokens;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./debug":"/Users/denea/mosaico/bower_components/mensch/lib/debug.js","./lexer":"/Users/denea/mosaico/bower_components/mensch/lib/lexer.js"}},"/Users/denea/mosaico/bower_components/mensch/lib/lexer.js":{"file":"/Users/denea/mosaico/bower_components/mensch/lib/lexer.js","source":"function lex(e){function t(){return u(),e[h]}function o(e){return e?w[w.length-1-e]:k}function n(t){var o=h+1;return t===e.slice(o,o+t.length)}function i(t){var o=e.slice(h).indexOf(t);return o>0?o:!1}function r(e){return e===a(1)}function a(t){return e[h+(t||1)]}function l(){var e=w.pop();return k=w[w.length-1],e}function s(e){return k=e,w.push(k),w.length}function d(e){var t=k;return w[w.length-1]=k=e,t}function u(t){if(1==(t||1))\"\\n\"==e[h]?(y++,g=1):g++,h++;else{var o=e.slice(h,h+t).split(\"\\n\");o.length>1&&(y+=o.length-1,g=1),g+=o[o.length-1].length,h+=t}}function c(){x.end={line:y,col:g},DEBUG&&debug(\"addToken:\",JSON.stringify(x,null,2)),_.push(x),m=\"\",x={}}function f(e){x={type:e,start:{line:y,col:g}}}var p,b,m=\"\",g=0,h=-1,v=0,y=1,k=\"before-selector\",w=[k],x={},_=[],S=[\"media\",\"keyframes\",{name:\"-webkit-keyframes\",type:\"keyframes\",prefix:\"-webkit-\"},{name:\"-moz-keyframes\",type:\"keyframes\",prefix:\"-moz-\"},{name:\"-ms-keyframes\",type:\"keyframes\",prefix:\"-ms-\"},{name:\"-o-keyframes\",type:\"keyframes\",prefix:\"-o-\"},\"font-face\",{name:\"import\",state:\"before-at-value\"},{name:\"charset\",state:\"before-at-value\"},\"supports\",\"viewport\",{name:\"namespace\",state:\"before-at-value\"},\"document\",{name:\"-moz-document\",type:\"document\",prefix:\"-moz-\"},\"page\"];for(TIMER&&(p=Date.now());b=t();)switch(DEBUG&&debug(b,o()),b){case\" \":switch(o()){case\"selector\":case\"value\":case\"value-paren\":case\"at-group\":case\"at-value\":case\"comment\":case\"double-string\":case\"single-string\":m+=b}break;case\"\\n\":case\"\t\":case\"\\r\":case\"\\f\":switch(o()){case\"value\":case\"value-paren\":case\"at-group\":case\"comment\":case\"single-string\":case\"double-string\":case\"selector\":m+=b;break;case\"at-value\":\"\\n\"===b&&(x.value=m.trim(),c(),l())}break;case\":\":switch(o()){case\"name\":x.name=m.trim(),m=\"\",d(\"before-value\");break;case\"before-selector\":m+=b,f(\"selector\"),s(\"selector\");break;case\"before-value\":d(\"value\"),m+=b;break;default:m+=b}break;case\";\":switch(o()){case\"name\":case\"before-value\":case\"value\":m.trim().length>0&&(x.value=m.trim(),c()),d(\"before-name\");break;case\"value-paren\":m+=b;break;case\"at-value\":x.value=m.trim(),c(),l();break;case\"before-name\":break;default:m+=b}break;case\"{\":switch(o()){case\"selector\":if(\"\\\\\"===a(-1)){m+=b;break}x.text=m.trim(),c(),d(\"before-name\"),v+=1;break;case\"at-group\":switch(x.name=m.trim(),x.type){case\"font-face\":case\"viewport\":case\"page\":s(\"before-name\");break;default:s(\"before-selector\")}c(),v+=1;break;case\"name\":case\"at-rule\":x.name=m.trim(),c(),s(\"before-name\"),v+=1;break;case\"comment\":case\"double-string\":case\"single-string\":m+=b;break;case\"before-value\":d(\"value\"),m+=b}break;case\"}\":switch(o()){case\"before-name\":case\"name\":case\"before-value\":case\"value\":m&&(x.value=m.trim()),x.name&&x.value&&c(),f(\"end\"),c(),l(),\"at-group\"===o()&&(f(\"at-group-end\"),c(),l()),v>0&&(v-=1);break;case\"at-group\":case\"before-selector\":case\"selector\":if(\"\\\\\"===a(-1)){m+=b;break}v>0&&\"at-group\"===o(1)&&(f(\"at-group-end\"),c()),v>1&&l(),v>0&&(v-=1);break;case\"double-string\":case\"single-string\":case\"comment\":m+=b}break;case'\"':case\"'\":switch(o()){case\"double-string\":'\"'===b&&\"\\\\\"!==a(-1)&&l();break;case\"single-string\":\"'\"===b&&\"\\\\\"!==a(-1)&&l();break;case\"before-at-value\":d(\"at-value\"),s('\"'===b?\"double-string\":\"single-string\");break;case\"before-value\":d(\"value\"),s('\"'===b?\"double-string\":\"single-string\");break;case\"comment\":break;default:\"\\\\\"!==a(-1)&&s('\"'===b?\"double-string\":\"single-string\")}m+=b;break;case\"/\":switch(o()){case\"comment\":case\"double-string\":case\"single-string\":m+=b;break;case\"before-value\":case\"selector\":case\"name\":case\"value\":if(r(\"*\")){var O=i(\"*/\");O&&u(O+1)}else\"before-value\"==o()&&d(\"value\"),m+=b;break;default:r(\"*\")?(f(\"comment\"),s(\"comment\"),u()):m+=b}break;case\"*\":switch(o()){case\"comment\":r(\"/\")?(x.text=m,u(),c(),l()):m+=b;break;case\"before-selector\":m+=b,f(\"selector\"),s(\"selector\");break;case\"before-value\":d(\"value\"),m+=b;break;default:m+=b}break;case\"@\":switch(o()){case\"comment\":case\"double-string\":case\"single-string\":m+=b;break;case\"before-value\":d(\"value\"),m+=b;break;default:for(var C,$,T=!1,A=0,E=S.length;!T&&E>A;++A)$=S[A],C=$.name||$,n(C)&&(T=!0,f(C),s($.state||\"at-group\"),u(C.length),$.prefix&&(x.prefix=$.prefix),$.type&&(x.type=$.type));T||(m+=b)}break;case\"(\":switch(o()){case\"value\":s(\"value-paren\");break;case\"before-value\":d(\"value\")}m+=b;break;case\")\":switch(o()){case\"value-paren\":l();break;case\"before-value\":d(\"value\")}m+=b;break;default:switch(o()){case\"before-selector\":f(\"selector\"),s(\"selector\");break;case\"before-name\":f(\"property\"),d(\"name\");break;case\"before-value\":d(\"value\");break;case\"before-at-value\":d(\"at-value\")}m+=b}return TIMER&&debug(\"ran in\",Date.now()-p+\"ms\"),_}var DEBUG=!1,TIMER=!1,debug=require(\"./debug\")(\"lex\");exports=module.exports=lex;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./debug":"/Users/denea/mosaico/bower_components/mensch/lib/debug.js"}},"/Users/denea/mosaico/bower_components/mensch/index.js":{"file":"/Users/denea/mosaico/bower_components/mensch/index.js","source":"module.exports={lex:require(\"./lib/lexer\"),parse:require(\"./lib/parser\"),stringify:require(\"./lib/stringify\")};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJsZXgiLCJyZXF1aXJlIiwicGFyc2UiLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxTQUNIQyxJQUFPQyxRQUFRLGVBQ2ZDLE1BQU9ELFFBQVEsZ0JBQ2ZFLFVBQVdGLFFBQVEiLCJmaWxlIjoib3V0LmpzLm1hcCIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGxleCAgOiByZXF1aXJlKCcuL2xpYi9sZXhlcicpLFxuICAgIHBhcnNlOiByZXF1aXJlKCcuL2xpYi9wYXJzZXInKSxcbiAgICBzdHJpbmdpZnk6IHJlcXVpcmUoJy4vbGliL3N0cmluZ2lmeScpXG59O1xuIl19","deps":{"./lib/parser":"/Users/denea/mosaico/bower_components/mensch/lib/parser.js","./lib/lexer":"/Users/denea/mosaico/bower_components/mensch/lib/lexer.js","./lib/stringify":"/Users/denea/mosaico/bower_components/mensch/lib/stringify.js"}},"/Users/denea/mosaico/bower_components/juice/lib/utils.js":{"file":"/Users/denea/mosaico/bower_components/juice/lib/utils.js","source":"\"use strict\";var mensch=require(\"./../../mensch/index.js\"),own={}.hasOwnProperty,os=require(\"os\"),Selector=require(\"./selector\"),Property=require(\"./property\");exports.Selector=Selector,exports.Property=Property,exports.extract=function(e){for(var t=0,o=[],n=\"\",i=0,r=e.length;r>i;i++){var a=e.charAt(i);t?((\"]\"===a||\")\"===a)&&t--,n+=a):\",\"===a?(o.push(n),n=\"\"):((\"[\"===a||\"(\"===a)&&t++,(n.length||\",\"!==a&&\"\\n\"!==a&&\" \"!==a)&&(n+=a))}return n.length&&o.push(n),o},exports.parseCSS=function(e){for(var t=mensch.parse(e,{position:!0,comments:!0}),o=\"undefined\"!=typeof t.stylesheet&&t.stylesheet.rules?t.stylesheet.rules:[],n=[],i=0,r=o.length;r>i;i++)if(\"rule\"==o[i].type)for(var a=o[i],l=a.selectors,s=0,d=l.length;d>s;s++)n.push([l[s],a.declarations]);return n},exports.getPreservedText=function(e,t){for(var o=mensch.parse(e,{position:!0,comments:!0}),n=\"undefined\"!=typeof o.stylesheet&&o.stylesheet.rules?o.stylesheet.rules:[],i=[],r=null,a=n.length-1;a>=0;a--)(t.fontFaces&&\"font-face\"===n[a].type||t.mediaQueries&&\"media\"===n[a].type)&&i.push(mensch.stringify({stylesheet:{rules:[n[a]]}},{comments:!1,indentation:\"  \"})),r=n[a].position.start;return 0===i.length?!1:os.EOL+i.join(os.EOL)+os.EOL},exports.normalizeLineEndings=function(e){return e.replace(/\\r\\n/g,\"\\n\").replace(/\\n/g,\"\\r\\n\")},exports.compareFunc=function(e,t){for(var o=Math.min(e.length,t.length),n=0;o>n;n++)if(e[n]!==t[n])return e[n]>t[n]?1:-1;return e.length-t.length},exports.compare=function(e,t){return 1==exports.compareFunc(e,t)?e:t},exports.extend=function(e,t){for(var o in t)own.call(t,o)&&(e[o]=t[o]);return e},exports.getDefaultOptions=function(e){var t=exports.extend({extraCss:\"\",insertPreservedExtraCss:!0,applyStyleTags:!0,removeStyleTags:!0,preserveMediaQueries:!0,preserveFontFaces:!0,applyWidthAttributes:!0,applyHeightAttributes:!0,applyAttributesTableElements:!0,url:\"\"},e);return t.webResources=t.webResources||{},t};\n//# sourceMappingURL=data:application/json;base64,","deps":{"os":"/Users/denea/mosaico/node_modules/os-browserify/browser.js","./selector":"/Users/denea/mosaico/bower_components/juice/lib/selector.js","./property":"/Users/denea/mosaico/bower_components/juice/lib/property.js","./../../mensch/index.js":"/Users/denea/mosaico/bower_components/mensch/index.js"}},"/Users/denea/mosaico/bower_components/juice/lib/inline.js":{"file":"/Users/denea/mosaico/bower_components/juice/lib/inline.js","source":"\"use strict\";var utils=require(\"./utils\");module.exports=function(e){function t(t,i,r){function l(o){for(var i=o[0],l=o[1],s=new utils.Selector(i),d=s.parsed(),c=n(d),u=0;u<d.length;++u){var p=d[u];if(p.pseudos)for(var m=0;m<p.pseudos.length;++m){var g=p.pseudos[m];if(e.ignoredPseudos.indexOf(g.name)>=0)return}}if(c){var h=d[d.length-1],v=h.pseudos;h.pseudos=a(h.pseudos),i=d.toString(),h.pseudos=v}var y;try{y=t(i)}catch(k){return}y.each(function(){function o(t,o){for(var i=0,a=t.length;a>i;i++)if(\"property\"==t[i].type){var l=t[i].name,s=t[i].value,d=null!==t[i].value.match(/!important$/);d&&!r.preserveImportant&&(s=s.replace(/\\s*!important$/,\"\"));var c=[t[i].position.start.line,t[i].position.start.col],u=new utils.Property(l,s,o,d?2:0,c),p=n.styleProps[l];e.excludedProperties.indexOf(l)<0&&(p&&p.compare(u)===u||!p)&&(p&&p.selector!==o?delete n.styleProps[l]:p&&(u.nextProp=p),n.styleProps[l]=u)}}var n=this;if(!(n.name&&e.nonVisualElements.indexOf(n.name.toUpperCase())>=0)){if(c){var i=\"pseudo\"+c,a=n[i];a||(a=n[i]=t(\"<span />\").get(0),a.pseudoElementType=c,a.pseudoElementParent=n,n[i]=a),n=a}if(!n.styleProps){if(n.styleProps={},t(n).attr(b)){var d=\"* { \"+t(n).attr(b)+\" } \";o(utils.parseCSS(d)[0][1],new utils.Selector(\"<style>\",!0))}f.push(n)}o(l,s)}})}function s(e){Object.keys(e.styleProps).length;var o=[];Object.keys(e.styleProps).forEach(function(t){for(var n=e.styleProps[t];\"undefined\"!=typeof n;)o.push(n),n=n.nextProp}),o.sort(function(e,t){return e.compareFunc(t)});var n=o.filter(function(e){return\"content\"!==e.prop}).map(function(e){return e.prop+\": \"+e.value.replace(/[\"]/g,\"'\")+\";\"}).join(\" \");n&&t(e).attr(b,n)}function d(e){if(e.pseudoElementType&&e.styleProps.content){var n=o(e.styleProps.content.value);n.img?(e.name=\"img\",t(e).attr(\"src\",n.img)):t(e).text(n);var i=e.pseudoElementParent;\"before\"===e.pseudoElementType?t(i).prepend(e):t(i).append(e)}}function c(o,n){if(o.name){var i=o.name.toUpperCase();if(e[n+\"Elements\"].indexOf(i)>-1)for(var a in o.styleProps)if(o.styleProps[a].prop===n){if(o.styleProps[a].value.match(/px/)){var r=o.styleProps[a].value.replace(\"px\",\"\");return t(o).attr(n,r),void 0}if(e.tableElements.indexOf(i)>-1&&o.styleProps[a].value.match(/\\%/))return t(o).attr(n,o.styleProps[a].value),void 0}}}function u(o){if(o.name){var n=o.name.toUpperCase(),i=Object.keys(e.styleToAttribute);if(e.tableElements.indexOf(n)>-1)for(var a in o.styleProps)i.indexOf(o.styleProps[a].prop)>-1&&t(o).attr(e.styleToAttribute[o.styleProps[a].prop],o.styleProps[a].value)}}r=r||{};var p=utils.parseCSS(i),f=[],b=\"style\";if(r.styleAttributeName&&(b=r.styleAttributeName),p.forEach(l),f.forEach(s),r.inlinePseudoElements&&f.forEach(d),r.applyWidthAttributes&&f.forEach(function(e){c(e,\"width\")}),r.applyHeightAttributes&&f.forEach(function(e){c(e,\"height\")}),r.applyAttributesTableElements&&f.forEach(u),r.insertPreservedExtraCss&&r.extraCss){var m=utils.getPreservedText(r.extraCss,{mediaQueries:r.preserveMediaQueries,fontFaces:r.preserveFontFaces});if(m){var g=null;r.insertPreservedExtraCss!==!0?g=t(r.insertPreservedExtraCss):(g=t(\"head\"),g.length||(g=t(\"body\")),g.length||(g=t.root())),g.first().append(\"<style>\"+m+\"</style>\")}}}function o(e){if(\"none\"===e||\"normal\"===e)return\"\";var t=e.match(/^\\s*url\\s*\\(\\s*(.*?)\\s*\\)\\s*$/i);if(t){var o=t[1].replace(/^['\"]|['\"]$/g,\"\");return{img:o}}return e=e.slice(1,e.length-1),e=e.replace(/\\\\/g,\"\")}function n(e){if(0!==e.length){var t=e[e.length-1].pseudos;if(t)for(var o=0;o<t.length;o++)if(i(t[o]))return t[o].name}}function i(e){return\"before\"===e.name||\"after\"===e.name}function a(e){return e.filter(function(e){return!i(e)})}function r(e,o){o=utils.getDefaultOptions(o);var n=s(e,o);return n+=\"\\n\"+o.extraCss,t(e,n,o),e}function l(e,t){var o,n,i,a=[],r=e(\"style\");return r.each(function(){if(i=this,o=i.childNodes,1===o.length){if(n=o[0].data,t.applyStyleTags&&void 0===e(i).attr(\"data-embed\")&&a.push(n),t.removeStyleTags&&void 0===e(i).attr(\"data-embed\")){var r=utils.getPreservedText(i.childNodes[0].nodeValue,{mediaQueries:t.preserveMediaQueries,fontFaces:t.preserveFontFaces});r?i.childNodes[0].nodeValue=r:e(i).remove()}e(i).removeAttr(\"data-embed\")}}),a}function s(e,t){var o=l(e,t),n=o.join(\"\\n\");return n}return e.ignoredPseudos=[\"hover\",\"active\",\"focus\",\"visited\",\"link\"],e.widthElements=[\"TABLE\",\"TD\",\"IMG\"],e.heightElements=[\"TABLE\",\"TD\",\"IMG\"],e.tableElements=[\"TABLE\",\"TD\",\"TH\",\"TR\",\"TD\",\"CAPTION\",\"COLGROUP\",\"COL\",\"THEAD\",\"TBODY\",\"TFOOT\"],e.nonVisualElements=[\"HEAD\",\"TITLE\",\"BASE\",\"LINK\",\"STYLE\",\"META\",\"SCRIPT\",\"NOSCRIPT\"],e.styleToAttribute={\"background-color\":\"bgcolor\",\"background-image\":\"background\",\"text-align\":\"align\",\"vertical-align\":\"valign\"},e.excludedProperties=[],e.juiceDocument=r,e.inlineDocument=t,e};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./utils":"/Users/denea/mosaico/bower_components/juice/lib/utils.js"}},"/Users/denea/mosaico/src/js/ext/inliner.js":{"file":"/Users/denea/mosaico/src/js/ext/inliner.js","source":"(function (global){\n\"use strict\";var console=require(\"./../../../bower_components/console-browserify/index.js\"),$=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),inlineDocument=require(\"./../../../bower_components/juice/lib/inline\")({}).inlineDocument,inlinerPlugin=function(e){e.inline=function(e){$(\"[style]:not([replacedstyle])\",e).each(function(e,t){var o=$(t);o.attr(\"replacedstyle\",o.attr(\"style\"))});var t=[];$('style[data-inline=\"true\"]',e).each(function(e,o){var a=$(o).html();a=a.replace(/<!-- ko ((?!--).)*? -->/g,\"\"),a=a.replace(/<!-- \\/ko -->/g,\"\"),t.push(a),$(o).removeAttr(\"data-inline\")});var o=t.join(\"\\n\"),a=function(t,o){return\"undefined\"==typeof o&&(o=e),$(t,o)};a.root=function(){return $(\":root\",e)},inlineDocument(a,o,{styleAttributeName:\"replacedstyle\"})}};module.exports=inlinerPlugin;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9leHQvaW5saW5lci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFFQSxJQUFJLFNBQVUsUUFBUSxXQUNsQixFQUFJLFFBQVEsVUFDWixlQUFpQixRQUFRLHdCQUF3QixlQUVqRCxjQUFnQixTQUFTLEdBQzNCLEVBQUcsT0FBUyxTQUFTLEdBRW5CLEVBQUUsK0JBQWdDLEdBQUssS0FBSyxTQUFTLEVBQU8sR0FDMUQsR0FBSSxHQUFNLEVBQUUsRUFDWixHQUFJLEtBQUssZ0JBQWlCLEVBQUksS0FBSyxXQUdyQyxJQUFJLEtBQ0osR0FBRSw0QkFBNkIsR0FBSyxLQUFLLFNBQVMsRUFBTyxHQUN2RCxHQUFJLEdBQVUsRUFBRSxHQUFTLE1BQ3pCLEdBQVUsRUFBUSxRQUFRLDJCQUE0QixJQUN0RCxFQUFVLEVBQVEsUUFBUSxpQkFBa0IsSUFDNUMsRUFBTSxLQUFLLEdBQ1gsRUFBRSxHQUFTLFdBQVcsZ0JBRXhCLElBQUksR0FBWSxFQUFNLEtBQUssTUFDdkIsRUFBVyxTQUFTLEVBQVUsR0FFaEMsTUFEc0IsbUJBQVgsS0FBd0IsRUFBVSxHQUN0QyxFQUFFLEVBQVUsR0FFckIsR0FBUyxLQUFPLFdBQ2QsTUFBTyxHQUFFLFFBQVMsSUFFcEIsZUFBZSxFQUFVLEdBQWEsbUJBQW9CLG1CQUk5RCxRQUFPLFFBQVUiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogZ2xvYmFsIGdsb2JhbDogZmFsc2UgKi9cbnZhciBjb25zb2xlID0gcmVxdWlyZShcImNvbnNvbGVcIik7XG52YXIgJCA9IHJlcXVpcmUoXCJqcXVlcnlcIik7XG52YXIgaW5saW5lRG9jdW1lbnQgPSByZXF1aXJlKFwianVpY2UvbGliL2lubGluZVwiKSh7fSkuaW5saW5lRG9jdW1lbnQ7XG5cbnZhciBpbmxpbmVyUGx1Z2luID0gZnVuY3Rpb24odm0pIHtcbiAgdm0uaW5saW5lID0gZnVuY3Rpb24oZG9jKSB7XG4gICAgLy8gdGlueW1jZSBtYXkgaGF2ZSBhZGRlZCBzdHlsZSBhdHRyaWJ1dGVzIHRvIGVsZW1lbnRzIHRoYXQgd2lsbCBhbHNvIGhhdmUgZ2xvYmFsIHN0eWxlcyB0byBiZSBpbmxpbmVkXG4gICAgJCgnW3N0eWxlXTpub3QoW3JlcGxhY2Vkc3R5bGVdKScsIGRvYykuZWFjaChmdW5jdGlvbihpbmRleCwgZWwpIHtcbiAgICAgIHZhciAkZWwgPSAkKGVsKTtcbiAgICAgICRlbC5hdHRyKCdyZXBsYWNlZHN0eWxlJywgJGVsLmF0dHIoJ3N0eWxlJykpO1xuICAgIH0pO1xuXG4gICAgdmFyIHN0eWxlID0gW107XG4gICAgJCgnc3R5bGVbZGF0YS1pbmxpbmU9XCJ0cnVlXCJdJywgZG9jKS5lYWNoKGZ1bmN0aW9uKGluZGV4LCBlbGVtZW50KSB7XG4gICAgICB2YXIgY29udGVudCA9ICQoZWxlbWVudCkuaHRtbCgpO1xuICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvPCEtLSBrbyAoKD8hLS0pLikqPyAtLT4vZywgJycpOyAvLyB0aGlzIHJlcGxhY2VzIHRoZSBhYm92ZSB3aXRoIGEgbW9yZSBmb3JtYWwgKGJ1dCBzbG93ZXIpIHNvbHV0aW9uXG4gICAgICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlKC88IS0tIFxcL2tvIC0tPi9nLCAnJyk7XG4gICAgICBzdHlsZS5wdXNoKGNvbnRlbnQpO1xuICAgICAgJChlbGVtZW50KS5yZW1vdmVBdHRyKCdkYXRhLWlubGluZScpO1xuICAgIH0pO1xuICAgIHZhciBzdHlsZVRleHQgPSBzdHlsZS5qb2luKFwiXFxuXCIpO1xuICAgIHZhciAkY29udGV4dCA9IGZ1bmN0aW9uKHNlbGVjdG9yLCBjb250ZXh0KSB7XG4gICAgICBpZiAodHlwZW9mIGNvbnRleHQgPT0gJ3VuZGVmaW5lZCcpIGNvbnRleHQgPSBkb2M7XG4gICAgICByZXR1cm4gJChzZWxlY3RvciwgY29udGV4dCk7XG4gICAgfTtcbiAgICAkY29udGV4dC5yb290ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gJCgnOnJvb3QnLCBkb2MpO1xuICAgIH07XG4gICAgaW5saW5lRG9jdW1lbnQoJGNvbnRleHQsIHN0eWxlVGV4dCwgeyBzdHlsZUF0dHJpYnV0ZU5hbWU6ICdyZXBsYWNlZHN0eWxlJyB9KTtcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW5saW5lclBsdWdpbjsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./../../../bower_components/juice/lib/inline":"/Users/denea/mosaico/bower_components/juice/lib/inline.js"}},"/Users/denea/mosaico/src/js/app.js":{"file":"/Users/denea/mosaico/src/js/app.js","source":"(function (global){\n\"use strict\";function _canonicalize(e){var t=global.document.createElement(\"div\");return t.innerHTML=\"<a></a>\",t.firstChild.href=e,t.innerHTML=t.innerHTML,t.firstChild.href}function _appendUrlParameters(e,t){var a=-1==e.indexOf(\"?\")?\"?\":\"&\",o=e;for(var i in t)t.hasOwnProperty(i)&&(o+=a+i+\"=\"+encodeURIComponent(t[i]),a=\"&\");return o}var templateLoader=require(\"./template-loader.js\"),console=require(\"./../../bower_components/console-browserify/index.js\"),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),$=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);require(\"./ko-bindings.js\");var performanceAwareCaller=require(\"./timed-call.js\").timedCall,addUndoStackExtensionMaker=require(\"./undomanager/undomain.js\"),colorPlugin=require(\"./ext/color.js\"),utilPlugin=require(\"./ext/util.js\"),inlinerPlugin=require(\"./ext/inliner.js\"),localStorageLoader=require(\"./ext/localstorage.js\");if(\"undefined\"==typeof ko)throw\"Cannot find knockout.js library!\";if(\"undefined\"==typeof $)throw\"Cannot find jquery library!\";var applyBindingOptions=function(e,t){t.bindingHandlers.wysiwygSrc.convertedUrl=function(t,a,o,i){var l,d=e.imgProcessorBackend?e.imgProcessorBackend:\"./upload\",r=d.match(/^(https?:\\/\\/[^\\/]*\\/).*$/),s=t.match(/^(https?:\\/\\/[^\\/]*\\/).*$/);if(null===r||null!==s&&r[1]==s[1])return l=-1==d.indexOf(\"?\")?\"?\":\"&\",_appendUrlParameters(d,{src:t,method:a,params:o+\",\"+i});console.log(\"Cannot apply backend image resizing to non-local resources \",t,a,o,i,r,s);var n={method:a,width:o};return null!==i&&(n.height=i),_appendUrlParameters(t,n)},t.bindingHandlers.wysiwygSrc.placeholderUrl=function(t,a){var o=e.imgProcessorBackend?e.imgProcessorBackend:\"./upload\";return _appendUrlParameters(o,{method:\"placeholder\",params:t+\",\"+a})},e&&e.tinymceConfig&&(t.bindingHandlers.wysiwyg.standardOptions=e.tinymceConfig),e&&e.tinymceConfigFull&&(t.bindingHandlers.wysiwyg.fullOptions=e.tinymceConfigFull)},start=function(e,t,a,o,i){templateLoader.fixPageEvents();var l=function(t){var a={messages:{unknownError:t.t(\"Unknown error\"),uploadedBytes:t.t(\"Uploaded bytes exceed file size\"),maxNumberOfFiles:t.t(\"Maximum number of files exceeded\"),acceptFileTypes:t.t(\"File type not allowed\"),maxFileSize:t.t(\"File is too large\"),minFileSize:t.t(\"File is too small\"),post_max_size:t.t(\"The uploaded file exceeds the post_max_size directive in php.ini\"),max_file_size:t.t(\"File is too big\"),min_file_size:t.t(\"File is too small\"),accept_file_types:t.t(\"Filetype not allowed\"),max_number_of_files:t.t(\"Maximum number of files exceeded\"),max_width:t.t(\"Image exceeds maximum width\"),min_width:t.t(\"Image requires a minimum width\"),max_height:t.t(\"Image exceeds maximum height\"),min_height:t.t(\"Image requires a minimum height\"),abort:t.t(\"File upload aborted\"),image_resize:t.t(\"Failed to resize image\"),generic:t.t(\"Unexpected upload error\")}};e&&e.fileuploadConfig&&(a=$.extend(!0,a,e.fileuploadConfig)),ko.bindingHandlers.fileupload.extendOptions=a},d=function(t){e&&e.strings&&(t.t=function(a,o){var i=e.strings[a];return\"undefined\"==typeof i&&(console.warn(\"Missing translation string for\",a,\": using default string\"),i=a),t.tt(i,o)})},r=[d,addUndoStackExtensionMaker(performanceAwareCaller),colorPlugin,utilPlugin,inlinerPlugin];if(\"undefined\"!=typeof i)for(var s=0;s<i.length;s++)r.push(i[s]);r.push(l);var n=e.fileuploadConfig?e.fileuploadConfig.url:\"/upload/\";applyBindingOptions(e,ko),$(\"<!-- ko template: 'main' --><!-- /ko -->\").appendTo(global.document.body),\"undefined\"==typeof t&&\"undefined\"!=typeof a&&(t=a.template),templateLoader.load(performanceAwareCaller,t,a,o,r,n)},initFromLocalStorage=function(e,t,a){try{var o=localStorageLoader(t,e.emailProcessorBackend),i=\"undefined\"!=typeof a?a:[];i.push(o.extension);var l=_canonicalize(o.metadata.template);start(e,l,o.metadata,o.model,i)}catch(d){console.error(\"TODO not found \",t,d)}},init=function(e,t){var a=global.location.hash?global.location.href.split(\"#\")[1]:void 0;if(e&&(e.template||e.data))if(e.data){var o=JSON.parse(e.data);start(e,void 0,o.metadata,o.content,t)}else start(e,e.template,void 0,void 0,t);else if(a&&7==a.length)initFromLocalStorage(e,a,t);else{if(!a)return!1;start(e,_canonicalize(a),void 0,void 0,t)}return!0};module.exports={isCompatible:templateLoader.isCompatible,init:init,start:start};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./ext/util.js":"/Users/denea/mosaico/src/js/ext/util.js","./timed-call.js":"/Users/denea/mosaico/src/js/timed-call.js","./ext/localstorage.js":"/Users/denea/mosaico/src/js/ext/localstorage.js","./../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./ext/color.js":"/Users/denea/mosaico/src/js/ext/color.js","./undomanager/undomain.js":"/Users/denea/mosaico/src/js/undomanager/undomain.js","./template-loader.js":"/Users/denea/mosaico/src/js/template-loader.js","./ext/inliner.js":"/Users/denea/mosaico/src/js/ext/inliner.js","./ko-bindings.js":"/Users/denea/mosaico/src/js/ko-bindings.js"}},"/Users/denea/mosaico/build/templates.js":{"file":"/Users/denea/mosaico/build/templates.js","source":"var templateSystem=require(\"../src/js/bindings/choose-template.js\");document.addEventListener(\"DOMContentLoaded\",function(){templateSystem.addTemplate(\"array\",\"<!-- ko foreach: $data --><!-- ko block: $data --><!-- /ko --><!-- /ko -->\"),templateSystem.addTemplate(\"block-show\",\"<!-- ko block: $data, scrollIntoView: $root.selectedBlock() === $data --><!-- /ko -->\"),templateSystem.addTemplate(\"block-wysiwyg\",'<div class=\"editable block\" data-drop-content=\"Drop here\" data-bind=\"attr: { \\'data-drop-content\\': $root.t(\\'Drop here\\') }, click: function(obj, evt) { $root.selectBlock(obj); return true }, clickBubble: false, css: { selected: $root.selectedBlock() === $data }, scrollIntoView: $root.selectedBlock() === $data\">  <div class=\"mo-blockselectionhelper\"></div>  <div class=\"tools\" data-bind=\"tooltips: {}\">    <!-- ko if: typeof $index != \\'undefined\\' -->    <div title=\"Drag this handle to move the block\" data-bind=\"attr: { title: $root.t(\\'Drag this handle to move the block\\') }\" class=\"tool handle\"><i class=\"fa fa-fw fa-sort\"></i></div>    <!-- ko if: $index() > 0 -->    <div title=\"Move this block upside\" data-bind=\"attr: { title: $root.t(\\'Move this block upside\\') }\" class=\"tool moveup\"><i class=\"fa fa-fw fa-sort-asc\" data-bind=\\'click: $root.moveBlock.bind($element, $index, $parent, true)\\'></i></div>    <!-- /ko -->    <!-- ko if: $index() < $parent.blocks().length -1 -->    <div title=\"Move this block downside\" data-bind=\"attr: { title: $root.t(\\'Move this block downside\\') }\" class=\"tool movedown\"><i class=\"fa fa-fw fa-sort-desc\" data-bind=\\'click: $root.moveBlock.bind($element, $index, $parent, false)\\'></i></div>    <!-- /ko -->    <div title=\"Delete block\" class=\"tool delete\" data-bind=\"attr: { title: $root.t(\\'Delete block\\') }, click: $root.removeBlock.bind($element, $rawData, $parent)\"><i class=\"fa fa-fw fa-trash-o\"></i></div>    <div title=\"Duplicate block\" class=\"tool clone\" data-bind=\"attr: { title: $root.t(\\'Duplicate block\\') }, click: $root.duplicateBlock.bind($element, $index, $parent)\"><i class=\"fa fa-fw fa-files-o\"></i></div>    <!-- /ko -->    <!-- ko if: typeof $data._nextVariant != \\'undefined\\' --><div title=\"Switch block variant\" class=\"tool variant\" data-bind=\"attr: { title: $root.t(\\'Switch block variant\\') }, click: $data._nextVariant\"><i class=\"fa fa-fw fa-magic\"></i></div><!-- /ko -->  </div>  <!-- ko block: $data --><!-- /ko --></div>'),templateSystem.addTemplate(\"blocks-show\",\"<!-- ko template: { name: 'block-show', foreach: blocks } --><!-- /ko -->\"),templateSystem.addTemplate(\"blocks-wysiwyg\",\"<div class=\\\"sortable-blocks-edit\\\" data-drop-content=\\\"Drop here\\\" data-empty-content=\\\"Drop here blocks from the Blocks tab\\\" data-bind=\\\"attr: { 'data-drop-content': $root.t('Drop here'), 'data-empty-content': $root.t('Drop here blocks from the &quot;Blocks&quot; tab') }, css: { 'empty': ko.utils.unwrapObservable(blocks).length == 0 }, extsortable: { connectClass: 'sortable-blocks-edit', template: 'block-wysiwyg', data: blocks, dragging: $root.dragging, beforeMove: $root.startMultiple, afterMove: $root.stopMultiple, options: { handle: '.handle', placeholder: $root.placeholderHelper } }\\\"></div>\"),templateSystem.addTemplate(\"customstyle\",'<div class=\"customStyleHelp\" data-bind=\"html: $root.t(\\'Customized block.<ul><li>In this status changes to properties will be specific to the current block (instead of being global to all blocks in the same section)</li><li>A <span class=&quot;customStyled&quot;><span>&quot;small cube&quot; </span></span> icon beside the property will mark the customization. By clicking this icon the property value will be reverted to the value defined for the section.</li></ul>\\')\">Customized block.<ul><li>In this status changes to properties will be specific to the current block (instead of being global to all blocks in the same section)</li><li>A <span class=\"customStyled\"><span>\"small cube\" </span></span> icon beside the property will mark the customization. By clicking this icon the property value will be reverted to the value defined for the section.</li></ul></div>'),templateSystem.addTemplate(\"empty\",\"\"),templateSystem.addTemplate(\"error\",'[<div style=\"background-color: #fff0f0\" data-bind=\"text: ko.toJS($data)\"></div>]'),templateSystem.addTemplate(\"gallery-images\",'<div data-bind=\"foreach: items.currentPageData\">  <div class=\"draggable-item\" data-bind=\"if: typeof thumbnailUrl != \\'undefined\\'\">    <div class=\"draggable image\" data-bind=\"click: $root.addImage, extdraggable: { data: $data, dropContainer: \\'#main-wysiwyg-area\\', dragging: $root.draggingImage, \\'options\\': { \\'appendTo\\': \\'#page\\' } }, style: { backgroundImage: \\'url(\\\\\\'\\' + thumbnailUrl + \\'\\\\\\')\\' }\">      <img title=\"Drag this image and drop it on any template image placeholder\" style=\"display: block;\" data-bind=\"tooltips: {}, attr: { src: thumbnailUrl, \\'title\\': $root.t(\\'Drag this image and drop it on any template image placeholder\\') }\"/>    </div>  </div></div><!-- ko if: items.pageCount() > 1 --><div class=\"galleryPager\" data-bind=\"buttonset: {}\">  <a href=\"javascript:void(0)\" data-bind=\"click: items.moveFirst, button: { disabled: items.currentPage() == 1, icons: { primary: \\'fa fa-fast-backward\\' }, text: false }\">First</a>  <a href=\"javascript:void(0)\" data-bind=\"click: items.movePrevious, button: { disabled: items.currentPage() == 1, icons: { primary: \\'fa fa-backward\\' }, text: false }\">Previous</a>  <span data-bind=\"button: { disabled: true, text: true, label: \\' \\'+items.currentPage()+\\' di \\'+items.pageCount()+\\' \\' }\"> X di Y </span>  <a href=\"javascript:void(0)\" data-bind=\"click: items.moveNext, button: { disabled: items.currentPage() == items.pageCount(), icons: { primary: \\'fa fa-forward\\' }, text: false }\">Next</a>  <a href=\"javascript:void(0)\" data-bind=\"click: items.moveLast, button: { disabled: items.currentPage() == items.pageCount(), icons: { primary: \\'fa fa-fast-forward\\' }, text: false }\">Last</a></div><!-- /ko -->'),templateSystem.addTemplate(\"img-wysiwyg\",'<table tabfocus=\"0\" cellspacing=\"0\" cellpadding=\"0\" data-drop-content=\"Drop here\" data-bind=\"style: _stylebind, click: function(obj, evt) { $root.selectItem(_item, _data); return true; }, clickBubble: false, fudroppable: { activeClass: \\'ui-state-highlight\\', hoverClass: \\'ui-state-draghover\\' }, droppable: { options: { accept: \\'.image\\', activeClass: \\'ui-state-highlight\\', hoverClass: \\'ui-state-draghover\\' }, data: _src, dragged: $root.fileToImage }, css: { selecteditem: $root.isSelectedItem(_item) }, scrollIntoView: $root.isSelectedItem(_item), attr: { \\'data-drop-content\\': $root.t(\\'Drop here\\'), width: _width, height: _height, align: _align }\"  class=\"img-wysiwyg selectable-img\" style=\"display: table;\"><tr><td class=\"uploadzone\">  <div class=\"mo-imgselectionhelper\"></div>  <div class=\"mo-uploadzone\"></div>  <div class=\"img-size\" data-bind=\"text: _size\">size</div>  <div class=\"midtools\" data-bind=\"tooltips: {}\">    <!-- ko if: _src() != \\'\\' -->    <div title=\"Remove image\" class=\"tool delete\" data-bind=\"attr: { title: $root.t(\\'Remove image\\') }, click: _src.bind(_src, \\'\\'), clickBubble: false\"><i class=\"fa fa-fw fa-trash-o\"></i></div>    <!-- ko if: typeof $root.editImage !== \\'undefined\\' -->    <div title=\"Open the image editing tool\" class=\"tool edit\" data-bind=\"attr: { title: $root.t(\\'Open the image editing tool\\') }, click: $root.editImage.bind($element, _src), clickBubble: false\"><i class=\"fa fa-fw fa-pencil\"></i></div>    <!-- /ko -->    <!-- /ko -->    <!-- ko if: _src() == \\'\\' -->    <div title=\"Upload a new image\" data-bind=\"attr: { title: $root.t(\\'Upload a new image\\') }\" class=\"tool upload\" style=\"position: relative; overflow: hidden;\"><i class=\"fa fa-fw fa-upload\"></i>      <input class=\"fileupload nofile\" type=\"file\" name=\"files[]\" data-bind=\"fileupload: { data: _src, onerror: $root.notifier.error, onfile: $root.loadImage, canvasPreview: true }\" style=\"z-index: 20; position: absolute; top: 0; left: 0; right: 0; bottom: 0; min-width: 100%; min-height: 100%; font-size: 999px; text-align: right; filter: alpha(opacity=0); opacity: 0; outline: none; cursor: inherit; display: block\">    </div>    <!-- /ko -->  </div>  <!-- ko template: _template --><!-- /ko -->  <!-- ko if: _src() == \\'\\' -->    <!--    <img style=\"display: block;\" class=\"imgplaceholder\" width=\"200\" src=\"\" alt=\"Insert an image here\" data-bind=\"wysiwygSrc: { src: _src.preloaded, placeholder: _placeholdersrc, width: _width, height: _height, method: _method }\" />    -->    <span class=\"fileuploadtext\" style=\"text-align: center; display: -ms-flexbox; display: flex; align-items: center; flex-align: center; justify-content: center; padding: 1em; position: absolute; top: 0; left: 0; right: 0; bottom: 0;\"><span class=\"textMiddle\" style=\" text-shadow: 1px 1px 0 #FFFFFF, 0 0 10px #FFFFFF; font-weight: bold;\" data-bind=\"text: $root.t(\\'Drop an image here\\')\">Drop an image here</span></span>  <!-- /ko -->  <!-- ko if: _src() != \\'\\' -->  <!--    <img style=\"display: block;\" width=\"200\" src=\"\" data-bind=\"preloader: _src, wysiwygSrc: { src: _src.preloaded, placeholder: _placeholdersrc, width: _width, height: _height, method: _method }\" />    -->  <!-- /ko -->  <!-- pulsante per la cancellazione -->  <div title=\"Drop an image here or click the upload button\" data-bind=\"attr: { title: $root.t(\\'Drop an image here or click the upload button\\') }, tooltips: {}\" class=\"workzone\" style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; overflow: hidden;\">    <!-- ko if: _src.preloaded && _src() != _src.preloaded() -->PRELOADING....<!-- /ko -->    <!-- ko if: _src() != \\'\\' -->      <input class=\"fileupload withfile\" type=\"file\" name=\"files[]\" data-bind=\"fileupload: { data: _src, onerror: $root.notifier.error, onfile: $root.galleryRecent.unshift.bind($root.galleryRecent), canvasPreview: true }\" style=\"z-index: -20; position: absolute; top: 0; left: 0; right: 0; bottom: 0; min-width: 100%; min-height: 100%; font-zie: 999px; text-align: right; filter: alpha(opacity=0); opacity: 0; outline: none; cursor: inherit; display: block\">    <!-- /ko -->    <div class=\"progress\" style=\"opacity: .5; width: 80%; margin-left: 10%; position: absolute; bottom: 30%; height: 20px; border: 2px solid black;\">      <div class=\"progress-bar progress-bar-success\" style=\"height: 20px; background-color: black; \"></div>    </div>  </div></table>'),templateSystem.addTemplate(\"main\",'<div id=\"page\" style=\"display: none;\" data-bind=\"visible: true, css: { withToolbox: $root.showToolbox, withPreviewFrame: showPreviewFrame }\">  <div id=\"main-edit-area\" data-bind=\"click: function(obj, evt) { $root.selectBlock(null); return true; }, clickBubble: false\">    <!-- ko withProperties: { templateMode: \\'wysiwyg\\', templateModeFallback: \\'show\\' } -->    <div id=\"main-wysiwyg-area\" data-bind=\"wysiwygScrollfix: true, scrollable: true, fudroppable: { active: draggingImage }, css: { isdragging: dragging, isdraggingimg: draggingImage }, block: content\"></div>    <!-- /ko -->  </div>  <div id=\"toolbar\" class=\"mo\" data-bind=\"tooltips: {}\">    <!-- ko if: typeof $root.undo != \\'undefined\\' -->    <span data-bind=\"buttonset: { }\" class=\"leftButtons\">    <a title=\"Undo last operation\" href=\"javascript:void(0)\" data-bind=\"attr: { title: $root.t(\\'Undo last operation\\') }, click: $root.undo.execute, clickBubble: false, button: { disabled: !$root.undo.enabled(), icons: { primary: \\'fa fa-reply\\' }, label: $root.undo.name, text: true }\">UNDO</a>    <a title=\"Redo last operation\" href=\"javascript:void(0)\" data-bind=\"attr: { title: $root.t(\\'Redo last operation\\') }, click: $root.redo.execute, clickBubble: false, button: { disabled: !$root.redo.enabled(), icons: { primary: \\'fa fa-share\\' }, label: $root.redo.name, text: true }\">REDO</a>    </span>    <!-- ko if: $root.debug -->    <a href=\"javascript:void(0)\" data-bind=\"click: $root.undoReset, clickBubble: false, button: { disabled: !$root.undo.enabled() && !$root.redo.enabled(), label: \\'reset\\', text: true }\">RESET</a>    <!-- /ko -->    <!-- /ko -->    <span>    <input id=\"showGallery\" type=\"checkbox\" data-bind=\"checked: $root.showGallery, button: { refreshOn: $root.showGallery,     icons: { primary: \\'fa fa-fw fa-picture-o\\', secondary: null }, text: true, label: $root.t(\\'Gallery\\') }\"><label title=\"Show image gallery\" for=\"showGallery\" data-bind=\"attr: { title: $root.t(\\'Show image gallery\\') }\">show gallery</label></input>    </span>    <input id=\"previewFrameToggle\" type=\"checkbox\" data-bind=\"checked: $root.showPreviewFrame, button: { refreshOn: $root.showPreviewFrame, icons: { primary: \\'fa fa-fw fa-tablet\\', secondary: null }, text: false, label: $root.t(\\'Preview\\') }\"><label title=\"Show live preview\" for=\"previewFrameToggle\" data-bind=\"attr: { title: $root.t(\\'Show live preview\\') }\">PREVIEW</label></input>    <!-- ko if: $root.debug -->    <a href=\"javascript:void(0)\" data-bind=\"click: $root.export, clickBubble: false, button: { label: \\'export\\', text: true }\">EXPORT</a>    <input type=\"checkbox\" data-bind=\"checked: $root.debug\" /> debug    <a href=\"javascript:void(0)\" data-bind=\"click: $root.loadDefaultBlocks, clickBubble: false, button: { icons: { primary: \\'fa fa-fw fa-upload\\' }, label: \\'Default\\', text: true }\">LOAD BLOCKS</a>    [<a id=\"subscriptionsCount\" href=\"javascript:viewModel.loopSubscriptionsCount()\">subs</a>]    <!-- /ko -->    <span data-bind=\"visible: false\">    <input type=\"checkbox\" data-bind=\"checked: $root.showToolbox\" /> toolbox    </span>    <div class=\"rightButtons\">    <!-- ko if: typeof $root.save !== \\'undefined\\' -->    <a title=\"Save template\" href=\"javascript:void(0)\" data-bind=\"attr: { title: $root.t(\\'Save template\\') }, click: $root.save.execute, clickBubble: false, button: { disabled: !$root.save.enabled(), icons: { primary: \\'fa fa-fw fa-cloud-upload\\' }, label: $root.t($root.save.name), text: true }\">SALVA</a>    <!-- /ko -->    <!-- ko if: typeof $root.test !== \\'undefined\\' -->    <a title=\"Show preview and send test\" href=\"javascript:void(0)\" data-bind=\"attr: { title: $root.t(\\'Show preview and send test\\') }, click: $root.test.execute, clickBubble: false, button: { disabled: !$root.test.enabled(), icons: { primary: \\'fa fa-fw fa-paper-plane\\' }, label: $root.t($root.test.name), text: true }\">TEST</a>    <!-- /ko -->    <!-- ko if: typeof $root.download !== \\'undefined\\' -->    <form id=\"downloadForm\" action=\"#\" method=\"POST\">    <input type=\"hidden\" name=\"action\" value=\"download\" />    <input type=\"hidden\" name=\"filename\" value=\"email.html\" />    <input type=\"hidden\" name=\"html\" id=\"downloadHtmlTextarea\" />    <a title=\"Download template\" href=\"javascript:void(0)\" data-bind=\"attr: { title: $root.t(\\'Download template\\') }, click: $root.download.execute, clickBubble: false, button: { disabled: !$root.download.enabled(), icons: { primary: \\'fa fa-fw fa-download\\' }, label: $root.t($root.download.name), text: true }\">DOWNLOAD</a>    </form>    <!-- /ko -->    </div>  </div>  <!-- ko if: $root.showToolbox -->  <div id=\"main-toolbox\" class=\"mo\" data-bind=\"scrollable: true, withProperties: { templateMode: \\'edit\\' }\">    <div data-bind=\"template: { name: \\'toolbox\\' }\"></div>  </div>  <!-- /ko -->    <div id=\"main-preview\" class=\"mo\" data-bind=\"scrollable: true, if: $root.showPreviewFrame\">    <div id=\"preview-toolbar\">      <div data-bind=\"visible: $root.showPreviewFrame, buttonset: { }\" style=\"display: inline-block\">        <input id=\"previewLarge\" type=\"radio\" name=\"previewMode\" value=\"large\" data-bind=\"checked: $root.previewMode, button: { text: false, label: \\'large\\', icons: { primary: \\'fa fa-fw fa-desktop\\' } }\" />        <label for=\"previewLarge\" title=\"Large screen\" data-bind=\"attr: { title: $root.t(\\'Large screen\\') }\">Large screen</label>        <input id=\"previewDesktop\" type=\"radio\" name=\"previewMode\" value=\"desktop\" data-bind=\"checked: $root.previewMode, button: { text: false, label: \\'desktop\\', icons: { primary: \\'fa fa-fw fa-tablet\\' } }\" />        <label for=\"previewDesktop\" title=\"Tablet\" data-bind=\"attr: { title: $root.t(\\'Tablet\\') }\">Tablet</label>        <input id=\"previewMobile\" type=\"radio\" name=\"previewMode\" value=\"mobile\" data-bind=\"checked: $root.previewMode, button: { text: false, label: \\'mobile\\', icons: { primary: \\'fa fa-fw fa-mobile\\' } }\" />        <label for=\"previewMobile\" title=\"Smartphone\" data-bind=\"attr: { title: $root.t(\\'Smartphone\\') }\">Smartphone</label>      </div>    </div>    <div id=\"frame-container\" data-bind=\"css: { desktop: $root.previewMode() == \\'desktop\\', mobile: $root.previewMode() == \\'mobile\\', large: $root.previewMode() == \\'large\\' }\">      <iframe data-bind=\"bindIframe: $data\"></iframe>    </div>  </div>  <div class=\"mo\" id=\"mo-body\"></div>  <div id=\"incompatible-template\" title=\"Saved model is obsolete\" style=\"display: none\" data-bind=\"attr: { title: $root.t(\\'Saved model is obsolete\\') }, html: $root.t(\\'<p>The saved model has been created with a previous, non completely compatible version, of the template</p><p>Some content or style in the model <b>COULD BE LOST</b> if you will <b>save</b></p><p>Contact us for more informations!</p>\\')\">    Incompatible template  </div>  <div id=\"fake-image-editor\" title=\"Fake image editor\" style=\"display: none\" data-bind=\"attr: { title: $root.t(\\'Fake image editor\\') }, html: $root.t(\\'<p>Fake image editor</p>\\')\">    <p>Fake image editor</p>  </div></div><!-- ko if: $root.logoPath --><div id=\"loading\" class=\"loading\" style=\"display: block; width: 300px; text-align: center; height: 32px; position: absolute; top:0; bottom: 0; left: 0; right: 0;  margin: auto;\" data-bind=\"attr: { style: \\'position: absolute; top: 5px; left: 6px; z-index: 150;\\'}, css: { loading: false }\">  <a href=\"/\" data-bind=\"attr: { href: $root.logoUrl, alt: $root.logoAlt }\"><img data-bind=\"attr: { src: $root.logoPath }\" width=\"32\" height=\"32\" alt=\"mosaico\" border=\"0\" /></a>  <div style=\"opacity: 0\" data-bind=\"visible: false\">Oppps... !!</div></div><!-- /ko -->'),templateSystem.addTemplate(\"toolbox\",'<div id=\"tooltabs\" class=\"tabs_horizontal button_color\" data-bind=\"tabs: { active: $root.selectedTool }\">  <ul>    <li data-bind=\"tooltips: {}\"><a title=\"Blocks ready to be added to the template\" data-local=\"true\" href=\"#toolblocks\" data-bind=\"attr: { title: $root.t(\\'Blocks ready to be added to the template\\') }\"><i class=\"fa fa-fw fa-cubes\"></i> <span data-bind=\"html: $root.t(\\'Blocks\\')\">Blocks</span></a></li>    <li data-bind=\"tooltips: {}\"><a title=\"Edit content options\" href=\"#toolcontents\" data-local=\"true\" data-bind=\"attr: { title: $root.t(\\'Edit content options\\') }\"><i class=\"fa fa-fw fa-pencil\"></i> <span data-bind=\"html: $root.t(\\'Content\\')\">Content</span></a></li>    <li data-bind=\"tooltips: {}\"><a title=\"Edit style options\" href=\"#toolstyles\" data-local=\"true\" data-bind=\"attr: { title: $root.t(\\'Edit style options\\') }\"><i class=\"fa fa-fw fa-paint-brush\"></i> <span data-bind=\"html: $root.t(\\'Style\\')\">Style</span></a></li>  </ul>  <div id=\"toolblocks\" data-bind=\"scrollable: true\">    <div class=\"block-list\" data-bind=\"foreach: blockDefs\" style=\"text-align: center\">      <div class=\"draggable-item\" data-bind=\"withProperties: { templateMode: \\'show\\' }\">        <div class=\"block\" data-bind=\"extdraggable: { connectClass: \\'sortable-blocks-edit\\', data: $data, dropContainer: \\'#main-wysiwyg-area\\', dragging: $root.dragging, \\'options\\': { handle: \\'.handle\\', distance: 10, \\'appendTo\\': \\'#page\\' } }, click: $root.addBlock\" style=\"position: relative;\">          <div title=\"Click or drag to add this block to the template\" class=\"handle\" data-bind=\"attr: { title: $root.t(\\'Click or drag to add this block to the template\\') }, tooltips: {}\"></div>          <img data-bind=\"attr: { alt: $root.t(\\'Block __name__\\', { name: ko.utils.unwrapObservable(type) }), src: $root.templatePath(\\'edres/\\'+ko.utils.unwrapObservable(type)+\\'.png\\') }\" alt=\"Block __name__\" />        </div>        <a href=\"javascript:void(0)\" class=\"addblockbutton\" data-bind=\"click: $root.addBlock, button: { label: $root.t(\\'Add\\') }\">Add</a>      </div>    </div>  </div>  <div id=\"toolcontents\" data-bind=\"scrollable: true\">    <!-- ko if: $root.selectedBlock() !== null -->    <div data-bind=\"block: $root.selectedBlock\"></div>    <!-- /ko -->    <!-- ko if: $root.selectedBlock() == null -->    <div class=\"noSelectedBlock\" data-bind=\"text: $root.t(\\'By clicking on message parts you will select a block and content options, if any, will show here\\')\">By clicking on message parts you will select a block and content options, if any, will show here</div>    <!-- /ko -->    <!-- ko block: content --><!-- /ko -->  </div>    <div id=\"toolstyles\" data-bind=\"scrollable: true, withProperties: { templateMode: \\'styler\\' }\">    <!-- ko if: typeof $root.content().theme === \\'undefined\\' || typeof $root.content().theme().scheme === \\'undefined\\' || $root.content().theme().scheme() === \\'custom\\' -->      <!-- ko if: $root.selectedBlock() !== null -->      <div data-bind=\"block: $root.selectedBlock, css: { workLocal: $root.selectedBlock().customStyle, workGlobal: typeof $root.selectedBlock().customStyle === \\'undefined\\' || !$root.selectedBlock().customStyle() }\"></div>      <!-- /ko -->      <!-- ko if: $root.selectedBlock() == null -->      <div class=\"noSelectedBlock\" data-bind=\"text: $root.t(\\'By clicking on message parts you will select a block and style options, if available, will show here\\')\">By clicking on message parts you will select a block and style options, if available, will show here</div>      <!-- /ko -->      <div class=\"workGlobalContent\">      <!-- ko block: content --><!-- /ko -->      </div>    <!-- /ko -->  </div></div>        <div id=\"toolimages\" class=\"slidebar\" data-bind=\"scrollable: true, css: { hidden: $root.showGallery() === false }\">  <div class=\"close\" data-bind=\"click: $root.showGallery.bind($element, false);\">X</div>  <span class=\"pane-title\" data-bind=\"text: $root.t(\\'Gallery:\\')\">Gallery:</span>  <div data-drop-content=\"Drop here\" class=\"img-dropzone pane uploadzone\" data-bind=\"attr: { \\'data-drop-content\\': $root.t(\\'Drop here\\') }, fudroppable: { activeClass: \\'ui-state-highlight\\', hoverClass: \\'ui-state-draghover\\' }\">  <div class=\"mo-uploadzone\" style=\"position: relative; padding: 2em; border: 2px dotted #808080\">     <input class=\"fileupload\" type=\"file\" multiple name=\"files[]\" data-bind=\"fileupload: { onerror: $root.notifier.error, onfile: $root.loadImage }\" style=\"z-index: 10; position: absolute; top: 0; left: 0; right: 0; bottom: 0; min-width: 100%; min-height: 100%; font-zie: 999px; text-align: right; filter: alpha(opacity=0); opacity: 0; outline: none; cursor: inherit; display: block\">     <span data-bind=\"text: $root.t(\\'Click or drag files here\\')\">Click or drag files here</span>     <div class=\"workzone\" style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; overflow: hidden;\">       <div class=\"progress\" style=\"opacity: .5; width: 80%; margin-left: 10%; position: absolute; bottom: 30%; height: 20px; border: 2px solid black;\">         <div class=\"progress-bar progress-bar-success\" style=\"height: 20px; background-color: black; \"></div>       </div>     </div>  </div>  </div>  <!-- ko if: $root.showGallery() -->  <div id=\"toolimagestab\" class=\"tabs_horizontal\" data-bind=\"tabs: { active: $root.selectedImageTab }\">    <ul>      <li data-bind=\"tooltips: {}\"><a title=\"Session images\" data-local=\"true\" href=\"#toolimagesrecent\" data-bind=\"attr: { title: $root.t(\\'Session images\\') }, text: $root.t(\\'Recents\\')\">Recents</a></li>      <li data-bind=\"tooltips: {}\"><a title=\"Remote gallery\" data-local=\"true\" href=\"#toolimagesgallery\" data-bind=\"attr: { title: $root.t(\\'Remote gallery\\') }, text: $root.t(\\'Gallery\\')\">Gallery</a></li>    </ul>    <div id=\"toolimagesrecent\">      <!-- ko if: galleryRecent().length == 0 --><div class=\"galleryEmpty\" data-bind=\"text: $root.t(\\'No images uploaded, yet\\')\">No images uploaded, yet</div><!-- /ko -->      <!-- ko template: {name: \\'gallery-images\\', data: { items: galleryRecent } } --># recent gallery #<!-- /ko -->    </div>    <div id=\"toolimagesgallery\" style=\"text-align: center\">    <!-- ko if: $root.galleryLoaded() === false --><a class=\"loadbutton\" title=\"Show images from the gallery\" href=\"javascript:void(0)\" data-bind=\"attr: { title: $root.t(\\'Show images from the gallery\\') }, click: $root.loadGallery, button: { disabled: $root.galleryLoaded, icons: { primary: \\'fa fa-fw fa-picture-o\\' }, label: $root.galleryLoaded() == \\'loading\\' ? $root.t(\\'Loading...\\') : $root.t(\\'Load gallery\\'), text: true }\"># load gally #</a><!-- /ko -->    <!-- ko if: $root.galleryLoaded() === \\'loading\\' --><div class=\"galleryEmpty\" data-bind=\"text: $root.t(\\'Loading gallery...\\')\">Loading gallery...</div><!-- /ko -->    <!-- ko if: $root.galleryLoaded() === 0 --><div class=\"galleryEmpty\" data-bind=\"text: $root.t(\\'The gallery is empty\\')\">The gallery is empty</div><!-- /ko -->    <!-- ko template: {name: \\'gallery-images\\', data: { items: galleryRemote } } --># remote gallery #<!-- /ko -->    </div>  </div>  <!-- /ko --></div><div id=\"tooldebug\" class=\"slidebar\" data-bind=\"css: { hidden: $root.debug() === false }\">  <div class=\"close\" data-bind=\"click: $root.debug.bind($element, false);\">X</div>    <!-- ko if: $root.debug -->  Content:  <pre data-bind=\\'text: ko.toJSON(content, null, 2)\\' style=\"overflow: auto; height: 20%\"></pre>  BlockDefs:  <pre data-bind=\\'text: ko.toJSON(blockDefs, null, 2)\\' style=\"overflow: auto; height: 20%\"></pre>  <!-- /ko -->  <a href=\"javascript:void(0)\" data-bind=\"click: $root.exportHTMLtoTextarea.bind($element, \\'#outputhtml\\'); clickBubble: false, button: { text: true, label:\\'Generate\\' }\">Output</a>  <a href=\"javascript:void(0)\" data-bind=\"click: $root.exportJSONtoTextarea.bind($element, \\'#outputhtml\\'); clickBubble: false, button: { text: true, label:\\'Export\\' }\">Export</a>  <a href=\"javascript:void(0)\" data-bind=\"click: $root.importJSONfromTextarea.bind($element, \\'#outputhtml\\'); clickBubble: false, button: { text: true, label:\\'Import\\' }\">Import</a>  <textarea id=\"outputhtml\" rows=\"10\" style=\"width: 100%;\"></textarea></div><div id=\"tooltheme\" class=\"ui-widget slidebar\" data-bind=\"css: { hidden: $root.showTheme() === false }\">  <div class=\"close\" data-bind=\"click: $root.showTheme.bind($element, false);\">X</div>    <!-- ko withProperties: { templateMode: \\'styler\\' } -->    <!-- ko if: $root.showTheme -->      <!-- ko block: $root.content().theme --><!-- /ko -->    <!-- /ko -->  <!-- /ko --></div>')});\n//# sourceMappingURL=data:application/json;base64,","deps":{"../src/js/bindings/choose-template.js":"/Users/denea/mosaico/src/js/bindings/choose-template.js"}},"/Users/denea/mosaico/src/js/bindings/wysiwygs.js":{"file":"/Users/denea/mosaico/src/js/bindings/wysiwygs.js","source":"(function (global){\n\"use strict\";var tinymce=(typeof window !== \"undefined\" ? window['tinymce'] : typeof global !== \"undefined\" ? global['tinymce'] : null),$=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");require(\"./eventable.js\"),ko.bindingHandlers.wysiwygOrHtml={init:function(e,t,i,n,l){var o=\"undefined\"==typeof l.templateMode||\"wysiwyg\"!=l.templateMode;return o?ko.bindingHandlers.virtualHtml.init():ko.bindingHandlers.wysiwyg.init(e,t,i,n,l)},update:function(e,t,i,n,l){var o=\"undefined\"==typeof l.templateMode||\"wysiwyg\"!=l.templateMode;return o?ko.bindingHandlers.virtualHtml.update(e,t,i,n,l):void 0}},ko.virtualElements.allowedBindings.wysiwygOrHtml=!0,ko.bindingHandlers.wysiwygHref={init:function(e,t,i,n,l){if(8!==e.nodeType){t();var o=\"undefined\"==typeof l.templateMode||\"wysiwyg\"!=l.templateMode;if(o)e.setAttribute(\"target\",\"_new\");else{var r=i();\"undefined\"!=typeof r.wysiwygOrHtml?e.setAttribute(\"href\",\"javascript:void(0)\"):(e.removeAttribute(\"href\"),e.setAttribute(\"disabledhref\",\"#\"))}}},update:function(e,t,i,n,l){if(8!==e.nodeType){var o=\"undefined\"==typeof l.templateMode||\"wysiwyg\"!=l.templateMode,r=ko.utils.unwrapObservable(t());o&&(r===!1||null===r||void 0===r?e.removeAttribute(\"href\"):e.setAttribute(\"href\",r.toString()))}}},ko.virtualElements.allowedBindings.wysiwygHref=!0,ko.bindingHandlers.wysiwygSrc={convertedUrl:function(e,t,i,n){var l=-1==e.indexOf(\"?\")?\"?\":\"&\",o=e+l+\"method=\"+t+\"&width=\"+i+(null!==n?\"&height=\"+n:\"\");return o},placeholderUrl:function(e,t,i){},update:function(e,t){var i=ko.utils.unwrapObservable(t()),n=ko.utils.unwrapObservable(i.src),l=ko.utils.unwrapObservable(i.placeholder),o=ko.utils.unwrapObservable(i.width),r=ko.utils.unwrapObservable(i.height);if(n===!1||null===n||void 0===n||\"\"===n)\"object\"==typeof l&&null!==l?e.setAttribute(\"src\",ko.bindingHandlers.wysiwygSrc.placeholderUrl(l.width,l.height,l.text)):e.removeAttribute(\"src\");else{var a=ko.utils.unwrapObservable(i.method);a||(a=o>0&&r>0?\"cover\":\"resize\");var s=ko.bindingHandlers.wysiwygSrc.convertedUrl(n.toString(),a,o,r);e.setAttribute(\"src\",s)}\"undefined\"!=typeof o&&null!==o?e.setAttribute(\"width\",o):e.removeAttribute(\"width\"),\"undefined\"!=typeof r&&null!==r?e.setAttribute(\"height\",r):e.removeAttribute(\"height\")}},ko.bindingHandlers.wysiwygId={init:function(e,t,i,n,l){var o=\"undefined\"==typeof l.templateMode||\"wysiwyg\"!=l.templateMode;o||e.setAttribute(\"id\",ko.utils.unwrapObservable(t()))},update:function(e,t,i,n,l){var o=\"undefined\"==typeof l.templateMode||\"wysiwyg\"!=l.templateMode;o||e.setAttribute(\"id\",ko.utils.unwrapObservable(t()))}},ko.virtualElements.allowedBindings.wysiwygId=!0,ko.virtualElements.allowedBindings.wysiwygClick=!0,ko.bindingHandlers.wysiwygCss={update:function(e,t,i,n,l){var o=\"undefined\"==typeof l.templateMode||\"wysiwyg\"!=l.templateMode;o||ko.bindingHandlers.css.update(e,t,i,n,l)}},ko.virtualElements.allowedBindings.wysiwygCss=!0,ko.bindingHandlers.wysiwygImg={makeTemplateValueAccessor:function(e,t){return function(){var i=\"undefined\"!=typeof t.templateMode&&\"wysiwyg\"==t.templateMode,n=e(),l=ko.utils.peekObservable(n);return ko.utils.unwrapObservable(n),{name:i?l._editTemplate:l._template,templateEngine:ko.nativeTemplateEngine.instance}}},init:function(e,t,i,n,l){return ko.bindingHandlers.template.init(e,ko.bindingHandlers.wysiwygImg.makeTemplateValueAccessor(t,l))},update:function(e,t,i,n,l){return l=l.extend(t()),ko.bindingHandlers.template.update(e,ko.bindingHandlers.wysiwygImg.makeTemplateValueAccessor(t,l),i,n,l)}},ko.virtualElements.allowedBindings.wysiwygImg=!0,ko.bindingHandlers.wysiwyg={currentIndex:0,standardOptions:{},fullOptions:{toolbar1:\"formatselect bold italic underline forecolor backcolor alignleft aligncenter alignright alignjustify bullist numlist link unlink pastetext code | undo redo\",toolbar2:\"formatselect fontselect fontsizeselect | alignleft aligncenter alignright alignjustify | bullist numlist\",plugins:[\"link hr paste lists textcolor colorpicker code\"]},init:function(e,t){ko.bindingHandlers.focusable.init(e),ko.utils.domNodeDisposal.addDisposeCallback(e,function(){tinymce.remove(\"#\"+e.getAttribute(\"id\"))});var i=t();if(!ko.isObservable(i))throw\"Wysiwyg binding called with non observable\";if(8===e.nodeType)throw\"Wysiwyg binding called on virtual node, ignoring....\"+e.innerHTML;var n=e.getAttribute(\"id\");n||(n=\"wysiwyg_\"+ ++ko.bindingHandlers.wysiwyg.currentIndex,e.setAttribute(\"id\",n));var l,o=\"DIV\"==e.tagName||\"TD\"==e.tagName,r=!1,a=!1,s={selector:\"#\"+n,inline:!0,hidden_input:!0,plugins:\"textcolor colorpicker\",toolbar1:\"formatselect bold italic underline forecolor backcolor alignleft aligncenter alignright alignjustify bullist numlist link unlink pastetext code\",toolbar2:\"\",preview_styles:!1,paste_as_text:!0,language:\"en\",schema:\"html5\",extended_valid_elements:\"strong/b,em/i,*[*]\",menubar:!1,skin:\"stedb\",setup:function(e){e.on(\"change redo undo\",function(){r||(a=!0,i(e.getContent({format:\"raw\"})),a=!1)}),e.on(\"focus\",function(){e.nodeChanged(),e.getElement().click()}),e.on(\"BeforeSetContent\",function(e){e.initial&&(e.format=\"raw\")}),l=e}};return ko.utils.extend(s,ko.bindingHandlers.wysiwyg.standardOptions),o&&ko.utils.extend(s,ko.bindingHandlers.wysiwyg.fullOptions),global.setTimeout(function(){tinymce.init(s)}),ko.computed(function(){var i=ko.utils.unwrapObservable(t());if(!a){try{r=!0,\"undefined\"!=typeof l?l.setContent(i,{format:\"raw\"}):ko.utils.setHtml(e,i)}catch(n){console.log(\"TODO exception setting content to editable element\",typeof l,n)}r=!1}},null,{disposeWhenNodeIsRemoved:e}),{controlsDescendantBindings:!0}}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mosaico/bower_components/console-browserify/index.js","./eventable.js":"/Users/denea/mosaico/src/js/bindings/eventable.js"}},"/Users/denea/mos/src/js/ext/util.js":{"file":"/Users/denea/mos/src/js/ext/util.js","source":"(function (global){\nvar utilPlugin=function(){global.Util={decodeURI:decodeURI,encodeURI:encodeURI,decodeURIComponent:decodeURIComponent,encodeURIComponent:encodeURIComponent}};module.exports=utilPlugin;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9leHQvdXRpbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsR0FBSSxZQUFhLFdBQ2YsT0FBTyxNQUNMLFVBQWEsVUFDYixVQUFhLFVBQ2IsbUJBQXNCLG1CQUN0QixtQkFBc0Isb0JBSTFCLFFBQU8sUUFBVSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHV0aWxQbHVnaW4gPSBmdW5jdGlvbih2bSkge1xuICBnbG9iYWwuVXRpbCA9IHtcbiAgICAnZGVjb2RlVVJJJzogZGVjb2RlVVJJLFxuICAgICdlbmNvZGVVUkknOiBlbmNvZGVVUkksXG4gICAgJ2RlY29kZVVSSUNvbXBvbmVudCc6IGRlY29kZVVSSUNvbXBvbmVudCxcbiAgICAnZW5jb2RlVVJJQ29tcG9uZW50JzogZW5jb2RlVVJJQ29tcG9uZW50LFxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB1dGlsUGx1Z2luOyJdfQ==","deps":{}},"/Users/denea/mos/node_modules/util/support/isBufferBrowser.js":{"file":"/Users/denea/mos/node_modules/util/support/isBufferBrowser.js","source":"module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","deps":{}},"/Users/denea/mos/node_modules/process/browser.js":{"file":"/Users/denea/mos/node_modules/process/browser.js","source":"// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","deps":{}},"/Users/denea/mos/node_modules/util/node_modules/inherits/inherits_browser.js":{"file":"/Users/denea/mos/node_modules/util/node_modules/inherits/inherits_browser.js","source":"if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","deps":{}},"/Users/denea/mos/node_modules/util/util.js":{"file":"/Users/denea/mos/node_modules/util/util.js","source":"(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./support/isBuffer":"/Users/denea/mos/node_modules/util/support/isBufferBrowser.js","_process":"/Users/denea/mos/node_modules/process/browser.js","inherits":"/Users/denea/mos/node_modules/util/node_modules/inherits/inherits_browser.js"}},"/Users/denea/mos/node_modules/assert/assert.js":{"file":"/Users/denea/mos/node_modules/assert/assert.js","source":"(function (global){\n'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"util/":"/Users/denea/mos/node_modules/util/util.js"}},"/Users/denea/mos/bower_components/console-browserify/index.js":{"file":"/Users/denea/mos/bower_components/console-browserify/index.js","source":"(function (global){\nfunction log(){}function info(){console.log.apply(console,arguments)}function warn(){console.log.apply(console,arguments)}function error(){console.warn.apply(console,arguments)}function time(e){times[e]=Date.now()}function timeEnd(e){var t=times[e];if(!t)throw new Error(\"No such label: \"+e);var o=Date.now()-t;console.log(e+\": \"+o+\"ms\")}function trace(){var e=new Error;e.name=\"Trace\",e.message=util.format.apply(null,arguments),console.error(e.stack)}function dir(e){console.log(util.inspect(e)+\"\\n\")}function assert(e){if(!e){var t=slice.call(arguments,1);assert.ok(!1,util.format.apply(null,t))}}var util=require(\"util\"),assert=require(\"assert\"),slice=Array.prototype.slice,console,times={};console=\"undefined\"!=typeof global&&global.console?global.console:\"undefined\"!=typeof window&&window.console?window.console:{};for(var functions=[[log,\"log\"],[info,\"info\"],[warn,\"warn\"],[error,\"error\"],[time,\"time\"],[timeEnd,\"timeEnd\"],[trace,\"trace\"],[dir,\"dir\"],[assert,\"assert\"]],i=0;i<functions.length;i++){var tuple=functions[i],f=tuple[0],name=tuple[1];console[name]||(console[name]=f)}module.exports=console;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvd2VyX2NvbXBvbmVudHMvY29uc29sZS1icm93c2VyaWZ5L2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUF3Q0EsUUFBUyxRQUVULFFBQVMsUUFDTCxRQUFRLElBQUksTUFBTSxRQUFTLFdBRy9CLFFBQVMsUUFDTCxRQUFRLElBQUksTUFBTSxRQUFTLFdBRy9CLFFBQVMsU0FDTCxRQUFRLEtBQUssTUFBTSxRQUFTLFdBR2hDLFFBQVMsTUFBSyxHQUNWLE1BQU0sR0FBUyxLQUFLLE1BR3hCLFFBQVMsU0FBUSxHQUNiLEdBQUksR0FBTyxNQUFNLEVBQ2pCLEtBQUssRUFDRCxLQUFNLElBQUksT0FBTSxrQkFBb0IsRUFHeEMsSUFBSSxHQUFXLEtBQUssTUFBUSxDQUM1QixTQUFRLElBQUksRUFBUSxLQUFPLEVBQVcsTUFHMUMsUUFBUyxTQUNMLEdBQUksR0FBTSxHQUFJLE1BQ2QsR0FBSSxLQUFPLFFBQ1gsRUFBSSxRQUFVLEtBQUssT0FBTyxNQUFNLEtBQU0sV0FDdEMsUUFBUSxNQUFNLEVBQUksT0FHdEIsUUFBUyxLQUFJLEdBQ1QsUUFBUSxJQUFJLEtBQUssUUFBUSxHQUFVLE1BR3ZDLFFBQVMsUUFBTyxHQUNaLElBQUssRUFBWSxDQUNiLEdBQUksR0FBTSxNQUFNLEtBQUssVUFBVyxFQUNoQyxRQUFPLElBQUcsRUFBTyxLQUFLLE9BQU8sTUFBTSxLQUFNLEtBakZqRCxHQUFJLE1BQU8sUUFBUSxRQUNmLE9BQVMsUUFBUSxVQUVqQixNQUFRLE1BQU0sVUFBVSxNQUN4QixRQUNBLFFBR0EsU0FEa0IsbUJBQVgsU0FBMEIsT0FBTyxRQUM5QixPQUFPLFFBQ1EsbUJBQVgsU0FBMEIsT0FBTyxRQUNyQyxPQUFPLFVBaUJyQixLQUFLLEdBWkQsYUFDQyxJQUFLLFFBQ0gsS0FBTSxTQUNOLEtBQU0sU0FDTixNQUFPLFVBQ1AsS0FBTSxTQUNOLFFBQVMsWUFDVCxNQUFPLFVBQ1AsSUFBSyxRQUNMLE9BQVEsV0FHTixFQUFJLEVBQUcsRUFBSSxVQUFVLE9BQVEsSUFBSyxDQUN2QyxHQUFJLE9BQVEsVUFBVSxHQUNsQixFQUFJLE1BQU0sR0FDVixLQUFPLE1BQU0sRUFFWixTQUFRLFFBQ1QsUUFBUSxNQUFRLEdBSXhCLE9BQU8sUUFBVSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLypnbG9iYWwgd2luZG93LCBnbG9iYWwqL1xudmFyIHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKVxudmFyIGFzc2VydCA9IHJlcXVpcmUoXCJhc3NlcnRcIilcblxudmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlXG52YXIgY29uc29sZVxudmFyIHRpbWVzID0ge31cblxuaWYgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLmNvbnNvbGUpIHtcbiAgICBjb25zb2xlID0gZ2xvYmFsLmNvbnNvbGVcbn0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cuY29uc29sZSkge1xuICAgIGNvbnNvbGUgPSB3aW5kb3cuY29uc29sZVxufSBlbHNlIHtcbiAgICBjb25zb2xlID0ge31cbn1cblxudmFyIGZ1bmN0aW9ucyA9IFtcbiAgICBbbG9nLCBcImxvZ1wiXVxuICAgICwgW2luZm8sIFwiaW5mb1wiXVxuICAgICwgW3dhcm4sIFwid2FyblwiXVxuICAgICwgW2Vycm9yLCBcImVycm9yXCJdXG4gICAgLCBbdGltZSwgXCJ0aW1lXCJdXG4gICAgLCBbdGltZUVuZCwgXCJ0aW1lRW5kXCJdXG4gICAgLCBbdHJhY2UsIFwidHJhY2VcIl1cbiAgICAsIFtkaXIsIFwiZGlyXCJdXG4gICAgLCBbYXNzZXJ0LCBcImFzc2VydFwiXVxuXVxuXG5mb3IgKHZhciBpID0gMDsgaSA8IGZ1bmN0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0dXBsZSA9IGZ1bmN0aW9uc1tpXVxuICAgIHZhciBmID0gdHVwbGVbMF1cbiAgICB2YXIgbmFtZSA9IHR1cGxlWzFdXG5cbiAgICBpZiAoIWNvbnNvbGVbbmFtZV0pIHtcbiAgICAgICAgY29uc29sZVtuYW1lXSA9IGZcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29uc29sZVxuXG5mdW5jdGlvbiBsb2coKSB7fVxuXG5mdW5jdGlvbiBpbmZvKCkge1xuICAgIGNvbnNvbGUubG9nLmFwcGx5KGNvbnNvbGUsIGFyZ3VtZW50cylcbn1cblxuZnVuY3Rpb24gd2FybigpIHtcbiAgICBjb25zb2xlLmxvZy5hcHBseShjb25zb2xlLCBhcmd1bWVudHMpXG59XG5cbmZ1bmN0aW9uIGVycm9yKCkge1xuICAgIGNvbnNvbGUud2Fybi5hcHBseShjb25zb2xlLCBhcmd1bWVudHMpXG59XG5cbmZ1bmN0aW9uIHRpbWUobGFiZWwpIHtcbiAgICB0aW1lc1tsYWJlbF0gPSBEYXRlLm5vdygpXG59XG5cbmZ1bmN0aW9uIHRpbWVFbmQobGFiZWwpIHtcbiAgICB2YXIgdGltZSA9IHRpbWVzW2xhYmVsXVxuICAgIGlmICghdGltZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBzdWNoIGxhYmVsOiBcIiArIGxhYmVsKVxuICAgIH1cblxuICAgIHZhciBkdXJhdGlvbiA9IERhdGUubm93KCkgLSB0aW1lXG4gICAgY29uc29sZS5sb2cobGFiZWwgKyBcIjogXCIgKyBkdXJhdGlvbiArIFwibXNcIilcbn1cblxuZnVuY3Rpb24gdHJhY2UoKSB7XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcigpXG4gICAgZXJyLm5hbWUgPSBcIlRyYWNlXCJcbiAgICBlcnIubWVzc2FnZSA9IHV0aWwuZm9ybWF0LmFwcGx5KG51bGwsIGFyZ3VtZW50cylcbiAgICBjb25zb2xlLmVycm9yKGVyci5zdGFjaylcbn1cblxuZnVuY3Rpb24gZGlyKG9iamVjdCkge1xuICAgIGNvbnNvbGUubG9nKHV0aWwuaW5zcGVjdChvYmplY3QpICsgXCJcXG5cIilcbn1cblxuZnVuY3Rpb24gYXNzZXJ0KGV4cHJlc3Npb24pIHtcbiAgICBpZiAoIWV4cHJlc3Npb24pIHtcbiAgICAgICAgdmFyIGFyciA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKVxuICAgICAgICBhc3NlcnQub2soZmFsc2UsIHV0aWwuZm9ybWF0LmFwcGx5KG51bGwsIGFycikpXG4gICAgfVxufVxuIl19","deps":{"assert":"/Users/denea/mos/node_modules/assert/assert.js","util":"/Users/denea/mos/node_modules/util/util.js"}},"/Users/denea/mos/bower_components/knockout-sortable/build/knockout-sortable.min.js":{"file":"/Users/denea/mos/bower_components/knockout-sortable/build/knockout-sortable.min.js","source":"(function (global){\n!function(e){if(\"function\"==typeof define&&define.amd)define([\"knockout\",\"jquery\",\"jquery-ui/sortable\",\"jquery-ui/draggable\"],e);else if(\"function\"==typeof require&&\"object\"==typeof exports&&\"object\"==typeof module){var t=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),o=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);(typeof window !== \"undefined\" ? window['jQuery']['ui']['sortable'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['sortable'] : null),(typeof window !== \"undefined\" ? window['jQuery']['ui']['draggable'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['draggable'] : null),e(t,o)}else e(window.ko,window.jQuery)}(function(e,t){var o=\"ko_sortItem\",a=\"ko_sourceIndex\",i=\"ko_sortList\",n=\"ko_parentList\",l=\"ko_dragItem\",r=e.utils.unwrapObservable,d=e.utils.domData.get,s=e.utils.domData.set,c=t.ui&&t.ui.version,u=c&&c.indexOf(\"1.6.\")&&c.indexOf(\"1.7.\")&&(c.indexOf(\"1.8.\")||\"1.8.24\"===c),p=function(t,a){e.utils.arrayForEach(t,function(e){1===e.nodeType&&(s(e,o,a),s(e,n,d(e.parentNode,i)))})},m=function(t,o){var a,i={},n=r(t())||{};return n.data?(i[o]=n.data,i.name=n.template):i[o]=t(),e.utils.arrayForEach([\"afterAdd\",\"afterRender\",\"as\",\"beforeRemove\",\"includeDestroyed\",\"templateEngine\",\"templateOptions\",\"nodes\"],function(t){n.hasOwnProperty(t)?i[t]=n[t]:e.bindingHandlers.sortable.hasOwnProperty(t)&&(i[t]=e.bindingHandlers.sortable[t])}),\"foreach\"===o&&(i.afterRender?(a=i.afterRender,i.afterRender=function(e,t){p.call(t,e,t),a.call(t,e,t)}):i.afterRender=p),i},b=function(e,t){var o=r(t);if(o)for(var a=0;e>a;a++)o[a]&&r(o[a]._destroy)&&e++;return e},f=function(o,a){var i,n;a?(n=document.getElementById(a),n&&(i=new e.templateSources.domElement(n),i.text(t.trim(i.text())))):t(o).contents().each(function(){this&&1!==this.nodeType&&o.removeChild(this)})};e.bindingHandlers.sortable={init:function(c,p,g,h,v){var k,y,w=t(c),$=r(p())||{},x=m(p,\"foreach\"),S={};f(c,x.name),t.extend(!0,S,e.bindingHandlers.sortable),$.options&&S.options&&(e.utils.extend(S.options,$.options),delete $.options),e.utils.extend(S,$),S.connectClass&&(e.isObservable(S.allowDrop)||\"function\"==typeof S.allowDrop)?e.computed({read:function(){var t=r(S.allowDrop),o=\"function\"==typeof t?t.call(this,x.foreach):t;e.utils.toggleDomNodeCssClass(c,S.connectClass,o)},disposeWhenNodeIsRemoved:c},this):e.utils.toggleDomNodeCssClass(c,S.connectClass,S.allowDrop),e.bindingHandlers.template.init(c,function(){return x},g,h,v),k=S.options.start,y=S.options.update,S.options.helper||(S.options.helper=function(e,o){return o.is(\"tr\")&&o.children().each(function(){t(this).width(t(this).width())}),o});var C=setTimeout(function(){var p,m=S.options.receive;w.sortable(e.utils.extend(S.options,{start:function(t,o){var i=o.item[0];s(i,a,e.utils.arrayIndexOf(o.item.parent().children(),i)),o.item.find(\"input:focus\").change(),k&&k.apply(this,arguments)},receive:function(e,t){\"function\"==typeof m&&m.call(this,e,t),p=d(t.item[0],l),p&&(p.clone&&(p=p.clone()),S.dragged&&(p=S.dragged.call(this,p,e,t)||p))},update:function(l,c){var m,f,g,h,v,k=c.item[0],w=c.item.parent()[0],$=d(k,o)||p;if($||t(k).remove(),p=null,$&&this===w||!u&&t.contains(this,w)){if(m=d(k,n),g=d(k,a),f=d(k.parentNode,i),h=e.utils.arrayIndexOf(c.item.parent().children(),k),x.includeDestroyed||(g=b(g,m),h=b(h,f)),(S.beforeMove||S.afterMove)&&(v={item:$,sourceParent:m,sourceParentNode:m&&c.sender||k.parentNode,sourceIndex:g,targetParent:f,targetIndex:h,cancelDrop:!1},S.beforeMove&&S.beforeMove.call(this,v,l,c)),m?t(m===f?this:c.sender||this).sortable(\"cancel\"):t(k).remove(),v&&v.cancelDrop)return;if(S.hasOwnProperty(\"strategyMove\")&&S.strategyMove!==!1){if(h>=0)if(m)if(m!==f)m.splice(g,1),f.splice(h,0,$),s(k,o,null),c.item.remove();else{var C=r(m);m.valueWillMutate&&m.valueWillMutate(),C.splice(g,1),C.splice(h,0,$),m.valueHasMutated&&m.valueHasMutated()}else f.splice(h,0,$),s(k,o,null),c.item.remove()}else h>=0&&(m&&(m.splice(g,1),e.processAllDeferredBindingUpdates&&e.processAllDeferredBindingUpdates(),e.options&&e.options.deferUpdates&&e.tasks.runEarly()),f.splice(h,0,$)),s(k,o,null);e.processAllDeferredBindingUpdates&&e.processAllDeferredBindingUpdates(),S.afterMove&&S.afterMove.call(this,v,l,c)}y&&y.apply(this,arguments)},connectWith:S.connectClass?\".\"+S.connectClass:!1})),void 0!==S.isEnabled&&e.computed({read:function(){w.sortable(r(S.isEnabled)?\"enable\":\"disable\")},disposeWhenNodeIsRemoved:c})},0);return e.utils.domNodeDisposal.addDisposeCallback(c,function(){(w.data(\"ui-sortable\")||w.data(\"sortable\"))&&w.sortable(\"destroy\"),e.utils.toggleDomNodeCssClass(c,S.connectClass,!1),clearTimeout(C)}),{controlsDescendantBindings:!0}},update:function(t,o,a,n,l){var r=m(o,\"foreach\");s(t,i,r.foreach),e.bindingHandlers.template.update(t,function(){return r},a,n,l)},connectClass:\"ko_container\",allowDrop:!0,afterMove:null,beforeMove:null,options:{}},e.bindingHandlers.draggable={init:function(o,a,i,n,d){var c=r(a())||{},u=c.options||{},p=e.utils.extend({},e.bindingHandlers.draggable.options),b=m(a,\"data\"),f=c.connectClass||e.bindingHandlers.draggable.connectClass,g=void 0!==c.isEnabled?c.isEnabled:e.bindingHandlers.draggable.isEnabled;return c=\"data\"in c?c.data:c,s(o,l,c),e.utils.extend(p,u),p.connectToSortable=f?\".\"+f:!1,t(o).draggable(p),void 0!==g&&e.computed({read:function(){t(o).draggable(r(g)?\"enable\":\"disable\")},disposeWhenNodeIsRemoved:o}),e.utils.domNodeDisposal.addDisposeCallback(o,function(){t(o).draggable(\"destroy\")}),e.bindingHandlers.template.init(o,function(){return b},i,n,d)},update:function(t,o,a,i,n){var l=m(o,\"data\");return e.bindingHandlers.template.update(t,function(){return l},a,i,n)},connectClass:e.bindingHandlers.sortable.connectClass,options:{helper:\"clone\"}}});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/denea/mos/src/js/bindings/csstext.js":{"file":"/Users/denea/mos/src/js/bindings/csstext.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);ko.bindingHandlers.cssText={update:function(e,t){var o=ko.utils.unwrapObservable(t());try{e.innerText=o}catch(a){e.styleSheet||(e.innerHTML=\"a{}\"),e.styleSheet.cssText=o}}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9jc3N0ZXh0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxZQUVBLElBQUksSUFBSyxRQUFRLFdBR2pCLElBQUcsZ0JBQWdCLFNBQ2pCLE9BQVUsU0FBUyxFQUFNLEdBQ3ZCLEdBQUksR0FBTyxHQUFHLE1BQU0saUJBQWlCLElBQ3JDLEtBQ0UsRUFBSyxVQUFZLEVBQ2pCLE1BQU8sR0FDRixFQUFLLGFBQVksRUFBSyxVQUFZLE9BQ3ZDLEVBQUssV0FBVyxRQUFVIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGtvID0gcmVxdWlyZShcImtub2Nrb3V0XCIpO1xuXG4vKiBodHRwczovL2dpdGh1Yi5jb20va25vY2tvdXQva25vY2tvdXQvaXNzdWVzLzExNzEgKi9cbmtvLmJpbmRpbmdIYW5kbGVycy5jc3NUZXh0ID0ge1xuICAndXBkYXRlJzogZnVuY3Rpb24obm9kZSwgdmFsdWVBY2Nlc3NvciwgYWxsQmluZGluZ3MpIHtcbiAgICB2YXIgdGV4dCA9IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUodmFsdWVBY2Nlc3NvcigpKTtcbiAgICB0cnkge1xuICAgICAgbm9kZS5pbm5lclRleHQgPSB0ZXh0O1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGlmICghbm9kZS5zdHlsZVNoZWV0KSBub2RlLmlubmVySFRNTCA9IFwiYXt9XCI7XG4gICAgICBub2RlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHRleHQ7XG4gICAgfVxuICB9XG59OyJdfQ==","deps":{}},"/Users/denea/mos/src/js/bindings/droppable.js":{"file":"/Users/denea/mos/src/js/bindings/droppable.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);!function(e){e(ko,$)}(function(e,t){var o=\"ko_sortItem\",a=\"ko_dragItem\",i=(e.utils.unwrapObservable,e.utils.domData.get);e.utils.domData.set,e.bindingHandlers.droppable={init:function(n,l){var r,d=t(n),s=e.utils.unwrapObservable(l())||{},c={};t.extend(!0,c,e.bindingHandlers.droppable),s.data?(s.options&&c.options&&(e.utils.extend(c.options,s.options),delete s.options),e.utils.extend(c,s)):c.data=s,r=c.options.drop,d.droppable(e.utils.extend(c.options,{drop:function(e,t){var n=t.draggable[0],l=i(n,o)||i(n,a);l&&(l.clone&&(l=l.clone()),c.dragged&&(l=c.dragged.call(this,l,e,t)||l),c.data&&c.data(l)),r&&r.apply(this,arguments)}})),void 0!==c.isEnabled&&e.computed({read:function(){d.droppable(e.utils.unwrapObservable(c.isEnabled)?\"enable\":\"disable\")},disposeWhenNodeIsRemoved:n})},update:function(){},targetIndex:null,afterMove:null,beforeMove:null,options:{}}});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9kcm9wcGFibGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBRUEsSUFBSSxHQUFJLFFBQVEsVUFDWixHQUFLLFFBQVEsYUFHaEIsU0FBVSxHQUNULEVBQVEsR0FBSSxJQUNYLFNBQVMsRUFBSSxHQUNkLEdBQUksR0FBVSxjQUlaLEVBQVUsY0FFVixHQURTLEVBQUcsTUFBTSxpQkFDUixFQUFHLE1BQU0sUUFBUSxJQUNqQixHQUFHLE1BQU0sUUFBUSxJQUU3QixFQUFHLGdCQUFnQixXQUNqQixLQUFNLFNBQVMsRUFBUyxHQUN0QixHQUdFLEdBSEUsRUFBVyxFQUFFLEdBQ2YsRUFBUSxFQUFHLE1BQU0saUJBQWlCLFNBQ2xDLElBR0YsR0FBRSxRQUFPLEVBQU0sRUFBVyxFQUFHLGdCQUFnQixXQUN6QyxFQUFNLE1BQ0osRUFBTSxTQUFXLEVBQVUsVUFDN0IsRUFBRyxNQUFNLE9BQU8sRUFBVSxRQUFTLEVBQU0sZUFDbEMsR0FBTSxTQUVmLEVBQUcsTUFBTSxPQUFPLEVBQVcsSUFFM0IsRUFBVSxLQUFPLEVBR25CLEVBQWEsRUFBVSxRQUFRLEtBRS9CLEVBQVMsVUFBVSxFQUFHLE1BQU0sT0FBTyxFQUFVLFNBQzNDLEtBQU0sU0FBUyxFQUFPLEdBRXBCLEdBQUksR0FBSyxFQUFHLFVBQVUsR0FDcEIsRUFBTyxFQUFRLEVBQUksSUFBWSxFQUFRLEVBQUksRUFFekMsS0FFRSxFQUFLLFFBQ1AsRUFBTyxFQUFLLFNBR1YsRUFBVSxVQUNaLEVBQU8sRUFBVSxRQUFRLEtBQUssS0FBTSxFQUFNLEVBQU8sSUFBTyxHQUd0RCxFQUFVLE1BQ1osRUFBVSxLQUFLLElBS2YsR0FDRixFQUFXLE1BQU0sS0FBTSxlQU9ELFNBQXhCLEVBQVUsV0FDWixFQUFHLFVBQ0QsS0FBTSxXQUNKLEVBQVMsVUFBVSxFQUFHLE1BQU0saUJBQWlCLEVBQVUsV0FBYSxTQUFXLFlBRWpGLHlCQUEwQixLQUtoQyxPQUFRLGFBR1IsWUFBYSxLQUNiLFVBQVcsS0FDWCxXQUFZLEtBQ1oiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgJCA9IHJlcXVpcmUoXCJqcXVlcnlcIik7XG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG5cbi8qIGtub2Nrb3V0IGRyb3BwYWJsZSwgd2l0aCBzaW1wbGlmaWVkIFVNRCAqL1xuOyhmdW5jdGlvbihmYWN0b3J5KSB7XG4gIGZhY3Rvcnkoa28sICQpO1xufSkoZnVuY3Rpb24oa28sICQpIHtcbiAgdmFyIElURU1LRVkgPSBcImtvX3NvcnRJdGVtXCIsXG4gICAgSU5ERVhLRVkgPSBcImtvX3NvdXJjZUluZGV4XCIsXG4gICAgTElTVEtFWSA9IFwia29fc29ydExpc3RcIixcbiAgICBQQVJFTlRLRVkgPSBcImtvX3BhcmVudExpc3RcIixcbiAgICBEUkFHS0VZID0gXCJrb19kcmFnSXRlbVwiLFxuICAgIHVud3JhcCA9IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUsXG4gICAgZGF0YUdldCA9IGtvLnV0aWxzLmRvbURhdGEuZ2V0LFxuICAgIGRhdGFTZXQgPSBrby51dGlscy5kb21EYXRhLnNldDtcblxuICBrby5iaW5kaW5nSGFuZGxlcnMuZHJvcHBhYmxlID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlQWNjZXNzb3IsIGFsbEJpbmRpbmdzQWNjZXNzb3IsIGRhdGEsIGNvbnRleHQpIHtcbiAgICAgIHZhciAkZWxlbWVudCA9ICQoZWxlbWVudCksXG4gICAgICAgIHZhbHVlID0ga28udXRpbHMudW53cmFwT2JzZXJ2YWJsZSh2YWx1ZUFjY2Vzc29yKCkpIHx8IHt9LFxuICAgICAgICBkcm9wcGFibGUgPSB7fSxcbiAgICAgICAgZHJvcEFjdHVhbDtcblxuICAgICAgJC5leHRlbmQodHJ1ZSwgZHJvcHBhYmxlLCBrby5iaW5kaW5nSGFuZGxlcnMuZHJvcHBhYmxlKTtcbiAgICAgIGlmICh2YWx1ZS5kYXRhKSB7XG4gICAgICAgIGlmICh2YWx1ZS5vcHRpb25zICYmIGRyb3BwYWJsZS5vcHRpb25zKSB7XG4gICAgICAgICAga28udXRpbHMuZXh0ZW5kKGRyb3BwYWJsZS5vcHRpb25zLCB2YWx1ZS5vcHRpb25zKTtcbiAgICAgICAgICBkZWxldGUgdmFsdWUub3B0aW9ucztcbiAgICAgICAgfVxuICAgICAgICBrby51dGlscy5leHRlbmQoZHJvcHBhYmxlLCB2YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkcm9wcGFibGUuZGF0YSA9IHZhbHVlO1xuICAgICAgfVxuXG4gICAgICBkcm9wQWN0dWFsID0gZHJvcHBhYmxlLm9wdGlvbnMuZHJvcDtcblxuICAgICAgJGVsZW1lbnQuZHJvcHBhYmxlKGtvLnV0aWxzLmV4dGVuZChkcm9wcGFibGUub3B0aW9ucywge1xuICAgICAgICBkcm9wOiBmdW5jdGlvbihldmVudCwgdWkpIHtcblxuICAgICAgICAgIHZhciBlbCA9IHVpLmRyYWdnYWJsZVswXSxcbiAgICAgICAgICAgIGl0ZW0gPSBkYXRhR2V0KGVsLCBJVEVNS0VZKSB8fCBkYXRhR2V0KGVsLCBEUkFHS0VZKTtcblxuICAgICAgICAgIGlmIChpdGVtKSB7XG5cbiAgICAgICAgICAgIGlmIChpdGVtLmNsb25lKSB7XG4gICAgICAgICAgICAgIGl0ZW0gPSBpdGVtLmNsb25lKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChkcm9wcGFibGUuZHJhZ2dlZCkge1xuICAgICAgICAgICAgICBpdGVtID0gZHJvcHBhYmxlLmRyYWdnZWQuY2FsbCh0aGlzLCBpdGVtLCBldmVudCwgdWkpIHx8IGl0ZW07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChkcm9wcGFibGUuZGF0YSkge1xuICAgICAgICAgICAgICBkcm9wcGFibGUuZGF0YShpdGVtKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChkcm9wQWN0dWFsKSB7XG4gICAgICAgICAgICBkcm9wQWN0dWFsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgIH1cbiAgICAgIH0pKTtcblxuICAgICAgLy9oYW5kbGUgZW5hYmxpbmcvZGlzYWJsaW5nXG4gICAgICBpZiAoZHJvcHBhYmxlLmlzRW5hYmxlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGtvLmNvbXB1dGVkKHtcbiAgICAgICAgICByZWFkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICRlbGVtZW50LmRyb3BwYWJsZShrby51dGlscy51bndyYXBPYnNlcnZhYmxlKGRyb3BwYWJsZS5pc0VuYWJsZWQpID8gXCJlbmFibGVcIiA6IFwiZGlzYWJsZVwiKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRpc3Bvc2VXaGVuTm9kZUlzUmVtb3ZlZDogZWxlbWVudFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgIH0sXG4gICAgdXBkYXRlOiBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZUFjY2Vzc29yLCBhbGxCaW5kaW5nc0FjY2Vzc29yLCBkYXRhLCBjb250ZXh0KSB7XG5cbiAgICB9LFxuICAgIHRhcmdldEluZGV4OiBudWxsLFxuICAgIGFmdGVyTW92ZTogbnVsbCxcbiAgICBiZWZvcmVNb3ZlOiBudWxsLFxuICAgIG9wdGlvbnM6IHt9XG4gIH07XG59KTsiXX0=","deps":{}},"/Users/denea/mos/src/js/bindings/extender-pagination.js":{"file":"/Users/denea/mos/src/js/bindings/extender-pagination.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);ko.extenders.paging=function(e,t){var o=ko.observable(t||10),i=ko.observable(1);return e.pageSize=ko.computed({read:o,write:function(e){e>0?o(e):o(10)}}),e.currentPage=ko.computed({read:i,write:function(t){t>e.pageCount()?i(e.pageCount()):0>=t?i(1):i(t)}}),e.pageCount=ko.computed(function(){return Math.ceil(e().length/e.pageSize())||1}),e.currentPageData=ko.computed(function(){var t=o(),n=i(),a=t*(n-1),r=t*n;return e().slice(a,r)}),e.moveFirst=function(){e.currentPage(1)},e.movePrevious=function(){e.currentPage(e.currentPage()-1)},e.moveNext=function(){e.currentPage(e.currentPage()+1)},e.moveLast=function(){e.currentPage(e.pageCount())},e};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9leHRlbmRlci1wYWdpbmF0aW9uLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxZQUVBLElBQUksSUFBSyxRQUFRLFdBRWpCLElBQUcsVUFBVSxPQUFTLFNBQVMsRUFBUSxHQUNyQyxHQUFJLEdBQVksR0FBRyxXQUFXLEdBQVksSUFFeEMsRUFBZSxHQUFHLFdBQVcsRUFtRC9CLE9BbERBLEdBQU8sU0FBVyxHQUFHLFVBQ25CLEtBQU0sRUFDTixNQUFPLFNBQVMsR0FDVixFQUFXLEVBQ2IsRUFBVSxHQUVWLEVBQVUsT0FLaEIsRUFBTyxZQUFjLEdBQUcsVUFDdEIsS0FBTSxFQUNOLE1BQU8sU0FBUyxHQUNWLEVBQVcsRUFBTyxZQUNwQixFQUFhLEVBQU8sYUFDQyxHQUFaLEVBQ1QsRUFBYSxHQUViLEVBQWEsTUFLbkIsRUFBTyxVQUFZLEdBQUcsU0FBUyxXQUM3QixNQUFPLE1BQUssS0FBSyxJQUFTLE9BQVMsRUFBTyxhQUFlLElBRzNELEVBQU8sZ0JBQWtCLEdBQUcsU0FBUyxXQUNuQyxHQUFJLEdBQVcsSUFDYixFQUFZLElBQ1osRUFBYSxHQUFZLEVBQVksR0FDckMsRUFBVyxFQUFXLENBRXhCLE9BQU8sS0FBUyxNQUFNLEVBQVksS0FHcEMsRUFBTyxVQUFZLFdBQ2pCLEVBQU8sWUFBWSxJQUVyQixFQUFPLGFBQWUsV0FDcEIsRUFBTyxZQUFZLEVBQU8sY0FBZ0IsSUFFNUMsRUFBTyxTQUFXLFdBQ2hCLEVBQU8sWUFBWSxFQUFPLGNBQWdCLElBRTVDLEVBQU8sU0FBVyxXQUNoQixFQUFPLFlBQVksRUFBTyxjQUdyQiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBrbyA9IHJlcXVpcmUoXCJrbm9ja291dFwiKTtcblxua28uZXh0ZW5kZXJzLnBhZ2luZyA9IGZ1bmN0aW9uKHRhcmdldCwgcGFnZVNpemUpIHtcbiAgdmFyIF9wYWdlU2l6ZSA9IGtvLm9ic2VydmFibGUocGFnZVNpemUgfHwgMTApLFxuICAgIC8vIGRlZmF1bHQgcGFnZVNpemUgdG8gMTBcbiAgICBfY3VycmVudFBhZ2UgPSBrby5vYnNlcnZhYmxlKDEpOyAvLyBkZWZhdWx0IGN1cnJlbnQgcGFnZSB0byAxXG4gIHRhcmdldC5wYWdlU2l6ZSA9IGtvLmNvbXB1dGVkKHtcbiAgICByZWFkOiBfcGFnZVNpemUsXG4gICAgd3JpdGU6IGZ1bmN0aW9uKG5ld1ZhbHVlKSB7XG4gICAgICBpZiAobmV3VmFsdWUgPiAwKSB7XG4gICAgICAgIF9wYWdlU2l6ZShuZXdWYWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfcGFnZVNpemUoMTApO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgdGFyZ2V0LmN1cnJlbnRQYWdlID0ga28uY29tcHV0ZWQoe1xuICAgIHJlYWQ6IF9jdXJyZW50UGFnZSxcbiAgICB3cml0ZTogZnVuY3Rpb24obmV3VmFsdWUpIHtcbiAgICAgIGlmIChuZXdWYWx1ZSA+IHRhcmdldC5wYWdlQ291bnQoKSkge1xuICAgICAgICBfY3VycmVudFBhZ2UodGFyZ2V0LnBhZ2VDb3VudCgpKTtcbiAgICAgIH0gZWxzZSBpZiAobmV3VmFsdWUgPD0gMCkge1xuICAgICAgICBfY3VycmVudFBhZ2UoMSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfY3VycmVudFBhZ2UobmV3VmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgdGFyZ2V0LnBhZ2VDb3VudCA9IGtvLmNvbXB1dGVkKGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBNYXRoLmNlaWwodGFyZ2V0KCkubGVuZ3RoIC8gdGFyZ2V0LnBhZ2VTaXplKCkpIHx8IDE7XG4gIH0pO1xuXG4gIHRhcmdldC5jdXJyZW50UGFnZURhdGEgPSBrby5jb21wdXRlZChmdW5jdGlvbigpIHtcbiAgICB2YXIgcGFnZVNpemUgPSBfcGFnZVNpemUoKSxcbiAgICAgIHBhZ2VJbmRleCA9IF9jdXJyZW50UGFnZSgpLFxuICAgICAgc3RhcnRJbmRleCA9IHBhZ2VTaXplICogKHBhZ2VJbmRleCAtIDEpLFxuICAgICAgZW5kSW5kZXggPSBwYWdlU2l6ZSAqIHBhZ2VJbmRleDtcblxuICAgIHJldHVybiB0YXJnZXQoKS5zbGljZShzdGFydEluZGV4LCBlbmRJbmRleCk7XG4gIH0pO1xuXG4gIHRhcmdldC5tb3ZlRmlyc3QgPSBmdW5jdGlvbigpIHtcbiAgICB0YXJnZXQuY3VycmVudFBhZ2UoMSk7XG4gIH07XG4gIHRhcmdldC5tb3ZlUHJldmlvdXMgPSBmdW5jdGlvbigpIHtcbiAgICB0YXJnZXQuY3VycmVudFBhZ2UodGFyZ2V0LmN1cnJlbnRQYWdlKCkgLSAxKTtcbiAgfTtcbiAgdGFyZ2V0Lm1vdmVOZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgdGFyZ2V0LmN1cnJlbnRQYWdlKHRhcmdldC5jdXJyZW50UGFnZSgpICsgMSk7XG4gIH07XG4gIHRhcmdldC5tb3ZlTGFzdCA9IGZ1bmN0aW9uKCkge1xuICAgIHRhcmdldC5jdXJyZW50UGFnZSh0YXJnZXQucGFnZUNvdW50KCkpO1xuICB9O1xuXG4gIHJldHVybiB0YXJnZXQ7XG59OyJdfQ==","deps":{}},"/Users/denea/mos/bower_components/tinycolor/tinycolor.js":{"file":"/Users/denea/mos/bower_components/tinycolor/tinycolor.js","source":"!function(e){function t(e,n){if(e=e?e:\"\",n=n||{},e instanceof t)return e;if(!(this instanceof t))return new t(e,n);var i=o(e);this._originalInput=e,this._r=i.r,this._g=i.g,this._b=i.b,this._a=i.a,this._roundA=L(100*this._a)/100,this._format=n.format||i.format,this._gradientType=n.gradientType,this._r<1&&(this._r=L(this._r)),this._g<1&&(this._g=L(this._g)),this._b<1&&(this._b=L(this._b)),this._ok=i.ok,this._tc_id=R++}function o(e){var t={r:0,g:0,b:0},o=1,i=null,r=null,s=null,d=!1,c=!1;return\"string\"==typeof e&&(e=j(e)),\"object\"==typeof e&&(B(e.r)&&B(e.g)&&B(e.b)?(t=n(e.r,e.g,e.b),d=!0,c=\"%\"===String(e.r).substr(-1)?\"prgb\":\"rgb\"):B(e.h)&&B(e.s)&&B(e.v)?(i=A(e.s),r=A(e.v),t=l(e.h,i,r),d=!0,c=\"hsv\"):B(e.h)&&B(e.s)&&B(e.l)&&(i=A(e.s),s=A(e.l),t=a(e.h,i,s),d=!0,c=\"hsl\"),e.hasOwnProperty(\"a\")&&(o=e.a)),o=S(o),{ok:d,format:e.format||c,r:N(255,U(t.r,0)),g:N(255,U(t.g,0)),b:N(255,U(t.b,0)),a:o}}function n(e,t,o){return{r:255*C(e,255),g:255*C(t,255),b:255*C(o,255)}}function i(e,t,o){e=C(e,255),t=C(t,255),o=C(o,255);var n,i,a=U(e,t,o),r=N(e,t,o),l=(a+r)/2;if(a==r)n=i=0;else{var s=a-r;switch(i=l>.5?s/(2-a-r):s/(a+r),a){case e:n=(t-o)/s+(o>t?6:0);break;case t:n=(o-e)/s+2;break;case o:n=(e-t)/s+4}n/=6}return{h:n,s:i,l:l}}function a(e,t,o){function n(e,t,o){return 0>o&&(o+=1),o>1&&(o-=1),1/6>o?e+6*(t-e)*o:.5>o?t:2/3>o?e+6*(t-e)*(2/3-o):e}var i,a,r;if(e=C(e,360),t=C(t,100),o=C(o,100),0===t)i=a=r=o;else{var l=.5>o?o*(1+t):o+t-o*t,s=2*o-l;i=n(s,l,e+1/3),a=n(s,l,e),r=n(s,l,e-1/3)}return{r:255*i,g:255*a,b:255*r}}function r(e,t,o){e=C(e,255),t=C(t,255),o=C(o,255);var n,i,a=U(e,t,o),r=N(e,t,o),l=a,s=a-r;if(i=0===a?0:s/a,a==r)n=0;else{switch(a){case e:n=(t-o)/s+(o>t?6:0);break;case t:n=(o-e)/s+2;break;case o:n=(e-t)/s+4}n/=6}return{h:n,s:i,v:l}}function l(t,o,n){t=6*C(t,360),o=C(o,100),n=C(n,100);var i=e.floor(t),a=t-i,r=n*(1-o),l=n*(1-a*o),s=n*(1-(1-a)*o),d=i%6,c=[n,l,r,r,s,n][d],u=[s,n,n,l,r,r][d],p=[r,r,s,n,n,l][d];return{r:255*c,g:255*u,b:255*p}}function s(e,t,o,n){var i=[T(L(e).toString(16)),T(L(t).toString(16)),T(L(o).toString(16))];return n&&i[0].charAt(0)==i[0].charAt(1)&&i[1].charAt(0)==i[1].charAt(1)&&i[2].charAt(0)==i[2].charAt(1)?i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0):i.join(\"\")}function d(e,t,o,n,i){var a=[T(L(e).toString(16)),T(L(t).toString(16)),T(L(o).toString(16)),T(E(n))];return i&&a[0].charAt(0)==a[0].charAt(1)&&a[1].charAt(0)==a[1].charAt(1)&&a[2].charAt(0)==a[2].charAt(1)&&a[3].charAt(0)==a[3].charAt(1)?a[0].charAt(0)+a[1].charAt(0)+a[2].charAt(0)+a[3].charAt(0):a.join(\"\")}function c(e,t,o,n){var i=[T(E(n)),T(L(e).toString(16)),T(L(t).toString(16)),T(L(o).toString(16))];return i.join(\"\")}function u(e,o){o=0===o?0:o||10;var n=t(e).toHsl();return n.s-=o/100,n.s=H(n.s),t(n)}function p(e,o){o=0===o?0:o||10;var n=t(e).toHsl();return n.s+=o/100,n.s=H(n.s),t(n)}function f(e){return t(e).desaturate(100)}function b(e,o){o=0===o?0:o||10;var n=t(e).toHsl();return n.l+=o/100,n.l=H(n.l),t(n)}function g(e,o){o=0===o?0:o||10;var n=t(e).toRgb();return n.r=U(0,N(255,n.r-L(255*-(o/100)))),n.g=U(0,N(255,n.g-L(255*-(o/100)))),n.b=U(0,N(255,n.b-L(255*-(o/100)))),t(n)}function m(e,o){o=0===o?0:o||10;var n=t(e).toHsl();return n.l-=o/100,n.l=H(n.l),t(n)}function h(e,o){var n=t(e).toHsl(),i=(n.h+o)%360;return n.h=0>i?360+i:i,t(n)}function v(e){var o=t(e).toHsl();return o.h=(o.h+180)%360,t(o)}function k(e){var o=t(e).toHsl(),n=o.h;return[t(e),t({h:(n+120)%360,s:o.s,l:o.l}),t({h:(n+240)%360,s:o.s,l:o.l})]}function y(e){var o=t(e).toHsl(),n=o.h;return[t(e),t({h:(n+90)%360,s:o.s,l:o.l}),t({h:(n+180)%360,s:o.s,l:o.l}),t({h:(n+270)%360,s:o.s,l:o.l})]}function w(e){var o=t(e).toHsl(),n=o.h;return[t(e),t({h:(n+72)%360,s:o.s,l:o.l}),t({h:(n+216)%360,s:o.s,l:o.l})]}function x(e,o,n){o=o||6,n=n||30;var i=t(e).toHsl(),a=360/n,r=[t(e)];for(i.h=(i.h-(a*o>>1)+720)%360;--o;)i.h=(i.h+a)%360,r.push(t(i));return r}function $(e,o){o=o||6;for(var n=t(e).toHsv(),i=n.h,a=n.s,r=n.v,l=[],s=1/o;o--;)l.push(t({h:i,s:a,v:r})),r=(r+s)%1;return l}function _(e){var t={};for(var o in e)e.hasOwnProperty(o)&&(t[e[o]]=o);return t}function S(e){return e=parseFloat(e),(isNaN(e)||0>e||e>1)&&(e=1),e}function C(t,o){M(t)&&(t=\"100%\");var n=O(t);return t=N(o,U(0,parseFloat(t))),n&&(t=parseInt(t*o,10)/100),e.abs(t-o)<1e-6?1:t%o/parseFloat(o)}function H(e){return N(1,U(0,e))}function q(e){return parseInt(e,16)}function M(e){return\"string\"==typeof e&&-1!=e.indexOf(\".\")&&1===parseFloat(e)}function O(e){return\"string\"==typeof e&&-1!=e.indexOf(\"%\")}function T(e){return 1==e.length?\"0\"+e:\"\"+e}function A(e){return 1>=e&&(e=100*e+\"%\"),e}function E(t){return e.round(255*parseFloat(t)).toString(16)}function I(e){return q(e)/255}function B(e){return!!J.CSS_UNIT.exec(e)}function j(e){e=e.replace(P,\"\").replace(F,\"\").toLowerCase();var t=!1;if(V[e])e=V[e],t=!0;else if(\"transparent\"==e)return{r:0,g:0,b:0,a:0,format:\"name\"};var o;return(o=J.rgb.exec(e))?{r:o[1],g:o[2],b:o[3]}:(o=J.rgba.exec(e))?{r:o[1],g:o[2],b:o[3],a:o[4]}:(o=J.hsl.exec(e))?{h:o[1],s:o[2],l:o[3]}:(o=J.hsla.exec(e))?{h:o[1],s:o[2],l:o[3],a:o[4]}:(o=J.hsv.exec(e))?{h:o[1],s:o[2],v:o[3]}:(o=J.hsva.exec(e))?{h:o[1],s:o[2],v:o[3],a:o[4]}:(o=J.hex8.exec(e))?{r:q(o[1]),g:q(o[2]),b:q(o[3]),a:I(o[4]),format:t?\"name\":\"hex8\"}:(o=J.hex6.exec(e))?{r:q(o[1]),g:q(o[2]),b:q(o[3]),format:t?\"name\":\"hex\"}:(o=J.hex4.exec(e))?{r:q(o[1]+\"\"+o[1]),g:q(o[2]+\"\"+o[2]),b:q(o[3]+\"\"+o[3]),a:I(o[4]+\"\"+o[4]),format:t?\"name\":\"hex8\"}:(o=J.hex3.exec(e))?{r:q(o[1]+\"\"+o[1]),g:q(o[2]+\"\"+o[2]),b:q(o[3]+\"\"+o[3]),format:t?\"name\":\"hex\"}:!1}function D(e){var t,o;return e=e||{level:\"AA\",size:\"small\"},t=(e.level||\"AA\").toUpperCase(),o=(e.size||\"small\").toLowerCase(),\"AA\"!==t&&\"AAA\"!==t&&(t=\"AA\"),\"small\"!==o&&\"large\"!==o&&(o=\"small\"),{level:t,size:o}}var P=/^\\s+/,F=/\\s+$/,R=0,L=e.round,N=e.min,U=e.max,z=e.random;t.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(299*e.r+587*e.g+114*e.b)/1e3},getLuminance:function(){var t,o,n,i,a,r,l=this.toRgb();return t=l.r/255,o=l.g/255,n=l.b/255,i=.03928>=t?t/12.92:e.pow((t+.055)/1.055,2.4),a=.03928>=o?o/12.92:e.pow((o+.055)/1.055,2.4),r=.03928>=n?n/12.92:e.pow((n+.055)/1.055,2.4),.2126*i+.7152*a+.0722*r},setAlpha:function(e){return this._a=S(e),this._roundA=L(100*this._a)/100,this},toHsv:function(){var e=r(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=r(this._r,this._g,this._b),t=L(360*e.h),o=L(100*e.s),n=L(100*e.v);return 1==this._a?\"hsv(\"+t+\", \"+o+\"%, \"+n+\"%)\":\"hsva(\"+t+\", \"+o+\"%, \"+n+\"%, \"+this._roundA+\")\"},toHsl:function(){var e=i(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=i(this._r,this._g,this._b),t=L(360*e.h),o=L(100*e.s),n=L(100*e.l);return 1==this._a?\"hsl(\"+t+\", \"+o+\"%, \"+n+\"%)\":\"hsla(\"+t+\", \"+o+\"%, \"+n+\"%, \"+this._roundA+\")\"},toHex:function(e){return s(this._r,this._g,this._b,e)},toHexString:function(e){return\"#\"+this.toHex(e)},toHex8:function(e){return d(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return\"#\"+this.toHex8(e)},toRgb:function(){return{r:L(this._r),g:L(this._g),b:L(this._b),a:this._a}},toRgbString:function(){return 1==this._a?\"rgb(\"+L(this._r)+\", \"+L(this._g)+\", \"+L(this._b)+\")\":\"rgba(\"+L(this._r)+\", \"+L(this._g)+\", \"+L(this._b)+\", \"+this._roundA+\")\"},toPercentageRgb:function(){return{r:L(100*C(this._r,255))+\"%\",g:L(100*C(this._g,255))+\"%\",b:L(100*C(this._b,255))+\"%\",a:this._a}},toPercentageRgbString:function(){return 1==this._a?\"rgb(\"+L(100*C(this._r,255))+\"%, \"+L(100*C(this._g,255))+\"%, \"+L(100*C(this._b,255))+\"%)\":\"rgba(\"+L(100*C(this._r,255))+\"%, \"+L(100*C(this._g,255))+\"%, \"+L(100*C(this._b,255))+\"%, \"+this._roundA+\")\"},toName:function(){return 0===this._a?\"transparent\":this._a<1?!1:W[s(this._r,this._g,this._b,!0)]||!1},toFilter:function(e){var o=\"#\"+c(this._r,this._g,this._b,this._a),n=o,i=this._gradientType?\"GradientType = 1, \":\"\";if(e){var a=t(e);n=\"#\"+c(a._r,a._g,a._b,a._a)}return\"progid:DXImageTransform.Microsoft.gradient(\"+i+\"startColorstr=\"+o+\",endColorstr=\"+n+\")\"},toString:function(e){var t=!!e;e=e||this._format;var o=!1,n=this._a<1&&this._a>=0,i=!t&&n&&(\"hex\"===e||\"hex6\"===e||\"hex3\"===e||\"hex4\"===e||\"hex8\"===e||\"name\"===e);return i?\"name\"===e&&0===this._a?this.toName():this.toRgbString():(\"rgb\"===e&&(o=this.toRgbString()),\"prgb\"===e&&(o=this.toPercentageRgbString()),(\"hex\"===e||\"hex6\"===e)&&(o=this.toHexString()),\"hex3\"===e&&(o=this.toHexString(!0)),\"hex4\"===e&&(o=this.toHex8String(!0)),\"hex8\"===e&&(o=this.toHex8String()),\"name\"===e&&(o=this.toName()),\"hsl\"===e&&(o=this.toHslString()),\"hsv\"===e&&(o=this.toHsvString()),o||this.toHexString())},clone:function(){return t(this.toString())},_applyModification:function(e,t){var o=e.apply(null,[this].concat([].slice.call(t)));return this._r=o._r,this._g=o._g,this._b=o._b,this.setAlpha(o._a),this},lighten:function(){return this._applyModification(b,arguments)},brighten:function(){return this._applyModification(g,arguments)},darken:function(){return this._applyModification(m,arguments)},desaturate:function(){return this._applyModification(u,arguments)},saturate:function(){return this._applyModification(p,arguments)},greyscale:function(){return this._applyModification(f,arguments)},spin:function(){return this._applyModification(h,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(x,arguments)},complement:function(){return this._applyCombination(v,arguments)},monochromatic:function(){return this._applyCombination($,arguments)},splitcomplement:function(){return this._applyCombination(w,arguments)},triad:function(){return this._applyCombination(k,arguments)},tetrad:function(){return this._applyCombination(y,arguments)}},t.fromRatio=function(e,o){if(\"object\"==typeof e){var n={};for(var i in e)e.hasOwnProperty(i)&&(n[i]=\"a\"===i?e[i]:A(e[i]));e=n}return t(e,o)},t.equals=function(e,o){return e&&o?t(e).toRgbString()==t(o).toRgbString():!1},t.random=function(){return t.fromRatio({r:z(),g:z(),b:z()})},t.mix=function(e,o,n){n=0===n?0:n||50;var i=t(e).toRgb(),a=t(o).toRgb(),r=n/100,l={r:(a.r-i.r)*r+i.r,g:(a.g-i.g)*r+i.g,b:(a.b-i.b)*r+i.b,a:(a.a-i.a)*r+i.a};return t(l)},t.readability=function(o,n){var i=t(o),a=t(n);return(e.max(i.getLuminance(),a.getLuminance())+.05)/(e.min(i.getLuminance(),a.getLuminance())+.05)},t.isReadable=function(e,o,n){var i,a,r=t.readability(e,o);switch(a=!1,i=D(n),i.level+i.size){case\"AAsmall\":case\"AAAlarge\":a=r>=4.5;break;case\"AAlarge\":a=r>=3;break;case\"AAAsmall\":a=r>=7}return a},t.mostReadable=function(e,o,n){var i,a,r,l,s=null,d=0;n=n||{},a=n.includeFallbackColors,r=n.level,l=n.size;for(var c=0;c<o.length;c++)i=t.readability(e,o[c]),i>d&&(d=i,s=t(o[c]));return t.isReadable(e,s,{level:r,size:l})||!a?s:(n.includeFallbackColors=!1,t.mostReadable(e,[\"#fff\",\"#000\"],n))};var V=t.names={aliceblue:\"f0f8ff\",antiquewhite:\"faebd7\",aqua:\"0ff\",aquamarine:\"7fffd4\",azure:\"f0ffff\",beige:\"f5f5dc\",bisque:\"ffe4c4\",black:\"000\",blanchedalmond:\"ffebcd\",blue:\"00f\",blueviolet:\"8a2be2\",brown:\"a52a2a\",burlywood:\"deb887\",burntsienna:\"ea7e5d\",cadetblue:\"5f9ea0\",chartreuse:\"7fff00\",chocolate:\"d2691e\",coral:\"ff7f50\",cornflowerblue:\"6495ed\",cornsilk:\"fff8dc\",crimson:\"dc143c\",cyan:\"0ff\",darkblue:\"00008b\",darkcyan:\"008b8b\",darkgoldenrod:\"b8860b\",darkgray:\"a9a9a9\",darkgreen:\"006400\",darkgrey:\"a9a9a9\",darkkhaki:\"bdb76b\",darkmagenta:\"8b008b\",darkolivegreen:\"556b2f\",darkorange:\"ff8c00\",darkorchid:\"9932cc\",darkred:\"8b0000\",darksalmon:\"e9967a\",darkseagreen:\"8fbc8f\",darkslateblue:\"483d8b\",darkslategray:\"2f4f4f\",darkslategrey:\"2f4f4f\",darkturquoise:\"00ced1\",darkviolet:\"9400d3\",deeppink:\"ff1493\",deepskyblue:\"00bfff\",dimgray:\"696969\",dimgrey:\"696969\",dodgerblue:\"1e90ff\",firebrick:\"b22222\",floralwhite:\"fffaf0\",forestgreen:\"228b22\",fuchsia:\"f0f\",gainsboro:\"dcdcdc\",ghostwhite:\"f8f8ff\",gold:\"ffd700\",goldenrod:\"daa520\",gray:\"808080\",green:\"008000\",greenyellow:\"adff2f\",grey:\"808080\",honeydew:\"f0fff0\",hotpink:\"ff69b4\",indianred:\"cd5c5c\",indigo:\"4b0082\",ivory:\"fffff0\",khaki:\"f0e68c\",lavender:\"e6e6fa\",lavenderblush:\"fff0f5\",lawngreen:\"7cfc00\",lemonchiffon:\"fffacd\",lightblue:\"add8e6\",lightcoral:\"f08080\",lightcyan:\"e0ffff\",lightgoldenrodyellow:\"fafad2\",lightgray:\"d3d3d3\",lightgreen:\"90ee90\",lightgrey:\"d3d3d3\",lightpink:\"ffb6c1\",lightsalmon:\"ffa07a\",lightseagreen:\"20b2aa\",lightskyblue:\"87cefa\",lightslategray:\"789\",lightslategrey:\"789\",lightsteelblue:\"b0c4de\",lightyellow:\"ffffe0\",lime:\"0f0\",limegreen:\"32cd32\",linen:\"faf0e6\",magenta:\"f0f\",maroon:\"800000\",mediumaquamarine:\"66cdaa\",mediumblue:\"0000cd\",mediumorchid:\"ba55d3\",mediumpurple:\"9370db\",mediumseagreen:\"3cb371\",mediumslateblue:\"7b68ee\",mediumspringgreen:\"00fa9a\",mediumturquoise:\"48d1cc\",mediumvioletred:\"c71585\",midnightblue:\"191970\",mintcream:\"f5fffa\",mistyrose:\"ffe4e1\",moccasin:\"ffe4b5\",navajowhite:\"ffdead\",navy:\"000080\",oldlace:\"fdf5e6\",olive:\"808000\",olivedrab:\"6b8e23\",orange:\"ffa500\",orangered:\"ff4500\",orchid:\"da70d6\",palegoldenrod:\"eee8aa\",palegreen:\"98fb98\",paleturquoise:\"afeeee\",palevioletred:\"db7093\",papayawhip:\"ffefd5\",peachpuff:\"ffdab9\",peru:\"cd853f\",pink:\"ffc0cb\",plum:\"dda0dd\",powderblue:\"b0e0e6\",purple:\"800080\",rebeccapurple:\"663399\",red:\"f00\",rosybrown:\"bc8f8f\",royalblue:\"4169e1\",saddlebrown:\"8b4513\",salmon:\"fa8072\",sandybrown:\"f4a460\",seagreen:\"2e8b57\",seashell:\"fff5ee\",sienna:\"a0522d\",silver:\"c0c0c0\",skyblue:\"87ceeb\",slateblue:\"6a5acd\",slategray:\"708090\",slategrey:\"708090\",snow:\"fffafa\",springgreen:\"00ff7f\",steelblue:\"4682b4\",tan:\"d2b48c\",teal:\"008080\",thistle:\"d8bfd8\",tomato:\"ff6347\",turquoise:\"40e0d0\",violet:\"ee82ee\",wheat:\"f5deb3\",white:\"fff\",whitesmoke:\"f5f5f5\",yellow:\"ff0\",yellowgreen:\"9acd32\"},W=t.hexNames=_(V),J=function(){var e=\"[-\\\\+]?\\\\d+%?\",t=\"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\",o=\"(?:\"+t+\")|(?:\"+e+\")\",n=\"[\\\\s|\\\\(]+(\"+o+\")[,|\\\\s]+(\"+o+\")[,|\\\\s]+(\"+o+\")\\\\s*\\\\)?\",i=\"[\\\\s|\\\\(]+(\"+o+\")[,|\\\\s]+(\"+o+\")[,|\\\\s]+(\"+o+\")[,|\\\\s]+(\"+o+\")\\\\s*\\\\)?\";return{CSS_UNIT:new RegExp(o),rgb:new RegExp(\"rgb\"+n),rgba:new RegExp(\"rgba\"+i),hsl:new RegExp(\"hsl\"+n),hsla:new RegExp(\"hsla\"+i),hsv:new RegExp(\"hsv\"+n),hsva:new RegExp(\"hsva\"+i),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();\"undefined\"!=typeof module&&module.exports?module.exports=t:\"function\"==typeof define&&define.amd?define(function(){return t}):window.tinycolor=t}(Math);\n//# sourceMappingURL=data:application/json;base64,","deps":{}},"/Users/denea/mos/src/js/ext/color.js":{"file":"/Users/denea/mos/src/js/ext/color.js","source":"(function (global){\nfunction Color(e){this.getBrightness=function(t){return e(t).getBrightness()},this.isLight=function(t){return e(t).isLight()},this.isDark=function(t){return e(t).isDark()},this.getLuminance=function(t){return e(t).getLuminance()},this.lighten=function(t,o){return e(t).lighten(o).toHexString()},this.brighten=function(t,o){return e(t).brighten(o).toHexString()},this.darken=function(t,o){return e(t).darken(o).toHexString()},this.desaturate=function(t,o){return e(t).desaturate(o).toHexString()},this.saturate=function(t,o){return e(t).saturate(o).toHexString()},this.greyscale=function(t){return e(t).greyscale().toHexString()},this.spin=function(t,o){return e(t).spin(o).toHexString()},this.complement=function(t){return e(t).complement().toHexString()},this.mix=e.mix,this.readability=e.readability,this.isReadable=e.isReadable,this.mostReadable=e.mostReadable}var tinycolor=require(\"./../../../bower_components/tinycolor/tinycolor.js\"),colorPlugin=function(){global.Color=new Color(tinycolor)};module.exports=colorPlugin;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9leHQvY29sb3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUVBLFFBQVMsT0FBTSxHQUNiLEtBQUssY0FBZ0IsU0FBUyxHQUM1QixNQUFPLEdBQVUsR0FBTyxpQkFFMUIsS0FBSyxRQUFVLFNBQVMsR0FDdEIsTUFBTyxHQUFVLEdBQU8sV0FFMUIsS0FBSyxPQUFTLFNBQVMsR0FDckIsTUFBTyxHQUFVLEdBQU8sVUFFMUIsS0FBSyxhQUFlLFNBQVMsR0FDM0IsTUFBTyxHQUFVLEdBQU8sZ0JBSTFCLEtBQUssUUFBVSxTQUFTLEVBQU8sR0FDN0IsTUFBTyxHQUFVLEdBQU8sUUFBUSxHQUFRLGVBRTFDLEtBQUssU0FBVyxTQUFTLEVBQU8sR0FDOUIsTUFBTyxHQUFVLEdBQU8sU0FBUyxHQUFRLGVBRTNDLEtBQUssT0FBUyxTQUFTLEVBQU8sR0FDNUIsTUFBTyxHQUFVLEdBQU8sT0FBTyxHQUFRLGVBRXpDLEtBQUssV0FBYSxTQUFTLEVBQU8sR0FDaEMsTUFBTyxHQUFVLEdBQU8sV0FBVyxHQUFRLGVBRTdDLEtBQUssU0FBVyxTQUFTLEVBQU8sR0FDOUIsTUFBTyxHQUFVLEdBQU8sU0FBUyxHQUFRLGVBRTNDLEtBQUssVUFBWSxTQUFTLEdBQ3hCLE1BQU8sR0FBVSxHQUFPLFlBQVksZUFFdEMsS0FBSyxLQUFPLFNBQVMsRUFBTyxHQUMxQixNQUFPLEdBQVUsR0FBTyxLQUFLLEdBQVEsZUFFdkMsS0FBSyxXQUFhLFNBQVMsR0FDekIsTUFBTyxHQUFVLEdBQU8sYUFBYSxlQUd2QyxLQUFLLElBQU0sRUFBVSxJQUNyQixLQUFLLFlBQWMsRUFBVSxZQUM3QixLQUFLLFdBQWEsRUFBVSxXQUM1QixLQUFLLGFBQWUsRUFBVSxhQTdDaEMsR0FBSSxXQUFZLFFBQVEsYUFnRHBCLFlBQWMsV0FDaEIsT0FBTyxNQUFRLEdBQUksT0FBTSxXQUczQixRQUFPLFFBQVUiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbInZhciB0aW55Y29sb3IgPSByZXF1aXJlKCd0aW55Y29sb3InKTtcblxuZnVuY3Rpb24gQ29sb3IodGlueWNvbG9yKSB7XG4gIHRoaXMuZ2V0QnJpZ2h0bmVzcyA9IGZ1bmN0aW9uKGNvbG9yKSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuZ2V0QnJpZ2h0bmVzcygpO1xuICB9O1xuICB0aGlzLmlzTGlnaHQgPSBmdW5jdGlvbihjb2xvcikge1xuICAgIHJldHVybiB0aW55Y29sb3IoY29sb3IpLmlzTGlnaHQoKTtcbiAgfTtcbiAgdGhpcy5pc0RhcmsgPSBmdW5jdGlvbihjb2xvcikge1xuICAgIHJldHVybiB0aW55Y29sb3IoY29sb3IpLmlzRGFyaygpO1xuICB9O1xuICB0aGlzLmdldEx1bWluYW5jZSA9IGZ1bmN0aW9uKGNvbG9yKSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuZ2V0THVtaW5hbmNlKCk7XG4gIH07XG5cblxuICB0aGlzLmxpZ2h0ZW4gPSBmdW5jdGlvbihjb2xvciwgYW1vdW50KSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikubGlnaHRlbihhbW91bnQpLnRvSGV4U3RyaW5nKCk7XG4gIH07XG4gIHRoaXMuYnJpZ2h0ZW4gPSBmdW5jdGlvbihjb2xvciwgYW1vdW50KSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuYnJpZ2h0ZW4oYW1vdW50KS50b0hleFN0cmluZygpO1xuICB9O1xuICB0aGlzLmRhcmtlbiA9IGZ1bmN0aW9uKGNvbG9yLCBhbW91bnQpIHtcbiAgICByZXR1cm4gdGlueWNvbG9yKGNvbG9yKS5kYXJrZW4oYW1vdW50KS50b0hleFN0cmluZygpO1xuICB9O1xuICB0aGlzLmRlc2F0dXJhdGUgPSBmdW5jdGlvbihjb2xvciwgYW1vdW50KSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuZGVzYXR1cmF0ZShhbW91bnQpLnRvSGV4U3RyaW5nKCk7XG4gIH07XG4gIHRoaXMuc2F0dXJhdGUgPSBmdW5jdGlvbihjb2xvciwgYW1vdW50KSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuc2F0dXJhdGUoYW1vdW50KS50b0hleFN0cmluZygpO1xuICB9O1xuICB0aGlzLmdyZXlzY2FsZSA9IGZ1bmN0aW9uKGNvbG9yKSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuZ3JleXNjYWxlKCkudG9IZXhTdHJpbmcoKTtcbiAgfTtcbiAgdGhpcy5zcGluID0gZnVuY3Rpb24oY29sb3IsIGFtb3VudCkge1xuICAgIHJldHVybiB0aW55Y29sb3IoY29sb3IpLnNwaW4oYW1vdW50KS50b0hleFN0cmluZygpO1xuICB9O1xuICB0aGlzLmNvbXBsZW1lbnQgPSBmdW5jdGlvbihjb2xvcikge1xuICAgIHJldHVybiB0aW55Y29sb3IoY29sb3IpLmNvbXBsZW1lbnQoKS50b0hleFN0cmluZygpO1xuICB9O1xuXG4gIHRoaXMubWl4ID0gdGlueWNvbG9yLm1peDtcbiAgdGhpcy5yZWFkYWJpbGl0eSA9IHRpbnljb2xvci5yZWFkYWJpbGl0eTtcbiAgdGhpcy5pc1JlYWRhYmxlID0gdGlueWNvbG9yLmlzUmVhZGFibGU7XG4gIHRoaXMubW9zdFJlYWRhYmxlID0gdGlueWNvbG9yLm1vc3RSZWFkYWJsZTtcbn1cblxudmFyIGNvbG9yUGx1Z2luID0gZnVuY3Rpb24odm0pIHtcbiAgZ2xvYmFsLkNvbG9yID0gbmV3IENvbG9yKHRpbnljb2xvcik7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbG9yUGx1Z2luOyJdfQ==","deps":{"./../../../bower_components/tinycolor/tinycolor.js":"/Users/denea/mos/bower_components/tinycolor/tinycolor.js"}},"/Users/denea/mos/src/js/bindings/jqueryui-spinner.js":{"file":"/Users/denea/mos/src/js/bindings/jqueryui-spinner.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),spinner=(typeof window !== \"undefined\" ? window['jQuery']['ui']['spinner'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['spinner'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");if(\"undefined\"==typeof spinner)throw\"Cannot find jquery-ui spinner widget dependency!\";$.widget(\"ui.spinner\",spinner,{_adjustValue:function(e){this._super(e);var t=this.options;return e=parseFloat(e.toFixed(this._precision())),null!==t.max&&e>t.max?t.max:null!==t.min&&e<t.min?t.min:e}});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9qcXVlcnl1aS1zcGlubmVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxZQUtBLElBQUksR0FBSSxRQUFRLFVBQ1osUUFBVSxRQUFRLHFCQUNsQixRQUFVLFFBQVEsVUFFdEIsSUFBc0IsbUJBQVgsU0FBd0IsS0FBTSxrREFFekMsR0FBRSxPQUFPLGFBQWMsU0FDckIsYUFBYyxTQUFTLEdBQ1gsS0FBSyxPQUFPLEVBRXRCLElBQUksR0FBVSxLQUFLLE9BTW5CLE9BSEEsR0FBUSxXQUFXLEVBQU0sUUFBUSxLQUFLLGVBR2xCLE9BQWhCLEVBQVEsS0FBZ0IsRUFBUSxFQUFRLElBQ25DLEVBQVEsSUFFRyxPQUFoQixFQUFRLEtBQWdCLEVBQVEsRUFBUSxJQUNuQyxFQUFRLElBR1YiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vLyBPdmVycmlkZXMgbmF0aXZlIGpRdWVyeSBzcGlubmVyIHRvIGF2b2lkIHZhbGlkYXRpb24gb2YgdGhlIFwic3RlcFwiLlxuLy8gV2Ugd2FudHMgdG8gdXNlIHRoZSBzdGVwIGJ1dCBhbHNvIHdhbnRzIHRvIGxlYXZlIHRoZSB1c2VyIHRoZSBhYmlsaXR5IHRvIHNlbGVjdCBzcGVjaWZpYyB2YWx1ZXMuXG5cbnZhciAkID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XG52YXIgc3Bpbm5lciA9IHJlcXVpcmUoXCJqcXVlcnktdWkvc3Bpbm5lclwiKTtcbnZhciBjb25zb2xlID0gcmVxdWlyZSgnY29uc29sZScpO1xuXG5pZiAodHlwZW9mIHNwaW5uZXIgPT0gJ3VuZGVmaW5lZCcpIHRocm93IFwiQ2Fubm90IGZpbmQganF1ZXJ5LXVpIHNwaW5uZXIgd2lkZ2V0IGRlcGVuZGVuY3khXCI7XG5cbiQud2lkZ2V0KFwidWkuc3Bpbm5lclwiLCBzcGlubmVyLCB7XG4gIF9hZGp1c3RWYWx1ZTogZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgYWRqID0gdGhpcy5fc3VwZXIodmFsdWUpO1xuXG4gICAgdmFyIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG5cbiAgICAvLyBmaXggcHJlY2lzaW9uIGZyb20gYmFkIEpTIGZsb2F0aW5nIHBvaW50IG1hdGhcbiAgICB2YWx1ZSA9IHBhcnNlRmxvYXQodmFsdWUudG9GaXhlZCh0aGlzLl9wcmVjaXNpb24oKSkpO1xuXG4gICAgLy8gY2xhbXAgdGhlIHZhbHVlXG4gICAgaWYgKG9wdGlvbnMubWF4ICE9PSBudWxsICYmIHZhbHVlID4gb3B0aW9ucy5tYXgpIHtcbiAgICAgIHJldHVybiBvcHRpb25zLm1heDtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMubWluICE9PSBudWxsICYmIHZhbHVlIDwgb3B0aW9ucy5taW4pIHtcbiAgICAgIHJldHVybiBvcHRpb25zLm1pbjtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbn0pO1xuIl19","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/blocks.js":{"file":"/Users/denea/mos/src/js/bindings/blocks.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.withProperties={init:function(e,t,o,a,i){var n=i.createChildContext(i.$rawData,null,function(e){ko.utils.extend(e,t())});return ko.applyBindingsToDescendants(n,e),{controlsDescendantBindings:!0}}},ko.virtualElements.allowedBindings.withProperties=!0,ko.bindingHandlers.log={init:function(e,t){console.log(\"log\",t())}},ko.bindingHandlers.block={templateExists:function(e){var t=global.document.getElementById(e);return t?!0:!1},_chooseTemplate:function(e,t,o,a){var i=t+\"-\"+o;if(ko.bindingHandlers.block.templateExists(i))return i;if(\"undefined\"!=typeof a&&null!==a)return ko.bindingHandlers.block._chooseTemplate(e,t,a);var n=e?\"array\":\"object-\"+o;if(ko.bindingHandlers.block.templateExists(n))return n;throw\"cannot find template for \"+i+\"/\"+n},_displayMode:function(e,t){var o=\"undefined\"!=typeof e.type?ko.utils.unwrapObservable(e.type):\"notablock-\"+typeof e,a=\"undefined\"!=typeof e.splice,i=t.templateMode?t.templateMode:\"show\";return ko.bindingHandlers.block._chooseTemplate(a,o,i,t.templateModeFallback)},_makeTemplateValueAccessor:function(e,t){return function(){var o,a,i=e(),n=ko.utils.peekObservable(i);if(!n||\"object\"!=typeof n.data&&\"function\"!=typeof n.data)o=i;else if(o=n.data,\"undefined\"!=typeof n.template){var l=ko.utils.unwrapObservable(n.template),r=t.templateMode?t.templateMode:\"show\";a=ko.bindingHandlers.block._chooseTemplate(!1,l,r,t.templateModeFallback)}var d=ko.utils.unwrapObservable(o);if(ko.isObservable(d)&&console.log(\"doubleObservable\",d),\"undefined\"==typeof a)if(void 0===o)a=\"empty\";else try{a=ko.bindingHandlers.block._displayMode(d,t)}catch(s){throw console.log(s,d,t.$data,t.templateMode),s}return{name:a,data:o,templateEngine:ko.nativeTemplateEngine.instance}}},init:function(e,t,o,a,i){\"undefined\"==typeof t()&&console.log(\"found a null block: check ending commas in arrays defs in IE\");var n=ko.bindingHandlers.block._makeTemplateValueAccessor(t,i);return ko.bindingHandlers.template.init(e,n)},update:function(e,t,o,a,i){var n=ko.bindingHandlers.block._makeTemplateValueAccessor(t,i);return ko.bindingHandlers.template.update(e,n,o,a,i)}},ko.expressionRewriting.bindingRewriteValidators.block=!1,ko.virtualElements.allowedBindings.block=!0;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/jqueryui-tabs.js":{"file":"/Users/denea/mos/src/js/bindings/jqueryui-tabs.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),tabs=(typeof window !== \"undefined\" ? window['jQuery']['ui']['tabs'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['tabs'] : null);if(\"undefined\"==typeof tabs)throw\"Cannot find jquery-ui tabs widget dependency!\";$.widget(\"ui.tabs\",tabs,{_isLocal:function(e){return\"true\"==e.getAttribute(\"data-local\")?!0:this._superApply(arguments)}});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9qcXVlcnl1aS10YWJzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxZQUtBLElBQUksR0FBSSxRQUFRLFVBQ1osUUFBVSxRQUFRLFdBQ2xCLEtBQU8sUUFBUSxpQkFFbkIsSUFBbUIsbUJBQVIsTUFBcUIsS0FBTSwrQ0FFdEMsR0FBRSxPQUFPLFVBQVcsTUFDbEIsU0FBVSxTQUFVLEdBQ2xCLE1BQXlDLFFBQXJDLEVBQU8sYUFBYSxlQUFnQyxFQUM1QyxLQUFLLFlBQWEiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vLyBPdmVycmlkZXMgbmF0aXZlIGpRdWVyeSB0YWJzIHRvIG1ha2UgdGFicyB3b3JraW5nIGFsc28gd2hlbiB1c2luZyBhIGJhc2UgdGFnXG4vLyBpbiBvcmRlciB0byBhdm9pZCBjb25mbGljdHMgeW91IGhhdmUgdG8gYWRkIGEgZGF0YS1sb2NhbD1cInRydWVcIiBhdHRyaWJ1dGUgdG8geW91ciB0YWIgbGlua3MuXG5cbnZhciAkID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XG52YXIgY29uc29sZSA9IHJlcXVpcmUoJ2NvbnNvbGUnKTtcbnZhciB0YWJzID0gcmVxdWlyZShcImpxdWVyeS11aS90YWJzXCIpO1xuXG5pZiAodHlwZW9mIHRhYnMgPT0gJ3VuZGVmaW5lZCcpIHRocm93IFwiQ2Fubm90IGZpbmQganF1ZXJ5LXVpIHRhYnMgd2lkZ2V0IGRlcGVuZGVuY3khXCI7XG5cbiQud2lkZ2V0KFwidWkudGFic1wiLCB0YWJzLCB7XG4gIF9pc0xvY2FsOiBmdW5jdGlvbiggYW5jaG9yICkge1xuICAgIGlmIChhbmNob3IuZ2V0QXR0cmlidXRlKCdkYXRhLWxvY2FsJykgPT0gXCJ0cnVlXCIpIHJldHVybiB0cnVlO1xuICAgIGVsc2UgcmV0dXJuIHRoaXMuX3N1cGVyQXBwbHkoIGFyZ3VtZW50cyApO1xuICB9XG59KTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/bind-iframe.js":{"file":"/Users/denea/mos/src/js/bindings/bind-iframe.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),addScriptTemplate=function(e,t,o){var a=e.createElement(\"script\");return a.setAttribute(\"type\",\"text/html\"),a.setAttribute(\"id\",t),a.text=o,e.body.appendChild(a),a};ko.bindingHandlers.bindIframe={tpl:'<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n</head>\\r\\n<body><div data-bind=\"block: content\"></div></body>\\r\\n</html>\\r\\n',init:function(e,t){function o(o){try{var a=e.contentDocument;a.open(),a.write(ko.bindingHandlers.bindIframe.tpl),a.close();try{var i=a.body;if(i){for(var n=e.contentWindow.parent.document.getElementsByTagName(\"script\"),l=0;l<n.length;l++)\"text/html\"==n[l].getAttribute(\"type\")&&n[l].getAttribute(\"id\")&&addScriptTemplate(a,n[l].getAttribute(\"id\"),n[l].innerHTML);var r=a.getElementsByTagName(\"HTML\");ko.utils.domNodeDisposal.addDisposeCallback(e,function(){ko.cleanNode(r[0]||i)}),ko.applyBindings(t(),r[0]||i)}else console.log(\"no iframedoc\",o)}catch(d){throw console.log(\"error reading iframe.body\",d,o),d}}catch(d){throw console.log(\"error reading iframe contentDocument\",d,o),d}}o(\"first call\")}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9iaW5kLWlmcmFtZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFFQSxJQUFJLElBQUssUUFBUSxZQUNiLFFBQVUsUUFBUSxXQUdsQixrQkFBb0IsU0FBUyxFQUFLLEVBQWMsR0FDbEQsR0FBSSxHQUFZLEVBQUksY0FBYyxTQUtsQyxPQUpBLEdBQVUsYUFBYSxPQUFRLGFBQy9CLEVBQVUsYUFBYSxLQUFNLEdBQzdCLEVBQVUsS0FBTyxFQUNqQixFQUFJLEtBQUssWUFBWSxHQUNkLEVBS1QsSUFBRyxnQkFBZ0IsWUFFakIsSUFBSyx1SEFDTCxLQUFNLFNBQVMsRUFBUyxHQUN0QixRQUFTLEdBQVcsR0FDbEIsSUFDRSxHQUFJLEdBQVMsRUFBUSxlQUNyQixHQUFPLE9BQ1AsRUFBTyxNQUFNLEdBQUcsZ0JBQWdCLFdBQVcsS0FDM0MsRUFBTyxPQUVQLEtBQ0UsR0FBSSxHQUFZLEVBQU8sSUFDdkIsSUFBSSxFQUFXLENBR2IsSUFBSyxHQURELEdBQVksRUFBUSxjQUFjLE9BQU8sU0FBUyxxQkFBcUIsVUFDbEUsRUFBSSxFQUFHLEVBQUksRUFBVSxPQUFRLElBQ0ssYUFBckMsRUFBVSxHQUFHLGFBQWEsU0FBMEIsRUFBVSxHQUFHLGFBQWEsT0FDaEYsa0JBQWtCLEVBQVEsRUFBVSxHQUFHLGFBQWEsTUFBTyxFQUFVLEdBQUcsVUFJNUUsSUFBSSxHQUFPLEVBQU8scUJBQXFCLE9BRXZDLElBQUcsTUFBTSxnQkFBZ0IsbUJBQW1CLEVBQVMsV0FDbkQsR0FBRyxVQUFVLEVBQUssSUFBTSxLQUcxQixHQUFHLGNBQWMsSUFBaUIsRUFBSyxJQUFNLE9BRTdDLFNBQVEsSUFBSSxlQUFnQixHQUU5QixNQUFPLEdBRVAsS0FEQSxTQUFRLElBQUksNEJBQTZCLEVBQUcsR0FDdEMsR0FFUixNQUFPLEdBRVAsS0FEQSxTQUFRLElBQUksdUNBQXdDLEVBQUcsR0FDakQsR0FJVixFQUFXIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGtvID0gcmVxdWlyZShcImtub2Nrb3V0XCIpO1xudmFyIGNvbnNvbGUgPSByZXF1aXJlKFwiY29uc29sZVwiKTtcblxuLy8gQHNlZSBhbHNvIHNjcmlwdC10ZW1wbGF0ZS5qcyBwdXNoVGVtcGxhdGVcbnZhciBhZGRTY3JpcHRUZW1wbGF0ZSA9IGZ1bmN0aW9uKGRvYywgdGVtcGxhdGVOYW1lLCB0ZW1wbGF0ZU1hcmt1cCkge1xuICB2YXIgc2NyaXB0VGFnID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICBzY3JpcHRUYWcuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQvaHRtbCcpO1xuICBzY3JpcHRUYWcuc2V0QXR0cmlidXRlKCdpZCcsIHRlbXBsYXRlTmFtZSk7XG4gIHNjcmlwdFRhZy50ZXh0ID0gdGVtcGxhdGVNYXJrdXA7XG4gIGRvYy5ib2R5LmFwcGVuZENoaWxkKHNjcmlwdFRhZyk7XG4gIHJldHVybiBzY3JpcHRUYWc7XG4gIC8vICQoJzxzY3JpcHQgdHlwZT1cInRleHQvaHRtbFwiPjwvc2MnICsgJ3JpcHQ+JykudGV4dCh0ZW1wbGF0ZU1hcmt1cCkuYXR0cignaWQnLCB0ZW1wbGF0ZU5hbWUpLmFwcGVuZFRvKCQoJ2JvZHknKSk7XG59O1xuXG4vLyB1c2VkIGZvciBsaXZlIHByZXZpZXcgaW4gaWZyYW1lLlxua28uYmluZGluZ0hhbmRsZXJzLmJpbmRJZnJhbWUgPSB7XG4gIC8vIHRwbCB3aWxsIGJlIG92ZXJyaWRlbiB3aXRoIHRoZSBzdHJ1Y3R1cmUgcGFyc2VkIGJ5IHRoZSBpbnB1dCB0ZW1wbGF0ZS5cbiAgdHBsOiBcIjwhRE9DVFlQRSBodG1sPlxcclxcbjxodG1sPlxcclxcbjxoZWFkPlxcclxcbjwvaGVhZD5cXHJcXG48Ym9keT48ZGl2IGRhdGEtYmluZD1cXFwiYmxvY2s6IGNvbnRlbnRcXFwiPjwvZGl2PjwvYm9keT5cXHJcXG48L2h0bWw+XFxyXFxuXCIsXG4gIGluaXQ6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlQWNjZXNzb3IpIHtcbiAgICBmdW5jdGlvbiBiaW5kSWZyYW1lKGxvY2FsKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgaWZyYW1lID0gZWxlbWVudC5jb250ZW50RG9jdW1lbnQ7XG4gICAgICAgIGlmcmFtZS5vcGVuKCk7XG4gICAgICAgIGlmcmFtZS53cml0ZShrby5iaW5kaW5nSGFuZGxlcnMuYmluZElmcmFtZS50cGwpO1xuICAgICAgICBpZnJhbWUuY2xvc2UoKTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIHZhciBpZnJhbWVkb2MgPSBpZnJhbWUuYm9keTtcbiAgICAgICAgICBpZiAoaWZyYW1lZG9jKSB7XG4gICAgICAgICAgICAvLyBzY3JpcHRzIGhhdmUgdG8gYmUgZHVwbGljYXRlZCAobWF5YmUgdGhpcyBpcyBub3QgbmVlZGVkIGFueW1vcmUgc2luY2UgdXNpbmcgc3RyaW5nLXRlbXBsYXRlcylcbiAgICAgICAgICAgIHZhciB0ZW1wbGF0ZXMgPSBlbGVtZW50LmNvbnRlbnRXaW5kb3cucGFyZW50LmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGVtcGxhdGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGlmICh0ZW1wbGF0ZXNbaV0uZ2V0QXR0cmlidXRlKCd0eXBlJykgPT0gJ3RleHQvaHRtbCcgJiYgdGVtcGxhdGVzW2ldLmdldEF0dHJpYnV0ZSgnaWQnKSkge1xuICAgICAgICAgICAgICAgIGFkZFNjcmlwdFRlbXBsYXRlKGlmcmFtZSwgdGVtcGxhdGVzW2ldLmdldEF0dHJpYnV0ZSgnaWQnKSwgdGVtcGxhdGVzW2ldLmlubmVySFRNTCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGh0bWwgPSBpZnJhbWUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJIVE1MXCIpO1xuXG4gICAgICAgICAgICBrby51dGlscy5kb21Ob2RlRGlzcG9zYWwuYWRkRGlzcG9zZUNhbGxiYWNrKGVsZW1lbnQsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICBrby5jbGVhbk5vZGUoaHRtbFswXSB8fCBpZnJhbWVkb2MpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGtvLmFwcGx5QmluZGluZ3ModmFsdWVBY2Nlc3NvcigpLCBodG1sWzBdIHx8IGlmcmFtZWRvYyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwibm8gaWZyYW1lZG9jXCIsIGxvY2FsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImVycm9yIHJlYWRpbmcgaWZyYW1lLmJvZHlcIiwgZSwgbG9jYWwpO1xuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJlcnJvciByZWFkaW5nIGlmcmFtZSBjb250ZW50RG9jdW1lbnRcIiwgZSwgbG9jYWwpO1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgICAvLyBpZ25vcmVkXG4gICAgICB9XG4gICAgfVxuICAgIGJpbmRJZnJhbWUoXCJmaXJzdCBjYWxsXCIpO1xuICAgIC8vIG9sZGVyIGJyb3dzZXJzIG5lZWRlZCB0aGlzXG4gICAgLy8ga28udXRpbHMucmVnaXN0ZXJFdmVudEhhbmRsZXIoZWxlbWVudCwgJ2xvYWQnLCBiaW5kSWZyYW1lKTtcbiAgfVxufTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/fileupload.js":{"file":"/Users/denea/mos/src/js/bindings/fileupload.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.preloader={init:function(e,t){var o=t();if(\"undefined\"==typeof o.preloaded){o.preloaded=ko.observable(\"\");var a=function(e){if(e!=o.preloaded())if(\"\"!==e){var t=new Image;t.onload=function(){o.preloaded(e)},t.onerror=function(){o.preloaded(e)},t.src=e}else o.preloaded(e)};o.subscribe(a),a(o())}}},ko.bindingHandlers.advattr={init:function(e,t){var o=ko.utils.unwrapObservable(t()||{});ko.utils.objectForEach(o,function(t,o){var a=e.getAttribute(t);if(ko.isWriteableObservable(o)){var i=o();i!=a&&(o(a),null!==i&&console.log(\"AdvAttr found a value different from the default\",t,i,a))}})},update:function(e,t){var o=ko.utils.unwrapObservable(t())||{};ko.utils.objectForEach(o,function(t,o){o=ko.utils.unwrapObservable(o);var a=o===!1||null===o||void 0===o;a?e.removeAttribute(t):e.setAttribute(t,o.toString())})}},ko.bindingHandlers.advstyle={init:function(e,t){var o=ko.utils.unwrapObservable(t()||{});ko.utils.objectForEach(o,function(t,o){var a;if(t.match(/Px$/)?(t=t.substr(0,t.length-2),a=e.style[t],a.match(/px$/)?a=a.replace(/px$/,\"\"):console.log(\"AdvStyle binding found an unexpected default value\",t,a,e)):a=e.style[t],ko.isWriteableObservable(o)){var i=o();i!=a&&(o(a),null!==i&&console.log(\"AdvStyle found a value different from the default\",t,i,a))}})},update:function(e,t){var o=ko.utils.unwrapObservable(t()||{});ko.utils.objectForEach(o,function(t,o){o=ko.utils.unwrapObservable(o),(null===o||\"undefined\"==typeof o||o===!1)&&(o=\"\"),t.match(/Px$/)&&(t=t.substr(0,t.length-2),o+=\"px\"),e.style[t]=o})}},ko.bindingHandlers.domlog={init:function(e){console.log(\"initialized\",e),ko.utils.domNodeDisposal.addDisposeCallback(e,function(){console.log(\"disposed\",e)})}},ko.bindingHandlers.fudroppable={init:function(e,t){var o=t()||{},a={},i=function(e,t,o,a,i,n){e[t]?global.clearTimeout(e[t]):(\"undefined\"!=typeof a&&o.classList.add(a),ko.isWriteableObservable(i)&&!i()&&i(!0));var l=function(){e[t]=null,\"undefined\"!=typeof a&&o.classList.remove(a),ko.isWriteableObservable(i)&&i()&&i(!1)};\"dragleave\"==n.type?l():e[t]=global.setTimeout(l,500)};(o.active||o.activeClass)&&ko.utils.registerEventHandler(global,\"dragover\",i.bind(void 0,a,\"activeTimeout\",e,o.activeClass,o.active)),o.hoverClass&&ko.utils.registerEventHandler(e,\"dragover dragenter dragleave\",i.bind(void 0,a,\"hoverTimeout\",e,o.hoverClass,void 0))}},ko.bindingHandlers.fileupload={extendOptions:{},remoteFilePreprocessor:function(e){return e},init:function(e){ko.utils.domNodeDisposal.addDisposeCallback(e,function(){$(e).fileupload(\"destroy\")}),global.webkitURL?$(e).attr(\"title\",\" \"):$(e).attr(\"title\",\"\")},update:function(e,t){var o=t()||{},a=$(e),i=a.parents(\".uploadzone\"),n=o.data;o.data=void 0;var l=o.canvasPreview;ko.utils.extend(o,{url:\"/upload/\",dataType:\"json\",dropZone:i.find(\".mo-uploadzone\")[0],autoUpload:!0,acceptFileTypes:/(\\.|\\/)(gif|jpe?g|png)$/i,maxFileSize:1048576,disableImageResize:/Android(?!.*Chrome)|Opera/.test(global.navigator.userAgent),previewMaxWidth:200,previewMaxHeight:200,previewCrop:!1,replaceFileInput:!1,messages:{unknownError:\"Unknown error\",uploadedBytes:\"Uploaded bytes exceed file size\",maxNumberOfFiles:\"Maximum number of files exceeded\",acceptFileTypes:\"File type not allowed\",maxFileSize:\"File is too large\",minFileSize:\"File is too small\",post_max_size:\"The uploaded file exceeds the post_max_size directive in php.ini\",max_file_size:\"File is too big\",min_file_size:\"File is too small\",accept_file_types:\"Filetype not allowed\",max_number_of_files:\"Maximum number of files exceeded\",max_width:\"Image exceeds maximum width\",min_width:\"Image requires a minimum width\",max_height:\"Image exceeds maximum height\",min_height:\"Image requires a minimum height\",abort:\"File upload aborted\",image_resize:\"Failed to resize image\",generic:\"Unexpected upload error\"}}),ko.utils.extend(o,ko.bindingHandlers.fileupload.extendOptions);var r=0,d=\"\",s=function(){0===--r&&(n&&n(d),d=\"\",l&&(i.find(\"img\").show(),i.find(\"canvas\").remove()),i.removeClass(\"uploading\"),i.find(\".progress-bar\").css(\"width\",0))},c=function(e){if(\"object\"==typeof o.messages&&null!==o.messages){var t=e.match(/^([^ ]+)(.*)$/);if(t&&\"undefined\"!=typeof o.messages[t[1]])return o.messages[t[1]]+t[2]}return e};a.fileupload(o);for(var u=[\"fileuploadadd\",\"fileuploadprocessalways\",\"fileuploadprogressall\",\"fileuploaddone\",\"fileuploadfail\"],p=function(e,t){if(\"fileuploadadd\"==e.type&&r++,\"fileuploadfail\"==e.type&&(console.log(\"fileuploadfail\",e,t),o.onerror&&(\"\"===t.errorThrown&&\"error\"==t.textStatus?o.onerror(c(\"generic\")):o.onerror(c(\"generic (\"+t.errorThrown+\")\"))),s()),\"fileuploaddone\"==e.type)if(\"undefined\"!=typeof t.result.files[0].url){if(o.onfile)for(var a=0;a<t.result.files.length;a++)t.result.files[a]=ko.bindingHandlers.fileupload.remoteFilePreprocessor(t.result.files[a]),o.onfile(t.result.files[a]);if(\"\"===d&&(d=t.result.files[0].url),l){var n=new Image;n.onload=s,n.onerror=s,n.src=t.result.files[0].url}else s()}else\"undefined\"!=typeof t.result.files[0].error?(console.log(\"remote error\",e,t),o.onerror&&o.onerror(c(t.result.files[0].error)),s()):(console.log(\"unexpected error\",e,t),o.onerror&&o.onerror(c(\"generic (Unexpected Error retrieving uploaded file)\")),s());if(\"fileuploadprocessalways\"==e.type){var u=t.index,p=t.files[u];if(p.preview&&0===u&&0===i.find(\"canvas\").length){if(l){var b=$(p.preview).css(\"width\",\"100%\");i.find(\"img\").hide(),i.prepend(b)}i.addClass(\"uploading\"),i.find(\".progress-bar\").css(\"width\",0)}p.error&&(o.onerror&&o.onerror(c(p.error)),s())}if(\"fileuploadprogressall\"==e.type){var f=parseInt(100*(t.loaded/t.total),10);i.find(\".progress-bar\").css(\"width\",f+\"%\")}},b=u.length-1;b>=0;b--){var f=u[b];a.on(f,p)}$.support.fileInput||a.prop(\"disabled\",!0).parent().addClass(\"disabled\")}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/scrollfix.js":{"file":"/Users/denea/mos/src/js/bindings/scrollfix.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),$=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),tinymce=(typeof window !== \"undefined\" ? window['tinymce'] : typeof global !== \"undefined\" ? global['tinymce'] : null),timeout,render=function(){timeout=void 0,\"undefined\"!=typeof tinymce.activeEditor&&null!==tinymce.activeEditor&&\"undefined\"!=typeof tinymce.activeEditor.theme&&null!==tinymce.activeEditor.theme&&\"undefined\"!=typeof tinymce.activeEditor.theme.panel&&null!==tinymce.activeEditor.theme.panel&&\"undefined\"!=typeof tinymce.activeEditor.theme.panel.visible&&((\"undefined\"!=typeof tinymce.activeEditor.theme.panel._visible&&tinymce.activeEditor.theme.panel._visible&&tinymce.activeEditor.theme.panel._fixed||\"undefined\"!=typeof tinymce.activeEditor.theme.panel.state&&tinymce.activeEditor.theme.panel.state.get(\"visible\")&&tinymce.activeEditor.theme.panel.state.get(\"fixed\"))&&tinymce.activeEditor.theme.panel.fixed(!1),tinymce.activeEditor.nodeChanged(),tinymce.activeEditor.theme.panel.visible(!0),tinymce.activeEditor.theme.panel.layoutRect().y<=40&&tinymce.activeEditor.theme.panel.moveBy(0,40-tinymce.activeEditor.theme.panel.layoutRect().y))};ko.bindingHandlers.wysiwygScrollfix={scroll:function(){timeout&&global.clearTimeout(timeout),timeout=global.setTimeout(render,50)},init:function(e){ko.utils.domNodeDisposal.addDisposeCallback(e,function(){$(e).off(\"scroll\",ko.bindingHandlers.wysiwygScrollfix.scroll)}),$(e).on(\"scroll\",ko.bindingHandlers.wysiwygScrollfix.scroll)}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9zY3JvbGxmaXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBR0EsSUFBSSxJQUFLLFFBQVEsWUFDYixFQUFJLFFBQVEsVUFDWixRQUFVLFFBQVEsV0FDbEIsUUFBVSxRQUFRLFdBRWxCLFFBRUEsT0FBUyxXQUVYLFFBQVUsT0FFMEIsbUJBQXpCLFNBQVEsY0FBeUQsT0FBekIsUUFBUSxjQUNqQixtQkFBL0IsU0FBUSxhQUFhLE9BQXdELE9BQS9CLFFBQVEsYUFBYSxPQUM5QixtQkFBckMsU0FBUSxhQUFhLE1BQU0sT0FBOEQsT0FBckMsUUFBUSxhQUFhLE1BQU0sT0FDbEMsbUJBQTdDLFNBQVEsYUFBYSxNQUFNLE1BQU0sV0FJZ0IsbUJBQTlDLFNBQVEsYUFBYSxNQUFNLE1BQU0sVUFBNEIsUUFBUSxhQUFhLE1BQU0sTUFBTSxVQUFZLFFBQVEsYUFBYSxNQUFNLE1BQU0sUUFDaEcsbUJBQTNDLFNBQVEsYUFBYSxNQUFNLE1BQU0sT0FBeUIsUUFBUSxhQUFhLE1BQU0sTUFBTSxNQUFNLElBQUksWUFBYyxRQUFRLGFBQWEsTUFBTSxNQUFNLE1BQU0sSUFBSSxXQUN4SyxRQUFRLGFBQWEsTUFBTSxNQUFNLE9BQU0sR0FHekMsUUFBUSxhQUFhLGNBQ3JCLFFBQVEsYUFBYSxNQUFNLE1BQU0sU0FBUSxHQUNyQyxRQUFRLGFBQWEsTUFBTSxNQUFNLGFBQWEsR0FBSyxJQUNyRCxRQUFRLGFBQWEsTUFBTSxNQUFNLE9BQU8sRUFBRyxHQUFLLFFBQVEsYUFBYSxNQUFNLE1BQU0sYUFBYSxJQUtwRyxJQUFHLGdCQUFnQixrQkFDakIsT0FBVSxXQUNKLFNBQVMsT0FBTyxhQUFhLFNBQ2pDLFFBQVUsT0FBTyxXQUFXLE9BQVEsS0FFdEMsS0FBUSxTQUFTLEdBQ2YsR0FBRyxNQUFNLGdCQUFnQixtQkFBbUIsRUFBUyxXQUNuRCxFQUFFLEdBQVMsSUFBSSxTQUFVLEdBQUcsZ0JBQWdCLGlCQUFpQixVQUcvRCxFQUFFLEdBQVMsR0FBRyxTQUFVLEdBQUcsZ0JBQWdCLGlCQUFpQiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiBnbG9iYWwgZ2xvYmFsOiBmYWxzZSAqL1xuXG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG52YXIgJCA9IHJlcXVpcmUoXCJqcXVlcnlcIik7XG52YXIgY29uc29sZSA9IHJlcXVpcmUoXCJjb25zb2xlXCIpO1xudmFyIHRpbnltY2UgPSByZXF1aXJlKFwidGlueW1jZVwiKTtcblxudmFyIHRpbWVvdXQ7XG5cbnZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcblxuICB0aW1lb3V0ID0gdW5kZWZpbmVkO1xuXG4gIGlmICh0eXBlb2YgdGlueW1jZS5hY3RpdmVFZGl0b3IgIT09ICd1bmRlZmluZWQnICYmIHRpbnltY2UuYWN0aXZlRWRpdG9yICE9PSBudWxsICYmXG4gICAgICB0eXBlb2YgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUgIT09ICd1bmRlZmluZWQnICYmIHRpbnltY2UuYWN0aXZlRWRpdG9yLnRoZW1lICE9PSBudWxsICYmIFxuICAgICAgdHlwZW9mIHRpbnltY2UuYWN0aXZlRWRpdG9yLnRoZW1lLnBhbmVsICE9PSAndW5kZWZpbmVkJyAmJiB0aW55bWNlLmFjdGl2ZUVkaXRvci50aGVtZS5wYW5lbCAhPT0gbnVsbCAmJlxuICAgICAgdHlwZW9mIHRpbnltY2UuYWN0aXZlRWRpdG9yLnRoZW1lLnBhbmVsLnZpc2libGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgLy8gQHNlZSBGbG9hdFBhbmVsLmpzIGZ1bmN0aW9uIHJlcG9zaXRpb25QYW5lbChwYW5lbClcbiAgICAvLyBGaXJzdCBjb25kaXRpb24gZ3JvdXAgaXMgZm9yIFRpbnltY2UgNC4wLzQuMVxuICAgIC8vIFNlY29uZCBjb25kaXRpb24gZ3JvdXAgaXMgZm9yIFRpbnltY2UgNC4yLzQuMyB3aGVyZSBcIi5fcHJvcGVydHlcIiBhcmUgbm93IGF2YWlsYWJsZSBhcyBcIi5zdGF0ZS5nZXQoJ3Byb3BlcnR5JylcIi5cbiAgICBpZiAoKHR5cGVvZiB0aW55bWNlLmFjdGl2ZUVkaXRvci50aGVtZS5wYW5lbC5fdmlzaWJsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwuX3Zpc2libGUgJiYgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwuX2ZpeGVkKSB8fCBcbiAgICAgICAgKHR5cGVvZiB0aW55bWNlLmFjdGl2ZUVkaXRvci50aGVtZS5wYW5lbC5zdGF0ZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwuc3RhdGUuZ2V0KCd2aXNpYmxlJykgJiYgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwuc3RhdGUuZ2V0KCdmaXhlZCcpKSkge1xuICAgICAgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwuZml4ZWQoZmFsc2UpO1xuICAgIH1cblxuICAgIHRpbnltY2UuYWN0aXZlRWRpdG9yLm5vZGVDaGFuZ2VkKCk7XG4gICAgdGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwudmlzaWJsZSh0cnVlKTtcbiAgICBpZiAodGlueW1jZS5hY3RpdmVFZGl0b3IudGhlbWUucGFuZWwubGF5b3V0UmVjdCgpLnkgPD0gNDApXG4gICAgICB0aW55bWNlLmFjdGl2ZUVkaXRvci50aGVtZS5wYW5lbC5tb3ZlQnkoMCwgNDAgLSB0aW55bWNlLmFjdGl2ZUVkaXRvci50aGVtZS5wYW5lbC5sYXlvdXRSZWN0KCkueSk7XG5cbiAgfVxufTtcblxua28uYmluZGluZ0hhbmRsZXJzLnd5c2l3eWdTY3JvbGxmaXggPSB7XG4gICdzY3JvbGwnOiBmdW5jdGlvbihldmVudCkge1xuICAgIGlmICh0aW1lb3V0KSBnbG9iYWwuY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgIHRpbWVvdXQgPSBnbG9iYWwuc2V0VGltZW91dChyZW5kZXIsIDUwKTtcbiAgfSxcbiAgJ2luaXQnOiBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAga28udXRpbHMuZG9tTm9kZURpc3Bvc2FsLmFkZERpc3Bvc2VDYWxsYmFjayhlbGVtZW50LCBmdW5jdGlvbigpIHtcbiAgICAgICQoZWxlbWVudCkub2ZmKFwic2Nyb2xsXCIsIGtvLmJpbmRpbmdIYW5kbGVycy53eXNpd3lnU2Nyb2xsZml4LnNjcm9sbCk7XG4gICAgfSk7XG5cbiAgICAkKGVsZW1lbnQpLm9uKFwic2Nyb2xsXCIsIGtvLmJpbmRpbmdIYW5kbGVycy53eXNpd3lnU2Nyb2xsZml4LnNjcm9sbCk7XG5cbiAgfVxufTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/virtuals.js":{"file":"/Users/denea/mos/src/js/bindings/virtuals.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.uniqueId={currentIndex:0,init:function(e,t){var o=ko.utils.unwrapObservable(t())||{};if(\"\"===o.id()){var a,i,n;n=\"ko_\"+(\"undefined\"!=typeof o.type?ko.utils.unwrapObservable(o.type):\"block\");do a=n+\"_\"+ ++ko.bindingHandlers.uniqueId.currentIndex,i=global.document.getElementById(a);while(i);o.id(a)}}},ko.virtualElements.allowedBindings.uniqueId=!0,ko.bindingHandlers.virtualAttr={update:function(e,t){8!==e.nodeType&&ko.bindingHandlers.attr.update(e,t)}},ko.virtualElements.allowedBindings.virtualAttr=!0,ko.bindingHandlers.virtualAttrStyle={update:function(e,t,o,a,i){if(8!==e.nodeType){var n=\"undefined\"==typeof i.templateMode||\"wysiwyg\"!=i.templateMode,l=[\"style\"];n&&l.push(\"replacedstyle\");for(var r=ko.utils.unwrapObservable(t()),d=0;d<l.length;d++){var s=l[d],c=r===!1||null===r||void 0===r;c?e.removeAttribute(s):e.setAttribute(s,r.toString())}}}},ko.virtualElements.allowedBindings.virtualAttrStyle=!0,ko.bindingHandlers.virtualStyle={update:function(e,t){8!==e.nodeType&&ko.bindingHandlers.style.update(e,t)}},ko.virtualElements.allowedBindings.virtualStyle=!0,ko.bindingHandlers.virtualHtml={init:ko.bindingHandlers.html.init,update:function(e,t){if(8===e.nodeType){var o=ko.utils.unwrapObservable(t());if(ko.virtualElements.emptyNode(e),null!==o&&void 0!==o){\"string\"!=typeof o&&(o=o.toString());var a=ko.utils.parseHtmlFragment(o);if(a)for(var i=e.nextSibling,n=0,l=a.length;l>n;n++)i.parentNode.insertBefore(a[n],i)}}else ko.bindingHandlers.html.update(e,t);return{controlsDescendantBindings:!0}}},ko.virtualElements.allowedBindings.virtualHtml=!0;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy92aXJ0dWFscy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFHQSxJQUFJLElBQUssUUFBUSxZQUNiLFFBQVUsUUFBUSxVQUV0QixJQUFHLGdCQUEwQixVQUMzQixhQUFjLEVBQ2QsS0FBUSxTQUFTLEVBQVMsR0FDeEIsR0FBSSxHQUFPLEdBQUcsTUFBTSxpQkFBaUIsUUFDckMsSUFBa0IsS0FBZCxFQUFLLEtBQWEsQ0FDcEIsR0FBSSxHQUFJLEVBQUksQ0FFWixHQUFTLE9BQThCLG1CQUFkLEdBQUssS0FBdUIsR0FBRyxNQUFNLGlCQUFpQixFQUFLLE1BQVEsUUFFNUYsR0FDRSxHQUFLLEVBQVMsT0FBUyxHQUFHLGdCQUEwQixTQUFFLGFBQ3RELEVBQUssT0FBTyxTQUFTLGVBQWUsU0FRN0IsRUFDVCxHQUFLLEdBQUcsTUFJZCxHQUFHLGdCQUFnQixnQkFBMEIsVUFBSSxFQUVqRCxHQUFHLGdCQUE2QixhQUM5QixPQUFRLFNBQVMsRUFBUyxHQUNDLElBQXJCLEVBQVEsVUFDVixHQUFHLGdCQUFzQixLQUFFLE9BQU8sRUFBUyxLQUlqRCxHQUFHLGdCQUFnQixnQkFBNkIsYUFBSSxFQUVwRCxHQUFHLGdCQUFrQyxrQkFDbkMsT0FBUSxTQUFTLEVBQVMsRUFBZSxFQUFxQixFQUFXLEdBQ3ZFLEdBQXlCLElBQXJCLEVBQVEsU0FBZ0IsQ0FFMUIsR0FBSSxHQUEwRCxtQkFBL0IsR0FBZSxjQUE4RCxXQUEvQixFQUFlLGFBQ3hGLEdBQVMsUUFDVCxJQUFrQixFQUFNLEtBQUssZ0JBRWpDLEtBQUssR0FERCxHQUFZLEdBQUcsTUFBTSxpQkFBaUIsS0FDakMsRUFBSSxFQUFHLEVBQUksRUFBTSxPQUFRLElBQUssQ0FDckMsR0FBSSxHQUFXLEVBQU0sR0FDakIsRUFBWSxLQUFjLEdBQXlCLE9BQWQsR0FBc0MsU0FBZCxDQUM3RCxHQUNGLEVBQVEsZ0JBQWdCLEdBRXhCLEVBQVEsYUFBYSxFQUFVLEVBQVUsZ0JBS25ELEdBQUcsZ0JBQWdCLGdCQUFrQyxrQkFBSSxFQUV6RCxHQUFHLGdCQUE4QixjQUMvQixPQUFRLFNBQVMsRUFBUyxHQUNDLElBQXJCLEVBQVEsVUFDVixHQUFHLGdCQUF1QixNQUFFLE9BQU8sRUFBUyxLQUlsRCxHQUFHLGdCQUFnQixnQkFBOEIsY0FBSSxFQUdyRCxHQUFHLGdCQUE2QixhQUM5QixLQUFNLEdBQUcsZ0JBQXNCLEtBQUUsS0FDakMsT0FBUSxTQUFTLEVBQVMsR0FDeEIsR0FBeUIsSUFBckIsRUFBUSxTQUFnQixDQUMxQixHQUFJLEdBQU8sR0FBRyxNQUFNLGlCQUFpQixJQUdyQyxJQURBLEdBQUcsZ0JBQWdCLFVBQVUsR0FDZixPQUFULEdBQTRCLFNBQVQsRUFBcUIsQ0FDdkIsZ0JBQVQsS0FDVCxFQUFPLEVBQUssV0FHZCxJQUFJLEdBQWMsR0FBRyxNQUFNLGtCQUFrQixFQUM3QyxJQUFJLEVBRUYsSUFBSyxHQURELEdBQWlCLEVBQVEsWUFDcEIsRUFBSSxFQUFHLEVBQUksRUFBWSxPQUFZLEVBQUosRUFBTyxJQUM3QyxFQUFlLFdBQVcsYUFBYSxFQUFZLEdBQUksUUFJN0QsSUFBRyxnQkFBc0IsS0FBRSxPQUFPLEVBQVMsRUFJN0MsUUFDRSw0QkFBNEIsS0FJbEMsR0FBRyxnQkFBZ0IsZ0JBQTZCLGFBQUkiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogZ2xvYmFscyBnbG9iYWw6ZmFsc2UgKi9cblxudmFyIGtvID0gcmVxdWlyZShcImtub2Nrb3V0XCIpO1xudmFyIGNvbnNvbGUgPSByZXF1aXJlKFwiY29uc29sZVwiKTtcblxua28uYmluZGluZ0hhbmRsZXJzWyd1bmlxdWVJZCddID0ge1xuICBjdXJyZW50SW5kZXg6IDAsXG4gICdpbml0JzogZnVuY3Rpb24oZWxlbWVudCwgdmFsdWVBY2Nlc3Nvcikge1xuICAgIHZhciBkYXRhID0ga28udXRpbHMudW53cmFwT2JzZXJ2YWJsZSh2YWx1ZUFjY2Vzc29yKCkpIHx8IHt9O1xuICAgIGlmIChkYXRhLmlkKCkgPT09ICcnKSB7XG4gICAgICB2YXIgaWQsIGVsLCBwcmVmaXg7XG4gICAgICAvLyBUT0RPIHdlIG5lZWQgYSBiZXR0ZXIgcHJlZml4XG4gICAgICBwcmVmaXggPSAna29fJyArICh0eXBlb2YgZGF0YS50eXBlICE9PSAndW5kZWZpbmVkJyA/IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUoZGF0YS50eXBlKSA6ICdibG9jaycpO1xuICAgICAgLy8gd2hlbiBsb2FkaW5nIGFuIGV4aXNpbmcgbW9kZWwsIElEcyBjb3VsZCBiZSBhbHJlYWR5IGFzc2lnbmVkLlxuICAgICAgZG8ge1xuICAgICAgICBpZCA9IHByZWZpeCArICdfJyArICgrK2tvLmJpbmRpbmdIYW5kbGVyc1sndW5pcXVlSWQnXS5jdXJyZW50SW5kZXgpO1xuICAgICAgICBlbCA9IGdsb2JhbC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICAgIGlmIChlbCkge1xuICAgICAgICAgIC8vIHdoZW4gbG9hZGluZyBhbiBleGlzdGluZyBtb2RlbCBteSBcImN1cnJlbnRJbmRleFwiIGlzIGVtcHR5LlxuICAgICAgICAgIC8vIGJ1dCB3ZSBoYXZlIGV4aXN0aW5nIGJsb2Nrcywgc28gSSBtdXN0IGJlIHN1cmUgSSBkb24ndCByZXVzZSB0aGVpciBJRHMuXG4gICAgICAgICAgLy8gV2UgdXNlIGRpZmZlcmVudCBwcmVmaXhlcyAocGVyIGJsb2NrIHR5cGUpIHNvIHRoYXQgYSBoaWRkZW4gYmxvY2sgXG4gICAgICAgICAgLy8gKGZvciB3aGljaCB3ZSBoYXZlIG5vIGlkIGluIHRoZSBwYWdlLCBlLmc6IHByZWhlYWRlciBpbiB2ZXJzYWZpeC0xKVxuICAgICAgICAgIC8vIHdpbGwgYnJlYWsgZXZlcnRoaW5nIG9uY2Ugd2UgcmV1c2UgaXRzIG5hbWUuXG4gICAgICAgIH1cbiAgICAgIH0gd2hpbGUgKGVsKTtcbiAgICAgIGRhdGEuaWQoaWQpO1xuICAgIH1cbiAgfVxufTtcbmtvLnZpcnR1YWxFbGVtZW50cy5hbGxvd2VkQmluZGluZ3NbJ3VuaXF1ZUlkJ10gPSB0cnVlO1xuXG5rby5iaW5kaW5nSGFuZGxlcnNbJ3ZpcnR1YWxBdHRyJ10gPSB7XG4gIHVwZGF0ZTogZnVuY3Rpb24oZWxlbWVudCwgdmFsdWVBY2Nlc3Nvcikge1xuICAgIGlmIChlbGVtZW50Lm5vZGVUeXBlICE9PSA4KSB7XG4gICAgICBrby5iaW5kaW5nSGFuZGxlcnNbJ2F0dHInXS51cGRhdGUoZWxlbWVudCwgdmFsdWVBY2Nlc3Nvcik7XG4gICAgfVxuICB9XG59O1xua28udmlydHVhbEVsZW1lbnRzLmFsbG93ZWRCaW5kaW5nc1sndmlydHVhbEF0dHInXSA9IHRydWU7XG5cbmtvLmJpbmRpbmdIYW5kbGVyc1sndmlydHVhbEF0dHJTdHlsZSddID0ge1xuICB1cGRhdGU6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlQWNjZXNzb3IsIGFsbEJpbmRpbmdzQWNjZXNzb3IsIHZpZXdNb2RlbCwgYmluZGluZ0NvbnRleHQpIHtcbiAgICBpZiAoZWxlbWVudC5ub2RlVHlwZSAhPT0gOCkge1xuICAgICAgLy8gSW4gXCJwcmV2aWV3XCIgd2UgYWxzbyBzZXQgXCJyZXBsYWNlZHN0eWxlXCIgc28gdG8gaGF2ZSBhbiBhdHRyaWJ1dGUgdG8gYmUgdXNlZCBieSBJRSAoSUUgYnJlYWtzIHRoZSBTVFlMRSkgdG8gZG8gdGhlIGV4cG9ydC5cbiAgICAgIHZhciBpc05vdFd5c2l3eWdNb2RlID0gKHR5cGVvZiBiaW5kaW5nQ29udGV4dC50ZW1wbGF0ZU1vZGUgPT0gJ3VuZGVmaW5lZCcgfHwgYmluZGluZ0NvbnRleHQudGVtcGxhdGVNb2RlICE9ICd3eXNpd3lnJyk7XG4gICAgICB2YXIgYXR0cnMgPSBbXCJzdHlsZVwiXTtcbiAgICAgIGlmIChpc05vdFd5c2l3eWdNb2RlKSBhdHRycy5wdXNoKFwicmVwbGFjZWRzdHlsZVwiKTtcbiAgICAgIHZhciBhdHRyVmFsdWUgPSBrby51dGlscy51bndyYXBPYnNlcnZhYmxlKHZhbHVlQWNjZXNzb3IoKSk7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBhdHRyTmFtZSA9IGF0dHJzW2ldO1xuICAgICAgICB2YXIgdG9SZW1vdmUgPSAoYXR0clZhbHVlID09PSBmYWxzZSkgfHwgKGF0dHJWYWx1ZSA9PT0gbnVsbCkgfHwgKGF0dHJWYWx1ZSA9PT0gdW5kZWZpbmVkKTtcbiAgICAgICAgaWYgKHRvUmVtb3ZlKVxuICAgICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKGF0dHJOYW1lKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKGF0dHJOYW1lLCBhdHRyVmFsdWUudG9TdHJpbmcoKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59O1xua28udmlydHVhbEVsZW1lbnRzLmFsbG93ZWRCaW5kaW5nc1sndmlydHVhbEF0dHJTdHlsZSddID0gdHJ1ZTtcblxua28uYmluZGluZ0hhbmRsZXJzWyd2aXJ0dWFsU3R5bGUnXSA9IHtcbiAgdXBkYXRlOiBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZUFjY2Vzc29yKSB7XG4gICAgaWYgKGVsZW1lbnQubm9kZVR5cGUgIT09IDgpIHtcbiAgICAgIGtvLmJpbmRpbmdIYW5kbGVyc1snc3R5bGUnXS51cGRhdGUoZWxlbWVudCwgdmFsdWVBY2Nlc3Nvcik7XG4gICAgfVxuICB9XG59O1xua28udmlydHVhbEVsZW1lbnRzLmFsbG93ZWRCaW5kaW5nc1sndmlydHVhbFN0eWxlJ10gPSB0cnVlO1xuXG5cbmtvLmJpbmRpbmdIYW5kbGVyc1sndmlydHVhbEh0bWwnXSA9IHtcbiAgaW5pdDoga28uYmluZGluZ0hhbmRsZXJzWydodG1sJ10uaW5pdCxcbiAgdXBkYXRlOiBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZUFjY2Vzc29yKSB7XG4gICAgaWYgKGVsZW1lbnQubm9kZVR5cGUgPT09IDgpIHtcbiAgICAgIHZhciBodG1sID0ga28udXRpbHMudW53cmFwT2JzZXJ2YWJsZSh2YWx1ZUFjY2Vzc29yKCkpO1xuXG4gICAgICBrby52aXJ0dWFsRWxlbWVudHMuZW1wdHlOb2RlKGVsZW1lbnQpO1xuICAgICAgaWYgKChodG1sICE9PSBudWxsKSAmJiAoaHRtbCAhPT0gdW5kZWZpbmVkKSkge1xuICAgICAgICBpZiAodHlwZW9mIGh0bWwgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgaHRtbCA9IGh0bWwudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBwYXJzZWROb2RlcyA9IGtvLnV0aWxzLnBhcnNlSHRtbEZyYWdtZW50KGh0bWwpO1xuICAgICAgICBpZiAocGFyc2VkTm9kZXMpIHtcbiAgICAgICAgICB2YXIgZW5kQ29tbWVudE5vZGUgPSBlbGVtZW50Lm5leHRTaWJsaW5nO1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBqID0gcGFyc2VkTm9kZXMubGVuZ3RoOyBpIDwgajsgaSsrKVxuICAgICAgICAgICAgZW5kQ29tbWVudE5vZGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocGFyc2VkTm9kZXNbaV0sIGVuZENvbW1lbnROb2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7IC8vIHBsYWluIG5vZGVcbiAgICAgIGtvLmJpbmRpbmdIYW5kbGVyc1snaHRtbCddLnVwZGF0ZShlbGVtZW50LCB2YWx1ZUFjY2Vzc29yKTtcbiAgICB9XG5cbiAgICAvLyBDb250ZW50IGZvciB2aXJ0dWFsSFRNTCBtdXN0IG5vdCBiZSBwYXJzZWQgYnkgS08sIGl0IGlzIHNpbXBsZSBjb250ZW50LlxuICAgIHJldHVybiB7XG4gICAgICBjb250cm9sc0Rlc2NlbmRhbnRCaW5kaW5nczogdHJ1ZVxuICAgIH07XG4gIH1cbn07XG5rby52aXJ0dWFsRWxlbWVudHMuYWxsb3dlZEJpbmRpbmdzWyd2aXJ0dWFsSHRtbCddID0gdHJ1ZTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/if-subs.js":{"file":"/Users/denea/mos/src/js/bindings/if-subs.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.ifSubs={cloneNodes:function(e,t){for(var o=0,i=e.length,n=[];i>o;o++){var a=e[o].cloneNode(!0);n.push(t?ko.cleanNode(a):a)}return n},init:function(e,t,o,i,n){var a,l,r=t();return\"undefined\"==typeof r.data.subsCount&&ko.extenders.subscriptionsCount(r.data),ko.computed(function(){var o,i,d,s=ko.utils.unwrapObservable(t().data.subsCount),c=!l;d=-(\"undefined\"!=typeof t().gutter?t().gutter:1),o=s+(a?d:0)>=ko.utils.unwrapObservable(r.threshold),\"undefined\"!=typeof t().not&&t().not&&(o=!o),i=c||o!==a,i&&(c&&ko.computedContext.getDependenciesCount()&&(l=ko.bindingHandlers.ifSubs.cloneNodes(ko.virtualElements.childNodes(e),!0)),o?(c||ko.virtualElements.setDomNodeChildren(e,ko.bindingHandlers.ifSubs.cloneNodes(l)),ko.applyBindingsToDescendants(n,e)):ko.virtualElements.emptyNode(e),a=o)},null,{disposeWhenNodeIsRemoved:e}),{controlsDescendantBindings:!0}}},ko.virtualElements.allowedBindings.ifSubs=!0;var beforeSubscriptionProp,afterSubscriptionProp;if(\"function\"==typeof ko.subscription&&\"undefined\"!=typeof ko.isWritableObservable)beforeSubscriptionProp=\"beforeSubscriptionAdd\",afterSubscriptionProp=\"afterSubscriptionRemove\";else if(\"3.2.0\"==ko.version)beforeSubscriptionProp=\"va\",afterSubscriptionProp=\"nb\";else if(\"3.3.0\"==ko.version)beforeSubscriptionProp=\"ja\",afterSubscriptionProp=\"ua\";else if(\"3.4.0\"==ko.version)beforeSubscriptionProp=\"sa\",afterSubscriptionProp=\"Ia\";else{if(\"3.4.1\"!=ko.version)throw\"Unsupported minimized Knockout version \"+ko.version+\" (supported DEBUG or minimized 3.2.0 ... 3.4.1)\";beforeSubscriptionProp=\"sa\",afterSubscriptionProp=\"Ia\"}ko.extenders.subscriptionsCount=function(e,t,o){if(\"undefined\"==typeof e.subsCount){e.subsCount=ko.observable(e.getSubscriptionsCount()).extend({notify:\"always\"});var i=e[beforeSubscriptionProp],n=e[afterSubscriptionProp];e[beforeSubscriptionProp]=function(n){i&&i.call(e,n);var a=e.getSubscriptionsCount()+1;(\"undefined\"==typeof t||a==t||\"undefined\"==typeof o||a==o)&&e.subsCount(a)},e[afterSubscriptionProp]=function(i){n&&n.call(e,i);var a=e.getSubscriptionsCount();(\"undefined\"==typeof t||a==t||\"undefined\"==typeof o||a==o)&&e.subsCount(a)}}else console.log(\"already applied subscriptionCount to observable\");return null};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/eventable.js":{"file":"/Users/denea/mos/src/js/bindings/eventable.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),$=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.focusable={focus:function(){},blur:function(){},init:function(e){ko.utils.domNodeDisposal.addDisposeCallback(e,function(){$(e).off(\"focusin\",ko.bindingHandlers.focusable.focus),$(e).off(\"focusout\",ko.bindingHandlers.focusable.blur)}),$(e).on(\"focusin\",ko.bindingHandlers.focusable.focus),$(e).on(\"focusout\",ko.bindingHandlers.focusable.blur)}},ko.bindingHandlers.scrollable={scroll:function(){},init:function(e){ko.utils.domNodeDisposal.addDisposeCallback(e,function(){$(e).off(\"scroll\",ko.bindingHandlers.scrollable.scroll)}),$(e).on(\"scroll\",ko.bindingHandlers.scrollable.scroll)}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9ldmVudGFibGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBRUEsSUFBSSxJQUFLLFFBQVEsWUFDYixFQUFJLFFBQVEsVUFDWixRQUFVLFFBQVEsVUFHdEIsSUFBRyxnQkFBZ0IsV0FDakIsTUFBUyxhQUNULEtBQVEsYUFDUixLQUFRLFNBQVMsR0FDZixHQUFHLE1BQU0sZ0JBQWdCLG1CQUFtQixFQUFTLFdBQ25ELEVBQUUsR0FBUyxJQUFJLFVBQVcsR0FBRyxnQkFBZ0IsVUFBVSxPQUN2RCxFQUFFLEdBQVMsSUFBSSxXQUFZLEdBQUcsZ0JBQWdCLFVBQVUsUUFHMUQsRUFBRSxHQUFTLEdBQUcsVUFBVyxHQUFHLGdCQUFnQixVQUFVLE9BQ3RELEVBQUUsR0FBUyxHQUFHLFdBQVksR0FBRyxnQkFBZ0IsVUFBVSxRQUszRCxHQUFHLGdCQUFnQixZQUNqQixPQUFVLGFBQ1YsS0FBUSxTQUFTLEdBQ2YsR0FBRyxNQUFNLGdCQUFnQixtQkFBbUIsRUFBUyxXQUNuRCxFQUFFLEdBQVMsSUFBSSxTQUFVLEdBQUcsZ0JBQWdCLFdBQVcsVUFHekQsRUFBRSxHQUFTLEdBQUcsU0FBVSxHQUFHLGdCQUFnQixXQUFXIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGtvID0gcmVxdWlyZShcImtub2Nrb3V0XCIpO1xudmFyICQgPSByZXF1aXJlKFwianF1ZXJ5XCIpO1xudmFyIGNvbnNvbGUgPSByZXF1aXJlKFwiY29uc29sZVwiKTtcblxuLyogdXRpbGl0eSBmb3IgdG9nZXRoZXJqcyAqL1xua28uYmluZGluZ0hhbmRsZXJzLmZvY3VzYWJsZSA9IHtcbiAgJ2ZvY3VzJzogZnVuY3Rpb24oKSB7fSxcbiAgJ2JsdXInOiBmdW5jdGlvbigpIHt9LFxuICAnaW5pdCc6IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICBrby51dGlscy5kb21Ob2RlRGlzcG9zYWwuYWRkRGlzcG9zZUNhbGxiYWNrKGVsZW1lbnQsIGZ1bmN0aW9uKCkge1xuICAgICAgJChlbGVtZW50KS5vZmYoXCJmb2N1c2luXCIsIGtvLmJpbmRpbmdIYW5kbGVycy5mb2N1c2FibGUuZm9jdXMpO1xuICAgICAgJChlbGVtZW50KS5vZmYoXCJmb2N1c291dFwiLCBrby5iaW5kaW5nSGFuZGxlcnMuZm9jdXNhYmxlLmJsdXIpO1xuICAgIH0pO1xuXG4gICAgJChlbGVtZW50KS5vbihcImZvY3VzaW5cIiwga28uYmluZGluZ0hhbmRsZXJzLmZvY3VzYWJsZS5mb2N1cyk7XG4gICAgJChlbGVtZW50KS5vbihcImZvY3Vzb3V0XCIsIGtvLmJpbmRpbmdIYW5kbGVycy5mb2N1c2FibGUuYmx1cik7XG5cbiAgfVxufTtcblxua28uYmluZGluZ0hhbmRsZXJzLnNjcm9sbGFibGUgPSB7XG4gICdzY3JvbGwnOiBmdW5jdGlvbigpIHt9LFxuICAnaW5pdCc6IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICBrby51dGlscy5kb21Ob2RlRGlzcG9zYWwuYWRkRGlzcG9zZUNhbGxiYWNrKGVsZW1lbnQsIGZ1bmN0aW9uKCkge1xuICAgICAgJChlbGVtZW50KS5vZmYoXCJzY3JvbGxcIiwga28uYmluZGluZ0hhbmRsZXJzLnNjcm9sbGFibGUuc2Nyb2xsKTtcbiAgICB9KTtcblxuICAgICQoZWxlbWVudCkub24oXCJzY3JvbGxcIiwga28uYmluZGluZ0hhbmRsZXJzLnNjcm9sbGFibGUuc2Nyb2xsKTtcblxuICB9XG59OyJdfQ==","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/tooltips.js":{"file":"/Users/denea/mos/src/js/bindings/tooltips.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),$=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),kojqui=(typeof window !== \"undefined\" ? window['kojqui'] : typeof global !== \"undefined\" ? global['kojqui'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),extendValueAccessor=function(e,t){return function(){return ko.utils.extend(t,e()),t}},options={show:{delay:500},track:!0,items:'[title][title!=\"\"][title!=\" \"]'};ko.bindingHandlers.tooltips={init:function(e,t,o,i,n){return\"undefined\"!=typeof $.fn.tooltip&&\"undefined\"!=typeof ko.bindingHandlers.tooltip?ko.bindingHandlers.tooltip.init(e,extendValueAccessor(t,options),o,i,n):void 0},update:function(e,t,o,i,n){return\"undefined\"!=typeof $.fn.tooltip&&\"undefined\"!=typeof ko.bindingHandlers.tooltip?ko.bindingHandlers.tooltip.update(e,extendValueAccessor(t,options),o,i,n):void 0}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy90b29sdGlwcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFFQSxJQUFJLElBQUssUUFBUSxZQUNiLEVBQUksUUFBUSxVQUNaLE9BQVMsUUFBUSxxQkFDakIsUUFBVSxRQUFRLFdBRWxCLG9CQUFzQixTQUFTLEVBQWUsR0FDaEQsTUFBTyxZQUVMLE1BREEsSUFBRyxNQUFNLE9BQU8sRUFBSyxLQUNkLElBSVAsU0FDRixNQUNFLE1BQU8sS0FFVCxPQUFPLEVBQ1AsTUFBTyxpQ0FHVCxJQUFHLGdCQUFnQixVQUNqQixLQUFNLFNBQVMsRUFBUyxFQUFlLEVBQXFCLEVBQU0sR0FDaEUsTUFBNEIsbUJBQWpCLEdBQUUsR0FBRyxTQUFpRSxtQkFBL0IsSUFBRyxnQkFBZ0IsUUFHNUQsR0FBRyxnQkFBZ0IsUUFBUSxLQUFLLEVBQVMsb0JBQW9CLEVBQWUsU0FBVSxFQUFxQixFQUFNLEdBSDFILFFBTUYsT0FBUSxTQUFTLEVBQVMsRUFBZSxFQUFxQixFQUFNLEdBQ2xFLE1BQTRCLG1CQUFqQixHQUFFLEdBQUcsU0FBaUUsbUJBQS9CLElBQUcsZ0JBQWdCLFFBQzVELEdBQUcsZ0JBQWdCLFFBQVEsT0FBTyxFQUFTLG9CQUFvQixFQUFlLFNBQVUsRUFBcUIsRUFBTSxHQUQ1SCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBrbyA9IHJlcXVpcmUoXCJrbm9ja291dFwiKTtcbnZhciAkID0gcmVxdWlyZShcImpxdWVyeVwiKTtcbnZhciBrb2pxdWkgPSByZXF1aXJlKFwia25vY2tvdXQtanF1ZXJ5dWlcIik7XG52YXIgY29uc29sZSA9IHJlcXVpcmUoXCJjb25zb2xlXCIpO1xuXG52YXIgZXh0ZW5kVmFsdWVBY2Nlc3NvciA9IGZ1bmN0aW9uKHZhbHVlQWNjZXNzb3IsIG9iaikge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAga28udXRpbHMuZXh0ZW5kKG9iaiwgdmFsdWVBY2Nlc3NvcigpKTtcbiAgICByZXR1cm4gb2JqO1xuICB9O1xufTtcblxudmFyIG9wdGlvbnMgPSB7XG4gIHNob3c6IHtcbiAgICBkZWxheTogNTAwXG4gIH0sXG4gIHRyYWNrOiB0cnVlLFxuICBpdGVtczogJ1t0aXRsZV1bdGl0bGUhPVwiXCJdW3RpdGxlIT1cIiBcIl0nXG59O1xuXG5rby5iaW5kaW5nSGFuZGxlcnMudG9vbHRpcHMgPSB7XG4gIGluaXQ6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlQWNjZXNzb3IsIGFsbEJpbmRpbmdzQWNjZXNzb3IsIGRhdGEsIGNvbnRleHQpIHtcbiAgICBpZiAodHlwZW9mICQuZm4udG9vbHRpcCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGtvLmJpbmRpbmdIYW5kbGVycy50b29sdGlwICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gcG9zaXRpb246IHsgbXk6IFwibGVmdCsxNSB0b3ArMTVcIiwgYXQ6IFwiY2VudGVyKzMwIGNlbnRlciszMFwiIH1cbiAgICAgIC8vIE5PVEUgdGl0bGUgd2l0aCBcIlwiIGFuZCBcIiBcIiBpcyBuZWVkZWQgdG8gYXZvaWQgZGVmYXVsdCB0b29sdGlwcyBpbiBuYXRpdmUgZmlsZSB1cGxvYWQgY29udHJvbHNcbiAgICAgIHJldHVybiBrby5iaW5kaW5nSGFuZGxlcnMudG9vbHRpcC5pbml0KGVsZW1lbnQsIGV4dGVuZFZhbHVlQWNjZXNzb3IodmFsdWVBY2Nlc3Nvciwgb3B0aW9ucyksIGFsbEJpbmRpbmdzQWNjZXNzb3IsIGRhdGEsIGNvbnRleHQpO1xuICAgIH1cbiAgfSxcbiAgdXBkYXRlOiBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZUFjY2Vzc29yLCBhbGxCaW5kaW5nc0FjY2Vzc29yLCBkYXRhLCBjb250ZXh0KSB7XG4gICAgaWYgKHR5cGVvZiAkLmZuLnRvb2x0aXAgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBrby5iaW5kaW5nSGFuZGxlcnMudG9vbHRpcCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiBrby5iaW5kaW5nSGFuZGxlcnMudG9vbHRpcC51cGRhdGUoZWxlbWVudCwgZXh0ZW5kVmFsdWVBY2Nlc3Nvcih2YWx1ZUFjY2Vzc29yLCBvcHRpb25zKSwgYWxsQmluZGluZ3NBY2Nlc3NvciwgZGF0YSwgY29udGV4dCk7XG4gICAgfVxuICB9LFxufTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/scrollintoview.js":{"file":"/Users/denea/mos/src/js/bindings/scrollintoview.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),_scrollIntoView=function(e,t,o,i){var n=o.scrollTop(),a=n-i-(t?20:-20),r=\"undefined\"!=typeof o[0].nodeType;if(r){var l={scrollTop:\"\"+Math.round(a)+\"px\"},s=Math.round(Math.abs(a-n));o.stop().animate(l,s)}else o.scrollTop(a)};ko.bindingHandlers.scrollIntoView={update:function(e,t){var o=ko.utils.unwrapObservable(t());if(o)try{for(;8===e.nodeType;)e=e.nextSibling;if(8!==e.nodeType){var i,n=$(e).scrollParent(),a=!1;9==n[0].nodeType?(n=$(n[0].defaultView),i=0,a=!0):i=n.offset().top;var r=n.height(),l=n.scrollTop(),s=i+r,d=$(e),c=d.offset().top;a&&(c-=l);var u=d.height(),p=c+u;c>i&&s>c+u||(r>u?(i>c&&_scrollIntoView(e,!0,n,i-c),p>s&&_scrollIntoView(e,!1,n,s-p)):(i>c&&s>p&&_scrollIntoView(e,!1,n,s-p),c>i&&p>s&&_scrollIntoView(e,!0,n,i-c)))}}catch(f){console.log(\"TODO exception scrolling into view\",f)}}},ko.virtualElements.allowedBindings.scrollIntoView=!0;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9zY3JvbGxpbnRvdmlldy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFFQSxJQUFJLEdBQUksUUFBUSxVQUNaLEdBQUssUUFBUSxZQUNiLFFBQVUsUUFBUSxXQUVsQixnQkFBa0IsU0FBUyxFQUFVLEVBQVUsRUFBYyxHQUMvRCxHQUFJLEdBQW1CLEVBQWEsWUFDaEMsRUFBZSxFQUFtQixHQUFVLEVBQVcsR0FBSyxLQUU1RCxFQUE4QyxtQkFBN0IsR0FBYSxHQUFHLFFBQ3JDLElBQUksRUFBUyxDQUNYLEdBQUksSUFDRixVQUFhLEdBQUssS0FBSyxNQUFNLEdBQWdCLE1BRTNDLEVBQU8sS0FBSyxNQUFNLEtBQUssSUFBSSxFQUFlLEdBQzlDLEdBQWEsT0FBTyxRQUFRLEVBQVEsT0FFcEMsR0FBYSxVQUFVLEdBTTNCLElBQUcsZ0JBQWdCLGdCQUNqQixPQUFRLFNBQVMsRUFBUyxHQUN4QixHQUFJLEdBQVcsR0FBRyxNQUFNLGlCQUFpQixJQUN6QyxJQUFLLEVBQ0wsSUFFRSxLQUE0QixJQUFyQixFQUFRLFVBRWIsRUFBVSxFQUFRLFdBRXBCLElBQXlCLElBQXJCLEVBQVEsU0FBZ0IsQ0FDMUIsR0FFSSxHQUZBLEVBQWUsRUFBRSxHQUFTLGVBRzFCLEdBQWlCLENBQ1csSUFBNUIsRUFBYSxHQUFHLFVBRWxCLEVBQWUsRUFBRSxFQUFhLEdBQUcsYUFDakMsRUFBWSxFQUNaLEdBQWlCLEdBRWpCLEVBQVksRUFBYSxTQUFTLEdBR3BDLElBQUksR0FBZSxFQUFhLFNBQzVCLEVBQWUsRUFBYSxZQUM1QixFQUFlLEVBQVksRUFHM0IsRUFBVyxFQUFFLEdBQ2IsRUFBUSxFQUFTLFNBQVMsR0FFMUIsS0FBZ0IsR0FBZ0IsRUFDcEMsSUFBSSxHQUFXLEVBQVMsU0FDcEIsRUFBVyxFQUFRLENBQ25CLEdBQVEsR0FBZ0MsRUFBbkIsRUFBUSxJQUVYLEVBQVgsR0FFRyxFQUFSLEdBQW1CLGdCQUFnQixHQUFTLEVBQU0sRUFBYyxFQUFZLEdBRTVFLEVBQVcsR0FBYyxnQkFBZ0IsR0FBUyxFQUFPLEVBQWMsRUFBZSxLQUs5RSxFQUFSLEdBQWdDLEVBQVgsR0FBeUIsZ0JBQWdCLEdBQVMsRUFBTyxFQUFjLEVBQWUsR0FFM0csRUFBUSxHQUFhLEVBQVcsR0FBYyxnQkFBZ0IsR0FBUyxFQUFNLEVBQWMsRUFBWSxNQUsvRyxNQUFPLEdBQ1AsUUFBUSxJQUFJLHFDQUFzQyxNQUl4RCxHQUFHLGdCQUFnQixnQkFBZ0MsZ0JBQUkiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgJCA9IHJlcXVpcmUoXCJqcXVlcnlcIik7XG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG52YXIgY29uc29sZSA9IHJlcXVpcmUoXCJjb25zb2xlXCIpO1xuXG52YXIgX3Njcm9sbEludG9WaWV3ID0gZnVuY3Rpb24oJGVsZW1lbnQsIGFsaWduVG9wLCBzY3JvbGxQYXJlbnQsIG1vdmVCeSkge1xuICB2YXIgY3VycmVudFNjcm9sbFRvcCA9IHNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKTtcbiAgdmFyIG5ld1Njcm9sbFRvcCA9IGN1cnJlbnRTY3JvbGxUb3AgLSBtb3ZlQnkgLSAoYWxpZ25Ub3AgPyAyMCA6IC0yMCk7XG4gIC8vIGlmcmFtZSBzY3JvbGxzIHRoZSB3aW5kb3cgYW5kIGFuaW1hdGlvbiBpcyBub3Qgc3VwcG9ydGVkXG4gIHZhciBhbmltYXRlID0gdHlwZW9mIHNjcm9sbFBhcmVudFswXS5ub2RlVHlwZSAhPT0gJ3VuZGVmaW5lZCc7XG4gIGlmIChhbmltYXRlKSB7XG4gICAgdmFyIGFjdGlvbiA9IHtcbiAgICAgICdzY3JvbGxUb3AnOiBcIlwiICsgTWF0aC5yb3VuZChuZXdTY3JvbGxUb3ApICsgXCJweFwiXG4gICAgfTtcbiAgICB2YXIgdGltZSA9IE1hdGgucm91bmQoTWF0aC5hYnMobmV3U2Nyb2xsVG9wIC0gY3VycmVudFNjcm9sbFRvcCkpO1xuICAgIHNjcm9sbFBhcmVudC5zdG9wKCkuYW5pbWF0ZShhY3Rpb24sIHRpbWUpO1xuICB9IGVsc2Uge1xuICAgIHNjcm9sbFBhcmVudC5zY3JvbGxUb3AobmV3U2Nyb2xsVG9wKTtcbiAgfVxuICAvLyBuYXRpdmUgc2Nyb2xsSW50b1ZpZXcgaXMgbm90IHdlbGwgc3VwcG9ydGVkIGFuZCBkb2Vzbid0IHdvcmsgZmluZS5cbiAgLy8gZWxlbWVudC5zY3JvbGxJbnRvVmlldyhhbGlnblRvcCk7XG59O1xuXG5rby5iaW5kaW5nSGFuZGxlcnMuc2Nyb2xsSW50b1ZpZXcgPSB7XG4gIHVwZGF0ZTogZnVuY3Rpb24oZWxlbWVudCwgdmFsdWVBY2Nlc3NvciwgYWxsQmluZGluZ3NBY2Nlc3Nvciwgdmlld01vZGVsLCBiaW5kaW5nQ29udGV4dCkge1xuICAgIHZhciBzZWxlY3RlZCA9IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUodmFsdWVBY2Nlc3NvcigpKTtcbiAgICBpZiAoIXNlbGVjdGVkKSByZXR1cm47XG4gICAgdHJ5IHtcblxuICAgICAgd2hpbGUgKGVsZW1lbnQubm9kZVR5cGUgPT09IDgpIHtcbiAgICAgICAgLy8gZWxlbWVudCBpcyBhIGNvbW1lbnQsIG1vdmUgdG8gdGhlIG5leHQgc2libGluZy4uLlxuICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5uZXh0U2libGluZztcbiAgICAgIH1cbiAgICAgIGlmIChlbGVtZW50Lm5vZGVUeXBlICE9PSA4KSB7XG4gICAgICAgIHZhciBzY3JvbGxQYXJlbnQgPSAkKGVsZW1lbnQpLnNjcm9sbFBhcmVudCgpO1xuXG4gICAgICAgIHZhciBwYXJlbnRUb3A7XG4gICAgICAgIHZhciByZWxhdGl2ZU9mZnNldCA9IGZhbHNlO1xuICAgICAgICBpZiAoc2Nyb2xsUGFyZW50WzBdLm5vZGVUeXBlID09IDkpIHtcbiAgICAgICAgICAvLyBzY3JvbGxwYXJlbnQgaXMgZG9jdW1lbnQsIHJlcGxhY2luZyB3aXRoIGJvZHkuLi5cbiAgICAgICAgICBzY3JvbGxQYXJlbnQgPSAkKHNjcm9sbFBhcmVudFswXS5kZWZhdWx0Vmlldyk7XG4gICAgICAgICAgcGFyZW50VG9wID0gMDtcbiAgICAgICAgICByZWxhdGl2ZU9mZnNldCA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGFyZW50VG9wID0gc2Nyb2xsUGFyZW50Lm9mZnNldCgpLnRvcDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBwYXJlbnRIZWlnaHQgPSBzY3JvbGxQYXJlbnQuaGVpZ2h0KCk7XG4gICAgICAgIHZhciBwYXJlbnRTY3JvbGwgPSBzY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCk7XG4gICAgICAgIHZhciBwYXJlbnRCb3R0b20gPSBwYXJlbnRUb3AgKyBwYXJlbnRIZWlnaHQ7XG5cbiAgICAgICAgLy8gc2Nyb2xsUGFyZW50IGlzIHRoZSBkb2N1bWVudC5cbiAgICAgICAgdmFyICRlbGVtZW50ID0gJChlbGVtZW50KTtcbiAgICAgICAgdmFyIGVsVG9wID0gJGVsZW1lbnQub2Zmc2V0KCkudG9wO1xuICAgICAgICAvLyB3aGVuIHdlIGFyZSBpbiBcImlmcmFtZVwiIHdpdGggc2Nyb2xsYmFyIGV2ZXJ5dGhpam5nIGNoYW5nZXMuXG4gICAgICAgIGlmIChyZWxhdGl2ZU9mZnNldCkgZWxUb3AgPSBlbFRvcCAtIHBhcmVudFNjcm9sbDtcbiAgICAgICAgdmFyIGVsSGVpZ2h0ID0gJGVsZW1lbnQuaGVpZ2h0KCk7XG4gICAgICAgIHZhciBlbEJvdHRvbSA9IGVsVG9wICsgZWxIZWlnaHQ7XG4gICAgICAgIGlmIChlbFRvcCA+IHBhcmVudFRvcCAmJiBlbFRvcCArIGVsSGVpZ2h0IDwgcGFyZW50Qm90dG9tKSB7XG4gICAgICAgICAgLy8gYm90aCBib3JkZXJzIGFyZSB2aXNpYmxlID0+IGRvbid0IGRvIGFueXRoaW5nLlxuICAgICAgICB9IGVsc2UgaWYgKGVsSGVpZ2h0IDwgcGFyZW50SGVpZ2h0KSB7XG4gICAgICAgICAgLy8gaWYgdGhlIGJsb2NrIGlzIHNtYWxsZXIgdGhhbiB0aGUgdmlld1BvcnRcbiAgICAgICAgICBpZiAoZWxUb3AgPCBwYXJlbnRUb3ApIF9zY3JvbGxJbnRvVmlldyhlbGVtZW50LCB0cnVlLCBzY3JvbGxQYXJlbnQsIHBhcmVudFRvcCAtIGVsVG9wKTtcbiAgICAgICAgICAvLyAtPiBpZiB0aGUgdXBwZXIgYm9yZGVyIGlzIGhpZ2hlciB0aGFuIHRoZSB0b3AsIHRoZW4gSSBtb3ZlIGl0IHRvIHRoZSB0b3AuXG4gICAgICAgICAgaWYgKGVsQm90dG9tID4gcGFyZW50Qm90dG9tKSBfc2Nyb2xsSW50b1ZpZXcoZWxlbWVudCwgZmFsc2UsIHNjcm9sbFBhcmVudCwgcGFyZW50Qm90dG9tIC0gZWxCb3R0b20pO1xuICAgICAgICAgIC8vIC0+IGlmIHRoZSBib3R0b20gYm9yZGVyIGlzIGxvd2VyIHRoYW4gdGhlIGJvdHRvbSB0aGVuIEkgbW92ZSBpdCB0byB0aGUgYm90dG9tLlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGlmIHRoZSBibG9jayBpcyBsYXJnZXIgdGhhbiB0aGUgdmlld1BvcnQgd2UgZG8gdGhlIG9wcG9zaXRlIVxuICAgICAgICAgIC8vIC0+IGlmIHRoZSB1cHBlciBib3JkZXIgaXMgaGlnaGVyIHRoYW4gdGhlIHRvcCBhbmQgdGhlIGxvd2VyIGlzIGhpZ2hlciB0aGFuIHRoZSBib3R0b20gSSBtb3ZlIHRoZSBsb3dlciBpdCB0byB0aGUgYm90dG9tLlxuICAgICAgICAgIGlmIChlbFRvcCA8IHBhcmVudFRvcCAmJiBlbEJvdHRvbSA8IHBhcmVudEJvdHRvbSkgX3Njcm9sbEludG9WaWV3KGVsZW1lbnQsIGZhbHNlLCBzY3JvbGxQYXJlbnQsIHBhcmVudEJvdHRvbSAtIGVsQm90dG9tKTtcbiAgICAgICAgICAvLyAtPiBpZiB0aGUgYm90dG9tIGJvcmRlciBpbCBsb3dlciB0aGFuIGJvdHRvbSBhbmQgdGhlIHVwcGVyIGlzIGxvd2VyIHRoYW4gdGhlIHRvcCBJIG1vdmUgdGhlIHVwcGVyIGJvcmRlciB0byB0aGUgdmlld3BvcnQgdG9wXG4gICAgICAgICAgaWYgKGVsVG9wID4gcGFyZW50VG9wICYmIGVsQm90dG9tID4gcGFyZW50Qm90dG9tKSBfc2Nyb2xsSW50b1ZpZXcoZWxlbWVudCwgdHJ1ZSwgc2Nyb2xsUGFyZW50LCBwYXJlbnRUb3AgLSBlbFRvcCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBlbGVtZW50LnNjcm9sbEludG9WaWV3KHRydWUpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiVE9ETyBleGNlcHRpb24gc2Nyb2xsaW5nIGludG8gdmlld1wiLCBlKTtcbiAgICB9XG4gIH1cbn07XG5rby52aXJ0dWFsRWxlbWVudHMuYWxsb3dlZEJpbmRpbmdzWydzY3JvbGxJbnRvVmlldyddID0gdHJ1ZTsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/validated-value.js":{"file":"/Users/denea/mos/src/js/bindings/validated-value.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");ko.bindingHandlers.validatedValue={init:function(e,t,o){var i=t;if(\"undefined\"!=typeof e.pattern){var n=new RegExp(\"^(?:\"+e.pattern+\")$\"),a=ko.computed({read:function(){var o=ko.utils.unwrapObservable(t()),i=null===o||\"\"===o||n.test(o);return i?e.classList.remove(\"invalid\"):e.classList.add(\"invalid\"),o},write:ko.isWriteableObservable(t())&&function(o){ko.selectExtensions.writeValue(e,o);var i=ko.selectExtensions.readValue(e);t()(i)},disposeWhenNodeIsRemoved:e});i=function(){return a}}ko.bindingHandlers.value.init(e,i,o)}},ko.expressionRewriting._twoWayBindings.validatedValue=!0;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy92YWxpZGF0ZWQtdmFsdWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBRUEsSUFBSSxJQUFLLFFBQVEsWUFDYixRQUFVLFFBQVEsVUFHdEIsSUFBRyxnQkFBZ0MsZ0JBQ2xDLEtBQU0sU0FBUyxFQUFTLEVBQWUsR0FDdEMsR0FBSSxHQUFtQixDQUN2QixJQUErQixtQkFBcEIsR0FBUSxRQUF5QixDQUMzQyxHQUFJLEdBQUssR0FBSSxRQUFPLE9BQVMsRUFBUSxRQUFVLE1BQzNDLEVBQVcsR0FBRyxVQUNqQixLQUFNLFdBQ0wsR0FBSSxHQUFNLEdBQUcsTUFBTSxpQkFBaUIsS0FFaEMsRUFBZ0IsT0FBUixHQUF3QixLQUFSLEdBQWMsRUFBRyxLQUFLLEVBT2xELE9BTEksR0FDSCxFQUFRLFVBQVUsT0FBTyxXQUV6QixFQUFRLFVBQVUsSUFBSSxXQUVoQixHQUVSLE1BQU8sR0FBRyxzQkFBc0IsTUFBb0IsU0FBUyxHQUU1RCxHQUFHLGlCQUFpQixXQUFXLEVBQVMsRUFDeEMsSUFBSSxHQUFXLEdBQUcsaUJBQWlCLFVBQVUsRUFDN0MsS0FBZ0IsSUFFakIseUJBQTBCLEdBRTNCLEdBQW1CLFdBQ2xCLE1BQU8sSUFHVCxHQUFHLGdCQUF1QixNQUFFLEtBQUssRUFBUyxFQUFrQixLQUc5RCxHQUFHLG9CQUFvQixnQkFBZ0MsZ0JBQUkiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIga28gPSByZXF1aXJlKCdrbm9ja291dCcpO1xudmFyIGNvbnNvbGUgPSByZXF1aXJlKCdjb25zb2xlJyk7XG5cbi8vIGVxdWFscyB0byBcInZhbHVlXCIgYmluZGluZyBidXQgYXBwbHkgXCJpbnZhbGlkXCIgY2xhc3MgaWYgXCJwYXR0ZXJuXCIgYXR0cmlidXRlIGlzIGRlZmluZWQgYW5kIHZhbHVlIG1hdGNoZXMgdGhlIHJ1bGVcbmtvLmJpbmRpbmdIYW5kbGVyc1sndmFsaWRhdGVkVmFsdWUnXSA9IHtcblx0aW5pdDogZnVuY3Rpb24oZWxlbWVudCwgdmFsdWVBY2Nlc3NvciwgYWxsQmluZGluZ3MpIHtcblx0XHR2YXIgbmV3VmFsdWVBY2Nlc3NvciA9IHZhbHVlQWNjZXNzb3I7XG5cdFx0aWYgKHR5cGVvZiBlbGVtZW50LnBhdHRlcm4gIT09ICd1bmRlZmluZWQnKSB7XG5cdFx0XHR2YXIgcmUgPSBuZXcgUmVnRXhwKCdeKD86JyArIGVsZW1lbnQucGF0dGVybiArICcpJCcpO1xuXHRcdFx0dmFyIGNvbXB1dGVkID0ga28uY29tcHV0ZWQoe1xuXHRcdFx0XHRyZWFkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHR2YXIgcmVzID0ga28udXRpbHMudW53cmFwT2JzZXJ2YWJsZSh2YWx1ZUFjY2Vzc29yKCkpO1xuXHRcdFx0XHRcdC8vIFRPRE8gc3VwcG9ydCBmb3IgZWxlbWVudC5yZXF1aXJlZCA/XG5cdFx0XHRcdFx0dmFyIHZhbGlkID0gcmVzID09PSBudWxsIHx8IHJlcyA9PT0gJycgfHwgcmUudGVzdChyZXMpO1xuXHRcdFx0XHRcdC8vIElFMTEgZG9lc24ndCBzdXBwb3J0IGNsYXNzTGlzdC50b2dnbGUoJ2ludmFsaWQnLCBzdGF0ZSlcblx0XHRcdFx0XHRpZiAodmFsaWQpIHtcblx0XHRcdFx0XHRcdGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaW52YWxpZCcpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2ludmFsaWQnKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHJlcztcblx0XHRcdFx0fSxcblx0XHRcdFx0d3JpdGU6IGtvLmlzV3JpdGVhYmxlT2JzZXJ2YWJsZSh2YWx1ZUFjY2Vzc29yKCkpICYmIGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRcdFx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vdm9pZGxhYnMvbW9zYWljby9pc3N1ZXMvMTAzXG5cdFx0XHRcdFx0a28uc2VsZWN0RXh0ZW5zaW9ucy53cml0ZVZhbHVlKGVsZW1lbnQsIHZhbHVlKTtcblx0XHRcdFx0XHR2YXIgdXBkVmFsdWUgPSBrby5zZWxlY3RFeHRlbnNpb25zLnJlYWRWYWx1ZShlbGVtZW50KTtcblx0XHRcdFx0XHR2YWx1ZUFjY2Vzc29yKCkodXBkVmFsdWUpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRkaXNwb3NlV2hlbk5vZGVJc1JlbW92ZWQ6IGVsZW1lbnRcblx0XHRcdH0pO1xuXHRcdFx0bmV3VmFsdWVBY2Nlc3NvciA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gY29tcHV0ZWQ7XG5cdFx0XHR9O1xuXHRcdH1cblx0XHRrby5iaW5kaW5nSGFuZGxlcnNbJ3ZhbHVlJ10uaW5pdChlbGVtZW50LCBuZXdWYWx1ZUFjY2Vzc29yLCBhbGxCaW5kaW5ncyk7XG5cdH1cbn07XG5rby5leHByZXNzaW9uUmV3cml0aW5nLl90d29XYXlCaW5kaW5nc1sndmFsaWRhdGVkVmFsdWUnXSA9IHRydWU7XG4iXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/extsortables.js":{"file":"/Users/denea/mos/src/js/bindings/extsortables.js","source":"(function (global){\n\"use strict\";var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),sortable=(typeof window !== \"undefined\" ? window['jQuery']['ui']['sortable'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['sortable'] : null),draggable=(typeof window !== \"undefined\" ? window['jQuery']['ui']['draggable'] : typeof global !== \"undefined\" ? global['jQuery']['ui']['draggable'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\");if(require(\"./../../../bower_components/knockout-sortable/build/knockout-sortable.min.js\"),\"undefined\"==typeof sortable)throw\"Cannot find jquery-ui sortable widget dependency!\";if(\"undefined\"==typeof draggable)throw\"Cannot find jquery-ui sortable widget dependency!\";var isDraggingHelper=function(e,t){e()?t.type==e()+\"stop\"&&e(!1):(\"dragstart\"==t.type||\"sortstart\"==t.type)&&e(t.type.substring(0,4))},makeExtendedValueAccessor=function(e){return function(){var t=e();ko.utils.peekObservable(t),ko.utils.unwrapObservable(t),\"undefined\"==t.options&&(t.options={});var o=t.options.start;t.options.start=function(e,i){return\"undefined\"!=typeof t.dragging&&ko.isWritableObservable(t.dragging)&&isDraggingHelper(t.dragging,e),\"undefined\"!=typeof t.dropContainer&&(t.scrollInterval=global.setInterval(function(){var e=$(t.dropContainer).scrollTop();$(t.dropContainer).scrollTop(e+t.adding)},20)),\"undefined\"!=typeof o?o(e,i):void 0};var i=t.options.stop;t.options.stop=function(e,o){return\"undefined\"!=typeof t.dragging&&ko.isWritableObservable(t.dragging)&&isDraggingHelper(t.dragging,e),\"undefined\"!=typeof t.dropContainer&&global.clearInterval(t.scrollInterval),\"undefined\"!=typeof i?i(e,o):void 0};var n=t.options.drag;return t.options.drag=function(e,o){if(\"undefined\"!=typeof t.dropContainer){var i=e.pageY-$(t.dropContainer).offset().top,a=i-$(t.dropContainer).height();t.adding=-20>i?-20:0>i?-10:10>i?-5:a>20?20:a>0?10:a>-10?5:0}return\"undefined\"!=typeof n?n(e,o):void 0},t}};ko.bindingHandlers.extsortable={init:function(e,t,o,i,n){return ko.bindingHandlers.sortable.init(e,makeExtendedValueAccessor(t),o,i,n)},update:function(e,t,o,i,n){return ko.bindingHandlers.sortable.update(e,makeExtendedValueAccessor(t),o,i,n)}},ko.bindingHandlers.extdraggable={init:function(e,t,o,i,n){return ko.bindingHandlers.draggable.init(e,makeExtendedValueAccessor(t),o,i,n)},update:function(e,t,o,i,n){return ko.bindingHandlers.draggable.update(e,makeExtendedValueAccessor(t),o,i,n)}};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9leHRzb3J0YWJsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBR0EsSUFBSSxHQUFJLFFBQVEsVUFDWixHQUFLLFFBQVEsWUFDYixTQUFXLFFBQVEsc0JBQ25CLFVBQVksUUFBUSx1QkFDcEIsUUFBVSxRQUFRLFVBR3RCLElBRkEsUUFBUSxxQkFFZSxtQkFBWixVQUF5QixLQUFNLG1EQUMxQyxJQUF3QixtQkFBYixXQUEwQixLQUFNLG1EQUUzQyxJQUFJLGtCQUFtQixTQUFTLEVBQVUsR0FDcEMsSUFDRSxFQUFFLE1BQVEsSUFBYSxRQUFRLEdBQVMsSUFFOUIsYUFBVixFQUFFLE1BQWlDLGFBQVYsRUFBRSxPQUFxQixFQUFTLEVBQUUsS0FBSyxVQUFVLEVBQUcsS0FJakYsMEJBQTRCLFNBQVMsR0FDdkMsTUFBTyxZQUNMLEdBQUksR0FBYSxHQUNFLElBQUcsTUFBTSxlQUFlLEdBRTNDLEdBQUcsTUFBTSxpQkFBaUIsR0FFQSxhQUF0QixFQUFXLFVBQ2IsRUFBVyxXQUdiLElBQUksR0FBWSxFQUFXLFFBQVEsS0FDbkMsR0FBVyxRQUFRLE1BQVEsU0FBUyxFQUFHLEdBUXJDLE1BUGtDLG1CQUF2QixHQUFXLFVBQTJCLEdBQUcscUJBQXFCLEVBQVcsV0FBVyxpQkFBaUIsRUFBVyxTQUFVLEdBQzlGLG1CQUE1QixHQUFXLGdCQUNwQixFQUFXLGVBQWlCLE9BQU8sWUFBWSxXQUM3QyxHQUFJLEdBQU0sRUFBRSxFQUFXLGVBQWUsV0FDdEMsR0FBRSxFQUFXLGVBQWUsVUFBVSxFQUFNLEVBQVcsU0FDdEQsS0FFbUIsbUJBQWIsR0FBaUMsRUFBVSxFQUFHLEdBQXpELE9BRUYsSUFBSSxHQUFXLEVBQVcsUUFBUSxJQUNsQyxHQUFXLFFBQVEsS0FBTyxTQUFTLEVBQUcsR0FLcEMsTUFKa0MsbUJBQXZCLEdBQVcsVUFBMkIsR0FBRyxxQkFBcUIsRUFBVyxXQUFXLGlCQUFpQixFQUFXLFNBQVUsR0FDOUYsbUJBQTVCLEdBQVcsZUFDcEIsT0FBTyxjQUFjLEVBQVcsZ0JBRVgsbUJBQVosR0FBZ0MsRUFBUyxFQUFHLEdBQXZELE9BRUYsSUFBSSxHQUFXLEVBQVcsUUFBUSxJQStCbEMsT0E5QkEsR0FBVyxRQUFRLEtBQU8sU0FBUyxFQUFHLEdBQ3BDLEdBQXVDLG1CQUE1QixHQUFXLGNBQThCLENBQ2xELEdBQUksR0FBTSxFQUFFLE1BQVEsRUFBRSxFQUFXLGVBQWUsU0FBUyxJQUNyRCxFQUFTLEVBQU0sRUFBRSxFQUFXLGVBQWUsUUFHN0MsR0FBVyxPQURILElBQU4sRUFDa0IsSUFFTCxFQUFOLEVBQ1csSUFFTCxHQUFOLEVBQ1csR0FFWCxFQUFTLEdBQ0UsR0FFWCxFQUFTLEVBQ0UsR0FFWCxFQUFTLElBQ0UsRUFHQSxFQUd4QixNQUF1QixtQkFBWixHQUFnQyxFQUFTLEVBQUcsR0FBdkQsUUFHSyxHQUlYLElBQUcsZ0JBQWdCLGFBQ2pCLEtBQU0sU0FBUyxFQUFTLEVBQWUsRUFBcUIsRUFBTSxHQUNoRSxNQUFPLElBQUcsZ0JBQWdCLFNBQVMsS0FBSyxFQUFTLDBCQUEwQixHQUFnQixFQUFxQixFQUFNLElBRXhILE9BQVEsU0FBUyxFQUFTLEVBQWUsRUFBcUIsRUFBTSxHQUNsRSxNQUFPLElBQUcsZ0JBQWdCLFNBQVMsT0FBTyxFQUFTLDBCQUEwQixHQUFnQixFQUFxQixFQUFNLEtBSTVILEdBQUcsZ0JBQWdCLGNBQ2pCLEtBQU0sU0FBUyxFQUFTLEVBQWUsRUFBcUIsRUFBTSxHQUNoRSxNQUFPLElBQUcsZ0JBQWdCLFVBQVUsS0FBSyxFQUFTLDBCQUEwQixHQUFnQixFQUFxQixFQUFNLElBRXpILE9BQVEsU0FBUyxFQUFTLEVBQWUsRUFBcUIsRUFBTSxHQUNsRSxNQUFPLElBQUcsZ0JBQWdCLFVBQVUsT0FBTyxFQUFTLDBCQUEwQixHQUFnQixFQUFxQixFQUFNIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIGdsb2JhbHMgZ2xvYmFsOiB0cnVlICovXG5cbnZhciAkID0gcmVxdWlyZShcImpxdWVyeVwiKTtcbnZhciBrbyA9IHJlcXVpcmUoXCJrbm9ja291dFwiKTtcbnZhciBzb3J0YWJsZSA9IHJlcXVpcmUoXCJqcXVlcnktdWkvc29ydGFibGVcIik7XG52YXIgZHJhZ2dhYmxlID0gcmVxdWlyZShcImpxdWVyeS11aS9kcmFnZ2FibGVcIik7XG52YXIgY29uc29sZSA9IHJlcXVpcmUoXCJjb25zb2xlXCIpO1xucmVxdWlyZShcImtub2Nrb3V0LXNvcnRhYmxlXCIpO1xuXG5pZiAodHlwZW9mIHNvcnRhYmxlID09ICd1bmRlZmluZWQnKSB0aHJvdyBcIkNhbm5vdCBmaW5kIGpxdWVyeS11aSBzb3J0YWJsZSB3aWRnZXQgZGVwZW5kZW5jeSFcIjtcbmlmICh0eXBlb2YgZHJhZ2dhYmxlID09ICd1bmRlZmluZWQnKSB0aHJvdyBcIkNhbm5vdCBmaW5kIGpxdWVyeS11aSBzb3J0YWJsZSB3aWRnZXQgZGVwZW5kZW5jeSFcIjtcblxudmFyIGlzRHJhZ2dpbmdIZWxwZXIgPSBmdW5jdGlvbih3cml0YWJsZSwgZSkge1xuICBpZiAod3JpdGFibGUoKSkge1xuICAgIGlmIChlLnR5cGUgPT0gd3JpdGFibGUoKSArICdzdG9wJykgd3JpdGFibGUoZmFsc2UpO1xuICB9IGVsc2Uge1xuICAgIGlmIChlLnR5cGUgPT0gJ2RyYWdzdGFydCcgfHwgZS50eXBlID09ICdzb3J0c3RhcnQnKSB3cml0YWJsZShlLnR5cGUuc3Vic3RyaW5nKDAsIDQpKTtcbiAgfVxufTtcblxudmFyIG1ha2VFeHRlbmRlZFZhbHVlQWNjZXNzb3IgPSBmdW5jdGlvbih2YWx1ZUFjY2Vzc29yKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgbW9kZWxWYWx1ZSA9IHZhbHVlQWNjZXNzb3IoKSxcbiAgICAgIHVud3JhcHBlZFZhbHVlID0ga28udXRpbHMucGVla09ic2VydmFibGUobW9kZWxWYWx1ZSk7IC8vIFVud3JhcCB3aXRob3V0IHNldHRpbmcgYSBkZXBlbmRlbmN5IGhlcmVcblxuICAgIGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUobW9kZWxWYWx1ZSk7XG5cbiAgICBpZiAobW9kZWxWYWx1ZS5vcHRpb25zID09ICd1bmRlZmluZWQnKSB7XG4gICAgICBtb2RlbFZhbHVlLm9wdGlvbnMgPSB7fTtcbiAgICB9XG5cbiAgICB2YXIgb3JpZ1N0YXJ0ID0gbW9kZWxWYWx1ZS5vcHRpb25zLnN0YXJ0O1xuICAgIG1vZGVsVmFsdWUub3B0aW9ucy5zdGFydCA9IGZ1bmN0aW9uKGUsIHVpKSB7XG4gICAgICBpZiAodHlwZW9mIG1vZGVsVmFsdWUuZHJhZ2dpbmcgIT0gJ3VuZGVmaW5lZCcgJiYga28uaXNXcml0YWJsZU9ic2VydmFibGUobW9kZWxWYWx1ZS5kcmFnZ2luZykpIGlzRHJhZ2dpbmdIZWxwZXIobW9kZWxWYWx1ZS5kcmFnZ2luZywgZSk7XG4gICAgICBpZiAodHlwZW9mIG1vZGVsVmFsdWUuZHJvcENvbnRhaW5lciAhPSAndW5kZWZpbmVkJykge1xuICAgICAgICBtb2RlbFZhbHVlLnNjcm9sbEludGVydmFsID0gZ2xvYmFsLnNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciBmb28gPSAkKG1vZGVsVmFsdWUuZHJvcENvbnRhaW5lcikuc2Nyb2xsVG9wKCk7XG4gICAgICAgICAgJChtb2RlbFZhbHVlLmRyb3BDb250YWluZXIpLnNjcm9sbFRvcChmb28gKyBtb2RlbFZhbHVlLmFkZGluZyk7XG4gICAgICAgIH0sIDIwKTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2Ygb3JpZ1N0YXJ0ICE9ICd1bmRlZmluZWQnKSByZXR1cm4gb3JpZ1N0YXJ0KGUsIHVpKTtcbiAgICB9O1xuICAgIHZhciBvcmlnU3RvcCA9IG1vZGVsVmFsdWUub3B0aW9ucy5zdG9wO1xuICAgIG1vZGVsVmFsdWUub3B0aW9ucy5zdG9wID0gZnVuY3Rpb24oZSwgdWkpIHtcbiAgICAgIGlmICh0eXBlb2YgbW9kZWxWYWx1ZS5kcmFnZ2luZyAhPSAndW5kZWZpbmVkJyAmJiBrby5pc1dyaXRhYmxlT2JzZXJ2YWJsZShtb2RlbFZhbHVlLmRyYWdnaW5nKSkgaXNEcmFnZ2luZ0hlbHBlcihtb2RlbFZhbHVlLmRyYWdnaW5nLCBlKTtcbiAgICAgIGlmICh0eXBlb2YgbW9kZWxWYWx1ZS5kcm9wQ29udGFpbmVyICE9ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGdsb2JhbC5jbGVhckludGVydmFsKG1vZGVsVmFsdWUuc2Nyb2xsSW50ZXJ2YWwpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBvcmlnU3RvcCAhPSAndW5kZWZpbmVkJykgcmV0dXJuIG9yaWdTdG9wKGUsIHVpKTtcbiAgICB9O1xuICAgIHZhciBvcmlnRHJhZyA9IG1vZGVsVmFsdWUub3B0aW9ucy5kcmFnO1xuICAgIG1vZGVsVmFsdWUub3B0aW9ucy5kcmFnID0gZnVuY3Rpb24oZSwgdWkpIHtcbiAgICAgIGlmICh0eXBlb2YgbW9kZWxWYWx1ZS5kcm9wQ29udGFpbmVyICE9ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhciB0b3AgPSBlLnBhZ2VZIC0gJChtb2RlbFZhbHVlLmRyb3BDb250YWluZXIpLm9mZnNldCgpLnRvcDtcbiAgICAgICAgdmFyIGJvdHRvbSA9IHRvcCAtICQobW9kZWxWYWx1ZS5kcm9wQ29udGFpbmVyKS5oZWlnaHQoKTtcbiAgICAgICAgLy8gSGFuZGxlIHNjcm9sbGluZyBzcGVlZCBkZXBlbmRpbmcgb24gZGlzdGFuY2UgZnJvbSBib3JkZXIuXG4gICAgICAgIGlmICh0b3AgPCAtMjApIHtcbiAgICAgICAgICBtb2RlbFZhbHVlLmFkZGluZyA9IC0yMDtcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIjw8PFwiKTtcbiAgICAgICAgfSBlbHNlIGlmICh0b3AgPCAwKSB7XG4gICAgICAgICAgbW9kZWxWYWx1ZS5hZGRpbmcgPSAtMTA7XG4gICAgICAgICAgLy8gY29uc29sZS5sb2coXCI8PFwiKTtcbiAgICAgICAgfSBlbHNlIGlmICh0b3AgPCAxMCkge1xuICAgICAgICAgIG1vZGVsVmFsdWUuYWRkaW5nID0gLTU7XG4gICAgICAgICAgLy8gY29uc29sZS5sb2coXCI8XCIpO1xuICAgICAgICB9IGVsc2UgaWYgKGJvdHRvbSA+IDIwKSB7XG4gICAgICAgICAgbW9kZWxWYWx1ZS5hZGRpbmcgPSAyMDtcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIj4+PlwiKTtcbiAgICAgICAgfSBlbHNlIGlmIChib3R0b20gPiAwKSB7XG4gICAgICAgICAgbW9kZWxWYWx1ZS5hZGRpbmcgPSAxMDtcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIj4+XCIpO1xuICAgICAgICB9IGVsc2UgaWYgKGJvdHRvbSA+IC0xMCkge1xuICAgICAgICAgIG1vZGVsVmFsdWUuYWRkaW5nID0gNTtcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIj5cIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbW9kZWxWYWx1ZS5hZGRpbmcgPSAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG9yaWdEcmFnICE9ICd1bmRlZmluZWQnKSByZXR1cm4gb3JpZ0RyYWcoZSwgdWkpO1xuICAgIH07XG5cbiAgICByZXR1cm4gbW9kZWxWYWx1ZTtcbiAgfTtcbn07XG5cbmtvLmJpbmRpbmdIYW5kbGVycy5leHRzb3J0YWJsZSA9IHtcbiAgaW5pdDogZnVuY3Rpb24oZWxlbWVudCwgdmFsdWVBY2Nlc3NvciwgYWxsQmluZGluZ3NBY2Nlc3NvciwgZGF0YSwgY29udGV4dCkge1xuICAgIHJldHVybiBrby5iaW5kaW5nSGFuZGxlcnMuc29ydGFibGUuaW5pdChlbGVtZW50LCBtYWtlRXh0ZW5kZWRWYWx1ZUFjY2Vzc29yKHZhbHVlQWNjZXNzb3IpLCBhbGxCaW5kaW5nc0FjY2Vzc29yLCBkYXRhLCBjb250ZXh0KTtcbiAgfSxcbiAgdXBkYXRlOiBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZUFjY2Vzc29yLCBhbGxCaW5kaW5nc0FjY2Vzc29yLCBkYXRhLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGtvLmJpbmRpbmdIYW5kbGVycy5zb3J0YWJsZS51cGRhdGUoZWxlbWVudCwgbWFrZUV4dGVuZGVkVmFsdWVBY2Nlc3Nvcih2YWx1ZUFjY2Vzc29yKSwgYWxsQmluZGluZ3NBY2Nlc3NvciwgZGF0YSwgY29udGV4dCk7XG4gIH1cbn07XG5cbmtvLmJpbmRpbmdIYW5kbGVycy5leHRkcmFnZ2FibGUgPSB7XG4gIGluaXQ6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlQWNjZXNzb3IsIGFsbEJpbmRpbmdzQWNjZXNzb3IsIGRhdGEsIGNvbnRleHQpIHtcbiAgICByZXR1cm4ga28uYmluZGluZ0hhbmRsZXJzLmRyYWdnYWJsZS5pbml0KGVsZW1lbnQsIG1ha2VFeHRlbmRlZFZhbHVlQWNjZXNzb3IodmFsdWVBY2Nlc3NvciksIGFsbEJpbmRpbmdzQWNjZXNzb3IsIGRhdGEsIGNvbnRleHQpO1xuICB9LFxuICB1cGRhdGU6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlQWNjZXNzb3IsIGFsbEJpbmRpbmdzQWNjZXNzb3IsIGRhdGEsIGNvbnRleHQpIHtcbiAgICByZXR1cm4ga28uYmluZGluZ0hhbmRsZXJzLmRyYWdnYWJsZS51cGRhdGUoZWxlbWVudCwgbWFrZUV4dGVuZGVkVmFsdWVBY2Nlc3Nvcih2YWx1ZUFjY2Vzc29yKSwgYWxsQmluZGluZ3NBY2Nlc3NvciwgZGF0YSwgY29udGV4dCk7XG4gIH1cbn07Il19","deps":{"./../../../bower_components/knockout-sortable/build/knockout-sortable.min.js":"/Users/denea/mos/bower_components/knockout-sortable/build/knockout-sortable.min.js","./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/bower_components/toastr/toastr.js":{"file":"/Users/denea/mos/bower_components/toastr/toastr.js","source":"(function (global){\n!function(e){e([\"jquery\"],function(e){return function(){function t(e,t,o){return b({type:w.error,iconClass:m().iconClasses.error,message:e,optionsOverride:o,title:t})}function o(t,o){return t||(t=m()),h=e(\"#\"+t.containerId),h.length?h:(o&&(h=u(t)),h)}function n(e,t,o){return b({type:w.info,iconClass:m().iconClasses.info,message:e,optionsOverride:o,title:t})}function i(e){v=e}function a(e,t,o){return b({type:w.success,iconClass:m().iconClasses.success,message:e,optionsOverride:o,title:t})}function r(e,t,o){return b({type:w.warning,iconClass:m().iconClasses.warning,message:e,optionsOverride:o,title:t})}function l(e,t){var n=m();h||o(n),c(e,n,t)||d(n)}function s(t){var n=m();return h||o(n),t&&0===e(\":focus\",t).length?(g(t),void 0):(h.children().length&&h.remove(),void 0)}function d(t){for(var o=h.children(),n=o.length-1;n>=0;n--)c(e(o[n]),t)}function c(t,o,n){var i=n&&n.force?n.force:!1;return t&&(i||0===e(\":focus\",t).length)?(t[o.hideMethod]({duration:o.hideDuration,easing:o.hideEasing,complete:function(){g(t)}}),!0):!1}function u(t){return h=e(\"<div/>\").attr(\"id\",t.containerId).addClass(t.positionClass),h.appendTo(e(t.target)),h}function p(){return{tapToDismiss:!0,toastClass:\"toast\",containerId:\"toast-container\",debug:!1,showMethod:\"fadeIn\",showDuration:300,showEasing:\"swing\",onShown:void 0,hideMethod:\"fadeOut\",hideDuration:1e3,hideEasing:\"swing\",onHidden:void 0,closeMethod:!1,closeDuration:!1,closeEasing:!1,closeOnHover:!0,extendedTimeOut:1e3,iconClasses:{error:\"toast-error\",info:\"toast-info\",success:\"toast-success\",warning:\"toast-warning\"},iconClass:\"toast-info\",positionClass:\"toast-top-right\",timeOut:5e3,titleClass:\"toast-title\",messageClass:\"toast-message\",escapeHtml:!1,target:\"body\",closeHtml:'<button type=\"button\">&times;</button>',closeClass:\"toast-close-button\",newestOnTop:!0,preventDuplicates:!1,progressBar:!1,progressClass:\"toast-progress\",rtl:!1}}function f(e){v&&v(e)}function b(t){function n(e){return null==e&&(e=\"\"),e.replace(/&/g,\"&amp;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#39;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\")}function i(){s(),c(),u(),p(),b(),v(),d(),a()}function a(){var e=\"\";switch(t.iconClass){case\"toast-success\":case\"toast-info\":e=\"polite\";break;default:e=\"assertive\"}E.attr(\"aria-live\",e)}function r(){S.closeOnHover&&E.hover(_,$),!S.onclick&&S.tapToDismiss&&E.click(x),S.closeButton&&A&&A.click(function(e){e.stopPropagation?e.stopPropagation():void 0!==e.cancelBubble&&e.cancelBubble!==!0&&(e.cancelBubble=!0),S.onCloseClick&&S.onCloseClick(e),x(!0)}),S.onclick&&E.click(function(e){S.onclick(e),x()})}function l(){E.hide(),E[S.showMethod]({duration:S.showDuration,easing:S.showEasing,complete:S.onShown}),S.timeOut>0&&(O=setTimeout(x,S.timeOut),P.maxHideTime=parseFloat(S.timeOut),P.hideEta=(new Date).getTime()+P.maxHideTime,S.progressBar&&(P.intervalId=setInterval(C,10)))}function s(){t.iconClass&&E.addClass(S.toastClass).addClass(T)}function d(){S.newestOnTop?h.prepend(E):h.append(E)}function c(){if(t.title){var e=t.title;S.escapeHtml&&(e=n(t.title)),H.append(e).addClass(S.titleClass),E.append(H)}}function u(){if(t.message){var e=t.message;S.escapeHtml&&(e=n(t.message)),M.append(e).addClass(S.messageClass),E.append(M)}}function p(){S.closeButton&&(A.addClass(S.closeClass).attr(\"role\",\"button\"),E.prepend(A))}function b(){S.progressBar&&(q.addClass(S.progressClass),E.prepend(q))}function v(){S.rtl&&E.addClass(\"rtl\")}function w(e,t){if(e.preventDuplicates){if(t.message===y)return!0;y=t.message}return!1}function x(t){var o=t&&S.closeMethod!==!1?S.closeMethod:S.hideMethod,n=t&&S.closeDuration!==!1?S.closeDuration:S.hideDuration,i=t&&S.closeEasing!==!1?S.closeEasing:S.hideEasing;return!e(\":focus\",E).length||t?(clearTimeout(P.intervalId),E[o]({duration:n,easing:i,complete:function(){g(E),clearTimeout(O),S.onHidden&&\"hidden\"!==I.state&&S.onHidden(),I.state=\"hidden\",I.endTime=new Date,f(I)}})):void 0}function $(){(S.timeOut>0||S.extendedTimeOut>0)&&(O=setTimeout(x,S.extendedTimeOut),P.maxHideTime=parseFloat(S.extendedTimeOut),P.hideEta=(new Date).getTime()+P.maxHideTime)}function _(){clearTimeout(O),P.hideEta=0,E.stop(!0,!0)[S.showMethod]({duration:S.showDuration,easing:S.showEasing})}function C(){var e=100*((P.hideEta-(new Date).getTime())/P.maxHideTime);q.width(e+\"%\")}var S=m(),T=t.iconClass||S.iconClass;if(\"undefined\"!=typeof t.optionsOverride&&(S=e.extend(S,t.optionsOverride),T=t.optionsOverride.iconClass||T),!w(S,t)){k++,h=o(S,!0);var O=null,E=e(\"<div/>\"),H=e(\"<div/>\"),M=e(\"<div/>\"),q=e(\"<div/>\"),A=e(S.closeHtml),P={intervalId:null,hideEta:null,maxHideTime:null},I={toastId:k,state:\"visible\",startTime:new Date,options:S,map:t};return i(),l(),r(),f(I),S.debug&&console&&console.log(I),E}}function m(){return e.extend({},p(),x.options)}function g(e){h||(h=o()),e.is(\":visible\")||(e.remove(),e=null,0===h.children().length&&(h.remove(),y=void 0))}var h,v,y,k=0,w={error:\"error\",info:\"info\",success:\"success\",warning:\"warning\"},x={clear:l,remove:s,error:t,getContainer:o,info:n,options:{},subscribe:i,success:a,version:\"2.1.3\",warning:r};return x}()})}(\"function\"==typeof define&&define.amd?define:function(e,t){\"undefined\"!=typeof module&&module.exports?module.exports=t((typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null)):window.toastr=t(window.jQuery)});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/denea/mos/bower_components/evol-colorpicker/js/evol.colorpicker.min.js":{"file":"/Users/denea/mos/bower_components/evol-colorpicker/js/evol.colorpicker.min.js","source":"!function(e){var t=0,o=window.navigator.userAgent,n=o.indexOf(\"MSIE \")>0,i=n?\"-ie\":\"\",a=n?!1:/mozilla/.test(o.toLowerCase())&&!/webkit/.test(o.toLowerCase()),r=[],l=[\"ffffff\",\"000000\",\"eeece1\",\"1f497d\",\"4f81bd\",\"c0504d\",\"9bbb59\",\"8064a2\",\"4bacc6\",\"f79646\"],s=[\"f2f2f2\",\"7f7f7f\",\"ddd9c3\",\"c6d9f0\",\"dbe5f1\",\"f2dcdb\",\"ebf1dd\",\"e5e0ec\",\"dbeef3\",\"fdeada\",\"d8d8d8\",\"595959\",\"c4bd97\",\"8db3e2\",\"b8cce4\",\"e5b9b7\",\"d7e3bc\",\"ccc1d9\",\"b7dde8\",\"fbd5b5\",\"bfbfbf\",\"3f3f3f\",\"938953\",\"548dd4\",\"95b3d7\",\"d99694\",\"c3d69b\",\"b2a2c7\",\"92cddc\",\"fac08f\",\"a5a5a5\",\"262626\",\"494429\",\"17365d\",\"366092\",\"953734\",\"76923c\",\"5f497a\",\"31859b\",\"e36c09\",\"7f7f7f\",\"0c0c0c\",\"1d1b10\",\"0f243e\",\"244061\",\"632423\",\"4f6128\",\"3f3151\",\"205867\",\"974806\"],d=[\"c00000\",\"ff0000\",\"ffc000\",\"ffff00\",\"92d050\",\"00b050\",\"00b0f0\",\"0070c0\",\"002060\",\"7030a0\"],c=[[\"003366\",\"336699\",\"3366cc\",\"003399\",\"000099\",\"0000cc\",\"000066\"],[\"006666\",\"006699\",\"0099cc\",\"0066cc\",\"0033cc\",\"0000ff\",\"3333ff\",\"333399\"],[\"669999\",\"009999\",\"33cccc\",\"00ccff\",\"0099ff\",\"0066ff\",\"3366ff\",\"3333cc\",\"666699\"],[\"339966\",\"00cc99\",\"00ffcc\",\"00ffff\",\"33ccff\",\"3399ff\",\"6699ff\",\"6666ff\",\"6600ff\",\"6600cc\"],[\"339933\",\"00cc66\",\"00ff99\",\"66ffcc\",\"66ffff\",\"66ccff\",\"99ccff\",\"9999ff\",\"9966ff\",\"9933ff\",\"9900ff\"],[\"006600\",\"00cc00\",\"00ff00\",\"66ff99\",\"99ffcc\",\"ccffff\",\"ccccff\",\"cc99ff\",\"cc66ff\",\"cc33ff\",\"cc00ff\",\"9900cc\"],[\"003300\",\"009933\",\"33cc33\",\"66ff66\",\"99ff99\",\"ccffcc\",\"ffffff\",\"ffccff\",\"ff99ff\",\"ff66ff\",\"ff00ff\",\"cc00cc\",\"660066\"],[\"333300\",\"009900\",\"66ff33\",\"99ff66\",\"ccff99\",\"ffffcc\",\"ffcccc\",\"ff99cc\",\"ff66cc\",\"ff33cc\",\"cc0099\",\"993399\"],[\"336600\",\"669900\",\"99ff33\",\"ccff66\",\"ffff99\",\"ffcc99\",\"ff9999\",\"ff6699\",\"ff3399\",\"cc3399\",\"990099\"],[\"666633\",\"99cc00\",\"ccff33\",\"ffff66\",\"ffcc66\",\"ff9966\",\"ff6666\",\"ff0066\",\"d60094\",\"993366\"],[\"a58800\",\"cccc00\",\"ffff00\",\"ffcc00\",\"ff9933\",\"ff6600\",\"ff0033\",\"cc0066\",\"660033\"],[\"996633\",\"cc9900\",\"ff9900\",\"cc6600\",\"ff3300\",\"ff0000\",\"cc0000\",\"990033\"],[\"663300\",\"996600\",\"cc3300\",\"993300\",\"990000\",\"800000\",\"993333\"]],u=\"#0000ffff\",f=function(e){var t=e.toString(16);return 1==t.length&&(t=\"0\"+t),t},p=function(e){return f(Number(e))},b=function(e){var t=f(e);return t+t+t},m=function(e){if(e.length>10){var t=1+e.indexOf(\"(\"),o=e.indexOf(\")\"),n=e.substring(t,o).split(\",\");return[\"#\",p(n[0]),p(n[1]),p(n[2])].join(\"\")}return e};e.widget(\"evol.colorpicker\",{version:\"3.2.1\",options:{color:null,showOn:\"both\",hideButton:!1,displayIndicator:!0,transparentColor:!1,history:!0,defaultPalette:\"theme\",strings:\"Theme Colors,Standard Colors,Web Colors,Theme Colors,Back to Palette,History,No history yet.\"},_active:!1,_create:function(){var o=this;switch(this._paletteIdx=\"theme\"==this.options.defaultPalette?1:2,this._id=\"evo-cp\"+t++,this._enabled=!0,this.options.showOn=this.options.hideButton?\"focus\":this.options.showOn,this.element.get(0).tagName){case\"INPUT\":var r=this.options.color,l=this.element,s=(\"focus\"===this.options.showOn?\"\":\"evo-pointer \")+\"evo-colorind\"+(a?\"-ff\":i)+(this.options.hideButton?\" evo-hidden-button\":\"\"),d=\"\";if(this._isPopup=!0,this._palette=null,null!==r)l.val(r);else{var c=l.val();\"\"!==c&&(r=this.options.color=c)}r===u?s+=\" evo-transparent\":d=null!==r?\"background-color:\"+r:\"\",l.addClass(\"colorPicker \"+this._id).wrap('<div style=\"width:'+(this.options.hideButton?this.element.width():this.element.width()+32)+\"px;\"+(n?\"margin-bottom:-21px;\":\"\")+(a?\"padding:1px 0;\":\"\")+'\"></div>').after('<div class=\"'+s+'\" style=\"'+d+'\"></div>').on(\"keyup onpaste\",function(){var t=e(this).val();t!=o.options.color&&o._setValue(t,!0)});var f=this.options.showOn;(\"both\"===f||\"focus\"===f)&&l.on(\"focus\",function(){o.showPalette()}),(\"both\"===f||\"button\"===f)&&l.next().on(\"click\",function(e){return e.stopPropagation(),o.showPalette(),!1});break;default:this._isPopup=!1,this._palette=this.element.html(this._paletteHTML()).attr(\"aria-haspopup\",\"true\"),this._bindColors()}if(this.options.history&&(r&&this._add2History(r),this.options.initialHistory)){var p=this.options.initialHistory;for(var b in p)this._add2History(p[b])}},_paletteHTML:function(){var e=this._paletteIdx=Math.abs(this._paletteIdx),t=this.options,o=t.strings.split(\",\"),n='<div class=\"evo-pop'+i+' ui-widget ui-widget-content ui-corner-all\"'+(this._isPopup?' style=\"position:absolute\"':\"\")+\"><span>\"+this[\"_paletteHTML\"+e]()+'</span><div class=\"evo-more\"><a href=\"javascript:void(0)\">'+o[1+e]+\"</a>\";return t.history&&(n+='<a href=\"javascript:void(0)\" class=\"evo-hist\">'+o[5]+\"</a>\"),n+=\"</div>\",t.displayIndicator&&(n+=this._colorIndHTML(this.options.color)+this._colorIndHTML(\"\")),n+=\"</div>\"},_colorIndHTML:function(e){var t=n?\"evo-colorbox-ie \":\"\",o=\"\";return e?e===u?t+=\"evo-transparent\":o=\"background-color:\"+e:o=\"display:none\",'<div class=\"evo-color\" style=\"float:left\"><div style=\"'+o+'\" class=\"'+t+'\"></div><span>'+(e?e:\"\")+\"</span></div>\"},_paletteHTML1:function(){for(var e=this.options,t=e.strings.split(\",\"),o='<td style=\"background-color:#',a=n?'\"><div style=\"width:2px;\"></div></td>':'\"><span/></td>',r='<tr><th colspan=\"10\" class=\"ui-widget-content\">',c='<table class=\"evo-palette'+i+'\">'+r+t[0]+\"</th></tr><tr>\",u=0;10>u;u++)c+=o+l[u]+a;for(c+=\"</tr>\",n||(c+='<tr><th colspan=\"10\"></th></tr>'),c+='<tr class=\"top\">',u=0;10>u;u++)c+=o+s[u]+a;for(var f=1;4>f;f++)for(c+='</tr><tr class=\"in\">',u=0;10>u;u++)c+=o+s[10*f+u]+a;for(c+='</tr><tr class=\"bottom\">',u=40;50>u;u++)c+=o+s[u]+a;for(c+=\"</tr>\"+r,e.transparentColor&&(c+='<div class=\"evo-transparent evo-tr-box\"></div>'),c+=t[1]+\"</th></tr><tr>\",u=0;10>u;u++)c+=o+d[u]+a;return c+=\"</tr></table>\"},_paletteHTML2:function(){for(var e,t,o='<td style=\"background-color:#',a=n?'\"><div style=\"width:5px;\"></div></td>':'\"><span/></td>',r='<table class=\"evo-palette2'+i+'\"><tr>',l=\"</tr></table>\",s='<div class=\"evo-palcenter\">',d=0,u=c.length;u>d;d++){s+=r;var f=c[d];for(e=0,t=f.length;t>e;e++)s+=o+f[e]+a;s+=l}s+='<div class=\"evo-sep\"/>';var p=\"\";for(s+=r,e=255;e>10;e-=10)s+=o+b(e)+a,e-=10,p+=o+b(e)+a;return s+=l+r+p+l+\"</div>\"},_switchPalette:function(t){if(this._enabled){var o,n,i,a=this.options.strings.split(\",\");if(e(t).hasClass(\"evo-hist\")){var l=['<table class=\"evo-palette\"><tr><th class=\"ui-widget-content\">',a[5],\"</th></tr></tr></table>\",'<div class=\"evo-cHist\">'];if(0===r.length)l.push(\"<p>&nbsp;\",a[6],\"</p>\");else for(var s=r.length-1;s>-1;s--)9===r[s].length?l.push('<div class=\"evo-transparent\"></div>'):l.push('<div style=\"background-color:',r[s],'\"></div>');l.push(\"</div>\"),o=-this._paletteIdx,n=l.join(\"\"),i=a[4]}else this._paletteIdx<0?(o=-this._paletteIdx,this._palette.find(\".evo-hist\").show()):o=2==this._paletteIdx?1:2,n=this[\"_paletteHTML\"+o](),i=a[o+1],this._paletteIdx=o;this._paletteIdx=o;var d=this._palette.find(\".evo-more\").prev().html(n).end().children().eq(0).html(i);0>o&&d.next().hide()}},_downOrUpPositioning:function(){for(var e=this.element,t=0;null!==e&&100>t;){if(\"visible\"!=e.css(\"overflow\")){var o=this._palette.offset().top+this._palette.height(),n=e.offset().top+e.height(),i=this._palette.offset().top-this._palette.height()-this.element.outerHeight(),a=e.offset().top,r=o>n&&i>a;r?this._palette.css({bottom:this.element.outerHeight()+\"px\"}):this._palette.css({bottom:\"auto\"});break}if(\"HTML\"==e[0].tagName)break;e=e.offsetParent(),t++}},showPalette:function(){if(this._enabled&&(this._active=!0,e(\".colorPicker\").not(\".\"+this._id).colorpicker(\"hidePalette\"),null===this._palette)){this._palette=this.element.next().after(this._paletteHTML()).next().on(\"click\",function(e){return e.stopPropagation(),!1}),this._bindColors();var t=this;this._isPopup&&(this._downOrUpPositioning(),e(document.body).on(\"click.\"+t._id,function(e){e.target!=t.element.get(0)&&t.hidePalette()}).on(\"keyup.\"+t._id,function(e){27===e.keyCode&&t.hidePalette()}))}return this},hidePalette:function(){if(this._isPopup&&this._palette){e(document.body).off(\"click.\"+this._id);var t=this;this._palette.off(\"mouseover click\",\"td,.evo-transparent\").fadeOut(function(){t._palette.remove(),t._palette=t._cTxt=null}).find(\".evo-more a\").off(\"click\")}return this},_bindColors:function(){var t=this,o=this.options,n=this._palette.find(\"div.evo-color\"),i=o.history?\"td,.evo-cHist>div\":\"td\";o.transparentColor&&(i+=\",.evo-transparent\"),this._cTxt1=n.eq(0).children().eq(0),this._cTxt2=n.eq(1).children().eq(0),this._palette.on(\"click\",i,function(){if(t._enabled){var o=e(this);t._setValue(o.hasClass(\"evo-transparent\")?u:m(o.attr(\"style\").substring(17))),t._active=!1}}).on(\"mouseover\",i,function(){if(t._enabled){var o=e(this),n=o.hasClass(\"evo-transparent\")?u:m(o.attr(\"style\").substring(17));t.options.displayIndicator&&t._setColorInd(n,2),t._active&&t.element.trigger(\"mouseover.color\",n)}}).find(\".evo-more a\").on(\"click\",function(){t._switchPalette(this)})},val:function(e){return\"undefined\"==typeof e?this.options.color:(this._setValue(e),this)},_setValue:function(e,t){e=e.replace(/ /g,\"\"),this.options.color=e,this._isPopup?(t||this.hidePalette(),this._setBoxColor(this.element.val(e).next(),e)):this._setColorInd(e,1),this.options.history&&this._paletteIdx>0&&this._add2History(e),this.element.trigger(\"change.color\",e)},_setColorInd:function(e,t){var o=this[\"_cTxt\"+t];this._setBoxColor(o,e),o.next().html(e)},_setBoxColor:function(e,t){t===u?e.addClass(\"evo-transparent\").removeAttr(\"style\"):e.removeClass(\"evo-transparent\").attr(\"style\",\"background-color:\"+t)},_setOption:function(e,t){\"color\"==e?this._setValue(t,!0):this.options[e]=t},_add2History:function(e){for(var t=r.length,o=0;t>o;o++)if(e==r[o])return;t>27&&r.shift(),r.push(e)},clear:function(){this.hidePalette().val(\"\")},enable:function(){var e=this.element;return this._isPopup?e.removeAttr(\"disabled\"):e.css({opacity:\"1\",\"pointer-events\":\"auto\"}),\"focus\"!==this.options.showOn&&this.element.next().addClass(\"evo-pointer\"),e.removeAttr(\"aria-disabled\"),this._enabled=!0,this},disable:function(){var e=this.element;return this._isPopup?e.attr(\"disabled\",\"disabled\"):(this.hidePalette(),e.css({opacity:\"0.3\",\"pointer-events\":\"none\"})),\"focus\"!==this.options.showOn&&this.element.next().removeClass(\"evo-pointer\"),e.attr(\"aria-disabled\",\"true\"),this._enabled=!1,this},isDisabled:function(){return!this._enabled},destroy:function(){e(document.body).off(\"click.\"+this._id),this._palette&&(this._palette.off(\"mouseover click\",\"td,.evo-cHist>div,.evo-transparent\").find(\".evo-more a\").off(\"click\"),this._isPopup&&this._palette.remove(),this._palette=this._cTxt=null),this._isPopup&&this.element.next().off(\"click\").remove().end().off(\"focus\").unwrap(),this.element.removeClass(\"colorPicker \"+this.id).empty(),e.Widget.prototype.destroy.call(this)}})}(jQuery);\n//# sourceMappingURL=data:application/json;base64,","deps":{}},"/Users/denea/mos/src/js/bindings/colorpicker.js":{"file":"/Users/denea/mos/src/js/bindings/colorpicker.js","source":"(function (global){\n\"use strict\";require(\"./../../../bower_components/evol-colorpicker/js/evol.colorpicker.min.js\");var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),kojqui=(typeof window !== \"undefined\" ? window['kojqui'] : typeof global !== \"undefined\" ? global['kojqui'] : null),ColorPicker=function(){kojqui.BindingHandler.call(this,\"colorpicker\")};ColorPicker.prototype=kojqui.utils.createObject(kojqui.BindingHandler.prototype),ColorPicker.prototype.constructor=ColorPicker,ColorPicker.prototype.init=function(e,t,o){var a=t(),i=a.color,n=ko.computed({read:i,write:i,disposeWhenNodeIsRemoved:e}),l=function(){return n};ko.bindingHandlers.value.init(e,l,o);var r=function(e,t){\"undefined\"!=typeof t&&n(t)};$(e).on(\"change.color\",r),ko.computed({read:function(){var t={color:ko.utils.unwrapObservable(n),showOn:\"button\"};for(var o in a)\"color\"!==o&&a.hasOwnProperty(o)&&(t[o]=ko.utils.unwrapObservable(a[o]));$(e).colorpicker(t)},disposeWhenNodeIsRemoved:e}),ko.utils.domNodeDisposal.addDisposeCallback(e,function(){$(e).off(\"change.color\",r),$(e).colorpicker(\"destroy\")})},kojqui.utils.register(ColorPicker);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9jb2xvcnBpY2tlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFHQSxTQUFRLG1CQUVSLElBQUksR0FBSSxRQUFRLFVBQ1osR0FBSyxRQUFRLFlBQ2IsT0FBUyxRQUFRLHFCQUdqQixZQUFjLFdBQ2hCLE9BQU8sZUFBZSxLQUFLLEtBQU0sZUFFbkMsYUFBWSxVQUFZLE9BQU8sTUFBTSxhQUFhLE9BQU8sZUFBZSxXQUN4RSxZQUFZLFVBQVUsWUFBYyxZQUVwQyxZQUFZLFVBQVUsS0FBTyxTQUFTLEVBQVMsRUFBZSxHQUM1RCxHQUFJLEdBQUssSUFDTCxFQUFRLEVBQUcsTUFJWCxFQUFRLEdBQUcsVUFDYixLQUFNLEVBQ04sTUFBTyxFQUNQLHlCQUEwQixJQUV4QixFQUFRLFdBQ1YsTUFBTyxHQUdULElBQUcsZ0JBQWdCLE1BQU0sS0FBSyxFQUFTLEVBQU8sRUFFOUMsSUFBSSxHQUFtQixTQUFTLEVBQU8sR0FDaEIsbUJBQVYsSUFBdUIsRUFBTSxHQUUxQyxHQUFFLEdBQVMsR0FBRyxlQUFnQixHQUU5QixHQUFHLFVBQ0QsS0FBTSxXQUNKLEdBQUksSUFDRixNQUFPLEdBQUcsTUFBTSxpQkFBaUIsR0FDakMsT0FBUSxTQUVWLEtBQUssR0FBSSxLQUFRLEdBQ0YsVUFBVCxHQUFvQixFQUFHLGVBQWUsS0FBTyxFQUFJLEdBQVEsR0FBRyxNQUFNLGlCQUFpQixFQUFHLElBQzVGLEdBQUUsR0FBUyxZQUFZLElBRXpCLHlCQUEwQixJQUc1QixHQUFHLE1BQU0sZ0JBQWdCLG1CQUFtQixFQUFTLFdBQ25ELEVBQUUsR0FBUyxJQUFJLGVBQWdCLEdBQy9CLEVBQUUsR0FBUyxZQUFZLGNBSTNCLE9BQU8sTUFBTSxTQUFTIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIGdsb2JhbCBnbG9iYWw6IGZhbHNlICovXG5cbnJlcXVpcmUoXCJldm9sLWNvbG9ycGlja2VyXCIpO1xuXG52YXIgJCA9IHJlcXVpcmUoXCJqcXVlcnlcIik7XG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG52YXIga29qcXVpID0gcmVxdWlyZShcImtub2Nrb3V0LWpxdWVyeXVpXCIpO1xuXG5cbnZhciBDb2xvclBpY2tlciA9IGZ1bmN0aW9uKCkge1xuICBrb2pxdWkuQmluZGluZ0hhbmRsZXIuY2FsbCh0aGlzLCAnY29sb3JwaWNrZXInKTtcbn07XG5Db2xvclBpY2tlci5wcm90b3R5cGUgPSBrb2pxdWkudXRpbHMuY3JlYXRlT2JqZWN0KGtvanF1aS5CaW5kaW5nSGFuZGxlci5wcm90b3R5cGUpO1xuQ29sb3JQaWNrZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ29sb3JQaWNrZXI7XG5cbkNvbG9yUGlja2VyLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24oZWxlbWVudCwgdmFsdWVBY2Nlc3NvciwgYWxsQmluZGluZ3MpIHtcbiAgdmFyIHZhID0gdmFsdWVBY2Nlc3NvcigpO1xuICB2YXIgdmFsdWUgPSB2YS5jb2xvcjtcblxuICAvLyBJbiBvcmRlciB0byBoYXZlIGEgY29ycmVjdCBkZXBlbmRlbmN5IHRyYWNraW5nIGluIFwiaWZTdWJzXCIgd2UgaGF2ZSB0byBlbnN1cmUgd2UgdXNlIGEgc2luZ2xlIGNvbXB1dGVyIGZvciBlYWNoIGVkaXRhYmxlXG4gIC8vIHByb3BlcnR5LiBHaXZlbiB0aGlzIGJpbmRpbmcgbmVlZHMgMiBvZiB0aGVtLCB3ZSBjcmVhdGUgYSBjb21wdXRlZCBzbyB0byBcInByb3h5XCIgdGhlIGRlcGVuZGVuY2llcy5cbiAgdmFyIG5ld0RPID0ga28uY29tcHV0ZWQoe1xuICAgIHJlYWQ6IHZhbHVlLFxuICAgIHdyaXRlOiB2YWx1ZSxcbiAgICBkaXNwb3NlV2hlbk5vZGVJc1JlbW92ZWQ6IGVsZW1lbnRcbiAgfSk7XG4gIHZhciBuZXdWQSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBuZXdETztcbiAgfTtcblxuICBrby5iaW5kaW5nSGFuZGxlcnMudmFsdWUuaW5pdChlbGVtZW50LCBuZXdWQSwgYWxsQmluZGluZ3MpO1xuXG4gIHZhciBjaGFuZ2VQcm9wYWdhdG9yID0gZnVuY3Rpb24oZXZlbnQsIGNvbG9yKSB7XG4gICAgaWYgKHR5cGVvZiBjb2xvciAhPT0gJ3VuZGVmaW5lZCcpIG5ld0RPKGNvbG9yKTtcbiAgfTtcbiAgJChlbGVtZW50KS5vbignY2hhbmdlLmNvbG9yJywgY2hhbmdlUHJvcGFnYXRvcik7XG5cbiAga28uY29tcHV0ZWQoe1xuICAgIHJlYWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG9wdCA9IHtcbiAgICAgICAgY29sb3I6IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUobmV3RE8pLFxuICAgICAgICBzaG93T246ICdidXR0b24nXG4gICAgICB9O1xuICAgICAgZm9yICh2YXIgcHJvcCBpbiB2YSlcbiAgICAgICAgaWYgKHByb3AgIT09ICdjb2xvcicgJiYgdmEuaGFzT3duUHJvcGVydHkocHJvcCkpIG9wdFtwcm9wXSA9IGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUodmFbcHJvcF0pO1xuICAgICAgJChlbGVtZW50KS5jb2xvcnBpY2tlcihvcHQpO1xuICAgIH0sXG4gICAgZGlzcG9zZVdoZW5Ob2RlSXNSZW1vdmVkOiBlbGVtZW50XG4gIH0pO1xuXG4gIGtvLnV0aWxzLmRvbU5vZGVEaXNwb3NhbC5hZGREaXNwb3NlQ2FsbGJhY2soZWxlbWVudCwgZnVuY3Rpb24oKSB7XG4gICAgJChlbGVtZW50KS5vZmYoJ2NoYW5nZS5jb2xvcicsIGNoYW5nZVByb3BhZ2F0b3IpO1xuICAgICQoZWxlbWVudCkuY29sb3JwaWNrZXIoJ2Rlc3Ryb3knKTtcbiAgfSk7XG5cbn07XG5rb2pxdWkudXRpbHMucmVnaXN0ZXIoQ29sb3JQaWNrZXIpOyJdfQ==","deps":{"./../../../bower_components/evol-colorpicker/js/evol.colorpicker.min.js":"/Users/denea/mos/bower_components/evol-colorpicker/js/evol.colorpicker.min.js"}},"/Users/denea/mos/src/js/ko-bindings.js":{"file":"/Users/denea/mos/src/js/ko-bindings.js","source":"\"use strict\";require(\"./../../bower_components/knockout-sortable/build/knockout-sortable.min.js\"),require(\"./bindings/jqueryui-spinner.js\"),require(\"./bindings/jqueryui-tabs.js\"),require(\"./bindings/colorpicker.js\"),require(\"./bindings/blocks.js\"),require(\"./bindings/csstext.js\"),require(\"./bindings/bind-iframe.js\"),require(\"./bindings/droppable.js\"),require(\"./bindings/fileupload.js\"),require(\"./bindings/virtuals.js\"),require(\"./bindings/wysiwygs.js\"),require(\"./bindings/scrollfix.js\"),require(\"./bindings/if-subs.js\"),require(\"./bindings/extsortables.js\"),require(\"./bindings/eventable.js\"),require(\"./bindings/tooltips.js\"),require(\"./bindings/extender-pagination.js\"),require(\"./bindings/validated-value.js\"),require(\"./bindings/scrollintoview.js\");\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtvLWJpbmRpbmdzLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiXSwibWFwcGluZ3MiOiJBQUFBLFlBRUFBLFNBQVEscUJBRVJBLFFBQVEsa0NBQ1JBLFFBQVEsK0JBQ1JBLFFBQVEsNkJBQ1JBLFFBQVEsd0JBQ1JBLFFBQVEseUJBQ1JBLFFBQVEsNkJBQ1JBLFFBQVEsMkJBQ1JBLFFBQVEsNEJBQ1JBLFFBQVEsMEJBQ1JBLFFBQVEsMEJBQ1JBLFFBQVEsMkJBQ1JBLFFBQVEseUJBQ1JBLFFBQVEsOEJBQ1JBLFFBQVEsMkJBQ1JBLFFBQVEsMEJBQ1JBLFFBQVEscUNBQ1JBLFFBQVEsaUNBQ1JBLFFBQVEiLCJmaWxlIjoib3V0LmpzLm1hcCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5yZXF1aXJlKFwia25vY2tvdXQtc29ydGFibGVcIik7XG5cbnJlcXVpcmUoXCIuL2JpbmRpbmdzL2pxdWVyeXVpLXNwaW5uZXIuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9qcXVlcnl1aS10YWJzLmpzXCIpO1xucmVxdWlyZShcIi4vYmluZGluZ3MvY29sb3JwaWNrZXIuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9ibG9ja3MuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9jc3N0ZXh0LmpzXCIpO1xucmVxdWlyZShcIi4vYmluZGluZ3MvYmluZC1pZnJhbWUuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9kcm9wcGFibGUuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9maWxldXBsb2FkLmpzXCIpO1xucmVxdWlyZShcIi4vYmluZGluZ3MvdmlydHVhbHMuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy93eXNpd3lncy5qc1wiKTtcbnJlcXVpcmUoXCIuL2JpbmRpbmdzL3Njcm9sbGZpeC5qc1wiKTtcbnJlcXVpcmUoXCIuL2JpbmRpbmdzL2lmLXN1YnMuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9leHRzb3J0YWJsZXMuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9ldmVudGFibGUuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy90b29sdGlwcy5qc1wiKTtcbnJlcXVpcmUoXCIuL2JpbmRpbmdzL2V4dGVuZGVyLXBhZ2luYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy92YWxpZGF0ZWQtdmFsdWUuanNcIik7XG5yZXF1aXJlKFwiLi9iaW5kaW5ncy9zY3JvbGxpbnRvdmlldy5qc1wiKTsiXX0=","deps":{"./bindings/csstext.js":"/Users/denea/mos/src/js/bindings/csstext.js","./bindings/droppable.js":"/Users/denea/mos/src/js/bindings/droppable.js","./bindings/extender-pagination.js":"/Users/denea/mos/src/js/bindings/extender-pagination.js","./../../bower_components/knockout-sortable/build/knockout-sortable.min.js":"/Users/denea/mos/bower_components/knockout-sortable/build/knockout-sortable.min.js","./bindings/virtuals.js":"/Users/denea/mos/src/js/bindings/virtuals.js","./bindings/fileupload.js":"/Users/denea/mos/src/js/bindings/fileupload.js","./bindings/scrollfix.js":"/Users/denea/mos/src/js/bindings/scrollfix.js","./bindings/eventable.js":"/Users/denea/mos/src/js/bindings/eventable.js","./bindings/if-subs.js":"/Users/denea/mos/src/js/bindings/if-subs.js","./bindings/tooltips.js":"/Users/denea/mos/src/js/bindings/tooltips.js","./bindings/validated-value.js":"/Users/denea/mos/src/js/bindings/validated-value.js","./bindings/scrollintoview.js":"/Users/denea/mos/src/js/bindings/scrollintoview.js","./bindings/jqueryui-spinner.js":"/Users/denea/mos/src/js/bindings/jqueryui-spinner.js","./bindings/bind-iframe.js":"/Users/denea/mos/src/js/bindings/bind-iframe.js","./bindings/blocks.js":"/Users/denea/mos/src/js/bindings/blocks.js","./bindings/extsortables.js":"/Users/denea/mos/src/js/bindings/extsortables.js","./bindings/jqueryui-tabs.js":"/Users/denea/mos/src/js/bindings/jqueryui-tabs.js","./bindings/wysiwygs.js":"/Users/denea/mos/src/js/bindings/wysiwygs.js","./bindings/colorpicker.js":"/Users/denea/mos/src/js/bindings/colorpicker.js"}},"/Users/denea/mos/bower_components/knockoutjs-reactor/src/knockout.reactor.js":{"file":"/Users/denea/mos/bower_components/knockoutjs-reactor/src/knockout.reactor.js","source":"(function (global){\n!function(e){\"function\"==typeof require&&\"object\"==typeof exports&&\"object\"==typeof module?e((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null)):\"function\"==typeof define&&define.amd?define([\"knockout\"],e):e(window.ko)}(function(e){e.subscribable.fn.watch=function(t,o,n,i){var a=typeof t;return\"boolean\"===a||\"undefined\"===a?e.watch(this,{enabled:t!==!1}):\"function\"!==a||e.isSubscribable(t)?e.watch(t,o,n,i||this):e.watch(this,o||{},t,i||this),this},e.watch=function(t,o,n,i){function a(s,d,c,u,f,p){if(s&&0!==o.depth&&(-1===o.depth||c.length<(o.depth||1))){if(o.watchedOnly&&!s.watchable&&s!=t)return;if((o.enabled===!1||o.enabled===!0)&&(s.watchable=o.enabled),s.watchable===!1)return;o.seal===!0&&(s.watchable=!1);var b=typeof s;if(\"object\"===b||\"function\"===b){if(s._watcher===i)return;if(o.hide&&e.utils.arrayIndexOf(o.hide,s)>-1)return;var m=[].concat(c,d&&d!==t?d:[]);if(\"function\"!==b){if(\"[object Object]\"===Object.prototype.toString.call(s))e.utils.objectForEach(s,function(t,n){if(n=o.getter?o.getter.call(i,m,s,t):n){if(o.wrap){var r=Object.prototype.toString.call(n);\"[object Function]\"!==r&&\"[object Object]\"!==r&&(o.beforeWrap&&o.beforeWrap.call(i,m,s,n)===!1||(n=s[t]=\"[object Array]\"===r?e.observableArray(n):e.observable(n)))}o.unloop&&(n._watcher=u?void 0:i);var l=a(n,f?null:s,m,u,null,t);o.tagFields&&void 0===n._fieldName&&(l||\"parentsOnly\"!==o.tagFields&&\"function\"==typeof n||\"object\"==typeof n)&&(n._fieldName=t)}});else if(o.hideArrays!==!0)for(var g=0;g<s.length;g++)a(s[g],f?null:s,m,u);return!0}if(\"function\"==typeof s.notifySubscribers&&n){if(o.enabled===!0&&s.watchable===!1)return;if(u||!o.beforeWatch||o.beforeWatch.call(i,m,s,p)!==!1){var h=\"function\"==typeof s.pop;if(u?r(s):l(s,h,m,f),h)return a(s(),f?null:s,m,u,!0),!0;if(o.hideWrappedValues!==!0)return a(s(),f?null:s,m,u,!0)}}}}}function r(e){var t=e[s];if(!t)throw\"Subscriptions field (.\"+s+\") not defined for observable child \"+(e._fieldName||\"\");if(t.change)for(var n=t.change.length-1;n>=0;n--)t.change[n]._watcher===i&&t.change[n].dispose();if(t.beforeChange&&(o.mutable||o.oldValues>0))for(var n=t.beforeChange.length-1;n>=0;n--)t.beforeChange[n]._watcher===i&&t.beforeChange[n].dispose();if(t.arrayChange)for(var n=t.arrayChange.length-1;n>=0;n--)t.arrayChange[n]._watcher===i&&t.arrayChange[n].dispose()}function l(t,r,l,s){r?t.subscribe(function(o){e.utils.arrayForEach(o,function(e){var o=n.call(i,l,t,e);void 0!==o&&i(o),e.moved||setTimeout(function(){a(e.value,s?null:t,l,\"deleted\"===e.status)},0)})},void 0,\"arrayChange\")._watcher=i:(t.subscribe(function(){if(t.watchable!==!1){var e=n.call(i,l,t);void 0!==e&&i(e),o.mutable&&\"object\"==typeof t()&&a(t(),s?null:t,l)}},null,\"change\")._watcher=i,(o.oldValues>0||o.mutable)&&(t.subscribe(function(e){if(o.oldValues>0){var n=t.oldValues?t.oldValues:t.oldValues=[];for(n.unshift(e);n.length>o.oldValues;)n.pop()}o.mutable&&\"object\"==typeof e&&a(e,s?null:t,l,!1,!0)},null,\"beforeChange\")._watcher=i))}\"function\"==typeof o&&(i=i||n,n=o,o={}),i=i||this;var s;switch(\"function\"==typeof e.subscription||e.version){case!0:s=\"_subscriptions\";break;case\"3.0.0\":s=\"F\";break;case\"3.1.0\":s=\"H\";break;case\"3.2.0\":s=\"M\";break;case\"3.3.0\":s=\"G\";break;case\"3.4.0\":s=\"K\";break;case\"3.4.1\":s=\"K\";break;default:throw\"Unsupported Knockout version. Only v3.0.0 to v3.4.1 are supported when minified. Current version is \"+e.version}return\"function\"!=typeof t||e.isSubscribable(t)?(a(t,null,[]),{dispose:function(){a(t,null,[],!0)}}):e.computed(t,n,o)}});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/denea/mos/bower_components/knockout-undomanager/knockout-undomanager.js":{"file":"/Users/denea/mos/bower_components/knockout-undomanager/knockout-undomanager.js","source":"(function (global){\n!function(e){\"function\"==typeof require&&\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),require(\"./../knockoutjs-reactor/src/knockout.reactor.js\")):\"function\"==typeof define&&define.amd?define([\"knockout\",\"knockoutjs-reactor\",\"exports\"],e):e(ko,ko.watch)}(function(e,t){var o=function(o,i){var n,a=e.observableArray(),r=e.observableArray(),l=0,d=1,s=2,c=l,u=0,p=1,f=2,b=3,m=u,g={levels:100,undoLabel:\"undo (#COUNT#)\",redoLabel:\"redo (#COUNT#)\"};i=\"object\"==typeof i?e.utils.extend(g,i):g;var v=function(e){c==d?h(e,r):c==s?h(e,a):c==l&&(h(e,a),r.removeAll())},k=function(e,t){return\"undefined\"!=typeof e.mergedAction?e.mergedAction(t):null},h=function(e,t){if(t().length>0){var o=k(t()[t().length-1],e);if(null!==o)return t()[t().length-1]=o,void 0}t().length>=i.levels&&t.shift(),n=t,t.push(e)},y=function(t,o,i){return{name:e.computed(function(){return e.utils.unwrapObservable(t).replace(/#COUNT#/,i().length)}),enabled:e.computed(function(){return 0!==i().length}),execute:function(){var e=i.pop();if(e){var t=c;c=o;var a=m;m=b,e(),w(n),m=a,c=t}return!0}}},w=function(e){if(\"undefined\"==typeof e)throw\"Unexpected operation: stack cleaner called with undefined stack\";e().length>0&&\"undefined\"!=typeof e()[e().length-1].mergedAction&&delete e()[e().length-1].mergedAction},x=function(e,t){var o=function(e,t){e(),t()}.bind(void 0,e,t);return\"undefined\"!=typeof e.mergedAction&&(o.mergedAction=e.mergedAction),o},$=function(e,t,o){if(\"undefined\"!=typeof t)e(t);else{if(!o)throw\"Unexpected condition: no item and no child.oldValues!\";if(\"deleted\"==o.status)e.splice(o.index,0,o.value);else{if(\"added\"!=o.status)throw\"Unsupproted item.status: \"+o.status;e.splice(o.index,1)}}},C=function(e,t,o,i,n){return e.bind(void 0,o,i,n)},S=C,q=function(e,t,o){var i=\"undefined\"!=typeof t.oldValues?t.oldValues[0]:void 0,n=S($,e,t,i,o);m!=p&&(m==b?\"undefined\"!=typeof n&&(n.mergedAction=function(e){return\"undefined\"!=typeof e.mergeMe&&e.mergeMe?x(e,this):null},n.mergeMe=!0):\"undefined\"!=typeof n&&(t.oldValues&&m==f&&(n.mergedAction=function(e,t,o){return\"object\"==typeof o.mergeableAction&&e==o.mergeableAction.child?this:null}.bind(n,t,o),n.mergeableAction={child:t,item:o}),o&&\"deleted\"==o.status&&(n.mergedAction=function(e,t,o){return\"object\"==typeof o.mergeableMove&&t.value==o.mergeableMove.item.value?x(o,this):(console.log(\"UR\",\"not mergeable\",typeof o.mergeableMove),null)}.bind(n,t,o)),o&&\"added\"==o.status&&(n.mergeableMove={child:t,item:o})),\"undefined\"!=typeof n&&v(n))},O={depth:-1,oldValues:1,mutable:!0,tagFields:!0},M={},T=\"function\"==typeof t?t:e.watch,H=T(o,O,q,M);return{push:v,undoCommand:y(i.undoLabel,d,a),redoCommand:y(i.redoLabel,s,r),reset:function(){a.removeAll(),r.removeAll()},setModeOnce:function(){m=f,w(a)},setModeMerge:function(){m=b,w(a)},setModeNormal:function(){m=u,w(a)},setModeIgnore:function(){m=p,w(a)},setUndoActionMaker:function(e){S=e},dispose:function(){H.dispose()}}};return o});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../knockoutjs-reactor/src/knockout.reactor.js":"/Users/denea/mos/bower_components/knockoutjs-reactor/src/knockout.reactor.js"}},"/Users/denea/mos/src/js/undomanager/undomain.js":{"file":"/Users/denea/mos/src/js/undomanager/undomain.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),undoManager=require(\"./../../../bower_components/knockout-undomanager/knockout-undomanager.js\"),undoserializer=require(\"./undoserializer.js\"),addUndoStackExtensionMaker=function(e){return function(t){t.contentListeners(t.contentListeners()+2);var o=undoManager(t.content,{levels:100,undoLabel:ko.computed(function(){return t.t(\"Undo (#COUNT#)\")}),redoLabel:ko.computed(function(){return t.t(\"Redo\")})});return t.undo=o.undoCommand,t.undo.execute=e.bind(t,\"undo\",t.undo.execute),t.redo=o.redoCommand,t.redo.execute=e.bind(t,\"redo\",t.redo.execute),t.undoReset=e.bind(t,\"undoReset\",o.reset),t.setUndoModeMerge=o.setModeMerge,t.setUndoModeOnce=o.setModeOnce,o.setModeIgnore(),o.setUndoActionMaker(undoserializer.makeUndoAction.bind(void 0,t.content)),undoserializer.watchEnabled(!0),{pause:function(){o.setModeIgnore()},run:function(){o.setModeOnce()},init:function(){o.setModeOnce()},dispose:function(){t.contentListeners(t.contentListeners()-2),undoserializer.watchEnabled(!1),o.dispose()}}}};module.exports=addUndoStackExtensionMaker;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy91bmRvbWFuYWdlci91bmRvbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFFQSxJQUFJLElBQUssUUFBUSxZQUNiLFlBQWMsUUFBUSx3QkFDdEIsZUFBaUIsUUFBUSx1QkFFekIsMkJBQTZCLFNBQVMsR0FDeEMsTUFBTyxVQUFTLEdBRWQsRUFBVSxpQkFBaUIsRUFBVSxtQkFBcUIsRUFHMUQsSUFBSSxHQUFnQixZQUFZLEVBQVUsU0FDeEMsT0FBUSxJQUNSLFVBQVcsR0FBRyxTQUFTLFdBQWEsTUFBTyxHQUFVLEVBQUUsb0JBQ3ZELFVBQVcsR0FBRyxTQUFTLFdBQWEsTUFBTyxHQUFVLEVBQUUsV0FhekQsT0FYQSxHQUFVLEtBQU8sRUFBYyxZQUMvQixFQUFVLEtBQUssUUFBVSxFQUF1QixLQUFLLEVBQVcsT0FBUSxFQUFVLEtBQUssU0FDdkYsRUFBVSxLQUFPLEVBQWMsWUFDL0IsRUFBVSxLQUFLLFFBQVUsRUFBdUIsS0FBSyxFQUFXLE9BQVEsRUFBVSxLQUFLLFNBQ3ZGLEVBQVUsVUFBWSxFQUF1QixLQUFLLEVBQVcsWUFBYSxFQUFjLE9BQ3hGLEVBQVUsaUJBQW1CLEVBQWMsYUFDM0MsRUFBVSxnQkFBa0IsRUFBYyxZQUMxQyxFQUFjLGdCQUNkLEVBQWMsbUJBQW1CLGVBQWUsZUFBZSxLQUFLLE9BQVcsRUFBVSxVQUN6RixlQUFlLGNBQWEsSUFHMUIsTUFBTyxXQUNMLEVBQWMsaUJBRWhCLElBQUssV0FDSCxFQUFjLGVBRWhCLEtBQU0sV0FDSixFQUFjLGVBRWhCLFFBQVMsV0FDUCxFQUFVLGlCQUFpQixFQUFVLG1CQUFxQixHQUMxRCxlQUFlLGNBQWEsR0FDNUIsRUFBYyxhQU90QixRQUFPLFFBQVUiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG52YXIgdW5kb01hbmFnZXIgPSByZXF1aXJlKCdrbm9ja291dC11bmRvbWFuYWdlcicpO1xudmFyIHVuZG9zZXJpYWxpemVyID0gcmVxdWlyZShcIi4vdW5kb3NlcmlhbGl6ZXIuanNcIik7XG5cbnZhciBhZGRVbmRvU3RhY2tFeHRlbnNpb25NYWtlciA9IGZ1bmN0aW9uKHBlcmZvcm1hbmNlQXdhcmVDYWxsZXIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZpZXdNb2RlbCkge1xuXG4gICAgdmlld01vZGVsLmNvbnRlbnRMaXN0ZW5lcnModmlld01vZGVsLmNvbnRlbnRMaXN0ZW5lcnMoKSArIDIpO1xuXG4gICAgLy8gVE9ETyB0aGUgbGFiZWxzIHNob3VsZCBiZSBjb21wdXRlZCBvYnNlcnZhYmxlcyAobmVlZHMgY2hhbmdlcyBpbiB1bmRvbWFuYWdlciBwcm9qZWN0cylcbiAgICB2YXIgdW5kb1JlZG9TdGFjayA9IHVuZG9NYW5hZ2VyKHZpZXdNb2RlbC5jb250ZW50LCB7XG4gICAgICBsZXZlbHM6IDEwMCxcbiAgICAgIHVuZG9MYWJlbDoga28uY29tcHV0ZWQoZnVuY3Rpb24oKSB7IHJldHVybiB2aWV3TW9kZWwudChcIlVuZG8gKCNDT1VOVCMpXCIpOyB9KSxcbiAgICAgIHJlZG9MYWJlbDoga28uY29tcHV0ZWQoZnVuY3Rpb24oKSB7IHJldHVybiB2aWV3TW9kZWwudChcIlJlZG9cIik7IH0pXG4gICAgfSk7XG4gICAgdmlld01vZGVsLnVuZG8gPSB1bmRvUmVkb1N0YWNrLnVuZG9Db21tYW5kO1xuICAgIHZpZXdNb2RlbC51bmRvLmV4ZWN1dGUgPSBwZXJmb3JtYW5jZUF3YXJlQ2FsbGVyLmJpbmQodmlld01vZGVsLCAndW5kbycsIHZpZXdNb2RlbC51bmRvLmV4ZWN1dGUpO1xuICAgIHZpZXdNb2RlbC5yZWRvID0gdW5kb1JlZG9TdGFjay5yZWRvQ29tbWFuZDtcbiAgICB2aWV3TW9kZWwucmVkby5leGVjdXRlID0gcGVyZm9ybWFuY2VBd2FyZUNhbGxlci5iaW5kKHZpZXdNb2RlbCwgJ3JlZG8nLCB2aWV3TW9kZWwucmVkby5leGVjdXRlKTtcbiAgICB2aWV3TW9kZWwudW5kb1Jlc2V0ID0gcGVyZm9ybWFuY2VBd2FyZUNhbGxlci5iaW5kKHZpZXdNb2RlbCwgJ3VuZG9SZXNldCcsIHVuZG9SZWRvU3RhY2sucmVzZXQpO1xuICAgIHZpZXdNb2RlbC5zZXRVbmRvTW9kZU1lcmdlID0gdW5kb1JlZG9TdGFjay5zZXRNb2RlTWVyZ2U7XG4gICAgdmlld01vZGVsLnNldFVuZG9Nb2RlT25jZSA9IHVuZG9SZWRvU3RhY2suc2V0TW9kZU9uY2U7XG4gICAgdW5kb1JlZG9TdGFjay5zZXRNb2RlSWdub3JlKCk7XG4gICAgdW5kb1JlZG9TdGFjay5zZXRVbmRvQWN0aW9uTWFrZXIodW5kb3NlcmlhbGl6ZXIubWFrZVVuZG9BY3Rpb24uYmluZCh1bmRlZmluZWQsIHZpZXdNb2RlbC5jb250ZW50KSk7XG4gICAgdW5kb3NlcmlhbGl6ZXIud2F0Y2hFbmFibGVkKHRydWUpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdXNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdW5kb1JlZG9TdGFjay5zZXRNb2RlSWdub3JlKCk7XG4gICAgICB9LFxuICAgICAgcnVuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdW5kb1JlZG9TdGFjay5zZXRNb2RlT25jZSgpO1xuICAgICAgfSxcbiAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB1bmRvUmVkb1N0YWNrLnNldE1vZGVPbmNlKCk7XG4gICAgICB9LFxuICAgICAgZGlzcG9zZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZpZXdNb2RlbC5jb250ZW50TGlzdGVuZXJzKHZpZXdNb2RlbC5jb250ZW50TGlzdGVuZXJzKCkgLSAyKTtcbiAgICAgICAgdW5kb3NlcmlhbGl6ZXIud2F0Y2hFbmFibGVkKGZhbHNlKTtcbiAgICAgICAgdW5kb1JlZG9TdGFjay5kaXNwb3NlKCk7XG4gICAgICB9XG4gICAgfTtcblxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBhZGRVbmRvU3RhY2tFeHRlbnNpb25NYWtlcjsiXX0=","deps":{"./undoserializer.js":"/Users/denea/mos/src/js/undomanager/undoserializer.js","./../../../bower_components/knockout-undomanager/knockout-undomanager.js":"/Users/denea/mos/bower_components/knockout-undomanager/knockout-undomanager.js"}},"/Users/denea/mos/src/js/bindings/script-template.js":{"file":"/Users/denea/mos/src/js/bindings/script-template.js","source":"(function (global){\n\"use strict\";function pushTemplate(e,t){var o=global.document.createElement(\"script\");o.setAttribute(\"type\",\"text/html\"),o.setAttribute(\"id\",e),o.text=t,global.document.body.appendChild(o)}function removeTemplate(e){var t=global.document.getElementById(e);t&&t.parentNode.removeChild(t)}function init(){}function getTemplateContent(e){var t=global.document.getElementById(e);return t?t.innerHTML:void 0}module.exports={init:init,addTemplate:pushTemplate,removeTemplate:removeTemplate,getTemplateContent:getTemplateContent};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9zY3JpcHQtdGVtcGxhdGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBR0EsU0FBUyxjQUFhLEVBQWMsR0FDbEMsR0FBSSxHQUFZLE9BQU8sU0FBUyxjQUFjLFNBQzlDLEdBQVUsYUFBYSxPQUFRLGFBQy9CLEVBQVUsYUFBYSxLQUFNLEdBQzdCLEVBQVUsS0FBTyxFQUNqQixPQUFPLFNBQVMsS0FBSyxZQUFZLEdBR25DLFFBQVMsZ0JBQWUsR0FDdEIsR0FBSSxHQUFLLE9BQU8sU0FBUyxlQUFlLEVBQ3BDLElBQUksRUFBRyxXQUFXLFlBQVksR0FHcEMsUUFBUyxTQUVULFFBQVMsb0JBQW1CLEdBQzFCLEdBQUksR0FBSyxPQUFPLFNBQVMsZUFBZSxFQUN4QyxPQUFJLEdBQVcsRUFBRyxVQUNOLE9BR2QsT0FBTyxTQUNMLEtBQU0sS0FDTixZQUFhLGFBQ2IsZUFBZ0IsZUFDaEIsbUJBQW9CIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIGdsb2JhbHMgZ2xvYmFsOiBmYWxzZSAqL1xuXG5mdW5jdGlvbiBwdXNoVGVtcGxhdGUodGVtcGxhdGVOYW1lLCB0ZW1wbGF0ZVRleHQpIHtcbiAgdmFyIHNjcmlwdFRhZyA9IGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgc2NyaXB0VGFnLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0L2h0bWwnKTtcbiAgc2NyaXB0VGFnLnNldEF0dHJpYnV0ZSgnaWQnLCB0ZW1wbGF0ZU5hbWUpO1xuICBzY3JpcHRUYWcudGV4dCA9IHRlbXBsYXRlVGV4dDtcbiAgZ2xvYmFsLmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0VGFnKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlVGVtcGxhdGUodGVtcGxhdGVOYW1lKSB7XG4gIHZhciBlbCA9IGdsb2JhbC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0ZW1wbGF0ZU5hbWUpO1xuICBpZiAoZWwpIGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWwpO1xufVxuXG5mdW5jdGlvbiBpbml0KCkge31cblxuZnVuY3Rpb24gZ2V0VGVtcGxhdGVDb250ZW50KGlkKSB7XG4gIHZhciBlbCA9IGdsb2JhbC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gIGlmIChlbCkgcmV0dXJuIGVsLmlubmVySFRNTDtcbiAgZWxzZSByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaW5pdDogaW5pdCxcbiAgYWRkVGVtcGxhdGU6IHB1c2hUZW1wbGF0ZSxcbiAgcmVtb3ZlVGVtcGxhdGU6IHJlbW92ZVRlbXBsYXRlLFxuICBnZXRUZW1wbGF0ZUNvbnRlbnQ6IGdldFRlbXBsYXRlQ29udGVudFxufTsiXX0=","deps":{}},"/Users/denea/mos/src/js/bindings/string-template.js":{"file":"/Users/denea/mos/src/js/bindings/string-template.js","source":"(function (global){\n\"use strict\";function createStringTemplateEngine(e){var t=e.makeTemplateSource;return e.makeTemplateSource=function(e){return\"undefined\"!=typeof templates[e]?new ko.templateSources.stringTemplate(e,templates[e]):t(e)},e}function pushTemplate(e,t){templates[e]=t}function removeTemplate(e){\"undefined\"!=typeof templates[e]?templates[e]=void 0:origTemplateSystem.removeTemplate(e)}function init(){ko.setTemplateEngine(createStringTemplateEngine(new ko.nativeTemplateEngine))}function getTemplateContent(e){return\"undefined\"!=typeof templates[e]?templates[e]:origTemplateSystem.getTemplateContent(e)}var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),origTemplateSystem=require(\"./script-template.js\"),templates={};ko.templateSources.stringTemplate=function(e,t){this.templateName=e,this.template=t,this._data={}},ko.utils.extend(ko.templateSources.stringTemplate.prototype,{data:function(e,t){return 1===arguments.length?this._data[e]:(this._data[e]=t,void 0)},text:function(e){return 0===arguments.length?this.template:(this.template=e,void 0)}}),module.exports={init:init,addTemplate:pushTemplate,removeTemplate:removeTemplate,getTemplateContent:getTemplateContent};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9iaW5kaW5ncy9zdHJpbmctdGVtcGxhdGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBa0NBLFNBQVMsNEJBQTJCLEdBQ2xDLEdBQUksR0FBTyxFQUFlLGtCQVExQixPQVBBLEdBQWUsbUJBQXFCLFNBQVMsR0FDM0MsTUFBdUMsbUJBQTVCLFdBQVUsR0FDWixHQUFJLElBQUcsZ0JBQWdCLGVBQWUsRUFBYyxVQUFVLElBRTlELEVBQUssSUFHVCxFQUdULFFBQVMsY0FBYSxFQUFjLEdBQ2xDLFVBQVUsR0FBZ0IsRUFHNUIsUUFBUyxnQkFBZSxHQUNpQixtQkFBNUIsV0FBVSxHQUNuQixVQUFVLEdBQWdCLE9BRTFCLG1CQUFtQixlQUFlLEdBSXRDLFFBQVMsUUFDUCxHQUFHLGtCQUFrQiwyQkFBMkIsR0FBSSxJQUFHLHVCQUd6RCxRQUFTLG9CQUFtQixHQUMxQixNQUE2QixtQkFBbEIsV0FBVSxHQUNaLFVBQVUsR0FFVixtQkFBbUIsbUJBQW1CLEdBaEVqRCxHQUFJLElBQUssUUFBUSxZQUNiLG1CQUFxQixRQUFRLHdCQUU3QixZQUdKLElBQUcsZ0JBQWdCLGVBQWlCLFNBQVMsRUFBYyxHQUN6RCxLQUFLLGFBQWUsRUFDcEIsS0FBSyxTQUFXLEVBQ2hCLEtBQUssVUFHUCxHQUFHLE1BQU0sT0FBTyxHQUFHLGdCQUFnQixlQUFlLFdBQ2hELEtBQU0sU0FBUyxFQUFLLEdBRWxCLE1BQXlCLEtBQXJCLFVBQVUsT0FDTCxLQUFLLE1BQU0sSUFHcEIsS0FBSyxNQUFNLEdBQU8sRUFBbEIsU0FFRixLQUFNLFNBQVMsR0FFYixNQUF5QixLQUFyQixVQUFVLE9BQ0wsS0FBSyxVQUVkLEtBQUssU0FBVyxFQUFoQixXQTBDSixPQUFPLFNBQ0wsS0FBTSxLQUNOLFlBQWEsYUFDYixlQUFnQixlQUNoQixtQkFBb0IiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG52YXIgb3JpZ1RlbXBsYXRlU3lzdGVtID0gcmVxdWlyZShcIi4vc2NyaXB0LXRlbXBsYXRlLmpzXCIpO1xuXG52YXIgdGVtcGxhdGVzID0ge307XG5cbi8vZGVmaW5lIGEgdGVtcGxhdGUgc291cmNlIHRoYXQgc2ltcGx5IHRyZWF0cyB0aGUgdGVtcGxhdGUgbmFtZSBhcyBpdHMgY29udGVudFxua28udGVtcGxhdGVTb3VyY2VzLnN0cmluZ1RlbXBsYXRlID0gZnVuY3Rpb24odGVtcGxhdGVOYW1lLCB0ZW1wbGF0ZSkge1xuICB0aGlzLnRlbXBsYXRlTmFtZSA9IHRlbXBsYXRlTmFtZTtcbiAgdGhpcy50ZW1wbGF0ZSA9IHRlbXBsYXRlO1xuICB0aGlzLl9kYXRhID0ge307XG59O1xuXG5rby51dGlscy5leHRlbmQoa28udGVtcGxhdGVTb3VyY2VzLnN0cmluZ1RlbXBsYXRlLnByb3RvdHlwZSwge1xuICBkYXRhOiBmdW5jdGlvbihrZXksIHZhbHVlKSB7XG4gICAgLy8gY29uc29sZS5sb2coXCJkYXRhXCIsIGtleSwgdmFsdWUsIHRoaXMudGVtcGxhdGVOYW1lKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2RhdGFba2V5XTtcbiAgICB9XG5cbiAgICB0aGlzLl9kYXRhW2tleV0gPSB2YWx1ZTtcbiAgfSxcbiAgdGV4dDogZnVuY3Rpb24odmFsdWUpIHtcbiAgICAvLyBjb25zb2xlLmxvZyhcInRleHRcIiwgdmFsdWUsIHRoaXMudGVtcGxhdGVOYW1lKVxuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gdGhpcy50ZW1wbGF0ZTtcbiAgICB9XG4gICAgdGhpcy50ZW1wbGF0ZSA9IHZhbHVlO1xuICB9XG59KTtcblxuXG4vL21vZGlmeSBhbiBleGlzdGluZyB0ZW1wbGF0ZUVuZ2luZSB0byB3b3JrIHdpdGggc3RyaW5nIHRlbXBsYXRlc1xuZnVuY3Rpb24gY3JlYXRlU3RyaW5nVGVtcGxhdGVFbmdpbmUodGVtcGxhdGVFbmdpbmUpIHtcbiAgdmFyIG9yaWcgPSB0ZW1wbGF0ZUVuZ2luZS5tYWtlVGVtcGxhdGVTb3VyY2U7XG4gIHRlbXBsYXRlRW5naW5lLm1ha2VUZW1wbGF0ZVNvdXJjZSA9IGZ1bmN0aW9uKHRlbXBsYXRlTmFtZSkge1xuICAgIGlmICh0eXBlb2YgdGVtcGxhdGVzW3RlbXBsYXRlTmFtZV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm4gbmV3IGtvLnRlbXBsYXRlU291cmNlcy5zdHJpbmdUZW1wbGF0ZSh0ZW1wbGF0ZU5hbWUsIHRlbXBsYXRlc1t0ZW1wbGF0ZU5hbWVdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG9yaWcodGVtcGxhdGVOYW1lKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB0ZW1wbGF0ZUVuZ2luZTtcbn1cblxuZnVuY3Rpb24gcHVzaFRlbXBsYXRlKHRlbXBsYXRlTmFtZSwgdGVtcGxhdGVUZXh0KSB7XG4gIHRlbXBsYXRlc1t0ZW1wbGF0ZU5hbWVdID0gdGVtcGxhdGVUZXh0O1xufVxuXG5mdW5jdGlvbiByZW1vdmVUZW1wbGF0ZSh0ZW1wbGF0ZU5hbWUpIHtcbiAgaWYgKHR5cGVvZiB0ZW1wbGF0ZXNbdGVtcGxhdGVOYW1lXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB0ZW1wbGF0ZXNbdGVtcGxhdGVOYW1lXSA9IHVuZGVmaW5lZDtcbiAgfSBlbHNlIHtcbiAgICBvcmlnVGVtcGxhdGVTeXN0ZW0ucmVtb3ZlVGVtcGxhdGUodGVtcGxhdGVOYW1lKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0KCkge1xuICBrby5zZXRUZW1wbGF0ZUVuZ2luZShjcmVhdGVTdHJpbmdUZW1wbGF0ZUVuZ2luZShuZXcga28ubmF0aXZlVGVtcGxhdGVFbmdpbmUoKSkpO1xufVxuXG5mdW5jdGlvbiBnZXRUZW1wbGF0ZUNvbnRlbnQoaWQpIHtcbiAgaWYgKHR5cGVvZiB0ZW1wbGF0ZXNbaWRdICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiB0ZW1wbGF0ZXNbaWRdO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBvcmlnVGVtcGxhdGVTeXN0ZW0uZ2V0VGVtcGxhdGVDb250ZW50KGlkKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaW5pdDogaW5pdCxcbiAgYWRkVGVtcGxhdGU6IHB1c2hUZW1wbGF0ZSxcbiAgcmVtb3ZlVGVtcGxhdGU6IHJlbW92ZVRlbXBsYXRlLFxuICBnZXRUZW1wbGF0ZUNvbnRlbnQ6IGdldFRlbXBsYXRlQ29udGVudFxufTsiXX0=","deps":{"./script-template.js":"/Users/denea/mos/src/js/bindings/script-template.js"}},"/Users/denea/mos/src/js/bindings/choose-template.js":{"file":"/Users/denea/mos/src/js/bindings/choose-template.js","source":"\"use strict\";module.exports=require(\"./string-template.js\");\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNob29zZS10ZW1wbGF0ZS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJtYXBwaW5ncyI6IkFBQUEsWUFLQUEsUUFBT0MsUUFBVUMsUUFBUSIsImZpbGUiOiJvdXQuanMubWFwIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIHNjcmlwdCB0ZW1wbGF0ZSBpcyB0aGUgb25lIHByb3ZpZGVkIGJ5IEtPIGFuZCBkZWFscyB3aXRoIHRlbXBhbHRlcyBkZWZpbmVkIGFzIDxzY3JpcHQgdHlwZT10ZXh0L2h0bWwuXG4vLyBzdHJpbmcgdGVtcGxhdGUgZGVmaW5lcyB0aGVtIGluIG1lbW9yeSBhbmQgYXZvaWRzIHBvbGx1dGluZyB0aGUgSFRNTDogc2VlbXMgdG8gd29yayBiZXR0ZXIgaW4gTW9zYWljby5cblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3N0cmluZy10ZW1wbGF0ZS5qcycpO1xuLy8gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3NjcmlwdC10ZW1wbGF0ZS5qcycpOyJdfQ==","deps":{"./string-template.js":"/Users/denea/mos/src/js/bindings/string-template.js"}},"/Users/denea/mos/bower_components/knockout.wrap/knockout.wrap.js":{"file":"/Users/denea/mos/bower_components/knockout.wrap/knockout.wrap.js","source":"(function (global){\n!function(e){\"function\"==typeof require&&\"object\"==typeof exports&&\"object\"==typeof module?e((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),exports):\"function\"==typeof define&&define.amd?define([\"knockout\",\"exports\"],e):e(ko,ko.wrap={})}(function(e,t){function o(e){var t=typeof e;return\"object\"===t&&(e?e.constructor==Date?t=\"date\":\"[object Array]\"==Object.prototype.toString.call(e)&&(t=\"array\"):t=\"null\"),t}function n(t){var o={};for(var n in t){var i=t[n];e.isComputed(i)||(o[n]=r(i))}return o}function i(e){var t=[];if(!e||0==e.length)return t;for(var o=0,n=e.length;n>o;++o)t.push(r(e[o]));return t}function r(t){var a=e.isObservable(t);if(a){var l=t();return r(l)}return\"array\"==o(t)?i(t):\"object\"==o(t)?n(t):t}function a(){f=[{obj:null,wrapped:null,lvl:\"\"}]}function l(t,o,n){for(var i=0;i<f.length;++i)if(f[i].obj===t)return f[i].wrapped;var r={};for(var a in t){var l=t[a];f.push({obj:t,wrapped:r,lvl:d()+\"/\"+a}),r[a]=u(l,o,n),f.pop()}return o&&o[d()]&&(r=o[d()](r)),c()&&e.track(r),n?e.observable(r):r}function s(t,o,n){var i=e.observableArray();if(!t||0==t.length)return i;for(var r=0,a=t.length;a>r;++r)i.push(u(t[r],o,n));return i}function d(){return f[f.length-1].lvl}function u(t,n,i){if(\"array\"==o(t))return s(t,n,i);if(\"object\"==o(t))return l(t,n,i);if(c()||\"function\"==typeof t)return t;var r=e.observable();return r(t),r}function c(){return null!=e.track}t.fromJS=function(e,t,o){return a(),u(e,t,o)},t.updateFromJS=function(t,o,n,i){return a(),t(e.utils.unwrapObservable(u(o,n,i)))},t.fromJSON=function(o,n,i){var r=e.utils.parseJson(o);return arguments[0]=r,t.fromJS.apply(this,n,i)},t.toJS=function(e){return r(e)},t.toJSON=function(o){var n=t.toJS(o);return e.utils.stringifyJson(n)};var f});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvd2VyX2NvbXBvbmVudHMva25vY2tvdXQud3JhcC9rbm9ja291dC53cmFwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Q0FHQyxTQUFVLEdBR2Esa0JBQVosVUFBNkMsZ0JBQVosVUFBMEMsZ0JBQVgsUUFFMUUsRUFBUSxRQUFRLFlBQWEsU0FDRCxrQkFBWCxTQUF5QixPQUFZLElBRXRELFFBQVEsV0FBWSxXQUFZLEdBR2hDLEVBQVEsR0FBSSxHQUFHLFVBRWYsU0FBVSxFQUFJLEdBZ0NaLFFBQVMsR0FBTyxHQUNuQixHQUFJLFNBQVcsRUFXZixPQVZVLFdBQU4sSUFDVyxFQUNJLEVBQU0sYUFBZSxLQUNyQixFQUFJLE9BQzRCLGtCQUF6QyxPQUFPLFVBQVUsU0FBUyxLQUFLLEtBQ3RCLEVBQUksU0FFdEIsRUFBSSxRQUdFLEVBSUosUUFBUyxHQUFhLEdBRXpCLEdBQUksS0FFSixLQUFLLEdBQUksS0FBSyxHQUNkLENBQ0ksR0FBSSxHQUFJLEVBQUUsRUFFTixHQUFHLFdBQVcsS0FHbEIsRUFBRSxHQUFLLEVBQU8sSUFHbEIsTUFBTyxHQUdKLFFBQVMsR0FBWSxHQUV4QixHQUFJLEtBRUosS0FBSyxHQUFpQixHQUFaLEVBQUUsT0FDUixNQUFPLEVBRVgsS0FBSyxHQUFJLEdBQUksRUFBRyxFQUFJLEVBQUUsT0FBWSxFQUFKLElBQVMsRUFDbkMsRUFBRSxLQUFLLEVBQU8sRUFBRSxJQUVwQixPQUFPLEdBR0osUUFBUyxHQUFPLEdBRW5CLEdBQUksR0FBZSxFQUFHLGFBQWEsRUFFbkMsSUFBSSxFQUNKLENBQ0ksR0FBSSxHQUFNLEdBRVYsT0FBTyxHQUFPLEdBSWQsTUFBaUIsU0FBYixFQUFPLEdBRVAsRUFBWSxHQUVNLFVBQWIsRUFBTyxHQUVaLEVBQWEsR0FJYixFQUtMLFFBQVMsS0FFTCxJQUFZLElBQUssS0FBTSxRQUFTLEtBQU0sSUFBSyxLQUsvQyxRQUFTLEdBQVcsRUFBRyxFQUFtQixHQUd0QyxJQUFLLEdBQUksR0FBSSxFQUFHLEVBQUksRUFBUSxTQUFVLEVBQ2xDLEdBQUksRUFBUSxHQUFHLE1BQVEsRUFDbkIsTUFBTyxHQUFRLEdBQUcsT0FJakMsSUFBSSxLQUVKLEtBQUssR0FBSSxLQUFLLEdBQ2QsQ0FDSSxHQUFJLEdBQUksRUFBRSxFQUVILEdBQVEsTUFBTSxJQUFLLEVBQUcsUUFBUyxFQUFHLElBQUssSUFBZSxJQUFNLElBRW5FLEVBQUUsR0FBSyxFQUFLLEVBQUcsRUFBbUIsR0FFM0IsRUFBUSxNQVNuQixNQU5JLElBQXFCLEVBQWtCLE9BQ3ZDLEVBQUksRUFBa0IsS0FBYyxJQUU3QixLQUNBLEVBQUcsTUFBTSxHQUVoQixFQUEwQixFQUFHLFdBQVcsR0FDckMsRUFHSixRQUFTLEdBQVUsRUFBRyxFQUFtQixHQUU1QyxHQUFJLEdBQUksRUFBRyxpQkFFWCxLQUFLLEdBQWlCLEdBQVosRUFBRSxPQUNSLE1BQU8sRUFFWCxLQUFLLEdBQUksR0FBSSxFQUFHLEVBQUksRUFBRSxPQUFZLEVBQUosSUFBUyxFQUNuQyxFQUFFLEtBQUssRUFBSyxFQUFFLEdBQUksRUFBbUIsR0FFekMsT0FBTyxHQVFKLFFBQVMsS0FFWixNQUFPLEdBQVEsRUFBUSxPQUFPLEdBQUcsSUFHOUIsUUFBUyxHQUFLLEVBQUcsRUFBbUIsR0FFdkMsR0FBaUIsU0FBYixFQUFPLEdBRVAsTUFBTyxHQUFVLEVBQUcsRUFBbUIsRUFFdEMsSUFBaUIsVUFBYixFQUFPLEdBRVosTUFBTyxHQUFXLEVBQUcsRUFBbUIsRUFJakMsSUFBSyxLQUErQixrQkFBTixHQU0xQixNQUFPLEVBSmQsSUFBSSxHQUFJLEVBQUcsWUFFWCxPQURBLEdBQUUsR0FDSyxFQU1aLFFBQVMsS0FFTCxNQUFtQixPQUFaLEVBQUcsTUE1TGQsRUFBUSxPQUFTLFNBQVMsRUFBVSxFQUFtQixHQUcxRCxNQURPLEtBQ0EsRUFBSyxFQUFVLEVBQW1CLElBS3RDLEVBQVEsYUFBZSxTQUFTLEVBQVksRUFBVSxFQUFtQixHQUc1RSxNQURPLEtBQ0EsRUFBVyxFQUFHLE1BQU0saUJBQWlCLEVBQUssRUFBVSxFQUFtQixNQUczRSxFQUFRLFNBQVcsU0FBVSxFQUFZLEVBQW1CLEdBQy9ELEdBQUksR0FBUyxFQUFHLE1BQU0sVUFBVSxFQUVoQyxPQURBLFdBQVUsR0FBSyxFQUNSLEVBQVEsT0FBTyxNQUFNLEtBQU0sRUFBbUIsSUFHbEQsRUFBUSxLQUFPLFNBQVUsR0FDNUIsTUFBTyxHQUFPLElBR1gsRUFBUSxPQUFTLFNBQVUsR0FDOUIsR0FBSSxHQUF3QixFQUFRLEtBQUssRUFDekMsT0FBTyxHQUFHLE1BQU0sY0FBYyxHQW1JM0IsSUFBSSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLy8gS25vY2tvdXQgRmFzdCBNYXBwaW5nIHYwLjFcbi8vIExpY2Vuc2U6IE1JVCAoaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHApXG5cbihmdW5jdGlvbiAoZmFjdG9yeSkge1xuXHQvLyBNb2R1bGUgc3lzdGVtcyBtYWdpYyBkYW5jZS5cblxuXHRpZiAodHlwZW9mIHJlcXVpcmUgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgZXhwb3J0cyA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiKSB7XG5cdFx0Ly8gQ29tbW9uSlMgb3IgTm9kZTogaGFyZC1jb2RlZCBkZXBlbmRlbmN5IG9uIFwia25vY2tvdXRcIlxuXHRcdGZhY3RvcnkocmVxdWlyZShcImtub2Nrb3V0XCIpLCBleHBvcnRzKTtcblx0fSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lW1wiYW1kXCJdKSB7XG5cdFx0Ly8gQU1EIGFub255bW91cyBtb2R1bGUgd2l0aCBoYXJkLWNvZGVkIGRlcGVuZGVuY3kgb24gXCJrbm9ja291dFwiXG5cdFx0ZGVmaW5lKFtcImtub2Nrb3V0XCIsIFwiZXhwb3J0c1wiXSwgZmFjdG9yeSk7XG5cdH0gZWxzZSB7XG5cdFx0Ly8gPHNjcmlwdD4gdGFnOiB1c2UgdGhlIGdsb2JhbCBga29gIG9iamVjdCwgYXR0YWNoaW5nIGEgYHdyYXBgIHByb3BlcnR5XG5cdFx0ZmFjdG9yeShrbywga28ud3JhcCA9IHt9KTtcblx0fVxufShmdW5jdGlvbiAoa28sIGV4cG9ydHMpIHtcbiAgICBcbiAgICAvLyB0aGlzIGZ1bmN0aW9uIG1pbWljcyBrby5tYXBwaW5nXG4gICAgZXhwb3J0cy5mcm9tSlMgPSBmdW5jdGlvbihqc09iamVjdCwgY29tcHV0ZWRGdW5jdGlvbnMsIG9ic2VydmFibGVPYmplY3RzKVxuICAgIHtcbiAgICAgICAgcmVzZXQoKTtcblx0cmV0dXJuIHdyYXAoanNPYmplY3QsIGNvbXB1dGVkRnVuY3Rpb25zLCBvYnNlcnZhYmxlT2JqZWN0cyk7XG4gICAgfVxuXG4gICAgLy8gdGhpcyBmdW5jdGlvbiB1bndyYXBzIHRoZSBvdXRlciBmb3IgYXNzaWduaW5nIHRoZSByZXN1bHQgdG8gYW4gb2JzZXJ2YWJsZVxuICAgIC8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vU3RldmVTYW5kZXJzb24va25vY2tvdXQvaXNzdWVzLzUxN1xuICAgIGV4cG9ydHMudXBkYXRlRnJvbUpTID0gZnVuY3Rpb24ob2JzZXJ2YWJsZSwganNPYmplY3QsIGNvbXB1dGVkRnVuY3Rpb25zLCBvYnNlcnZhYmxlT2JqZWN0cylcbiAgICB7XG4gICAgICAgIHJlc2V0KCk7XG5cdHJldHVybiBvYnNlcnZhYmxlKGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUod3JhcChqc09iamVjdCwgY29tcHV0ZWRGdW5jdGlvbnMsIG9ic2VydmFibGVPYmplY3RzKSkpO1xuICAgIH1cblxuICAgIGV4cG9ydHMuZnJvbUpTT04gPSBmdW5jdGlvbiAoanNvblN0cmluZywgY29tcHV0ZWRGdW5jdGlvbnMsIG9ic2VydmFibGVPYmplY3RzKSB7XG5cdHZhciBwYXJzZWQgPSBrby51dGlscy5wYXJzZUpzb24oanNvblN0cmluZyk7XG5cdGFyZ3VtZW50c1swXSA9IHBhcnNlZDtcblx0cmV0dXJuIGV4cG9ydHMuZnJvbUpTLmFwcGx5KHRoaXMsIGNvbXB1dGVkRnVuY3Rpb25zLCBvYnNlcnZhYmxlT2JqZWN0cyk7XG4gICAgfTtcbiAgICBcbiAgICBleHBvcnRzLnRvSlMgPSBmdW5jdGlvbiAob2JzZXJ2YWJsZSkge1xuXHRyZXR1cm4gdW53cmFwKG9ic2VydmFibGUpO1xuICAgIH1cblxuICAgIGV4cG9ydHMudG9KU09OID0gZnVuY3Rpb24gKG9ic2VydmFibGUpIHtcblx0dmFyIHBsYWluSmF2YVNjcmlwdE9iamVjdCA9IGV4cG9ydHMudG9KUyhvYnNlcnZhYmxlKTtcblx0cmV0dXJuIGtvLnV0aWxzLnN0cmluZ2lmeUpzb24ocGxhaW5KYXZhU2NyaXB0T2JqZWN0KTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gdHlwZU9mKHZhbHVlKSB7XG5cdHZhciBzID0gdHlwZW9mIHZhbHVlO1xuXHRpZiAocyA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGlmICh2YWx1ZS5jb25zdHJ1Y3RvciA9PSBEYXRlKVxuICAgICAgICAgICAgICAgICAgICBzID0gJ2RhdGUnO1xuXHRcdGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT0gJ1tvYmplY3QgQXJyYXldJylcbiAgICAgICAgICAgICAgICAgICAgcyA9ICdhcnJheSc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuXHRcdHMgPSAnbnVsbCc7XG4gICAgICAgICAgICB9XG5cdH1cblx0cmV0dXJuIHM7XG4gICAgfVxuXG4gICAgLy8gdW53cmFwcGluZ1xuICAgIGZ1bmN0aW9uIHVud3JhcE9iamVjdChvKVxuICAgIHtcblx0dmFyIHQgPSB7fTtcblxuXHRmb3IgKHZhciBrIGluIG8pXG5cdHtcblx0ICAgIHZhciB2ID0gb1trXTtcblxuXHQgICAgaWYgKGtvLmlzQ29tcHV0ZWQodikpXG5cdFx0Y29udGludWU7XG5cblx0ICAgIHRba10gPSB1bndyYXAodik7XG5cdH1cblxuXHRyZXR1cm4gdDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1bndyYXBBcnJheShhKVxuICAgIHtcblx0dmFyIHIgPSBbXTtcblxuXHRpZiAoIWEgfHwgYS5sZW5ndGggPT0gMClcblx0ICAgIHJldHVybiByO1xuXHRcblx0Zm9yICh2YXIgaSA9IDAsIGwgPSBhLmxlbmd0aDsgaSA8IGw7ICsraSlcblx0ICAgIHIucHVzaCh1bndyYXAoYVtpXSkpO1xuXG5cdHJldHVybiByO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVud3JhcCh2KVxuICAgIHtcblx0dmFyIGlzT2JzZXJ2YWJsZSA9IGtvLmlzT2JzZXJ2YWJsZSh2KTtcblxuXHRpZiAoaXNPYnNlcnZhYmxlKVxuXHR7XG5cdCAgICB2YXIgdmFsID0gdigpO1xuXG5cdCAgICByZXR1cm4gdW53cmFwKHZhbCk7XG5cdH1cblx0ZWxzZVxuXHR7XG5cdCAgICBpZiAodHlwZU9mKHYpID09IFwiYXJyYXlcIilcblx0ICAgIHtcblx0XHRyZXR1cm4gdW53cmFwQXJyYXkodik7XG5cdCAgICB9XG5cdCAgICBlbHNlIGlmICh0eXBlT2YodikgPT0gXCJvYmplY3RcIilcblx0ICAgIHtcblx0XHRyZXR1cm4gdW53cmFwT2JqZWN0KHYpO1xuXHQgICAgfVxuXHQgICAgZWxzZVxuXHQgICAge1xuXHRcdHJldHVybiB2O1xuXHQgICAgfVxuXHR9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVzZXQoKVxuICAgIHtcbiAgICAgICAgcGFyZW50cyA9IFt7b2JqOiBudWxsLCB3cmFwcGVkOiBudWxsLCBsdmw6IFwiXCJ9XTtcbiAgICB9ICAgIFxuICAgIFxuICAgIC8vIHdyYXBwaW5nXG5cbiAgICBmdW5jdGlvbiB3cmFwT2JqZWN0KG8sIGNvbXB1dGVkRnVuY3Rpb25zLCBvYnNlcnZhYmxlT2JqZWN0cylcbiAgICB7XG4gICAgICAgIC8vIGNoZWNrIGZvciBpbmZpbml0ZSByZWN1cnNpb25cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXJlbnRzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBpZiAocGFyZW50c1tpXS5vYmogPT09IG8pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFyZW50c1tpXS53cmFwcGVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cblx0dmFyIHQgPSB7fTtcblxuXHRmb3IgKHZhciBrIGluIG8pXG5cdHtcblx0ICAgIHZhciB2ID0gb1trXTtcblxuICAgICAgICAgICAgcGFyZW50cy5wdXNoKHtvYmo6IG8sIHdyYXBwZWQ6IHQsIGx2bDogY3VycmVudEx2bCgpICsgXCIvXCIgKyBrfSk7XG5cblx0ICAgIHRba10gPSB3cmFwKHYsIGNvbXB1dGVkRnVuY3Rpb25zLCBvYnNlcnZhYmxlT2JqZWN0cyk7XG5cbiAgICAgICAgICAgIHBhcmVudHMucG9wKCk7XG5cdH1cblxuXHRpZiAoY29tcHV0ZWRGdW5jdGlvbnMgJiYgY29tcHV0ZWRGdW5jdGlvbnNbY3VycmVudEx2bCgpXSlcblx0ICAgIHQgPSBjb21wdXRlZEZ1bmN0aW9uc1tjdXJyZW50THZsKCldKHQpO1xuXG4gICAgICAgIGlmIChoYXNFUzVQbHVnaW4oKSlcbiAgICAgICAgICAgIGtvLnRyYWNrKHQpO1xuXG5cdGlmIChvYnNlcnZhYmxlT2JqZWN0cykgcmV0dXJuIGtvLm9ic2VydmFibGUodCk7XG5cdHJldHVybiB0O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHdyYXBBcnJheShhLCBjb21wdXRlZEZ1bmN0aW9ucywgb2JzZXJ2YWJsZU9iamVjdHMpXG4gICAge1xuXHR2YXIgciA9IGtvLm9ic2VydmFibGVBcnJheSgpO1xuXG5cdGlmICghYSB8fCBhLmxlbmd0aCA9PSAwKVxuXHQgICAgcmV0dXJuIHI7XG5cblx0Zm9yICh2YXIgaSA9IDAsIGwgPSBhLmxlbmd0aDsgaSA8IGw7ICsraSlcblx0ICAgIHIucHVzaCh3cmFwKGFbaV0sIGNvbXB1dGVkRnVuY3Rpb25zLCBvYnNlcnZhYmxlT2JqZWN0cykpO1xuXG5cdHJldHVybiByO1xuICAgIH1cblxuICAgIC8vIGEgc3RhY2ssIHVzZWQgZm9yIHR3byBwdXJwb3NlczpcbiAgICAvLyAgLSBjaXJjdWxhciByZWZlcmVuY2UgY2hlY2tpbmdcbiAgICAvLyAgLSBjb21wdXRlZCBmdW5jdGlvbnNcbiAgICB2YXIgcGFyZW50cztcblxuICAgIGZ1bmN0aW9uIGN1cnJlbnRMdmwoKVxuICAgIHtcblx0cmV0dXJuIHBhcmVudHNbcGFyZW50cy5sZW5ndGgtMV0ubHZsO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHdyYXAodiwgY29tcHV0ZWRGdW5jdGlvbnMsIG9ic2VydmFibGVPYmplY3RzKVxuICAgIHtcblx0aWYgKHR5cGVPZih2KSA9PSBcImFycmF5XCIpXG5cdHtcblx0ICAgIHJldHVybiB3cmFwQXJyYXkodiwgY29tcHV0ZWRGdW5jdGlvbnMsIG9ic2VydmFibGVPYmplY3RzKTtcblx0fVxuXHRlbHNlIGlmICh0eXBlT2YodikgPT0gXCJvYmplY3RcIilcblx0e1xuXHQgICAgcmV0dXJuIHdyYXBPYmplY3QodiwgY29tcHV0ZWRGdW5jdGlvbnMsIG9ic2VydmFibGVPYmplY3RzKTtcblx0fVxuXHRlbHNlXG5cdHtcbiAgICAgICAgICAgIGlmICghaGFzRVM1UGx1Z2luKCkgJiYgdHlwZW9mIHYgIT09ICdmdW5jdGlvbicpXG4gICAgICAgICAgICB7XG5cdCAgICAgICAgdmFyIHQgPSBrby5vYnNlcnZhYmxlKCk7XG5cdCAgICAgICAgdCh2KTtcblx0ICAgICAgICByZXR1cm4gdDtcbiAgICAgICAgICAgIH0gZWxzZVxuICAgICAgICAgICAgICAgIHJldHVybiB2O1xuXHR9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFzRVM1UGx1Z2luKClcbiAgICB7XG4gICAgICAgIHJldHVybiBrby50cmFjayAhPSBudWxsO1xuICAgIH1cbn0pKTtcbiJdfQ==","deps":{}},"/Users/denea/mos/src/js/converter/wrapper.js":{"file":"/Users/denea/mos/src/js/converter/wrapper.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),kowrap=require(\"./../../../bower_components/knockout.wrap/knockout.wrap.js\"),console=require(\"./../../../bower_components/console-browserify/index.js\"),_getOptionsObject=function(e){for(var t=e.split(\"|\"),o={},n=0;n<t.length;n++){var i=t[n].split(\"=\");o[i[0]]=i.length>1?i[1]:i[0]}return o},_makeComputed=function(e,t,o,n,i,r){var a=ko.computed({read:function(){var o=e();if(null===o){var a=ko.utils.unwrapObservable(n);return\"undefined\"==typeof a||\"custom\"==a?ko.utils.unwrapObservable(t):r[a][i]}return o},write:function(a){var l,s=ko.utils.unwrapObservable(n);if(l=\"undefined\"==typeof s||\"custom\"==s?ko.utils.peekObservable(t):r[s][i],o)a==l?e(null):e(a);else{var d=ko.utils.peekObservable(e);(a!=l||null!==d)&&e(a)}}});return a},_nextVariantFunction=function(e,t,o){for(var n,i=e.utils.unwrapObservable(t),r=0;r<o.length&&(n=e.utils.peekObservable(o[r]),n!=i);r++);r==o.length&&(console.warn(\"Didn't find a variant!\",t,i,o),r=o.length-1);var a=r+1;a==o.length&&(a=0);var l=e.utils.peekObservable(o[a]);t(l)},_getVariants=function(e){var t,o=e._variant;if(\"object\"!=typeof e[o]||\"undefined\"==typeof e[o]._widget||\"string\"!=typeof e[o]._options&&\"boolean\"!==e[o]._widget)throw console.error(\"Unexpected variant declaration\",o,e[o]),\"Unexpected variant declaration: cannot find property \"+o+\" or its _options string and it is not a boolean\";return t=\"string\"==typeof e[o]._options?Object.keys(_getOptionsObject(e[o]._options)):[!0,!1]},_makeComputedFunction=function(e,t,o,n,i,r,a){if(\"undefined\"==typeof e){if(\"undefined\"==typeof n.utils.unwrapObservable(a).type)throw console.log(\"TODO ERROR Found a non-typed def \",e,a),\"Found a non-typed def \"+e;var l=n.utils.unwrapObservable(n.utils.unwrapObservable(a).type);e=t[l],\"object\"!=typeof e&&console.log(\"TODO ERROR Found a non-object def \",e,\"for\",l)}\"undefined\"==typeof i&&\"undefined\"!=typeof r&&r&&(i=a);var s=\"$root.content().\",d=e._globalStyles;if(\"undefined\"!=typeof d)for(var c in d)if(d.hasOwnProperty(c)){var u,f,p,b=\"$root.content().theme().scheme\";if(d[c].substr(0,s.length)!=s)throw\"UNEXPECTED globalStyle path (\"+d[c]+\") outside selfPath (\"+s+\")\";p=d[c].substr(s.length),f=i,b.substr(0,s.length)==s?u=b.substr(s.length):(console.log(\"IS THIS CORRECT?\",b,s),u=b);for(var m=f,g=p.split(\"().\"),h=\"\",v=!0,y=0;y<g.length;y++)f=n.utils.unwrapObservable(f)[g[y]],v?\"theme\"==g[y]&&(v=!1):(h.length>0&&(h+=\".\"),h+=g[y]);for(var k=u.split(\"().\"),w=0;w<k.length;w++)m=n.utils.unwrapObservable(m)[k[w]];for(var _=!0,x=c.split(\".\"),$=a,C=0;C<x.length;C++)$=n.utils.unwrapObservable($)[x[C]];if(!n.isObservable($))throw\"Unexpected non observable target \"+c+\"/\"+h;$._defaultComputed=_makeComputed($,f,_,m,h,o)}if(\"undefined\"!=typeof e._variant){for(var O=e._variant.split(\".\"),S=a,T=n.utils.unwrapObservable(a),A=0;A<O.length;A++)S=n.utils.unwrapObservable(S)[O[A]];if(\"undefined\"!=typeof S._defaultComputed&&(console.log(\"Found variant on a style property: beware variants should be only used on content properties because they don't match the theme fallback behaviour\",e._variant),S=S._defaultComputed),\"undefined\"==typeof S)throw console.log(\"ERROR looking for variant target\",e._variant,a),\"ERROR looking for variant target \"+e._variant;T._nextVariant=_nextVariantFunction.bind(S,n,S,_getVariants(e))}for(var E in e)if(e.hasOwnProperty(E)){var H=e[E];if(\"object\"==typeof H&&null!==H&&\"undefined\"!=typeof H._context&&\"block\"==H._context){var M=i[E](),P=_makeComputedFunction(t[E],t,o,n,i,r,M);a[E](P)}else if(\"object\"==typeof H&&null!==H&&\"blocks\"==H.type){for(var D,q,I,B=i[E](),j=B.blocks(),R=0;R<j.length;R++)D=n.utils.unwrapObservable(j[R]),q=n.utils.unwrapObservable(D.type),I=_makeComputedFunction(t[q],t,o,n,i,r,D),j[R](I);var U=B.blocks;_augmentBlocksObservable(U,_blockInstrumentFunction.bind(B,void 0,t,o,n,void 0,i,r)),i[E]._wrap=_makeBlocksWrap.bind(i[E],U._instrumentBlock),i[E]._unwrap=_unwrap.bind(i[E])}}return a},_augmentBlocksObservable=function(e,t){e._instrumentBlock=t,\"undefined\"==typeof e.origPush&&(e.origPush=e.push,e.push=_makePush.bind(e),e.origSplice=e.splice,e.splice=_makeSplice.bind(e))},_makeBlocksWrap=function(e,t){var o=ko.toJS(t),n=o.blocks;o.blocks=[];var i=kowrap.fromJS(o,void 0,!0)();_augmentBlocksObservable(i.blocks,e);for(var r=0;r<n.length;r++){var a=ko.toJS(n[r]);a.id=\"block_\"+r,i.blocks.push(a)}this(i)},_makePush=function(){if(arguments.length>1)throw\"Array push with multiple arguments not implemented\";if(arguments.length>0&&ko.isObservable(arguments[0])&&(\"function\"==typeof arguments[0]._unwrap?arguments[0]=arguments[0]._unwrap():console.log(\"WARN: pushing observable with no _unwrap function (TODO remove me, expected condition)\")),ko.isObservable(arguments[0]))return this.origPush.apply(this,arguments);var e=this._instrumentBlock(arguments[0]);return this.origPush.apply(this,[e])},_makeSplice=function(){if(arguments.length>3)throw\"Array splice with multiple objects not implemented\";if(arguments.length>2&&ko.isObservable(arguments[2])&&(\"function\"==typeof arguments[2]._unwrap?arguments[2]=arguments[2]._unwrap():console.log(\"WARN: splicing observable with no _unwrap function (TODO remove me, expected condition)\")),arguments.length>2&&!ko.isObservable(arguments[2])){var e=this._instrumentBlock(arguments[2]);return this.origSplice.apply(this,[arguments[0],arguments[1],e])}return this.origSplice.apply(this,arguments)},_blockInstrumentFunction=function(e,t,o,n,i,r,a,l){\"undefined\"==typeof i&&(i=l);var s;s={\"\":_makeComputedFunction.bind(i,e,t,o,n,r,a)};var d=kowrap.fromJS(i,s,!0);return d._unwrap=_unwrap.bind(d),d},_wrap=function(e,t){var o=ko.utils.unwrapObservable(e(ko,t,void 0,!0));this(o)},_unwrap=function(){return ko.toJS(this)},_modelInstrument=function(e,t,o){var n=_blockInstrumentFunction.bind(void 0,t,o,o.themes),i=n(ko,e,void 0,!0);return i._wrap=_wrap.bind(i,n),i._unwrap=_unwrap.bind(i),i};module.exports=_modelInstrument;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./../../../bower_components/knockout.wrap/knockout.wrap.js":"/Users/denea/mos/bower_components/knockout.wrap/knockout.wrap.js","./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/node_modules/os-browserify/browser.js":{"file":"/Users/denea/mos/node_modules/os-browserify/browser.js","source":"exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n","deps":{}},"/Users/denea/mos/src/js/converter/domutils.js":{"file":"/Users/denea/mos/src/js/converter/domutils.js","source":"(function (global){\n\"use strict\";function _extend(e,t){if(t)for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o]);return e}var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),objExtend=function(e,t){return\"function\"==typeof $.extend?$.extend(!0,e,t):_extend(e,JSON.parse(JSON.stringify(t)))},getAttribute=function(e,t){var o=$(e).attr(t);return\"undefined\"==typeof o&&(o=null),o},setAttribute=function(e,t,o){$(e).attr(t,o)},removeAttribute=function(e,t){$(e).removeAttr(t)},getInnerText=function(e){return $(e).text()},getInnerHtml=function(e){return $(e).html()},getLowerTagName=function(e){return\"\"===e.tagName&&\"string\"==typeof e.name?e.name.toLowerCase():\"\"!==e.tagName?e.tagName.toLowerCase():$(e).prop(\"tagName\").toLowerCase()},setContent=function(e,t){$(e).html(t)},replaceHtml=function(e,t){$(e).replaceWith(t)},removeElements=function(e,t){t&&\"undefined\"!=typeof e.detach&&e.detach(),e.remove()};module.exports={getAttribute:getAttribute,setAttribute:setAttribute,removeAttribute:removeAttribute,getInnerText:getInnerText,getInnerHtml:getInnerHtml,getLowerTagName:getLowerTagName,setContent:setContent,replaceHtml:replaceHtml,removeElements:removeElements,objExtend:objExtend};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9jb252ZXJ0ZXIvZG9tdXRpbHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFlBUUEsU0FBUyxTQUFRLEVBQVEsR0FDdkIsR0FBSSxFQUNGLElBQUssR0FBSSxLQUFRLEdBQ1gsRUFBTyxlQUFlLEtBQ3hCLEVBQU8sR0FBUSxFQUFPLEdBSTVCLE9BQU8sR0FWVCxHQUFJLEdBQUksUUFBUSxVQWFaLFVBQVksU0FBUyxFQUFLLEdBQzVCLE1BQXVCLGtCQUFaLEdBQUUsT0FDSixFQUFFLFFBQU8sRUFBTSxFQUFLLEdBRXBCLFFBQVEsRUFBSyxLQUFLLE1BQU0sS0FBSyxVQUFVLE1BSTlDLGFBQWUsU0FBUyxFQUFTLEdBQ25DLEdBQUksR0FBTSxFQUFFLEdBQVMsS0FBSyxFQUUxQixPQURrQixtQkFBUCxLQUFvQixFQUFNLE1BQzlCLEdBSUwsYUFBZSxTQUFTLEVBQVMsRUFBVyxHQUM5QyxFQUFFLEdBQVMsS0FBSyxFQUFXLElBSXpCLGdCQUFrQixTQUFTLEVBQVMsR0FDdEMsRUFBRSxHQUFTLFdBQVcsSUFJcEIsYUFBZSxTQUFTLEdBQzFCLE1BQU8sR0FBRSxHQUFTLFFBS2hCLGFBQWUsU0FBUyxHQUMxQixNQUFPLEdBQUUsR0FBUyxRQUloQixnQkFBa0IsU0FBUyxHQUk3QixNQUF3QixLQUFwQixFQUFRLFNBQXlDLGdCQUFoQixHQUFRLEtBQXlCLEVBQVEsS0FBSyxjQUMzRCxLQUFwQixFQUFRLFFBQXVCLEVBQVEsUUFBUSxjQUM1QyxFQUFFLEdBQVMsS0FBSyxXQUFXLGVBSWhDLFdBQWEsU0FBUyxFQUFTLEdBQ2pDLEVBQUUsR0FBUyxLQUFLLElBSWQsWUFBYyxTQUFTLEVBQVMsR0FDbEMsRUFBRSxHQUFTLFlBQVksSUFJckIsZUFBaUIsU0FBUyxFQUFXLEdBQ25DLEdBQXlDLG1CQUFyQixHQUFVLFFBQXdCLEVBQVUsU0FFcEUsRUFBVSxTQUdaLFFBQU8sU0FDTCxhQUFjLGFBQ2QsYUFBYyxhQUNkLGdCQUFpQixnQkFDakIsYUFBYyxhQUNkLGFBQWMsYUFDZCxnQkFBaUIsZ0JBQ2pCLFdBQVksV0FDWixZQUFhLFlBQ2IsZUFBZ0IsZUFDaEIsVUFBVyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIFRoaXMgZGVhbHMgd2l0aCBDaGVlcmlvL2pRdWVyeSBpc3N1ZXMuXG4vLyBNb3N0IG9mIHRoaXMgY291bGQgYmUgZG9uZSB3aXRob3V0IGpRdWVyeSwgdG9vLCBidXQgalF1ZXJ5IGlzIGVhc2llciB0byBiZSBtb2NrZWQgd2l0aCBDaGVlcmlvXG4vLyBPdGhlcndpc2Ugd2Ugd291bGQgbmVlZCBqc0RvbSB0byBydW4gdGhlIGNvbXBpbGVyIGluIHRoZSBzZXJ2ZXIgKHdpdGhvdXQgYSByZWFsIGJyb3dzZXIpXG5cbnZhciAkID0gcmVxdWlyZShcImpxdWVyeVwiKTtcblxuZnVuY3Rpb24gX2V4dGVuZCh0YXJnZXQsIHNvdXJjZSkge1xuICBpZiAoc291cmNlKSB7XG4gICAgZm9yICh2YXIgcHJvcCBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChzb3VyY2UuaGFzT3duUHJvcGVydHkocHJvcCkpIHtcbiAgICAgICAgdGFyZ2V0W3Byb3BdID0gc291cmNlW3Byb3BdO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG52YXIgb2JqRXh0ZW5kID0gZnVuY3Rpb24ob2JqLCBleHRlbmRlcikge1xuICBpZiAodHlwZW9mICQuZXh0ZW5kID09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gJC5leHRlbmQodHJ1ZSwgb2JqLCBleHRlbmRlcik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIF9leHRlbmQob2JqLCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGV4dGVuZGVyKSkpO1xuICB9XG59O1xuXG52YXIgZ2V0QXR0cmlidXRlID0gZnVuY3Rpb24oZWxlbWVudCwgYXR0cmlidXRlKSB7XG4gIHZhciByZXMgPSAkKGVsZW1lbnQpLmF0dHIoYXR0cmlidXRlKTtcbiAgaWYgKHR5cGVvZiByZXMgPT0gJ3VuZGVmaW5lZCcpIHJlcyA9IG51bGw7XG4gIHJldHVybiByZXM7XG4gIC8vIHJldHVybiBlbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyaWJ1dGUpO1xufTtcblxudmFyIHNldEF0dHJpYnV0ZSA9IGZ1bmN0aW9uKGVsZW1lbnQsIGF0dHJpYnV0ZSwgdmFsdWUpIHtcbiAgJChlbGVtZW50KS5hdHRyKGF0dHJpYnV0ZSwgdmFsdWUpO1xuICAvLyBlbGVtZW50LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGUsIHZhbHVlKTtcbn07XG5cbnZhciByZW1vdmVBdHRyaWJ1dGUgPSBmdW5jdGlvbihlbGVtZW50LCBhdHRyaWJ1dGUpIHtcbiAgJChlbGVtZW50KS5yZW1vdmVBdHRyKGF0dHJpYnV0ZSk7XG4gIC8vIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZSk7XG59O1xuXG52YXIgZ2V0SW5uZXJUZXh0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICByZXR1cm4gJChlbGVtZW50KS50ZXh0KCk7XG4gIC8vIGlmICh0eXBlb2YgZWxlbWVudC5pbm5lclRleHQgIT0gJ3VuZGVmaW5lZCcpIHJldHVybiBlbGVtZW50LmlubmVyVGV4dDtcbiAgLy8gZWxzZSByZXR1cm4gZWxlbWVudC50ZXh0Q29udGVudDtcbn07XG5cbnZhciBnZXRJbm5lckh0bWwgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gIHJldHVybiAkKGVsZW1lbnQpLmh0bWwoKTtcbiAgLy8gcmV0dXJuIGVsZW1lbnQuaW5uZXJIVE1MO1xufTtcblxudmFyIGdldExvd2VyVGFnTmFtZSA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgLy8gc29tZXRpbWVzIGNoZWVyaW8gZG9lc24ndCBoYXZlIHRhZ05hbWUgYnV0IFwibmFtZVwiLlxuICAvLyBCcm93c2VycyBoYXZlIFwibmFtZVwiIHdpdGggZW1wdHkgc3RyaW5nXG4gIC8vIFNvbWV0aW1lcyBjaGVlcmlvIGhhcyB0YWdOYW1lIGJ1dCBubyBwcm9wIGZ1bmN0aW9uLlxuICBpZiAoZWxlbWVudC50YWdOYW1lID09PSAnJyAmJiB0eXBlb2YgZWxlbWVudC5uYW1lID09ICdzdHJpbmcnKSByZXR1cm4gZWxlbWVudC5uYW1lLnRvTG93ZXJDYXNlKCk7XG4gIGlmIChlbGVtZW50LnRhZ05hbWUgIT09ICcnKSByZXR1cm4gZWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCk7XG4gIHJldHVybiAkKGVsZW1lbnQpLnByb3AoXCJ0YWdOYW1lXCIpLnRvTG93ZXJDYXNlKCk7XG4gIC8vIHJldHVybiBlbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKTtcbn07XG5cbnZhciBzZXRDb250ZW50ID0gZnVuY3Rpb24oZWxlbWVudCwgY29udGVudCkge1xuICAkKGVsZW1lbnQpLmh0bWwoY29udGVudCk7XG4gIC8vIGVsZW1lbnQuaW5uZXJIVE1MID0gY29udGVudDtcbn07XG5cbnZhciByZXBsYWNlSHRtbCA9IGZ1bmN0aW9uKGVsZW1lbnQsIGh0bWwpIHtcbiAgJChlbGVtZW50KS5yZXBsYWNlV2l0aChodG1sKTtcbiAgLy8gZWxlbWVudC5vdXRlckhUTUwgPSBodG1sO1xufTtcblxudmFyIHJlbW92ZUVsZW1lbnRzID0gZnVuY3Rpb24oJGVsZW1lbnRzLCB0cnlEZXRhY2gpIHtcbiAgaWYgKHRyeURldGFjaCAmJiB0eXBlb2YgJGVsZW1lbnRzLmRldGFjaCAhPT0gJ3VuZGVmaW5lZCcpICRlbGVtZW50cy5kZXRhY2goKTtcbiAgLy8gTk9URTogd2UgZG9uJ3QgbmVlZCBhbiBlbHNlLCBhcyBkZXRhY2ggaXMgc2ltcGx5IGFuIG9wdGltaXphdGlvblxuICAkZWxlbWVudHMucmVtb3ZlKCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0QXR0cmlidXRlOiBnZXRBdHRyaWJ1dGUsXG4gIHNldEF0dHJpYnV0ZTogc2V0QXR0cmlidXRlLFxuICByZW1vdmVBdHRyaWJ1dGU6IHJlbW92ZUF0dHJpYnV0ZSxcbiAgZ2V0SW5uZXJUZXh0OiBnZXRJbm5lclRleHQsXG4gIGdldElubmVySHRtbDogZ2V0SW5uZXJIdG1sLFxuICBnZXRMb3dlclRhZ05hbWU6IGdldExvd2VyVGFnTmFtZSxcbiAgc2V0Q29udGVudDogc2V0Q29udGVudCxcbiAgcmVwbGFjZUh0bWw6IHJlcGxhY2VIdG1sLFxuICByZW1vdmVFbGVtZW50czogcmVtb3ZlRWxlbWVudHMsXG4gIG9iakV4dGVuZDogb2JqRXh0ZW5kXG59OyJdfQ==","deps":{}},"/Users/denea/mos/src/js/converter/model.js":{"file":"/Users/denea/mos/src/js/converter/model.js","source":"\"use strict\";var objExtend=require(\"./domutils.js\").objExtend,console=require(\"./../../../bower_components/console-browserify/index.js\"),_valueSet=function(e,t,o,n){var i=o.indexOf(\".\");if(-1==i)if(\"undefined\"==typeof t[o])console.log(\"Undefined prop \"+o+\" while setting value \"+n+\" in model._valueSet\");else if(null===t[o])\"object\"==typeof n&&null!==n&&\"undefined\"==typeof n.push&&console.log(\"nullpropobjectvalue\",o,n),t[o]=n;else if(\"object\"==typeof t[o]&&\"function\"==typeof t[o].push){var r;if(\"string\"==typeof n){var a=n.match(/^\\[(.*)\\]$/);if(null===a)throw\"Unexpected default value for array property \"+o+\": \"+n;r=a[1].split(\",\")}else{if(\"object\"!=typeof n||\"undefined\"==typeof n.push)throw\"Unexpected default value for array property \"+o+\": \"+n+\" typeof \"+typeof n;r=n}for(var l=[],s=0;s<r.length;s++)\"@\"==r[s].substr(0,1)?l.push(_generateModel(e,r[s].substr(1))):r[s].length>0&&l.push(r[s]);t[o]=l}else\"string\"==typeof t[o]||\"boolean\"==typeof t[o]?t[o]=n:\"object\"==typeof t[o]&&null!==t[o]&&\"undefined\"!=typeof t[o]._widget?(\"object\"==typeof n&&null!==n&&console.log(\"objectvalue\",o,t[o]._widget,n),t[o]=n):console.log(\"setting\",typeof t[o],t[o],o,n);else{var d=o.substr(0,i);_valueSet(e,t[d],o.substr(i+1),n)}},_modelCreateOrUpdateBlockDef=function(e,t,o,n){if(\"undefined\"!=typeof e[t]&&e[t]._initialized&&!e[t]._writeable)throw console.log(\"_modelCreateOrUpdateBlockDef\",e,t,o,n),\"Trying to alter non writeable model: \"+t+\" / \"+o;if(\"undefined\"==typeof e[t]&&(e[t]={_writeable:!0},\"undefined\"==typeof n&&(n={}),\"undefined\"==typeof n.category&&\"undefined\"==typeof e[t]._category&&(n.category=t.match(/(^t|.T)heme$/)||t.match(/(^s|.S)tyle$/)||t.match(/(^c|.C)olor$/)||t.match(/(^r|.R)adius$/)?\"style\":\"content\")),\"undefined\"!=typeof n){if(\"undefined\"!=typeof n.name&&(e[t]._name=n.name),\"undefined\"!=typeof n.themeOverride&&(e[t]._themeOverride=n.themeOverride),\"undefined\"!=typeof n.globalStyle){e[t]._globalStyle=n.globalStyle;var i=n.globalStyle.replace(/^(\\$theme|_theme_)\\./,\"\"),r=i.indexOf(\".\"),a=-1!=r?i.substr(0,r):i;_modelCreateOrUpdateBlockDef(e,\"theme\",a),(\"undefined\"==typeof e[t]._themeOverride||e[t]._themeOverride)&&_modelCreateOrUpdateBlockDef(e,t,\"customStyle=false\")}\"undefined\"!=typeof n.contextName&&(e[t]._context=n.contextName,\"block\"==n.contextName&&\"undefined\"==typeof e[t]._globalStyle&&(e[t]._globalStyle=\"_theme_.bodyTheme\",_modelCreateOrUpdateBlockDef(e,\"theme\",\"bodyTheme\"),(\"undefined\"==typeof e[t]._themeOverride||e[t]._themeOverride)&&_modelCreateOrUpdateBlockDef(e,t,\"customStyle=false\"))),\"undefined\"!=typeof n.extend&&(e[t].type=n.extend)}for(var l in n)n.hasOwnProperty(l)&&\"undefined\"!=typeof n[l]&&-1==[\"name\",\"extend\",\"contextName\",\"globalStyle\",\"themeOverride\"].indexOf(l)&&(e[t][\"_\"+l]=n[l]);\"undefined\"!=typeof o&&o.length>0&&(e[t]._props=\"undefined\"!=typeof e[t]._props&&e[t]._props.length>0?e[t]._props+\" \"+o:o)},_removePrefix=function(e){var t=e.match(/^[^A-Z]+([A-Z])(.*)$/);return null!==t?t[1].toLowerCase()+t[2]:null},_generateModelFromDef=function(e,t){var o={};for(var n in e)if(!n.match(/^_.*/)&&e.hasOwnProperty(n)){var i=e[n];if(\"object\"==typeof i&&null!==i&&\"undefined\"!=typeof i._complex&&i._complex)o[n]=_generateModelFromDef(i,t);else if(\"type\"==n)o[n]=i;else{if(\"object\"!=typeof i)throw console.error(\"Unexpected model def\",n,i,e),\"Unexpected model def [\"+n+\"]=\"+i;o[n]=null}}if(\"undefined\"!=typeof e._defaultValues){var r=e._defaultValues;for(var a in r)r.hasOwnProperty(a)&&_valueSet(t,o,a,r[a])}return o},_generateModel=function(e,t){var o=_getModelDef(e,t,!1,!0);return _generateModelFromDef(o,e)},_getDef=function(e,t){return _getModelDef(e,t,!1,!0)},_getModelDef=function(e,t,o,n){if(\"undefined\"==typeof e[t]){if(-1!=t.indexOf(\" \"))return null;var i=_removePrefix(t);return null!==i?_getModelDef(e,i,o,n):null}var r=e[t];if(\"object\"!=typeof r)throw\"Block definition must be an object: found \"+r+\" for \"+t;if(\"undefined\"==typeof r._initialized){if(\"undefined\"==typeof r.type&&(r.type=-1==t.indexOf(\" \")?t:t.substr(t.indexOf(\" \")+1)),r.type!=t&&\"undefined\"==typeof r._widget){var a=_getModelDef(e,r.type,!0),l=objExtend(a,r);r=l,e[t]=r}else\"undefined\"==typeof r._widget&&\"undefined\"==typeof r._props&&\"undefined\"==typeof r._complex;r._writeable=!0,r._initialized=!0}if(\"undefined\"!=typeof r._props){var s=r._props;if(s=s.split(\" \"),s.length>0&&\"undefined\"==typeof r._writeable)throw console.error(\"Altering a non writable object \",t,s,r),\"Altering a non writable object: \"+t+\" def: \"+s;\"undefined\"==typeof r._processedDefs&&(r._processedDefs={}),\"undefined\"==typeof r._globalStyles&&(r._globalStyles={}),\"undefined\"==typeof r._defaultValues&&(r._defaultValues={});for(var d=0;d<s.length;d++){var c=s[d];if(0!==c.length){var u=c,f=null,p=c.match(/^([^=\\[\\]]+)(\\[\\])?(=?)(.*)$/);if(null!==p&&(c=p[1],\"[]\"==p[2]&&(\"undefined\"==typeof r[c]&&(r[c]=[]),f=[]),\"=\"==p[3]&&(f=c.match(/(^v|V)isible$/)?\"true\"==String(p[4]).toLowerCase():c.match(/^customStyle$/)?\"true\"==String(p[4]).toLowerCase():p[4])),null!==f&&\"undefined\"==typeof r._defaultValues[c]&&(r._defaultValues[c]=f),\"undefined\"==typeof r[c]){var b=_getModelDef(e,t+\" \"+c,!0);null===b&&(b=_getModelDef(e,c,!0)),r[c]=b}r._processedDefs[c]=u,r._complex=!0}}delete r._props}if(o){r._writeable=!1;var m=objExtend({},r);return m}if(n)return r._writeable=!1,r;if(\"undefined\"==typeof r._writeable||r._writeable===!1)throw\"Retrieving non writeable object definition: \"+t;return r},_increaseUseCount=function(e,t){if(e){if(\"undefined\"==typeof t._usecount)throw console.error(\"ERROR trying to bind an unused property while readonly\",t),\"ERROR trying to bind an unused property\"}else\"undefined\"==typeof t._usecount&&(t._usecount=0),t._usecount++},ensureGlobalStyle=function(e,t,o,n,i,r,a,l){var s=o(r,a,l);if(\"undefined\"==typeof e[n]._globalStyles[i]){if(t)throw\"Cannot find _globalStyle for \"+i+\" in \"+n+\"!\";(-1!=i.indexOf(\".\")||\"object\"==typeof e[n][i]&&\"undefined\"!=typeof e[n][i]._widget)&&(e[n]._globalStyles[i]=s)}else if(e[n]._globalStyles[i]!=s)throw\"Unexpected conflicting globalStyle [2] for \"+n+\"/\"+i+\": old=\"+e[n]._globalStyles[i]+\" new=\"+s},modelEnsurePathAndGetBindValue=function(e,t,o,n,i,r,a,l,s,d){var c,u,f;if(\"$\"==a.substr(0,1)){console.warn(\"DEPRECATED $ in bindingProvider: \",a,i);var p=a.indexOf(\".\");if(-1==p)throw\"Unexpected fullPath: \"+a+\"/\"+r+\"/\"+i+\"/\"+l+\"/\"+s;if(c=a.substr(1,p-1),f=a.substr(p+1),\"theme\"!=c)throw\"Unexpected $ sequence: \"+c+\" in \"+a;var b=f.indexOf(\".\");c=f.substr(0,b),f=f.substr(b+1),u=\"$root.content().theme().\"+c+\"().\"+f.replace(new RegExp(\"\\\\.\",\"g\"),\"().\")}else if(\"#\"==a.substr(0,1))console.warn(\"DEPRECATED # in bindingProvider: \",a,i),c=n,f=a.substr(1),u=\"$root.content().\"+f.replace(new RegExp(\"\\\\.\",\"g\"),\"().\");else if(\"_theme_.\"==a.substr(0,8)){var m=a.indexOf(\".\",8);c=a.substr(8,m-8),f=a.substr(m+1),u=\"$root.content().theme().\"+c+\"().\"+f.replace(new RegExp(\"\\\\.\",\"g\"),\"().\")}else\"_root_.\"==a.substr(0,7)?(c=n,f=a.substr(7),u=\"$root.content().\"+f.replace(new RegExp(\"\\\\.\",\"g\"),\"().\")):(c=i,f=r+a,u=a.replace(new RegExp(\"\\\\.\",\"g\"),\"().\"));if(\"undefined\"==typeof t[c])throw\"Cannot find model def for [\"+c+\"]\";var g=f.indexOf(\".\"),h=-1==g?f:f.substr(0,g);if(-1!=c.indexOf(\"-\"))throw console.error(\"ERROR cannot use - for block names\",c),\"ERROR unexpected char in block name: \"+c;if(-1!=h.indexOf(\"-\"))throw console.error(\"ERROR cannot use - for property names\",h),\"ERROR unexpected char in property name: \"+c;if(e)return\"undefined\"!=typeof t[c]._globalStyle&&\"undefined\"!=typeof t[c][h]&&\"style\"==t[c][h]._category&&(u+=\"._defaultComputed\"),u;var v;if(e){if(\"undefined\"!=typeof l)throw\"Cannot use defaultValue in readonly mode!\";if(s)throw\"Cannot use overrideDefault in readonly mode for \"+c+\"/\"+f+\"/\"+s+\"!\";if(\"undefined\"!=typeof d)throw\"Cannot set category for \"+c+\"/\"+f+\"/\"+d+\" in readonly mode!\";v=_getModelDef(t,c,!1,!0)}else t[c]._writeable===!1&&console.log(\"TODO debug use cases for this condition\",c,f),v=_getModelDef(t,c,t[c]._writeable===!1);if(null===v)throw\"Unexpected model for [\"+c+\"]\";if(\"undefined\"==typeof v[h]){if(e)throw\"Cannot find path \"+h+\" for \"+c+\"!\";_modelCreateOrUpdateBlockDef(t,c,h),v=_getModelDef(t,c,!1)}\"undefined\"!=typeof t[c]._globalStyle&&\"undefined\"!=typeof t[c][h]&&null!==t[c][h]&&\"style\"==t[c][h]._category&&(u+=\"._defaultComputed\");var y=v;try{if(_increaseUseCount(e,y),-1!=g){var k=f;do{var w=k.substr(0,g);if(\"undefined\"==typeof y[w])throw\"Found an unexpected prop \"+w+\" for model \"+c+\" for \"+f;y=y[w],_increaseUseCount(e,y),k=k.substr(g+1),g=k.indexOf(\".\")}while(-1!=g);if(\"undefined\"==typeof y[k]||null===y[k])throw\"Found an unexpected path termination \"+k+\" for model \"+c+\" for \"+f;y=y[k]}else y=y[f];if(\"undefined\"==typeof y||null===y)throw\"Unexpected null model for \"+c+\"/\"+r+\"/\"+a;\"undefined\"!=typeof d&&(y._category=d),_increaseUseCount(e,y)}catch(x){throw console.error(\"TODO ERROR Property lookup exception\",x,c,f,i,a,t),x}if(\"undefined\"!=typeof t[c]._globalStyle&&\"object\"==typeof t[c][h]&&null!==t[c][h]&&\"undefined\"!=typeof t[c][h]._category&&\"style\"==t[c][h]._category){var _=modelEnsurePathAndGetBindValue.bind(void 0,e,t,o,n,i,\"\"),$=-1!=f.indexOf(\".\")?f.substr(f.indexOf(\".\")):\"\";if(-1!=$.indexOf(\".\",1))throw\"TODO unsupported object nesting! \"+f;var C=t[c]._globalStyle+\".\"+h;\"object\"==typeof t[c][h]&&null!==t[c][h]&&\"undefined\"!=typeof t[c][h]._globalStyle&&(C=t[c][h]._globalStyle),ensureGlobalStyle(t,e,_,c,h,C,void 0,!1);var O=C+$;if(\"undefined\"==typeof l&&null!==t[c]._defaultValues[f]&&(l=t[c]._defaultValues[f]),ensureGlobalStyle(t,e,_,c,f,O,l,s),\"undefined\"!=typeof l){if(e)throw console.error(\"Cannot set a new theme default value\",O.substr(7),l,\"while in readonly mode\"),\"Cannot set a new theme default value (\"+l+\") for \"+O.substr(7)+\" while in readonly mode!\";o(\"default\",O.substr(7),l)}l=null}if(\"undefined\"!=typeof l)if(\"undefined\"==typeof t[c]._defaultValues[f]||\"undefined\"!=typeof s&&s){if(e)throw\"Cannot set new _defaultValues [1] for \"+f+\" in \"+c+\"!\";t[c]._defaultValues[f]=l}else if(null===l){if(e&&null!==t[c]._defaultValues[f])throw\"Cannot set new _defaultValues [2] for \"+f+\" in \"+c+\"!\";t[c]._defaultValues[f]=null}else if(t[c]._defaultValues[f]!=l)throw console.error(\"TODO error!!! Trying to set a new default value for \"+c+\" \"+f+\" while it already exists (current: \"+t[c]._defaultValues[f]+\", new: \"+l+\")\"),\"Trying to set a new default value for \"+c+\" \"+f+\" while it already exists (current: \"+t[c].defaultValues[f]+\", new: \"+l+\")\";return u},generateResultModel=function(e){var t=e._defs,o=e.templateName,n=_generateModel(t,o);return\"undefined\"!=typeof t.theme&&(n.theme=_generateModel(t,\"theme\")),n};module.exports={ensurePathAndGetBindValue:modelEnsurePathAndGetBindValue.bind(void 0,!1),getBindValue:modelEnsurePathAndGetBindValue.bind(void 0,!0),generateModel:_generateModel,generateResultModel:generateResultModel,getDef:_getDef,createOrUpdateBlockDef:_modelCreateOrUpdateBlockDef};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./domutils.js":"/Users/denea/mos/src/js/converter/domutils.js","./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/converter/stylesheet.js":{"file":"/Users/denea/mos/src/js/converter/stylesheet.js","source":"\"use strict\";var cssParse=require(\"./../../../bower_components/mensch/lib/parser.js\"),console=require(\"./../../../bower_components/console-browserify/index.js\"),converterUtils=require(\"./utils.js\"),elaborateDeclarations=require(\"./declarations.js\"),_processStyleSheetRules_processBlockDef=function(e,t){for(var o,n,i,r=0;r<t.length;r++)if(\"rule\"==t[r].type){for(var a=t[r].selectors,l=!1,s=!1,d=0;d<a.length;d++)a[d].match(/:preview$/)?s=!0:l=!0;if(s&&l)throw console.log(\"cannot mix selectors type (:preview and declarations) in @supports -ko-blockdefs \",a),\"Cannot mix selectors type (:preview and declarations) in @supports -ko-blockdefs\";if(!s&&!l)throw console.log(\"cannot find known selectors in @supports -ko-blockdefs \",a),\"Cannot find known selectors in @supports -ko-blockdefs\";if(l){o=\"\",n={},i=t[r].declarations;for(var u=0;u<i.length;u++)\"property\"==i[u].type&&(\"label\"==i[u].name?n.name=i[u].value:\"context\"==i[u].name?n.contextName=i[u].value:\"properties\"==i[u].name?o=i[u].value:\"theme\"==i[u].name?n.globalStyle=\"_theme_.\"+i[u].value:\"themeOverride\"==i[u].name?n.themeOverride=\"true\"==String(i[u].value).toLowerCase():n[i[u].name]=i[u].value);for(var c=0;c<a.length;c++)e(a[c],o,n)}if(s)for(var f=0;f<a.length;f++){var p=a[f].substr(0,a[f].indexOf(\":\")),b=t[r].declarations;e(p,void 0,{previewBindings:b})}}},processStylesheetRules=function(e,t,o,n,i,r,a,l){var s=e,d=null;if(\"undefined\"==typeof t){var u=cssParse(e,{comments:!0,position:!0});if(\"stylesheet\"!=u.type||\"undefined\"==typeof u.stylesheet)throw console.log(\"unable to process styleSheet\",u),\"Unable to parse stylesheet\";t=u.stylesheet.rules}for(var c,f=t.length-1;f>=0;f--){if(\"supports\"==t[f].type&&\"-ko-blockdefs\"==t[f].name)_processStyleSheetRules_processBlockDef(n,t[f].rules),s=converterUtils.removeStyle(s,t[f].position.start,d,0,0,0,\"\");else if(\"media\"==t[f].type||\"supports\"==t[f].type)s=processStylesheetRules(s,t[f].rules,o,n,i,r,a,l);else if(\"comment\"==t[f].type);else if(\"rule\"==t[f].type){for(var p=t[f].selectors,b=\"\",m=null,g=0;g<p.length;g++){b.length>0&&(b+=\", \");var h=p[g].match(/\\[data-ko-block=([^ ]*)\\]/);if(null!==h){if(null!==m&&m!=h[1])throw\"Found multiple block-match attribute selectors: cannot translate it (\"+m+\" vs \"+h[1]+\")\";m=h[1]}b+=\"<!-- ko text: templateMode =='wysiwyg' ? '#main-wysiwyg-area ' : '' --><!-- /ko -->\"+p[g]}if(m){var v=\"<!-- ko foreach: $root.findObjectsOfType($data, '\"+m+\"') -->\",y=\"<!-- /ko -->\",k=d,w=\" \";t[f].declarations.length>0&&(t[f].declarations[0].position.start.line!=t[f].position.end.line&&(w=\"\\n\"+new Array(t[f].position.start.col).join(\" \")),k=t[f].declarations[t[f].declarations.length-1].position.end),null===k?s+=w+y:s=k==d?converterUtils.removeStyle(s,k,d,0,0,0,w+y):converterUtils.removeStyle(s,k,d,0,0,0,w+\"}\"+w+y),b=v+w+b.replace(new RegExp(\"\\\\[data-ko-block=\"+m+\"\\\\]\",\"g\"),\"<!-- ko text: '#'+id() -->\"+m+\"<!-- /ko -->\"),n(m,\"\",{contextName:\"block\"})}var _=m?m:l;c=o.bind(this,_,\"\");var x=elaborateDeclarations(s,t[f].declarations,r,c);null!==x&&(s=x),s=converterUtils.removeStyle(s,t[f].position.start,t[f].position.end,0,0,0,b)}else console.log(\"Unknown rule type\",t[f].type,\"while parsing <style> rules\");d=t[f].position.start}return s};module.exports=processStylesheetRules;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./utils.js":"/Users/denea/mos/src/js/converter/utils.js","./declarations.js":"/Users/denea/mos/src/js/converter/declarations.js","./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js","./../../../bower_components/mensch/lib/parser.js":"/Users/denea/mos/bower_components/mensch/lib/parser.js"}},"/Users/denea/mos/bower_components/juice/lib/property.js":{"file":"/Users/denea/mos/bower_components/juice/lib/property.js","source":"\"use strict\";function Property(e,t,o,n,i){this.prop=e,this.value=t,this.selector=o,this.priority=n||0,this.additionalPriority=i||[]}module.exports=exports=Property;var utils=require(\"./utils\");Property.prototype.compareFunc=function(e){var t=[];t.push.apply(t,this.selector.specificity()),t.push.apply(t,this.additionalPriority),t[0]+=this.priority;var o=[];return o.push.apply(o,e.selector.specificity()),o.push.apply(o,e.additionalPriority),o[0]+=e.priority,utils.compareFunc(t,o)},Property.prototype.compare=function(e){var t=this.compareFunc(e);return 1===t?this:e},Property.prototype.toString=function(){return this.prop+\": \"+this.value.replace(/['\"]+/g,\"\")+\";\"};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3BlcnR5LmpzIl0sIm5hbWVzIjpbIlByb3BlcnR5IiwicHJvcCIsInZhbHVlIiwic2VsZWN0b3IiLCJwcmlvcml0eSIsImFkZGl0aW9uYWxQcmlvcml0eSIsInRoaXMiLCJtb2R1bGUiLCJleHBvcnRzIiwidXRpbHMiLCJyZXF1aXJlIiwicHJvdG90eXBlIiwiY29tcGFyZUZ1bmMiLCJwcm9wZXJ0eSIsImEiLCJwdXNoIiwiYXBwbHkiLCJzcGVjaWZpY2l0eSIsImIiLCJjb21wYXJlIiwid2lubmVyIiwidG9TdHJpbmciLCJyZXBsYWNlIl0sIm1hcHBpbmdzIjoiQUFBQSxZQXFCQSxTQUFTQSxVQUFTQyxFQUFNQyxFQUFPQyxFQUFVQyxFQUFVQyxHQUNqREMsS0FBS0wsS0FBT0EsRUFDWkssS0FBS0osTUFBUUEsRUFDYkksS0FBS0gsU0FBV0EsRUFDaEJHLEtBQUtGLFNBQVdBLEdBQVksRUFDNUJFLEtBQUtELG1CQUFxQkEsTUF4QjVCRSxPQUFPQyxRQUFVQSxRQUFVUixRQU0zQixJQUFJUyxPQUFRQyxRQUFRLFVBMkJwQlYsVUFBU1csVUFBVUMsWUFBYyxTQUFTQyxHQUN4QyxHQUFJQyxLQUNKQSxHQUFFQyxLQUFLQyxNQUFNRixFQUFHUixLQUFLSCxTQUFTYyxlQUM5QkgsRUFBRUMsS0FBS0MsTUFBTUYsRUFBR1IsS0FBS0Qsb0JBQ3JCUyxFQUFFLElBQU1SLEtBQUtGLFFBQ2IsSUFBSWMsS0FJSixPQUhBQSxHQUFFSCxLQUFLQyxNQUFNRSxFQUFHTCxFQUFTVixTQUFTYyxlQUNsQ0MsRUFBRUgsS0FBS0MsTUFBTUUsRUFBR0wsRUFBU1Isb0JBQ3pCYSxFQUFFLElBQU1MLEVBQVNULFNBQ1ZLLE1BQU1HLFlBQVlFLEVBQUdJLElBRzlCbEIsU0FBU1csVUFBVVEsUUFBVSxTQUFTTixHQUNwQyxHQUFJTyxHQUFTZCxLQUFLTSxZQUFZQyxFQUM5QixPQUFlLEtBQVhPLEVBQXFCZCxLQUNsQk8sR0FVVGIsU0FBU1csVUFBVVUsU0FBVyxXQUM1QixNQUFPZixNQUFLTCxLQUFPLEtBQU9LLEtBQUtKLE1BQU1vQixRQUFRLFNBQVUsSUFBTSIsImZpbGUiOiJvdXQuanMubWFwIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMgPSBQcm9wZXJ0eTtcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxuLyoqXG4gKiBDU1MgcHJvcGVydHkgY29uc3RydWN0b3IuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHByb3BlcnR5XG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7U2VsZWN0b3J9IHNlbGVjdG9yIHRoZSBwcm9wZXJ0eSBvcmlnaW5hdGVzIGZyb21cbiAqIEBwYXJhbSB7SW50ZWdlcn0gcHJpb3JpdHkgMCBmb3Igbm9ybWFsIHByb3BlcnRpZXMsIDIgZm9yICFpbXBvcnRhbnQgcHJvcGVydGllcy5cbiAqIEBwYXJhbSB7QXJyYXl9IGFkZGl0aW9uYWwgYXJyYXkgb2YgaW50ZWdlcnMgcmVwcmVzZW50aW5nIG1vcmUgZGV0YWlsZWQgcHJpb3JpdGllcyAoc29ydGluZylcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gUHJvcGVydHkocHJvcCwgdmFsdWUsIHNlbGVjdG9yLCBwcmlvcml0eSwgYWRkaXRpb25hbFByaW9yaXR5KSB7XG4gIHRoaXMucHJvcCA9IHByb3A7XG4gIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgdGhpcy5zZWxlY3RvciA9IHNlbGVjdG9yO1xuICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHkgfHwgMDtcbiAgdGhpcy5hZGRpdGlvbmFsUHJpb3JpdHkgPSBhZGRpdGlvbmFsUHJpb3JpdHkgfHwgW107XG59XG5cbi8qKlxuICogQ29tcGFyZXMgd2l0aCBhbm90aGVyIFByb3BlcnR5IGJhc2VkIG9uIFNlbGVjdG9yI3NwZWNpZmljaXR5LlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUHJvcGVydHkucHJvdG90eXBlLmNvbXBhcmVGdW5jID0gZnVuY3Rpb24ocHJvcGVydHkpIHtcbiAgdmFyIGEgPSBbXTtcbiAgYS5wdXNoLmFwcGx5KGEsIHRoaXMuc2VsZWN0b3Iuc3BlY2lmaWNpdHkoKSk7XG4gIGEucHVzaC5hcHBseShhLCB0aGlzLmFkZGl0aW9uYWxQcmlvcml0eSk7XG4gIGFbMF0gKz0gdGhpcy5wcmlvcml0eTtcbiAgdmFyIGIgPSBbXTtcbiAgYi5wdXNoLmFwcGx5KGIsIHByb3BlcnR5LnNlbGVjdG9yLnNwZWNpZmljaXR5KCkpO1xuICBiLnB1c2guYXBwbHkoYiwgcHJvcGVydHkuYWRkaXRpb25hbFByaW9yaXR5KTtcbiAgYlswXSArPSBwcm9wZXJ0eS5wcmlvcml0eTtcbiAgcmV0dXJuIHV0aWxzLmNvbXBhcmVGdW5jKGEsIGIpO1xufTtcblxuUHJvcGVydHkucHJvdG90eXBlLmNvbXBhcmUgPSBmdW5jdGlvbihwcm9wZXJ0eSkge1xuICB2YXIgd2lubmVyID0gdGhpcy5jb21wYXJlRnVuYyhwcm9wZXJ0eSk7XG4gIGlmICh3aW5uZXIgPT09IDEpIHJldHVybiB0aGlzO1xuICByZXR1cm4gcHJvcGVydHk7XG59O1xuXG5cbi8qKlxuICogUmV0dXJucyBDU1MgcHJvcGVydHlcbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblByb3BlcnR5LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5wcm9wICsgJzogJyArIHRoaXMudmFsdWUucmVwbGFjZSgvWydcIl0rL2csICcnKSArICc7Jztcbn07XG4iXX0=","deps":{"./utils":"/Users/denea/mos/bower_components/juice/lib/utils.js"}},"/Users/denea/mos/bower_components/jsep/src/jsep.js":{"file":"/Users/denea/mos/bower_components/jsep/src/jsep.js","source":"!function(e){\"use strict\";var t=\"Compound\",o=\"Identifier\",n=\"MemberExpression\",r=\"Literal\",i=\"ThisExpression\",a=\"CallExpression\",l=\"UnaryExpression\",s=\"BinaryExpression\",d=\"LogicalExpression\",u=\"ConditionalExpression\",c=\"ArrayExpression\",f=46,p=44,m=39,b=34,g=40,h=41,v=91,y=93,k=63,w=59,x=58,_=function(e,t){var o=new Error(e+\" at character \"+t);throw o.index=t,o.description=e,o},S=!0,O={\"-\":S,\"!\":S,\"~\":S,\"+\":S},C={\"||\":1,\"&&\":2,\"|\":3,\"^\":4,\"&\":5,\"==\":6,\"!=\":6,\"===\":6,\"!==\":6,\"<\":7,\">\":7,\"<=\":7,\">=\":7,\"<<\":8,\">>\":8,\">>>\":8,\"+\":9,\"-\":9,\"*\":10,\"/\":10,\"%\":10},$=function(e){var t,o=0;for(var n in e)(t=n.length)>o&&e.hasOwnProperty(n)&&(o=t);return o},T=$(O),E=$(C),A={\"true\":!0,\"false\":!1,\"null\":null},D=\"this\",j=function(e){return C[e]||0},M=function(e,t,o){var n=\"||\"===e||\"&&\"===e?d:s;return{type:n,operator:e,left:t,right:o}},P=function(e){return e>=48&&57>=e},B=function(e){return 36===e||95===e||e>=65&&90>=e||e>=97&&122>=e||e>=128&&!C[String.fromCharCode(e)]},q=function(e){return 36===e||95===e||e>=65&&90>=e||e>=97&&122>=e||e>=48&&57>=e||e>=128&&!C[String.fromCharCode(e)]},I=function(e){for(var s,d,S=0,$=e.charAt,I=e.charCodeAt,H=function(t){return $.call(e,t)},R=function(t){return I.call(e,t)},U=e.length,N=function(){for(var e=R(S);32===e||9===e||10===e||13===e;)e=R(++S)},L=function(){var e,t,o=V();return N(),R(S)!==k?o:(S++,e=L(),e||_(\"Expected expression\",S),N(),R(S)===x?(S++,t=L(),t||_(\"Expected expression\",S),{type:u,test:o,consequent:e,alternate:t}):(_(\"Expected :\",S),void 0))},F=function(){N();for(var t=e.substr(S,E),o=t.length;o>0;){if(C.hasOwnProperty(t))return S+=o,t;t=t.substr(0,--o)}return!1},V=function(){var e,t,o,n,r,i,a,l;if(i=z(),t=F(),!t)return i;for(r={value:t,prec:j(t)},a=z(),a||_(\"Expected expression after \"+t,S),n=[i,r,a];(t=F())&&(o=j(t),0!==o);){for(r={value:t,prec:o};n.length>2&&o<=n[n.length-2].prec;)a=n.pop(),t=n.pop().value,i=n.pop(),e=M(t,i,a),n.push(e);e=z(),e||_(\"Expected expression after \"+t,S),n.push(r,e)}for(l=n.length-1,e=n[l];l>1;)e=M(n[l-1].value,n[l-2],e),l-=2;return e},z=function(){var t,o,n;if(N(),t=R(S),P(t)||t===f)return G();if(t===m||t===b)return W();if(B(t)||t===g)return Z();if(t===v)return Q();for(o=e.substr(S,T),n=o.length;n>0;){if(O.hasOwnProperty(o))return S+=n,{type:l,operator:o,argument:z(),prefix:!0};o=o.substr(0,--n)}return!1},G=function(){for(var e,t,o=\"\";P(R(S));)o+=H(S++);if(R(S)===f)for(o+=H(S++);P(R(S));)o+=H(S++);if(e=H(S),\"e\"===e||\"E\"===e){for(o+=H(S++),e=H(S),(\"+\"===e||\"-\"===e)&&(o+=H(S++));P(R(S));)o+=H(S++);P(R(S-1))||_(\"Expected exponent (\"+o+H(S)+\")\",S)}return t=R(S),B(t)?_(\"Variable names cannot start with a number (\"+o+H(S)+\")\",S):t===f&&_(\"Unexpected period\",S),{type:r,value:parseFloat(o),raw:o}},W=function(){for(var e,t=\"\",o=H(S++),n=!1;U>S;){if(e=H(S++),e===o){n=!0;break}if(\"\\\\\"===e)switch(e=H(S++)){case\"n\":t+=\"\\n\";break;case\"r\":t+=\"\\r\";break;case\"t\":t+=\"\t\";break;case\"b\":t+=\"\\b\";break;case\"f\":t+=\"\\f\";break;case\"v\":t+=\"\u000b\";break;default:t+=\"\\\\\"+e}else t+=e}return n||_('Unclosed quote after \"'+t+'\"',S),{type:r,value:t,raw:o+t+o}},J=function(){var t,n=R(S),a=S;for(B(n)?S++:_(\"Unexpected \"+H(S),S);U>S&&(n=R(S),q(n));)S++;return t=e.slice(a,S),A.hasOwnProperty(t)?{type:r,value:A[t],raw:t}:t===D?{type:i}:{type:o,name:t}},Y=function(e){for(var o,n,r=[],i=!1;U>S;){if(N(),o=R(S),o===e){i=!0,S++;break}o===p?S++:(n=L(),n&&n.type!==t||_(\"Expected comma\",S),r.push(n))}return i||_(\"Expected \"+String.fromCharCode(e),S),r},Z=function(){var e,t;for(e=R(S),t=e===g?X():J(),N(),e=R(S);e===f||e===v||e===g;)S++,e===f?(N(),t={type:n,computed:!1,object:t,property:J()}):e===v?(t={type:n,computed:!0,object:t,property:L()},N(),e=R(S),e!==y&&_(\"Unclosed [\",S),S++):e===g&&(t={type:a,arguments:Y(h),callee:t}),N(),e=R(S);return t},X=function(){S++;var e=L();return N(),R(S)===h?(S++,e):(_(\"Unclosed (\",S),void 0)},Q=function(){return S++,{type:c,elements:Y(y)}},K=[];U>S;)s=R(S),s===w||s===p?S++:(d=L())?K.push(d):U>S&&_('Unexpected \"'+H(S)+'\"',S);return 1===K.length?K[0]:{type:t,body:K}};if(I.version=\"<%= version %>\",I.toString=function(){return\"JavaScript Expression Parser (JSEP) v\"+I.version},I.addUnaryOp=function(e){return T=Math.max(e.length,T),O[e]=S,this},I.addBinaryOp=function(e,t){return E=Math.max(e.length,E),C[e]=t,this},I.addLiteral=function(e,t){return A[e]=t,this},I.removeUnaryOp=function(e){return delete O[e],e.length===T&&(T=$(O)),this},I.removeAllUnaryOps=function(){return O={},T=0,this},I.removeBinaryOp=function(e){return delete C[e],e.length===E&&(E=$(C)),this},I.removeAllBinaryOps=function(){return C={},E=0,this},I.removeLiteral=function(e){return delete A[e],this},I.removeAllLiterals=function(){return A={},this},\"undefined\"==typeof exports){var H=e.jsep;e.jsep=I,I.noConflict=function(){return e.jsep===I&&(e.jsep=H),I}}else\"undefined\"!=typeof module&&module.exports?exports=module.exports=I:exports.parse=I}(this);\n//# sourceMappingURL=data:application/json;base64,","deps":{}},"/Users/denea/mos/src/js/converter/utils.js":{"file":"/Users/denea/mos/src/js/converter/utils.js","source":"\"use strict\";var console=require(\"./../../../bower_components/console-browserify/index.js\"),jsep=require(\"./../../../bower_components/jsep/src/jsep.js\");jsep.addBinaryOp(\"or\",1),jsep.addBinaryOp(\"and\",2),jsep.addBinaryOp(\"eq\",6),jsep.addBinaryOp(\"neq\",6),jsep.addBinaryOp(\"lt\",7),jsep.addBinaryOp(\"lte\",7),jsep.addBinaryOp(\"gt\",7),jsep.addBinaryOp(\"gte\",7);var addSlashes=function(e){return e.replace(/[\\\\\"']/g,\"\\\\$&\").replace(/\\u0000/g,\"\\\\0\")},removeStyle=function(e,t,o,n,i,r,a){for(var l=e.split(\"\\n\"),s=i,d=r,u=1+n;u<t.line;u++)s+=l[u-1-n].length+1;if(s+=t.col,null!==o){for(var c=1+n;c<o.line;c++)d+=l[c-1-n].length+1;d+=o.col}else d+=e.length+1;var f=e.substr(0,s-1)+a+e.substr(d-1);return f},expressionGenerator=function(e,t,o){function n(e){switch(e){case\"or\":return\"||\";case\"and\":return\"&&\";case\"lt\":return\"<\";case\"lte\":return\"<=\";case\"gt\":return\">\";case\"gte\":return\">=\";case\"eq\":return\"==\";case\"neq\":return\"!=\";default:return e}}function i(e,t,o,r){if(\"undefined\"==typeof o&&(o=!0),\"undefined\"!=typeof r&&\"Identifier\"!==e.type&&\"MemberExpression\"!==e.type&&console.log(\"Cannot apply default value to variable when using expressions\"),\"BinaryExpression\"===e.type||\"LogicalExpression\"===e.type)return\"(\"+i(e.left,t,o)+\" \"+n(e.operator)+\" \"+i(e.right,t,o)+\")\";if(\"CallExpression\"===e.type){var a=e.arguments.map(function(e){return i(e,t,o)});return i(e.callee,t,o)+\"(\"+a.join(\", \")+\")\"}if(\"UnaryExpression\"===e.type)return e.operator+i(e.argument,t,o);if(\"MemberExpression\"==e.type&&e.computed)throw\"Unexpected computed member expression\";if(\"MemberExpression\"!=e.type||e.computed){if(\"Literal\"===e.type)return e.raw;if(\"Identifier\"===e.type){var l=e.name;return o?t(l,r)+\"()\":l}if(\"ConditionalExpression\"===e.type)return\"(\"+i(e.test,t,o)+\" ? \"+i(e.consequent,t,o)+\" : \"+i(e.alternate,t,o)+\")\";throw\"Compound\"===e.type?\"Syntax error in expression: operator expected after \"+i(e.body[0],t,!1):\"Found an unsupported expression type: \"+e.type}var s=i(e.object,t,!1)+\".\"+i(e.property,t,!1);return o&&\"Math\"!==e.object.name&&\"Color\"!==e.object.name&&\"Util\"!==e.object.name?t(s,r)+\"()\":s}return i(e,t,void 0,o)},expressionBinding=function(e,t,o){var n;if(\"undefined\"!=typeof o&&null!==o){var i=e.trim().replace(/@\\[([^\\]]+)\\]|@([a-zA-Z0-9\\._]+)\\b/g,\"###var###\");if(i=i.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\"\\\\$&\"),\"###var###\"==i)n=[null,o];else if(i=\"^\"+i.replace(/###var###/g,\"(.+)\")+\"$\",n=o.trim().match(new RegExp(i)),!n)throw console.log(\"Cannot find matches\",n,\"for\",o,e,i,e),\"Cannot find default value for \"+e+\" in \"+o}try{var r=0,a=\"'\"+e.replace(/@\\[([^\\]]+)\\]|@([a-zA-Z0-9\\._]+)\\b|(')/g,function(e,o,i,a){if(a)return\"\\\\\"+a;r++;var l,s=o||i;if(n&&(\"undefined\"!=typeof n[r]?l=n[r].trim():console.log(\"ABZZZ Cannot find default value for\",s,\"in\",n,\"as\",r)),o){var d=jsep(o),u=expressionGenerator(d,t,l);return\"'+\"+u+\"+'\"}return\"'+\"+t(s,l)+\"()+'\"})+\"'\";return a=a.replace(/(^|[^\\\\])''\\+/g,\"$1\").replace(/\\+''/g,\"\"),0===r&&\"false\"!==a&&\"true\"!==a&&console.error(\"Unexpected expression with no valid @variable references\",e),a}catch(l){throw\"Exception parsing expression \"+e+\" \"+l}},conditionBinding=function(e,t){var o=jsep(e),n=expressionGenerator(o,t);return n};module.exports={addSlashes:addSlashes,removeStyle:removeStyle,conditionBinding:conditionBinding,expressionBinding:expressionBinding};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js","./../../../bower_components/jsep/src/jsep.js":"/Users/denea/mos/bower_components/jsep/src/jsep.js"}},"/Users/denea/mos/src/js/converter/parser.js":{"file":"/Users/denea/mos/src/js/converter/parser.js","source":"(function (global){\n\"use strict\";function conditional_replace(e){return e.replace(/<!--\\[if ([^\\]]*)\\]>((?:(?!--)[\\s\\S])*?)<!\\[endif\\]-->/g,function(e,t,o){var i=\"<!-- cc:start -->\";i+=o.replace(/<([A-Za-z:]+)/g,\"<!-- cc:bo:$1 --><cc\").replace(/<\\/([A-Za-z:]+)>/g,\"<!-- cc:bc:$1 --></cc><!-- cc:ac:$1 -->\").replace(/\\/>/g,\"/><!-- cc:sc -->\"),i+=\"<!-- cc:end -->\";var n='<replacedcc condition=\"'+t+'\" style=\"display: none\">';return n+=$(\"<div>\").append($(i)).html().replace(/^<!-- cc:start -->/,\"\").replace(/<!-- cc:end -->$/,\"\"),n+=\"</replacedcc>\"})}var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),converterUtils=require(\"./utils.js\"),elaborateDeclarations=require(\"./declarations.js\"),processStylesheetRules=require(\"./stylesheet.js\"),modelDef=require(\"./model.js\"),domutils=require(\"./domutils.js\"),wrapElementWithCondition=function(e,t,o){var i=domutils.getAttribute(t,e);try{var n=converterUtils.conditionBinding(i,o);$(t).before(\"<!-- ko if: \"+n+\" -->\"),$(t).after(\"<!-- /ko -->\"),domutils.removeAttribute(t,e)}catch(a){throw console.warn(\"Model ensure path failed in if/variant\",t,i,e),a}},replacedAttributes=function(e,t){domutils.setAttribute(e,t,domutils.getAttribute(e,\"replaced\"+t))},processStyle=function(e,t,o,i){var n,a=domutils.getAttribute(e,\"replacedstyle\"),r=null;i&&(n={uniqueId:\"$data\",attr:{id:\"id\"}});var l=null!==domutils.getAttribute(e,\"data-ko-display\");r=elaborateDeclarations(a,void 0,t,o,e,n,l),null===r?r=a:domutils.removeAttribute(e,\"replacedstyle\"),null!==r&&(r.trim().length>0?domutils.setAttribute(e,\"style\",r):domutils.removeAttribute(e,\"style\"))},_fixRelativePath=function(e,t,o,i){var n=domutils.getAttribute(i,e),a=t(n);null!==a&&domutils.setAttribute(i,e,a)},processBlock=function(e,t,o,i,n,a,r,l,s,d){try{var c;if(\"block\"==a)c=domutils.getAttribute(e,\"data-ko-block\"),domutils.removeAttribute(e,\"data-ko-block\");else{if(\"template\"!=a)throw\"Unexpected context name while processing block: \"+a;c=r}$(\"[data-ko-remove]\",e).remove();for(var u=$(\"[data-ko-block]\",e).replaceWith(\"<replacedblock>\"),f=[\"href\",\"src\",\"data-ko-placeholder-src\",\"background\"],p=0;p<f.length;p++){var m=_fixRelativePath.bind(void 0,f[p],n);$(\"[\"+f[p]+\"]\",e).each(m)}var b=domutils.getAttribute(e,\"data-ko-properties\");null===b&&(b=\"\"),$(\"[data-ko-properties]\",e).each(function(e,t){b.length>0&&(b+=\" \"),b+=domutils.getAttribute(t,\"data-ko-properties\"),domutils.removeAttribute(t,\"data-ko-properties\")}),modelDef.createOrUpdateBlockDef(t,c,b,{contextName:a});var g=modelDef.ensurePathAndGetBindValue.bind(void 0,t,o,r,c,\"\");\"block\"==a&&g(\"id\",\"\"),$(\"style\",e).each(function(e,i){var a=domutils.getInnerHtml(i),l=modelDef.createOrUpdateBlockDef.bind(void 0,t),s=modelDef.ensurePathAndGetBindValue.bind(void 0,t,o,r),u=processStylesheetRules(a,void 0,s,l,o,n,r,c);if(u!=a)if(\"\"!==u.trim()){var f=d(u);domutils.setAttribute(i,\"data-bind\",\"template: { name: '\"+f+\"' }\"),domutils.setContent(i,\"\")}else domutils.removeElements($(i))}),processStyle(e,n,g,s);for(var h=[\"data-ko-display\",\"data-ko-editable\",\"data-ko-wrap\",\"href\"],v=0;v<h.length;v++){var k=domutils.getAttribute(e,h[v]);if(k)throw console.warn(\"ERROR: Unsupported \"+h[v]+\" used together with data-ko-block\",e),\"ERROR: Unsupported \"+h[v]+\" used together with data-ko-block\"}return $(\"[data-ko-link]\",e).each(function(e,t){var o=domutils.getAttribute(t,\"data-ko-link\"),i=domutils.getAttribute(t,\"replacedstyle\");(\"undefined\"==typeof i||null===i)&&(i=\"\"),i=\"\"!==i?\"-ko-attr-href: @\"+o+\"; \"+i:\"-ko-attr-href: @\"+o,domutils.setAttribute(t,\"replacedstyle\",i),domutils.setAttribute(t,\"data-ko-wrap\",o),domutils.removeAttribute(t,\"data-ko-link\")}),$(\"[replacedstyle]\",e).each(function(e,t){processStyle(t,n,g,!1)}),$(\"[replacedhttp-equiv]\",e).each(function(e,t){replacedAttributes(t,\"http-equiv\")}),$(\"[data-ko-display]\",e).each(function(e,t){wrapElementWithCondition(\"data-ko-display\",t,g)}),$(\"[data-ko-editable]\",e).each(function(e,t){var o,i,n,a,r,l,s=domutils.getAttribute(t,\"data-ko-editable\");if(s.lastIndexOf(\".\")>0){var c=s.substr(0,s.lastIndexOf(\".\"));r=g(c)}else r=g(s);if(l=\"wysiwygClick: function(obj, evt) { $root.selectItem(\"+r+\", $data); return false }, clickBubble: false, wysiwygCss: { selecteditem: $root.isSelectedItem(\"+r+\") }, scrollIntoView: $root.isSelectedItem(\"+r+\")\",\"img\"!=domutils.getLowerTagName(t)){i=domutils.getInnerHtml(t);var u=g(s,i,!0,\"wysiwyg\");if(o=\"\",domutils.getAttribute(t,\"id\")||(o+=\"wysiwygId: id()+'_\"+s.replace(\".\",\"_\")+\"', \"),\"undefined\"!=typeof l&&(o+=l+\", \"),o+=\"wysiwygOrHtml: \"+u,\"td\"==domutils.getLowerTagName(t)){var f=$('<div data-ko-wrap=\"false\" style=\"width: 100%; height: 100%\"></div>')[0];domutils.setAttribute(f,\"data-bind\",o);var p=domutils.getInnerHtml($(\"<div></div>\").append(f));domutils.setContent(t,p)}else n=domutils.getAttribute(t,\"data-bind\"),a=(null!==n?n+\", \":\"\")+o,domutils.setAttribute(t,\"data-bind\",a),domutils.setContent(t,\"\");domutils.removeAttribute(t,\"data-ko-editable\")}else{var m=domutils.getAttribute(t,\"width\");if(\"\"===m&&(m=null),null===m)throw console.error(\"ERROR: data-ko-editable images must declare a WIDTH attribute!\",t),\"ERROR: data-ko-editable images must declare a WIDTH attribute!\";var b=domutils.getAttribute(t,\"height\");\"\"===b&&(b=null);var h=domutils.getAttribute(t,\"align\");n=domutils.getAttribute(t,\"data-bind\");var v=n&&n.match(/virtualAttr: {[^}]* height: ([^,}]*)[,}]/);v&&(b=v[1]);var k=n&&n.match(/virtualAttr: {[^}]* width: ([^,}]*)[,}]/);k&&(m=k[1]);var y;i=domutils.getAttribute(t,\"data-ko-placeholder-src\");var w=\"\";i?w=domutils.getAttribute(t,\"src\"):i=domutils.getAttribute(t,\"src\");var x;m&&b?x=m+\"+'x'+\"+b:b?m||(x=\"'h'+\"+b+\"+''\"):x=\"'w'+\"+m+\"+''\";var _,C=b||domutils.getAttribute(t,\"data-ko-placeholder-height\"),T=m||domutils.getAttribute(t,\"data-ko-placeholder-width\");if(domutils.removeAttribute(t,\"src\"),domutils.removeAttribute(t,\"data-ko-editable\"),domutils.removeAttribute(t,\"data-ko-placeholder-height\"),domutils.removeAttribute(t,\"data-ko-placeholder-width\"),domutils.removeAttribute(t,\"data-ko-placeholder-src\"),i&&(_=\"{ width: \"+T+\", height: \"+C+\", text: \"+x+\"}\"),!T||!C)throw console.error(\"IMG data-ko-editable must declare width and height attributes, or their placeholder counterparts data-ko-placeholder-width/data-ko-placeholder-height\",t),\"ERROR: IMG data-ko-editable MUST declare width and height attributes, or their placeholder counterparts data-ko-placeholder-width/data-ko-placeholder-height\";var S=g(s,w,!1,\"wysiwyg\");o=\"wysiwygSrc: { width: \"+m+\", height: \"+b+\", src: \"+S+\", placeholder: \"+_+\" }\",a=(null!==n?n+\", \":\"\")+o,domutils.setAttribute(t,\"data-bind\",a);var O=d(t),A=\"{ width: \"+m;\"left\"==h?A+=\", float: 'left'\":\"right\"==h?A+=\", float: 'right'\":\"center\"==h?console.log(\"non so cosa fa align=center su una img e quindi non so come simularne l'editing\"):\"top\"==h?A+=\", verticalAlign: 'top'\":\"middle\"==h?A+=\", verticalAlign: 'middle'\":\"bottom\"==h&&(A+=\", verticalAlign: 'bottom'\"),A+=\"}\",$(t).before(\"<!-- ko wysiwygImg: { _data: $data, _item: \"+r+\", _template: '\"+O+\"', _editTemplate: 'img-wysiwyg', _src: \"+S+\", _width: \"+m+\", _height: \"+b+\", _align: \"+(null===h?void 0:\"'\"+h+\"'\")+\", _size: \"+x+\", _method: \"+y+\", _placeholdersrc: \"+_+\", _stylebind: \"+A+\" } -->\"),$(t).after(\"<!-- /ko -->\")}}),$(\"[href]\",e).each(function(e,t){var o=domutils.getAttribute(t,\"href\"),i=\"wysiwygHref: '\"+converterUtils.addSlashes(o)+\"'\",n=domutils.getAttribute(t,\"data-bind\"),a=(null!==n?n+\", \":\"\")+i;domutils.setAttribute(t,\"data-bind\",a)}),$(\"replacedblock\",e).each(function(e,a){var s=u[e],f=processBlock(s,t,o,i,n,\"block\",c,l,!0,d),p=modelDef.ensurePathAndGetBindValue(t,o,r,c,\"\",f);$(a).before(\"<!-- ko block: { data: \"+converterUtils.addSlashes(p)+\", template: 'block' } -->\"),$(a).after(\"<!-- /ko -->\"),$(a).remove()}),$($(\"[data-ko-wrap]\",e).get().reverse(),e).each(function(e,t){var o=domutils.getAttribute(t,\"data-ko-wrap\");if(\"undefined\"==typeof o||\"\"===o||\"true\"===o)throw\"Unsupported empty value for data-ko-wrap: use false value if you want to always remove the tag\";var i,n,a=converterUtils.conditionBinding(o,g),r=domutils.getAttribute(t,\"data-bind\");if(\"\"!==r&&null!==r&&r.match(/(block|wysiwygOrHtml):/)){var l=\"<!-- ko \"+r+\" -->\"+domutils.getInnerHtml(t)+\"<!-- /ko -->\";i=d(l),domutils.removeAttribute(t,\"data-ko-wrap\"),n=d(t),domutils.replaceHtml(t,\"<!-- ko template: /* special */ (typeof templateMode != 'undefined' && templateMode == 'wysiwyg') || \"+a+\" ? '\"+n+\"' : '\"+i+\"' --><!-- /ko -->\")}else i=d(domutils.getInnerHtml(t)),domutils.removeAttribute(t,\"data-ko-wrap\"),domutils.setContent(t,\"<!-- ko template: '\"+i+\"' --><!-- /ko -->\"),n=d(t),domutils.replaceHtml(t,\"<!-- ko template: (typeof templateMode != 'undefined' && templateMode == 'wysiwyg') || \"+a+\" ? '\"+n+\"' : '\"+i+\"' --><!-- /ko -->\")}),d(e,c,\"show\"),i(r,c,a,l),c}catch(y){throw console.error(\"Exception while parsing the template\",y,e),y}},translateTemplate=function(e,t,o,i){var n={},a=conditional_replace(t.replace(/(<[^>]+\\s)(style|http-equiv)(=\"[^\"]*\"[^>]*>)/gi,function(e,t,o,i){return t+\"replaced\"+o+i})),r=$(a),l=r[0],s=[],d=function(e,t,o,i){s.push({root:e,block:t,context:o,container:i})},c=function(e,t,o){if(\"undefined\"==typeof n.themes&&(n.themes={}),\"undefined\"==typeof n.themes[e]&&(n.themes[e]={}),\"undefined\"==typeof n.themes[e][t]||null===n.themes[e][t])n.themes[e][t]=o;else if(\"undefined\"!=typeof o&&null!==o){var i=n.themes[e][t];i!=o&&console.log(\"Error setting a new default for property \"+t+\" in theme \"+e+\". old:\"+i+\" new:\"+o+\"!\")}},u=$(\"[data-ko-container]\",r),f={};u.each(function(e,t){var o=domutils.getAttribute(t,\"data-ko-container\")+\"Blocks\";domutils.removeAttribute(t,\"data-ko-container\"),domutils.setAttribute(t,\"data-bind\",\"block: \"+o);var i=$(\"> [data-ko-block]\",t);domutils.removeElements(i,!0),f[o]=i}),modelDef.createOrUpdateBlockDef(n,\"id\"),modelDef.createOrUpdateBlockDef(n,\"bodyTheme\"),modelDef.createOrUpdateBlockDef(n,\"blocks\",\"blocks[]\"),modelDef.createOrUpdateBlockDef(n,\"text\"),processBlock(l,n,c,d,o,\"template\",e,void 0,!1,i);var p=function(t,a,r){processBlock(r,n,c,d,o,\"block\",e,t,!0,i)};for(var m in f)if(f.hasOwnProperty(m)){var b=f[m],g=m;modelDef.ensurePathAndGetBindValue(n,c,e,e,\"\",g+\".blocks\",\"[]\"),b.each(p.bind(void 0,g))}var h={_defs:n,templateName:e,_blocks:s};return\"undefined\"!=typeof n[e]._version&&(h.version=n[e]._version),h};module.exports=translateTemplate;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./model.js":"/Users/denea/mos/src/js/converter/model.js","./domutils.js":"/Users/denea/mos/src/js/converter/domutils.js","./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js","./utils.js":"/Users/denea/mos/src/js/converter/utils.js","./stylesheet.js":"/Users/denea/mos/src/js/converter/stylesheet.js","./declarations.js":"/Users/denea/mos/src/js/converter/declarations.js"}},"/Users/denea/mos/src/js/converter/main.js":{"file":"/Users/denea/mos/src/js/converter/main.js","source":"\"use strict\";var modelDef=require(\"./model.js\"),wrappedResultModel=function(e){var t=e._defs,o=e.templateName,i=modelDef.getDef(t,o),n=modelDef.generateResultModel(e),a=require(\"./wrapper.js\"),r=a(n,i,t);return r},translateTemplate=function(){var e=require(\"./parser.js\");return e.apply(e,arguments)},generateEditors=function(){var e=require(\"./editor.js\");return e.apply(e,arguments)},checkModel=function(){var e=require(\"./checkmodel.js\");return e.apply(e,arguments)};module.exports={translateTemplate:translateTemplate,wrappedResultModel:wrappedResultModel,generateResultModel:modelDef.generateResultModel,generateEditors:generateEditors,checkModel:checkModel};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsibW9kZWxEZWYiLCJyZXF1aXJlIiwid3JhcHBlZFJlc3VsdE1vZGVsIiwidGVtcGxhdGVEZWYiLCJkZWZzIiwiX2RlZnMiLCJ0ZW1wbGF0ZU5hbWUiLCJmaW5hbE1vZGVsQ29udGVudERlZiIsImdldERlZiIsImZpbmFsTW9kZWxDb250ZW50IiwiZ2VuZXJhdGVSZXN1bHRNb2RlbCIsIndyYXBwZXIiLCJyZXMiLCJ0cmFuc2xhdGVUZW1wbGF0ZSIsInR0IiwiYXBwbHkiLCJhcmd1bWVudHMiLCJnZW5lcmF0ZUVkaXRvcnMiLCJnZSIsImNoZWNrTW9kZWwiLCJjbSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFlBR0EsSUFBSUEsVUFBV0MsUUFBUSxjQUVuQkMsbUJBQXFCLFNBQVNDLEdBQ2hDLEdBQUlDLEdBQU9ELEVBQVlFLE1BQ25CQyxFQUFlSCxFQUFZRyxhQUMzQkMsRUFBdUJQLFNBQVNRLE9BQU9KLEVBQU1FLEdBRTdDRyxFQUFvQlQsU0FBU1Usb0JBQW9CUCxHQUVqRFEsRUFBVVYsUUFBUSxnQkFDbEJXLEVBQU1ELEVBQVFGLEVBQW1CRixFQUFzQkgsRUFFM0QsT0FBT1EsSUFJTEMsa0JBQW9CLFdBQ3RCLEdBQUlDLEdBQUtiLFFBQVEsY0FDakIsT0FBT2EsR0FBR0MsTUFBTUQsRUFBSUUsWUFJbEJDLGdCQUFrQixXQUNwQixHQUFJQyxHQUFLakIsUUFBUSxjQUNqQixPQUFPaUIsR0FBR0gsTUFBTUcsRUFBSUYsWUFHbEJHLFdBQWEsV0FDZixHQUFJQyxHQUFLbkIsUUFBUSxrQkFDakIsT0FBT21CLEdBQUdMLE1BQU1LLEVBQUlKLFdBR3RCSyxRQUFPQyxTQUNMVCxrQkFBbUJBLGtCQUNuQlgsbUJBQW9CQSxtQkFDcEJRLG9CQUFxQlYsU0FBU1Usb0JBQzlCTyxnQkFBaUJBLGdCQUNqQkUsV0FBWUEiLCJmaWxlIjoib3V0LmpzLm1hcCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogZ2xvYmFsIGdsb2JhbDogZmFsc2UgKi9cblxudmFyIG1vZGVsRGVmID0gcmVxdWlyZShcIi4vbW9kZWwuanNcIik7XG5cbnZhciB3cmFwcGVkUmVzdWx0TW9kZWwgPSBmdW5jdGlvbih0ZW1wbGF0ZURlZikge1xuICB2YXIgZGVmcyA9IHRlbXBsYXRlRGVmLl9kZWZzO1xuICB2YXIgdGVtcGxhdGVOYW1lID0gdGVtcGxhdGVEZWYudGVtcGxhdGVOYW1lO1xuICB2YXIgZmluYWxNb2RlbENvbnRlbnREZWYgPSBtb2RlbERlZi5nZXREZWYoZGVmcywgdGVtcGxhdGVOYW1lKTtcblxuICB2YXIgZmluYWxNb2RlbENvbnRlbnQgPSBtb2RlbERlZi5nZW5lcmF0ZVJlc3VsdE1vZGVsKHRlbXBsYXRlRGVmKTtcblxuICB2YXIgd3JhcHBlciA9IHJlcXVpcmUoXCIuL3dyYXBwZXIuanNcIik7XG4gIHZhciByZXMgPSB3cmFwcGVyKGZpbmFsTW9kZWxDb250ZW50LCBmaW5hbE1vZGVsQ29udGVudERlZiwgZGVmcyk7XG5cbiAgcmV0dXJuIHJlcztcbn07XG5cbi8vIHJlcXVpcmVzIG9ubHkgd2hlbiBpbXBvcnRlZFxudmFyIHRyYW5zbGF0ZVRlbXBsYXRlID0gZnVuY3Rpb24oKSB7XG4gIHZhciB0dCA9IHJlcXVpcmUoJy4vcGFyc2VyLmpzJyk7XG4gIHJldHVybiB0dC5hcHBseSh0dCwgYXJndW1lbnRzKTtcbn07XG5cbi8vIHJlcXVpcmVzIG9ubHkgd2hlbiBpbXBvcnRlZFxudmFyIGdlbmVyYXRlRWRpdG9ycyA9IGZ1bmN0aW9uKCkge1xuICB2YXIgZ2UgPSByZXF1aXJlKCcuL2VkaXRvci5qcycpO1xuICByZXR1cm4gZ2UuYXBwbHkoZ2UsIGFyZ3VtZW50cyk7XG59O1xuXG52YXIgY2hlY2tNb2RlbCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgY20gPSByZXF1aXJlKCcuL2NoZWNrbW9kZWwuanMnKTtcbiAgcmV0dXJuIGNtLmFwcGx5KGNtLCBhcmd1bWVudHMpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHRyYW5zbGF0ZVRlbXBsYXRlOiB0cmFuc2xhdGVUZW1wbGF0ZSxcbiAgd3JhcHBlZFJlc3VsdE1vZGVsOiB3cmFwcGVkUmVzdWx0TW9kZWwsXG4gIGdlbmVyYXRlUmVzdWx0TW9kZWw6IG1vZGVsRGVmLmdlbmVyYXRlUmVzdWx0TW9kZWwsXG4gIGdlbmVyYXRlRWRpdG9yczogZ2VuZXJhdGVFZGl0b3JzLFxuICBjaGVja01vZGVsOiBjaGVja01vZGVsXG59OyJdfQ==","deps":{"./model.js":"/Users/denea/mos/src/js/converter/model.js","./wrapper.js":"/Users/denea/mos/src/js/converter/wrapper.js","./checkmodel.js":"/Users/denea/mos/src/js/converter/checkmodel.js","./editor.js":"/Users/denea/mos/src/js/converter/editor.js","./parser.js":"/Users/denea/mos/src/js/converter/parser.js"}},"/Users/denea/mos/src/js/template-loader.js":{"file":"/Users/denea/mos/src/js/template-loader.js","source":"(function (global){\n\"use strict\";function _viewModelPluginInstance(e){var t;return{viewModel:function(o){t=e(o)},init:function(){\"undefined\"!=typeof t&&\"undefined\"!=typeof t.init&&t.init()},dispose:function(){\"undefined\"!=typeof t&&\"undefined\"!=typeof t.dispose&&t.dispose()}}}var $=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),kojqui=(typeof window !== \"undefined\" ? window['kojqui'] : typeof global !== \"undefined\" ? global['kojqui'] : null),templateConverter=require(\"./converter/main.js\"),console=require(\"./../../bower_components/console-browserify/index.js\"),initializeViewmodel=require(\"./viewmodel.js\"),templateSystem=require(\"./bindings/choose-template.js\"),pluginsCall=function(e,t,o,a){var i,l,n,r,d;d=[],\"undefined\"!=typeof a&&a?(i=e.length-1,l=0,n=-1):(i=0,l=e.length-1,n=1);for(var s=i;s!=l+n;s+=n)\"undefined\"!=typeof e[s][t]&&(r=e[s][t].apply(e[s],o),\"undefined\"!=typeof r&&d.push(r));return d},origDisposeCallback=ko.utils.domNodeDisposal.addDisposeCallback;ko.utils.domNodeDisposal.addDisposeCallback=function(e,t){var o=function(e){try{t(e)}catch(o){console.warn(\"Caught unexpected dispose callback exception\",o)}};origDisposeCallback(e,o)};var bindingPluginMaker=function(e){return{viewModel:function(t){try{e(\"applyBindings\",ko.applyBindings.bind(void 0,t))}catch(o){throw console.warn(o,o.stack),o}},dispose:function(){try{e(\"unapplyBindings\",ko.cleanNode.bind(this,global.document.body))}catch(t){throw console.warn(t,t.stack),t}}}},templateCreator=function(e,t,o,a){var i=o;for(\"undefined\"!=typeof o&&\"undefined\"!=typeof a&&(\"object\"!=typeof t||\"replacedhtml\"!=t.tagName.toLowerCase())&&(i+=\"-\"+a);\"undefined\"==typeof i||null===i||e.exists(i);)i=\"anonymous-\"+Math.floor(1e5*Math.random()+1);if(\"object\"==typeof t&&\"replacedhtml\"==t.tagName.toLowerCase()){var l=$(t),n=$(\"replacedhead\",l),r=$(\"replacedbody\",l);e.adder(i+\"-head\",n.html()||\"\"),e.adder(i+\"-show\",r.html()||\"\"),e.adder(i+\"-preview\",l.html()),e.adder(i+\"-wysiwyg\",l.html()),n.children().detach(),n.html(\"<!-- ko block: content --><!-- /ko -->\"),n.before(\"<!-- ko withProperties: { templateMode: 'head' } -->\"),n.after(\"<!-- /ko -->\"),r.html(\"<!-- ko block: content --><!-- /ko -->\"),e.adder(i+\"-iframe\",l[0].outerHTML)}else\"object\"==typeof t?e.adder(i,t.outerHTML):e.adder(i,t);return i},_templateUrlConverter=function(e,t){return t.match(/^[^\\/]*:/)||t.match(/^\\//)||t.match(/^\\[/)||t.match(/^#?$/)?null:e+t},templateLoader=function(e,t,o,a,i,l){var n=\"string\"==typeof t?t:o.template,r=\"./\",d=n.lastIndexOf(\"/\");-1!=d&&(r=n.substr(0,d+1));var s,c=_templateUrlConverter.bind(void 0,r);s=\"undefined\"==typeof o?{template:n,name:\"No name\",created:Date.now()}:o,$.get(n,function(t){var o=templateCompiler(e,c,\"template\",t,a,s,i,l);o.init()})},templateCompiler=function(e,t,o,a,i,l,n,r){var d=a.match(/^([\\S\\s]*)([<]html[^>]*>[\\S\\s]*<\\/html>)([\\S\\s]*)$/i);if(null===d)throw\"Unable to find <html> opening and closing tags in the template\";var s=d[1],c={\"<html\":0,\"<head\":0,\"<body\":0,\"</html\":0,\"</body\":0,\"</head\":0},p=d[2].replace(/(<\\/?)(html|head|body)([^>]*>)/gi,function(e,t,o,a){return c[(t+o).toLowerCase()]+=1,t+\"replaced\"+o+a});for(var b in c)if(c.hasOwnProperty(b)&&1!=c[b]){if(0===c[b])throw\"ERROR: missing mandatory element \"+b+\">\";if(c[b]>1)throw\"ERROR: multiple element \"+b+\"> occourences are not supported (found \"+c[b]+\" occourences)\"}var m=d[3],u=[],f=\"+$root.contentListeners()\",g=[];if(\"undefined\"!=typeof n)for(var h=0;h<n.length;h++)\"function\"==typeof n[h]?g.push(_viewModelPluginInstance(n[h])):g.push(n[h]);var v=[],k={adder:function(e,t){if(\"string\"!=typeof t)throw\"Template system: cannot create new template \"+e;var o=t.match(/(data)?-ko-[^ =:]*/g);o&&console.error(\"ERROR: found unexpected -ko- attribute in compiled template\",e,\", you probably mispelled it:\",o),templateSystem.addTemplate(e,t),v.push(e)},exists:function(e){var t=templateSystem.getTemplateContent(e);return\"undefined\"!=typeof t?!0:!1},dispose:function(){for(var e=v.length-1;e>=0;e--)templateSystem.removeTemplate(v[e])}};ko.bindingHandlers.block.templateExists=k.exists;for(var y=templateCreator.bind(void 0,k),w=e(\"translateTemplate\",templateConverter.translateTemplate.bind(void 0,o,p,t,y)),x=e(\"generateModel\",templateConverter.wrappedResultModel.bind(void 0,w)),S={},C=pluginsCall(g,\"widget\",[$,ko,kojqui]),_=0;_<C.length;_++)S[C[_].widget]=C[_];u.push.apply(u,e(\"generateEditors\",templateConverter.generateEditors.bind(void 0,w,S,t,y,f)));var B=!1;if(\"undefined\"!=typeof i&&null!==i){var T;T=\"string\"==typeof i?ko.utils.parseJson(i):i;var j=e(\"checkModel\",templateConverter.checkModel.bind(void 0,x._unwrap(),u,T));2==j&&(console.error(\"Trying to compile an incompatible template version!\",x._unwrap(),u,T),B=!0);try{x._wrap(T)}catch(M){console.error(\"Unable to inject model content!\",M),B=!0}}var P=s+templateSystem.getTemplateContent(o+\"-iframe\").replace(/(<\\/?)replaced(html|head|body)([^>]*>)/gi,function(e,t,o,a){return t+o+a})+m,D=ko.bindingHandlers.bindIframe.tpl;ko.bindingHandlers.bindIframe.tpl=P;var q={dispose:function(){ko.bindingHandlers.bindIframe.tpl=D}};g.push(q),g.push(k);var L=e(\"initializeViewmodel\",initializeViewmodel.bind(this,x,u,t,r));L.metadata=l;var F=\"0.16.0\";return\"undefined\"!=typeof L.metadata.editorversion&&L.metadata.editorversion!==F&&console.warn(\"The model being loaded has been created with an older editor version\",L.metadata.editorversion,\"vs\",F),L.metadata.editorversion=F,\"undefined\"!=typeof w.version&&(\"undefined\"!=typeof L.metadata.templateversion&&L.metadata.templateversion!==w.version&&console.error(\"The model being loaded has been created with a different template version\",w.version,\"vs\",L.metadata.templateversion),L.metadata.templateversion=w.version),templateSystem.init(),g.push(bindingPluginMaker(e)),pluginsCall(g,\"viewModel\",[L]),B&&$(\"#incompatible-template\").dialog({modal:!0,appendTo:\"#mo-body\",buttons:{Ok:function(){$(this).dialog(\"close\")}}}),{model:L,init:function(){pluginsCall(g,\"init\",void 0,!0)},dispose:function(){pluginsCall(g,\"dispose\",void 0,!0)}}},checkFeature=function(e,t){if(!t())throw console.warn(\"Missing feature\",e),\"Missing feature \"+e},isCompatible=function(){try{return checkFeature(\"matchMedia\",function(){return\"undefined\"!=typeof global.matchMedia}),checkFeature(\"XMLHttpRequest 2\",function(){return\"XMLHttpRequest\"in global&&\"withCredentials\"in new global.XMLHttpRequest}),checkFeature(\"ES5 strict\",function(){return function(){return\"undefined\"==typeof this}()}),checkFeature(\"CSS borderRadius\",function(){return\"undefined\"!=typeof global.document.body.style.borderRadius}),checkFeature(\"CSS boxShadow\",function(){return\"undefined\"!=typeof global.document.body.style.boxShadow}),checkFeature(\"CSS boxSizing\",function(){return\"undefined\"!=typeof global.document.body.style.boxSizing}),checkFeature(\"CSS backgroundSize\",function(){return\"undefined\"!=typeof global.document.body.style.backgroundSize}),checkFeature(\"CSS backgroundOrigin\",function(){return\"undefined\"!=typeof global.document.body.style.backgroundOrigin}),checkBadBrowserExtensions(),!0}catch(e){return!1}},checkBadBrowserExtensions=function(){var e=\"checkbadbrowsersframe\",t=ko.bindingHandlers.bindIframe.tpl;ko.bindingHandlers.bindIframe.tpl='<!DOCTYPE html>\\r\\n<html>\\r\\n<head><title>A</title>\\r\\n</head>\\r\\n<body><p style=\"color: blue\" align=\"right\" data-bind=\"style: { color: \\'red\\' }\">B</p><div data-bind=\"text: content\"></div></body>\\r\\n</html>\\r\\n',$(\"body\").append('<iframe id=\"'+e+'\" data-bind=\"bindIframe: $data\"></iframe>');var o=global.document.getElementById(e);ko.applyBindings({content:\"dummy content\"},o);var a=o.contentWindow.document.doctype,i=\"<!DOCTYPE \"+a.name+(a.publicId?' PUBLIC \"'+a.publicId+'\"':\"\")+(!a.publicId&&a.systemId?\" SYSTEM\":\"\")+(a.systemId?' \"'+a.systemId+'\"':\"\")+\">\",l=i+\"\\n\"+o.contentWindow.document.documentElement.outerHTML;ko.cleanNode(o),ko.removeNode(o),ko.bindingHandlers.bindIframe.tpl=t;var n='<!DOCTYPE html>\\n<html><head><title>A</title>\\n</head>\\n<body><p align=\"right\" style=\"color: red;\" data-bind=\"style: { color: \\'red\\' }\">B</p><div data-bind=\"text: content\">dummy content</div>\\n\\n</body></html>',r='<!DOCTYPE html>\\n<html><head><title>A</title>\\n</head>\\n<body><p style=\"color: red;\" data-bind=\"style: { color: \\'red\\' }\" align=\"right\">B</p><div data-bind=\"text: content\">dummy content</div>\\n\\n</body></html>',d='<!DOCTYPE html>\\n<html><head><title>A</title>\\n</head>\\n<body><p style=\"color: red;\" align=\"right\" data-bind=\"style: { color: \\'red\\' }\">B</p><div data-bind=\"text: content\">dummy content</div>\\n\\n</body></html>';if(n!==l&&r!==l&&d!==l)throw console.info(\"BadBrowser.FrameContentCheck\",l.length,n.length,r.length,d.length,l==n,l==r,l==d),console.info(l),\"Unexpected frame content. Misbehaving browser: \"+l.length+\"/\"+n.length+\"/\"+r.length+\"/\"+d.length},fixPageEvents=function(){global.addEventListener&&(global.addEventListener(\"drag\",function(e){e=e||global.event,e.preventDefault()},!1),global.addEventListener(\"dragstart\",function(e){e=e||global.event,e.preventDefault()},!1),global.addEventListener(\"dragover\",function(e){e=e||global.event,e.preventDefault()},!1),global.addEventListener(\"drop\",function(e){e=e||global.event,e.preventDefault()},!1),global.document.body.addEventListener(\"drop\",function(e){e.preventDefault()},!1)),global.document.ondragstart&&(global.document.ondragstart=function(){return!1})};module.exports={compile:templateCompiler,load:templateLoader,isCompatible:isCompatible,fixPageEvents:fixPageEvents};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./bindings/choose-template.js":"/Users/denea/mos/src/js/bindings/choose-template.js","./../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js","./viewmodel.js":"/Users/denea/mos/src/js/viewmodel.js","./converter/main.js":"/Users/denea/mos/src/js/converter/main.js"}},"/Users/denea/mos/bower_components/slick/parser.js":{"file":"/Users/denea/mos/bower_components/slick/parser.js","source":"\"use strict\";var escapeRe=/([-.*+?^${}()|[\\]\\/\\\\])/g,unescapeRe=/\\\\/g,escape=function(e){return(e+\"\").replace(escapeRe,\"\\\\$1\")},unescape=function(e){return(e+\"\").replace(unescapeRe,\"\")},slickRe=RegExp(\"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\".replace(/<combinator>/,\"[\"+escape(\">+~`!@$%^&={}\\\\;</\")+\"]\").replace(/<unicode>/g,\"(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])\").replace(/<unicode1>/g,\"(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])\")),Part=function(e){this.combinator=e||\" \",this.tag=\"*\"};Part.prototype.toString=function(){if(!this.raw){var e,t,o=\"\";if(o+=this.tag||\"*\",this.id&&(o+=\"#\"+this.id),this.classes&&(o+=\".\"+this.classList.join(\".\")),this.attributes)for(e=0;t=this.attributes[e++];)o+=\"[\"+t.name+(t.operator?t.operator+'\"'+t.value+'\"':\"\")+\"]\";if(this.pseudos)for(e=0;t=this.pseudos[e++];)o+=\":\"+t.name,t.value&&(o+=\"(\"+t.value+\")\");this.raw=o}return this.raw};var Expression=function(){this.length=0};Expression.prototype.toString=function(){if(!this.raw){for(var e,t=\"\",o=0;e=this[o++];)1!==o&&(t+=\" \"),\" \"!==e.combinator&&(t+=e.combinator+\" \"),t+=e;this.raw=t}return this.raw};var replacer=function(e,t,o,n,r,i,a,l,s,d,u,c,f,p,m,b){var g,h;if((t||!this.length)&&(g=this[this.length++]=new Expression,t))return\"\";if(g||(g=this[this.length-1]),(o||n||!g.length)&&(h=g[g.length++]=new Part(o)),h||(h=g[g.length-1]),r)h.tag=unescape(r);else if(i)h.id=unescape(i);else if(a){var v=unescape(a),y=h.classes||(h.classes={});if(!y[v]){y[v]=escape(a);var k=h.classList||(h.classList=[]);k.push(v),k.sort()}}else f?(b=b||m,(h.pseudos||(h.pseudos=[])).push({type:1==c.length?\"class\":\"element\",name:unescape(f),escapedName:escape(f),value:b?unescape(b):null,escapedValue:b?escape(b):null})):l&&(u=u?escape(u):null,(h.attributes||(h.attributes=[])).push({operator:s,name:unescape(l),escapedName:escape(l),value:u?unescape(u):null,escapedValue:u?escape(u):null}));return\"\"},Expressions=function(e){this.length=0;for(var t,o=this,n=e;e;){if(t=e.replace(slickRe,function(){return replacer.apply(o,arguments)}),t===e)throw new Error(n+\" is an invalid expression\");e=t}};Expressions.prototype.toString=function(){if(!this.raw){for(var e,t=[],o=0;e=this[o++];)t.push(e);this.raw=t.join(\", \")}return this.raw};var cache={},parse=function(e){return null==e?null:(e=(\"\"+e).replace(/^\\s+|\\s+$/g,\"\"),cache[e]||(cache[e]=new Expressions(e)))};module.exports=parse;\n//# sourceMappingURL=data:application/json;base64,","deps":{}},"/Users/denea/mos/bower_components/juice/lib/selector.js":{"file":"/Users/denea/mos/bower_components/juice/lib/selector.js","source":"\"use strict\";function Selector(e,t){this.text=e,this.spec=void 0,this.styleAttribute=t||!1}function parse(e){try{return parser(e)[0]}catch(t){return[]}}var parser=require(\"./../../slick/parser\");module.exports=exports=Selector,Selector.prototype.parsed=function(){return this.tokens||(this.tokens=parse(this.text)),this.tokens},Selector.prototype.specificity=function(){function e(o,n){for(var i=n||parse(o),r=[t?1:0,0,0,0],a=[],l=0;l<i.length;l++){var s=i[l],d=s.pseudos;if(s.id&&r[1]++,s.attributes&&(r[2]+=s.attributes.length),s.classList&&(r[2]+=s.classList.length),s.tag&&\"*\"!==s.tag&&r[3]++,d){r[3]+=d.length;for(var u=0;u<d.length;u++)\"not\"===d[u].name&&(a.push(d[u].value),r[3]--)}}for(var c=a.length;c--;)for(var f=e(a[c]),p=4;p--;)r[p]+=f[p];return r}var t=this.styleAttribute;return this.spec||(this.spec=e(this.text,this.parsed())),this.spec};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbGVjdG9yLmpzIl0sIm5hbWVzIjpbIlNlbGVjdG9yIiwidGV4dCIsInN0eWxlQXR0cmlidXRlIiwidGhpcyIsInNwZWMiLCJ1bmRlZmluZWQiLCJwYXJzZSIsInBhcnNlciIsImUiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInByb3RvdHlwZSIsInBhcnNlZCIsInRva2VucyIsInNwZWNpZmljaXR5IiwiZXhwcmVzc2lvbnMiLCJub3RzIiwiaSIsImxlbmd0aCIsImV4cHJlc3Npb24iLCJwc2V1ZG9zIiwiaWQiLCJhdHRyaWJ1dGVzIiwiY2xhc3NMaXN0IiwidGFnIiwicCIsIm5hbWUiLCJwdXNoIiwidmFsdWUiLCJpaSIsIm5vdCIsImpqIl0sIm1hcHBpbmdzIjoiQUFBQSxZQWNBLFNBQVNBLFVBQVNDLEVBQU1DLEdBQ3RCQyxLQUFLRixLQUFPQSxFQUNaRSxLQUFLQyxLQUFPQyxPQUNaRixLQUFLRCxlQUFpQkEsSUFBa0IsRUF5RTFDLFFBQVNJLE9BQU1MLEdBQ2IsSUFDRSxNQUFPTSxRQUFPTixHQUFNLEdBQ3BCLE1BQU9PLEdBQ1AsVUE1RkosR0FBSUQsUUFBU0UsUUFBUSxlQUVyQkMsUUFBT0MsUUFBVUEsUUFBVVgsU0FzQjNCQSxTQUFTWSxVQUFVQyxPQUFTLFdBRTFCLE1BREtWLE1BQUtXLFNBQVVYLEtBQUtXLE9BQVNSLE1BQU1ILEtBQUtGLE9BQ3RDRSxLQUFLVyxRQVNkZCxTQUFTWSxVQUFVRyxZQUFjLFdBSy9CLFFBQVNBLEdBQVlkLEVBQU1ZLEdBS3pCLElBQUssR0FKREcsR0FBY0gsR0FBVVAsTUFBTUwsR0FDOUJHLEdBQVFGLEVBQWlCLEVBQUksRUFBRyxFQUFHLEVBQUcsR0FDdENlLEtBRUtDLEVBQUksRUFBR0EsRUFBSUYsRUFBWUcsT0FBUUQsSUFBSyxDQUMzQyxHQUFJRSxHQUFhSixFQUFZRSxHQUN6QkcsRUFBVUQsRUFBV0MsT0FhekIsSUFWSUQsRUFBV0UsSUFBTWxCLEVBQUssS0FHdEJnQixFQUFXRyxhQUFjbkIsRUFBSyxJQUFNZ0IsRUFBV0csV0FBV0osUUFDMURDLEVBQVdJLFlBQWFwQixFQUFLLElBQU1nQixFQUFXSSxVQUFVTCxRQUd4REMsRUFBV0ssS0FBMEIsTUFBbkJMLEVBQVdLLEtBQWVyQixFQUFLLEtBR2pEaUIsRUFBUyxDQUNYakIsRUFBSyxJQUFNaUIsRUFBUUYsTUFFbkIsS0FBSyxHQUFJTyxHQUFJLEVBQUdBLEVBQUlMLEVBQVFGLE9BQVFPLElBQ1YsUUFBcEJMLEVBQVFLLEdBQUdDLE9BQ2JWLEVBQUtXLEtBQUtQLEVBQVFLLEdBQUdHLE9BQ3JCekIsRUFBSyxPQU1iLElBQUssR0FBSTBCLEdBQUtiLEVBQUtFLE9BQVFXLEtBRXpCLElBQUssR0FEREMsR0FBTWhCLEVBQVlFLEVBQUthLElBQ2xCRSxFQUFLLEVBQUdBLEtBQVM1QixFQUFLNEIsSUFBT0QsRUFBSUMsRUFHNUMsT0FBTzVCLEdBekNULEdBQUlGLEdBQWlCQyxLQUFLRCxjQUUxQixPQURLQyxNQUFLQyxPQUFRRCxLQUFLQyxLQUFPVyxFQUFZWixLQUFLRixLQUFNRSxLQUFLVSxXQUNuRFYsS0FBS0MiLCJmaWxlIjoib3V0LmpzLm1hcCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHBhcnNlciA9IHJlcXVpcmUoJ3NsaWNrL3BhcnNlcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMgPSBTZWxlY3RvcjtcblxuLyoqXG4gKiBDU1Mgc2VsZWN0b3IgY29uc3RydWN0b3IuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHNlbGVjdG9yIHRleHRcbiAqIEBwYXJhbSB7QXJyYXl9IG9wdGlvbmFsbHksIHByZWNhbGN1bGF0ZWQgc3BlY2lmaWNpdHlcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gU2VsZWN0b3IodGV4dCwgc3R5bGVBdHRyaWJ1dGUpIHtcbiAgdGhpcy50ZXh0ID0gdGV4dDtcbiAgdGhpcy5zcGVjID0gdW5kZWZpbmVkO1xuICB0aGlzLnN0eWxlQXR0cmlidXRlID0gc3R5bGVBdHRyaWJ1dGUgfHwgZmFsc2U7XG59XG5cbi8qKlxuICogR2V0IHBhcnNlZCBzZWxlY3Rvci5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblNlbGVjdG9yLnByb3RvdHlwZS5wYXJzZWQgPSBmdW5jdGlvbigpIHtcbiAgaWYgKCF0aGlzLnRva2VucykgeyB0aGlzLnRva2VucyA9IHBhcnNlKHRoaXMudGV4dCk7IH1cbiAgcmV0dXJuIHRoaXMudG9rZW5zO1xufTtcblxuLyoqXG4gKiBMYXp5IHNwZWNpZmljaXR5IGdldHRlclxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuU2VsZWN0b3IucHJvdG90eXBlLnNwZWNpZmljaXR5ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBzdHlsZUF0dHJpYnV0ZSA9IHRoaXMuc3R5bGVBdHRyaWJ1dGU7XG4gIGlmICghdGhpcy5zcGVjKSB7IHRoaXMuc3BlYyA9IHNwZWNpZmljaXR5KHRoaXMudGV4dCwgdGhpcy5wYXJzZWQoKSk7IH1cbiAgcmV0dXJuIHRoaXMuc3BlYztcblxuICBmdW5jdGlvbiBzcGVjaWZpY2l0eSh0ZXh0LCBwYXJzZWQpIHtcbiAgICB2YXIgZXhwcmVzc2lvbnMgPSBwYXJzZWQgfHwgcGFyc2UodGV4dCk7XG4gICAgdmFyIHNwZWMgPSBbc3R5bGVBdHRyaWJ1dGUgPyAxIDogMCwgMCwgMCwgMF07XG4gICAgdmFyIG5vdHMgPSBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXhwcmVzc2lvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBleHByZXNzaW9uID0gZXhwcmVzc2lvbnNbaV07XG4gICAgICB2YXIgcHNldWRvcyA9IGV4cHJlc3Npb24ucHNldWRvcztcblxuICAgICAgLy8gaWQgYXdhcmRzIGEgcG9pbnQgaW4gdGhlIHNlY29uZCBjb2x1bW5cbiAgICAgIGlmIChleHByZXNzaW9uLmlkKSB7IHNwZWNbMV0rKzsgfVxuXG4gICAgICAvLyBjbGFzc2VzIGFuZCBhdHRyaWJ1dGVzIGF3YXJkIGEgcG9pbnQgZWFjaCBpbiB0aGUgdGhpcmQgY29sdW1uXG4gICAgICBpZiAoZXhwcmVzc2lvbi5hdHRyaWJ1dGVzKSB7IHNwZWNbMl0gKz0gZXhwcmVzc2lvbi5hdHRyaWJ1dGVzLmxlbmd0aDsgfVxuICAgICAgaWYgKGV4cHJlc3Npb24uY2xhc3NMaXN0KSB7IHNwZWNbMl0gKz0gZXhwcmVzc2lvbi5jbGFzc0xpc3QubGVuZ3RoOyB9XG5cbiAgICAgIC8vIHRhZyBhd2FyZHMgYSBwb2ludCBpbiB0aGUgZm91cnRoIGNvbHVtblxuICAgICAgaWYgKGV4cHJlc3Npb24udGFnICYmIGV4cHJlc3Npb24udGFnICE9PSAnKicpIHsgc3BlY1szXSsrOyB9XG5cbiAgICAgIC8vIHBzZXVkb3MgYXdhcmQgYSBwb2ludCBlYWNoIGluIHRoZSBmb3VydGggY29sdW1uXG4gICAgICBpZiAocHNldWRvcykge1xuICAgICAgICBzcGVjWzNdICs9IHBzZXVkb3MubGVuZ3RoO1xuXG4gICAgICAgIGZvciAodmFyIHAgPSAwOyBwIDwgcHNldWRvcy5sZW5ndGg7IHArKykge1xuICAgICAgICAgIGlmIChwc2V1ZG9zW3BdLm5hbWUgPT09ICdub3QnKSB7XG4gICAgICAgICAgICBub3RzLnB1c2gocHNldWRvc1twXS52YWx1ZSk7XG4gICAgICAgICAgICBzcGVjWzNdLS07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaWkgPSBub3RzLmxlbmd0aDsgaWktLTspIHtcbiAgICAgIHZhciBub3QgPSBzcGVjaWZpY2l0eShub3RzW2lpXSk7XG4gICAgICBmb3IgKHZhciBqaiA9IDQ7IGpqLS07KSB7IHNwZWNbampdICs9IG5vdFtqal07IH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3BlYztcbiAgfVxufTtcblxuLyoqXG4gKiBQYXJzZXMgYSBzZWxlY3RvciBhbmQgcmV0dXJucyB0aGUgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzZWxlY3RvclxuICogQGFwaSBwcml2YXRlLlxuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHRleHQpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcGFyc2VyKHRleHQpWzBdO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG59XG4iXX0=","deps":{"./../../slick/parser":"/Users/denea/mos/bower_components/slick/parser.js"}},"/Users/denea/mos/bower_components/mensch/lib/stringify.js":{"file":"/Users/denea/mos/bower_components/mensch/lib/stringify.js","source":"function stringify(e,t){var o;t||(t={}),_indentation=t.indentation||\"\",_compress=!!t.compress,_comments=!!t.comments,_compress?_n=_s=\"\":(_n=\"\\n\",_s=\" \"),TIMER&&(o=Date.now());var n=reduce(e.stylesheet.rules,stringifyNode).join(\"\\n\").trim();return TIMER&&debug(\"ran in\",Date.now()-o+\"ms\"),n}function indent(e){return this.level||(this.level=1),e?(this.level+=e,void 0):_compress?\"\":Array(this.level).join(_indentation||\"\")}function stringifyAtRule(e){return\"@\"+e.type+\" \"+e.value+\";\"+_n}function stringifyAtGroup(e){var t=\"\",o=e.prefix||\"\";e.name&&(t=\" \"+e.name);var n=\"page\"!==e.type;return\"@\"+o+e.type+t+_s+stringifyBlock(e,n)+_n}function stringifyComment(e){return _comments?\"/*\"+(e.text||\"\")+\"*/\"+_n:\"\"}function stringifyRule(e){var t;return e.selectors?t=e.selectors.join(\",\"+_n):(t=\"@\"+e.type,t+=e.name?\" \"+e.name:\"\"),indent()+t+_s+stringifyBlock(e)+_n}function reduce(e,t){return e.reduce(function(e,o){var n=\"comment\"===o.type?stringifyComment(o):t(o);return n&&e.push(n),e},[])}function stringifyBlock(e,t){var o=e.declarations,n=stringifyDeclaration;return e.rules&&(o=e.rules,n=stringifyRule),o=stringifyChildren(o,n),o&&(o=_n+o+(t?\"\":_n)),\"{\"+o+indent()+\"}\"}function stringifyChildren(e,t){if(!e)return\"\";indent(1);var o=reduce(e,t);return indent(-1),o.length?o.join(_n):\"\"}function stringifyDeclaration(e){return\"property\"===e.type?stringifyProperty(e):(DEBUG&&debug(\"stringifyDeclaration: unexpected node:\",JSON.stringify(e)),void 0)}function stringifyNode(e){switch(e.type){case\"rule\":return stringifyRule(e);case\"media\":case\"keyframes\":return stringifyAtGroup(e);case\"comment\":return stringifyComment(e);case\"import\":case\"charset\":case\"namespace\":return stringifyAtRule(e);case\"font-face\":case\"supports\":case\"viewport\":case\"document\":case\"page\":return stringifyAtGroup(e)}DEBUG&&debug(\"stringifyNode: unexpected node: \"+JSON.stringify(e))}function stringifyProperty(e){var t=e.name?e.name+\":\"+_s:\"\";return indent()+t+e.value+\";\"}var DEBUG=!1,TIMER=!1,debug=require(\"./debug\")(\"stringify\"),_comments,_compress,_indentation,_n,_s;exports=module.exports=stringify;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./debug":"/Users/denea/mos/bower_components/mensch/lib/debug.js"}},"/Users/denea/mos/bower_components/mensch/lib/lexer.js":{"file":"/Users/denea/mos/bower_components/mensch/lib/lexer.js","source":"function lex(e){function t(){return u(),e[h]}function o(e){return e?w[w.length-1-e]:k}function n(t){var o=h+1;return t===e.slice(o,o+t.length)}function r(t){var o=e.slice(h).indexOf(t);return o>0?o:!1}function i(e){return e===a(1)}function a(t){return e[h+(t||1)]}function l(){var e=w.pop();return k=w[w.length-1],e}function s(e){return k=e,w.push(k),w.length}function d(e){var t=k;return w[w.length-1]=k=e,t}function u(t){if(1==(t||1))\"\\n\"==e[h]?(y++,g=1):g++,h++;else{var o=e.slice(h,h+t).split(\"\\n\");o.length>1&&(y+=o.length-1,g=1),g+=o[o.length-1].length,h+=t}}function c(){x.end={line:y,col:g},DEBUG&&debug(\"addToken:\",JSON.stringify(x,null,2)),_.push(x),m=\"\",x={}}function f(e){x={type:e,start:{line:y,col:g}}}var p,b,m=\"\",g=0,h=-1,v=0,y=1,k=\"before-selector\",w=[k],x={},_=[],S=[\"media\",\"keyframes\",{name:\"-webkit-keyframes\",type:\"keyframes\",prefix:\"-webkit-\"},{name:\"-moz-keyframes\",type:\"keyframes\",prefix:\"-moz-\"},{name:\"-ms-keyframes\",type:\"keyframes\",prefix:\"-ms-\"},{name:\"-o-keyframes\",type:\"keyframes\",prefix:\"-o-\"},\"font-face\",{name:\"import\",state:\"before-at-value\"},{name:\"charset\",state:\"before-at-value\"},\"supports\",\"viewport\",{name:\"namespace\",state:\"before-at-value\"},\"document\",{name:\"-moz-document\",type:\"document\",prefix:\"-moz-\"},\"page\"];for(TIMER&&(p=Date.now());b=t();)switch(DEBUG&&debug(b,o()),b){case\" \":switch(o()){case\"selector\":case\"value\":case\"value-paren\":case\"at-group\":case\"at-value\":case\"comment\":case\"double-string\":case\"single-string\":m+=b}break;case\"\\n\":case\"\t\":case\"\\r\":case\"\\f\":switch(o()){case\"value\":case\"value-paren\":case\"at-group\":case\"comment\":case\"single-string\":case\"double-string\":case\"selector\":m+=b;break;case\"at-value\":\"\\n\"===b&&(x.value=m.trim(),c(),l())}break;case\":\":switch(o()){case\"name\":x.name=m.trim(),m=\"\",d(\"before-value\");break;case\"before-selector\":m+=b,f(\"selector\"),s(\"selector\");break;case\"before-value\":d(\"value\"),m+=b;break;default:m+=b}break;case\";\":switch(o()){case\"name\":case\"before-value\":case\"value\":m.trim().length>0&&(x.value=m.trim(),c()),d(\"before-name\");break;case\"value-paren\":m+=b;break;case\"at-value\":x.value=m.trim(),c(),l();break;case\"before-name\":break;default:m+=b}break;case\"{\":switch(o()){case\"selector\":if(\"\\\\\"===a(-1)){m+=b;break}x.text=m.trim(),c(),d(\"before-name\"),v+=1;break;case\"at-group\":switch(x.name=m.trim(),x.type){case\"font-face\":case\"viewport\":case\"page\":s(\"before-name\");break;default:s(\"before-selector\")}c(),v+=1;break;case\"name\":case\"at-rule\":x.name=m.trim(),c(),s(\"before-name\"),v+=1;break;case\"comment\":case\"double-string\":case\"single-string\":m+=b;break;case\"before-value\":d(\"value\"),m+=b}break;case\"}\":switch(o()){case\"before-name\":case\"name\":case\"before-value\":case\"value\":m&&(x.value=m.trim()),x.name&&x.value&&c(),f(\"end\"),c(),l(),\"at-group\"===o()&&(f(\"at-group-end\"),c(),l()),v>0&&(v-=1);break;case\"at-group\":case\"before-selector\":case\"selector\":if(\"\\\\\"===a(-1)){m+=b;break}v>0&&\"at-group\"===o(1)&&(f(\"at-group-end\"),c()),v>1&&l(),v>0&&(v-=1);break;case\"double-string\":case\"single-string\":case\"comment\":m+=b}break;case'\"':case\"'\":switch(o()){case\"double-string\":'\"'===b&&\"\\\\\"!==a(-1)&&l();break;case\"single-string\":\"'\"===b&&\"\\\\\"!==a(-1)&&l();break;case\"before-at-value\":d(\"at-value\"),s('\"'===b?\"double-string\":\"single-string\");break;case\"before-value\":d(\"value\"),s('\"'===b?\"double-string\":\"single-string\");break;case\"comment\":break;default:\"\\\\\"!==a(-1)&&s('\"'===b?\"double-string\":\"single-string\")}m+=b;break;case\"/\":switch(o()){case\"comment\":case\"double-string\":case\"single-string\":m+=b;break;case\"before-value\":case\"selector\":case\"name\":case\"value\":if(i(\"*\")){var O=r(\"*/\");O&&u(O+1)}else\"before-value\"==o()&&d(\"value\"),m+=b;break;default:i(\"*\")?(f(\"comment\"),s(\"comment\"),u()):m+=b}break;case\"*\":switch(o()){case\"comment\":i(\"/\")?(x.text=m,u(),c(),l()):m+=b;break;case\"before-selector\":m+=b,f(\"selector\"),s(\"selector\");break;case\"before-value\":d(\"value\"),m+=b;break;default:m+=b}break;case\"@\":switch(o()){case\"comment\":case\"double-string\":case\"single-string\":m+=b;break;case\"before-value\":d(\"value\"),m+=b;break;default:for(var C,$,T=!1,A=0,E=S.length;!T&&E>A;++A)$=S[A],C=$.name||$,n(C)&&(T=!0,f(C),s($.state||\"at-group\"),u(C.length),$.prefix&&(x.prefix=$.prefix),$.type&&(x.type=$.type));T||(m+=b)}break;case\"(\":switch(o()){case\"value\":s(\"value-paren\");break;case\"before-value\":d(\"value\")}m+=b;break;case\")\":switch(o()){case\"value-paren\":l();break;case\"before-value\":d(\"value\")}m+=b;break;default:switch(o()){case\"before-selector\":f(\"selector\"),s(\"selector\");break;case\"before-name\":f(\"property\"),d(\"name\");break;case\"before-value\":d(\"value\");break;case\"before-at-value\":d(\"at-value\")}m+=b}return TIMER&&debug(\"ran in\",Date.now()-p+\"ms\"),_}var DEBUG=!1,TIMER=!1,debug=require(\"./debug\")(\"lex\");exports=module.exports=lex;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxleGVyLmpzIl0sIm5hbWVzIjpbImxleCIsImNzcyIsImdldENoIiwic2tpcCIsImN1cnNvciIsImdldFN0YXRlIiwiaW5kZXgiLCJzdGFjayIsImxlbmd0aCIsInN0YXRlIiwiaXNOZXh0U3RyaW5nIiwic3RyIiwic3RhcnQiLCJzbGljZSIsImZpbmQiLCJwb3MiLCJpbmRleE9mIiwiaXNOZXh0Q2hhciIsImNoIiwicGVlayIsIm9mZnNldCIsInBvcFN0YXRlIiwicmVtb3ZlZCIsInBvcCIsInB1c2hTdGF0ZSIsIm5ld1N0YXRlIiwicHVzaCIsInJlcGxhY2VTdGF0ZSIsInByZXZpb3VzU3RhdGUiLCJuIiwibGluZSIsImNvbHVtbiIsInNraXBTdHIiLCJzcGxpdCIsImFkZFRva2VuIiwidG9rZW4iLCJlbmQiLCJjb2wiLCJERUJVRyIsImRlYnVnIiwiSlNPTiIsInN0cmluZ2lmeSIsInRva2VucyIsImJ1ZmZlciIsImluaXRpYWxpemVUb2tlbiIsInR5cGUiLCJkZXB0aCIsImF0UnVsZXMiLCJuYW1lIiwicHJlZml4IiwiVElNRVIiLCJEYXRlIiwibm93IiwidmFsdWUiLCJ0cmltIiwidGV4dCIsInJ1bGUiLCJ0b2tlbml6ZWQiLCJqIiwibGVuIiwicmVxdWlyZSIsImV4cG9ydHMiLCJtb2R1bGUiXSwibWFwcGluZ3MiOiJBQWFBLFFBQVNBLEtBQUlDLEdBd0NYLFFBQVNDLEtBRVAsTUFEQUMsS0FDT0YsRUFBSUcsR0FVYixRQUFTQyxHQUFTQyxHQUNoQixNQUFPQSxHQUFRQyxFQUFNQSxFQUFNQyxPQUFTLEVBQUlGLEdBQVNHLEVBVW5ELFFBQVNDLEdBQWFDLEdBQ3BCLEdBQUlDLEdBQVFSLEVBQVMsQ0FDckIsT0FBUU8sS0FBUVYsRUFBSVksTUFBTUQsRUFBT0EsRUFBUUQsRUFBSUgsUUFVL0MsUUFBU00sR0FBS0gsR0FDWixHQUFJSSxHQUFNZCxFQUFJWSxNQUFNVCxHQUFRWSxRQUFRTCxFQUVwQyxPQUFPSSxHQUFNLEVBQUlBLEdBQU0sRUFTekIsUUFBU0UsR0FBV0MsR0FDbEIsTUFBT0EsS0FBT0MsRUFBSyxHQVVyQixRQUFTQSxHQUFLQyxHQUNaLE1BQU9uQixHQUFJRyxHQUFVZ0IsR0FBVSxJQVFqQyxRQUFTQyxLQUNQLEdBQUlDLEdBQVVmLEVBQU1nQixLQUdwQixPQUZBZCxHQUFRRixFQUFNQSxFQUFNQyxPQUFTLEdBRXRCYyxFQVNULFFBQVNFLEdBQVVDLEdBSWpCLE1BSEFoQixHQUFRZ0IsRUFDUmxCLEVBQU1tQixLQUFLakIsR0FFSkYsRUFBTUMsT0FTZixRQUFTbUIsR0FBYUYsR0FDcEIsR0FBSUcsR0FBZ0JuQixDQUdwQixPQUZBRixHQUFNQSxFQUFNQyxPQUFTLEdBQUtDLEVBQVFnQixFQUUzQkcsRUFTVCxRQUFTekIsR0FBSzBCLEdBQ1osR0FBZ0IsSUFBWEEsR0FBSyxHQUNXLE1BQWY1QixFQUFJRyxJQUNOMEIsSUFDQUMsRUFBUyxHQUVUQSxJQUVGM0IsUUFDSyxDQUNMLEdBQUk0QixHQUFVL0IsRUFBSVksTUFBTVQsRUFBUUEsRUFBU3lCLEdBQUdJLE1BQU0sS0FDOUNELEdBQVF4QixPQUFTLElBQ25Cc0IsR0FBUUUsRUFBUXhCLE9BQVMsRUFDekJ1QixFQUFTLEdBRVhBLEdBQVVDLEVBQVFBLEVBQVF4QixPQUFTLEdBQUdBLE9BQ3RDSixHQUFrQnlCLEdBT3RCLFFBQVNLLEtBQ1BDLEVBQU1DLEtBQ0pOLEtBQU1BLEVBQ05PLElBQUtOLEdBR1BPLE9BQVNDLE1BQU0sWUFBYUMsS0FBS0MsVUFBVU4sRUFBTyxLQUFNLElBRXhETyxFQUFPaEIsS0FBS1MsR0FFWlEsRUFBUyxHQUNUUixLQVFGLFFBQVNTLEdBQWdCQyxHQUN2QlYsR0FDRVUsS0FBTUEsRUFDTmpDLE9BQ0VrQixLQUFNQSxFQUNOTyxJQUFNTixJQWhNWixHQUFJbkIsR0FHQU0sRUFEQXlCLEVBQVMsR0FFVFosRUFBUyxFQUNUM0IsRUFBUyxHQUNUMEMsRUFBUSxFQUNSaEIsRUFBTyxFQUNQckIsRUFBUSxrQkFDUkYsR0FBU0UsR0FDVDBCLEtBQ0FPLEtBR0FLLEdBQ0YsUUFDQSxhQUNFQyxLQUFNLG9CQUFxQkgsS0FBTSxZQUFhSSxPQUFRLGFBQ3RERCxLQUFNLGlCQUFrQkgsS0FBTSxZQUFhSSxPQUFRLFVBQ25ERCxLQUFNLGdCQUFpQkgsS0FBTSxZQUFhSSxPQUFRLFNBQ2xERCxLQUFNLGVBQWdCSCxLQUFNLFlBQWFJLE9BQVEsT0FDbkQsYUFDRUQsS0FBTSxTQUFVdkMsTUFBTyxvQkFDdkJ1QyxLQUFNLFVBQVd2QyxNQUFPLG1CQUMxQixXQUNBLFlBQ0V1QyxLQUFNLFlBQWF2QyxNQUFPLG1CQUM1QixZQUNFdUMsS0FBTSxnQkFBaUJILEtBQU0sV0FBWUksT0FBUSxTQUNuRCxPQXVMRixLQUZBQyxRQUFVdEMsRUFBUXVDLEtBQUtDLE9BRWhCbEMsRUFBS2hCLEtBS1YsT0FKQW9DLE9BQVNDLE1BQU1yQixFQUFJYixLQUlYYSxHQUVSLElBQUssSUFDSCxPQUFRYixLQUNSLElBQUssV0FDTCxJQUFLLFFBQ0wsSUFBSyxjQUNMLElBQUssV0FDTCxJQUFLLFdBQ0wsSUFBSyxVQUNMLElBQUssZ0JBQ0wsSUFBSyxnQkFDSHNDLEdBQVV6QixFQUdaLEtBR0YsS0FBSyxLQUNMLElBQUssSUFDTCxJQUFLLEtBQ0wsSUFBSyxLQUNILE9BQVFiLEtBQ1IsSUFBSyxRQUNMLElBQUssY0FDTCxJQUFLLFdBQ0wsSUFBSyxVQUNMLElBQUssZ0JBQ0wsSUFBSyxnQkFDTCxJQUFLLFdBQ0hzQyxHQUFVekIsQ0FDVixNQUVGLEtBQUssV0FFQyxPQUFTQSxJQUNYaUIsRUFBTWtCLE1BQVFWLEVBQU9XLE9BQ3JCcEIsSUFDQWIsS0FTSixLQUVGLEtBQUssSUFDSCxPQUFRaEIsS0FDUixJQUFLLE9BQ0g4QixFQUFNYSxLQUFPTCxFQUFPVyxPQUNwQlgsRUFBUyxHQUVUaEIsRUFBYSxlQUNiLE1BRUYsS0FBSyxrQkFDSGdCLEdBQVV6QixFQUVWMEIsRUFBZ0IsWUFDaEJwQixFQUFVLFdBQ1YsTUFFRixLQUFLLGVBQ0hHLEVBQWEsU0FDYmdCLEdBQVV6QixDQUNWLE1BRUYsU0FDRXlCLEdBQVV6QixFQUdaLEtBRUYsS0FBSyxJQUNILE9BQVFiLEtBQ1IsSUFBSyxPQUNMLElBQUssZUFDTCxJQUFLLFFBR0NzQyxFQUFPVyxPQUFPOUMsT0FBUyxJQUN6QjJCLEVBQU1rQixNQUFRVixFQUFPVyxPQUNyQnBCLEtBRUZQLEVBQWEsY0FDYixNQUVGLEtBQUssY0FFSGdCLEdBQVV6QixDQUNWLE1BRUYsS0FBSyxXQUVIaUIsRUFBTWtCLE1BQVFWLEVBQU9XLE9BQ3JCcEIsSUFDQWIsR0FDQSxNQUVGLEtBQUssY0FFSCxLQUVGLFNBQ0VzQixHQUFVekIsRUFHWixLQUVGLEtBQUssSUFDSCxPQUFRYixLQUNSLElBQUssV0FFSCxHQUFpQixPQUFiYyxFQUFLLElBQWMsQ0FDbkJ3QixHQUFVekIsQ0FDVixPQUlKaUIsRUFBTW9CLEtBQU9aLEVBQU9XLE9BQ3BCcEIsSUFDQVAsRUFBYSxlQUNibUIsR0FBZ0IsQ0FDaEIsTUFFRixLQUFLLFdBS0gsT0FIQVgsRUFBTWEsS0FBT0wsRUFBT1csT0FHWm5CLEVBQU1VLE1BQ2QsSUFBSyxZQUNMLElBQUssV0FDTCxJQUFLLE9BQ0hyQixFQUFVLGNBQ1YsTUFFRixTQUNFQSxFQUFVLG1CQUdaVSxJQUNBWSxHQUFnQixDQUNoQixNQUVGLEtBQUssT0FDTCxJQUFLLFVBRUhYLEVBQU1hLEtBQU9MLEVBQU9XLE9BQ3BCcEIsSUFDQVYsRUFBVSxlQUNWc0IsR0FBZ0IsQ0FDaEIsTUFFRixLQUFLLFVBQ0wsSUFBSyxnQkFDTCxJQUFLLGdCQUVISCxHQUFVekIsQ0FDVixNQUNGLEtBQUssZUFDSFMsRUFBYSxTQUNiZ0IsR0FBVXpCLEVBSVosS0FFRixLQUFLLElBQ0gsT0FBUWIsS0FDUixJQUFLLGNBQ0wsSUFBSyxPQUNMLElBQUssZUFDTCxJQUFLLFFBRUNzQyxJQUNGUixFQUFNa0IsTUFBUVYsRUFBT1csUUFJbkJuQixFQUFNYSxNQUFRYixFQUFNa0IsT0FDdEJuQixJQUlGVSxFQUFnQixPQUNoQlYsSUFDQWIsSUFJSSxhQUFlaEIsTUFDakJ1QyxFQUFnQixnQkFDaEJWLElBQ0FiLEtBR0V5QixFQUFRLElBQ1ZBLEdBQWdCLEVBR2xCLE1BRUYsS0FBSyxXQUNMLElBQUssa0JBQ0wsSUFBSyxXQUVILEdBQWlCLE9BQWIzQixFQUFLLElBQWMsQ0FDbkJ3QixHQUFVekIsQ0FDVixPQUdBNEIsRUFBUSxHQUVOLGFBQWV6QyxFQUFTLEtBQzFCdUMsRUFBZ0IsZ0JBQ2hCVixLQUlBWSxFQUFRLEdBQ1Z6QixJQUdFeUIsRUFBUSxJQUNWQSxHQUFnQixFQUVsQixNQUVGLEtBQUssZ0JBQ0wsSUFBSyxnQkFDTCxJQUFLLFVBRUhILEdBQVV6QixFQUlaLEtBR0YsS0FBSyxJQUNMLElBQUssSUFDSCxPQUFRYixLQUNSLElBQUssZ0JBQ0MsTUFBUWEsR0FBTSxPQUFTQyxFQUFLLEtBQzlCRSxHQUVGLE1BRUYsS0FBSyxnQkFDQyxNQUFRSCxHQUFNLE9BQVNDLEVBQUssS0FDOUJFLEdBRUYsTUFFRixLQUFLLGtCQUNITSxFQUFhLFlBQ2JILEVBQVUsTUFBUU4sRUFBSyxnQkFBa0IsZ0JBQ3pDLE1BRUYsS0FBSyxlQUNIUyxFQUFhLFNBQ2JILEVBQVUsTUFBUU4sRUFBSyxnQkFBa0IsZ0JBQ3pDLE1BRUYsS0FBSyxVQUVILEtBRUYsU0FDTSxPQUFTQyxFQUFLLEtBQ2hCSyxFQUFVLE1BQVFOLEVBQUssZ0JBQWtCLGlCQUk3Q3lCLEdBQVV6QixDQUNWLE1BR0YsS0FBSyxJQUNILE9BQVFiLEtBQ1IsSUFBSyxVQUNMLElBQUssZ0JBQ0wsSUFBSyxnQkFFSHNDLEdBQVV6QixDQUNWLE1BRUYsS0FBSyxlQUNMLElBQUssV0FDTCxJQUFLLE9BQ0wsSUFBSyxRQUNILEdBQUlELEVBQVcsS0FBTSxDQUduQixHQUFJRixHQUFNRCxFQUFLLEtBRVhDLElBQ0ZaLEVBQUtZLEVBQU0sT0FHSyxnQkFBZFYsS0FBOEJzQixFQUFhLFNBQy9DZ0IsR0FBVXpCLENBRVosTUFFRixTQUNNRCxFQUFXLE1BRWIyQixFQUFnQixXQUNoQnBCLEVBQVUsV0FDVnJCLEtBR0F3QyxHQUFVekIsRUFJZCxLQUdGLEtBQUssSUFDSCxPQUFRYixLQUNSLElBQUssVUFDQ1ksRUFBVyxNQUVia0IsRUFBTW9CLEtBQU9aLEVBQ2J4QyxJQUNBK0IsSUFDQWIsS0FHQXNCLEdBQVV6QixDQUVaLE1BRUYsS0FBSyxrQkFDSHlCLEdBQVV6QixFQUNWMEIsRUFBZ0IsWUFDaEJwQixFQUFVLFdBQ1YsTUFFRixLQUFLLGVBQ0hHLEVBQWEsU0FDYmdCLEdBQVV6QixDQUNWLE1BRUYsU0FDRXlCLEdBQVV6QixFQUVaLEtBR0YsS0FBSyxJQUNILE9BQVFiLEtBQ1IsSUFBSyxVQUNMLElBQUssZ0JBQ0wsSUFBSyxnQkFDSHNDLEdBQVV6QixDQUNWLE1BQ0YsS0FBSyxlQUNIUyxFQUFhLFNBQ2JnQixHQUFVekIsQ0FDVixNQUVGLFNBTUUsSUFBSyxHQUhEOEIsR0FDQVEsRUFGQUMsR0FBWSxFQUlQQyxFQUFJLEVBQUdDLEVBQU1aLEVBQVF2QyxRQUFTaUQsR0FBaUJFLEVBQUpELElBQVdBLEVBQzdERixFQUFPVCxFQUFRVyxHQUNmVixFQUFPUSxFQUFLUixNQUFRUSxFQUVmOUMsRUFBYXNDLEtBRWxCUyxHQUFZLEVBRVpiLEVBQWdCSSxHQUNoQnhCLEVBQVVnQyxFQUFLL0MsT0FBUyxZQUN4Qk4sRUFBSzZDLEVBQUt4QyxRQUVOZ0QsRUFBS1AsU0FDUGQsRUFBTWMsT0FBU08sRUFBS1AsUUFHbEJPLEVBQUtYLE9BQ1BWLEVBQU1VLEtBQU9XLEVBQUtYLE1BSWpCWSxLQUVIZCxHQUFVekIsR0FJZCxLQUlGLEtBQUssSUFDSCxPQUFRYixLQUNSLElBQUssUUFDSG1CLEVBQVUsY0FDVixNQUNGLEtBQUssZUFDSEcsRUFBYSxTQUlmZ0IsR0FBVXpCLENBQ1YsTUFFRixLQUFLLElBQ0gsT0FBUWIsS0FDUixJQUFLLGNBQ0hnQixHQUNBLE1BQ0YsS0FBSyxlQUNITSxFQUFhLFNBSWZnQixHQUFVekIsQ0FDVixNQUVGLFNBQ0UsT0FBUWIsS0FDUixJQUFLLGtCQUNIdUMsRUFBZ0IsWUFDaEJwQixFQUFVLFdBQ1YsTUFFRixLQUFLLGNBQ0hvQixFQUFnQixZQUNoQmpCLEVBQWEsT0FDYixNQUVGLEtBQUssZUFDSEEsRUFBYSxRQUNiLE1BRUYsS0FBSyxrQkFDSEEsRUFBYSxZQUlmZ0IsR0FBVXpCLEVBT2QsTUFGQWdDLFFBQVNYLE1BQU0sU0FBV1ksS0FBS0MsTUFBUXhDLEVBQVMsTUFFekM4QixFQWxyQlQsR0FBSUosUUFBUSxFQUNSWSxPQUFRLEVBRVJYLE1BQVFxQixRQUFRLFdBQVcsTUFFL0JDLFNBQVVDLE9BQU9ELFFBQVU3RCIsImZpbGUiOiJvdXQuanMubWFwIiwic291cmNlc0NvbnRlbnQiOlsidmFyIERFQlVHID0gZmFsc2U7IC8vIGB0cnVlYCB0byBwcmludCBkZWJ1Z2dpbmcgaW5mby5cbnZhciBUSU1FUiA9IGZhbHNlOyAvLyBgdHJ1ZWAgdG8gdGltZSBjYWxscyB0byBgbGV4KClgIGFuZCBwcmludCB0aGUgcmVzdWx0cy5cblxudmFyIGRlYnVnID0gcmVxdWlyZSgnLi9kZWJ1ZycpKCdsZXgnKTtcblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gbGV4O1xuXG4vKipcbiAqIENvbnZlcnQgYSBDU1Mgc3RyaW5nIGludG8gYW4gYXJyYXkgb2YgbGV4aWNhbCB0b2tlbnMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGNzcyBDU1NcbiAqIEByZXR1cm5zIHtBcnJheX0gbGV4aWNhbCB0b2tlbnNcbiAqL1xuZnVuY3Rpb24gbGV4KGNzcykge1xuICB2YXIgc3RhcnQ7IC8vIERlYnVnIHRpbWVyIHN0YXJ0LlxuXG4gIHZhciBidWZmZXIgPSAnJzsgICAgICAvLyBDaGFyYWN0ZXIgYWNjdW11bGF0b3JcbiAgdmFyIGNoOyAgICAgICAgICAgICAgIC8vIEN1cnJlbnQgY2hhcmFjdGVyXG4gIHZhciBjb2x1bW4gPSAwOyAgICAgICAvLyBDdXJyZW50IHNvdXJjZSBjb2x1bW4gbnVtYmVyXG4gIHZhciBjdXJzb3IgPSAtMTsgICAgICAvLyBDdXJyZW50IHNvdXJjZSBjdXJzb3IgcG9zaXRpb25cbiAgdmFyIGRlcHRoID0gMDsgICAgICAgIC8vIEN1cnJlbnQgbmVzdGluZyBkZXB0aFxuICB2YXIgbGluZSA9IDE7ICAgICAgICAgLy8gQ3VycmVudCBzb3VyY2UgbGluZSBudW1iZXJcbiAgdmFyIHN0YXRlID0gJ2JlZm9yZS1zZWxlY3Rvcic7IC8vIEN1cnJlbnQgc3RhdGVcbiAgdmFyIHN0YWNrID0gW3N0YXRlXTsgIC8vIFN0YXRlIHN0YWNrXG4gIHZhciB0b2tlbiA9IHt9OyAgICAgICAvLyBDdXJyZW50IHRva2VuXG4gIHZhciB0b2tlbnMgPSBbXTsgICAgICAvLyBUb2tlbiBhY2N1bXVsYXRvclxuXG4gIC8vIFN1cHBvcnRlZCBALXJ1bGVzLCBpbiByb3VnaGx5IGRlc2NlbmRpbmcgb3JkZXIgb2YgdXNhZ2UgcHJvYmFiaWxpdHkuXG4gIHZhciBhdFJ1bGVzID0gW1xuICAgICdtZWRpYScsXG4gICAgJ2tleWZyYW1lcycsXG4gICAgeyBuYW1lOiAnLXdlYmtpdC1rZXlmcmFtZXMnLCB0eXBlOiAna2V5ZnJhbWVzJywgcHJlZml4OiAnLXdlYmtpdC0nIH0sXG4gICAgeyBuYW1lOiAnLW1vei1rZXlmcmFtZXMnLCB0eXBlOiAna2V5ZnJhbWVzJywgcHJlZml4OiAnLW1vei0nIH0sXG4gICAgeyBuYW1lOiAnLW1zLWtleWZyYW1lcycsIHR5cGU6ICdrZXlmcmFtZXMnLCBwcmVmaXg6ICctbXMtJyB9LFxuICAgIHsgbmFtZTogJy1vLWtleWZyYW1lcycsIHR5cGU6ICdrZXlmcmFtZXMnLCBwcmVmaXg6ICctby0nIH0sXG4gICAgJ2ZvbnQtZmFjZScsXG4gICAgeyBuYW1lOiAnaW1wb3J0Jywgc3RhdGU6ICdiZWZvcmUtYXQtdmFsdWUnIH0sXG4gICAgeyBuYW1lOiAnY2hhcnNldCcsIHN0YXRlOiAnYmVmb3JlLWF0LXZhbHVlJyB9LFxuICAgICdzdXBwb3J0cycsXG4gICAgJ3ZpZXdwb3J0JyxcbiAgICB7IG5hbWU6ICduYW1lc3BhY2UnLCBzdGF0ZTogJ2JlZm9yZS1hdC12YWx1ZScgfSxcbiAgICAnZG9jdW1lbnQnLFxuICAgIHsgbmFtZTogJy1tb3otZG9jdW1lbnQnLCB0eXBlOiAnZG9jdW1lbnQnLCBwcmVmaXg6ICctbW96LScgfSxcbiAgICAncGFnZSdcbiAgXTtcblxuICAvLyAtLSBGdW5jdGlvbnMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIEFkdmFuY2UgdGhlIGNoYXJhY3RlciBjdXJzb3IgYW5kIHJldHVybiB0aGUgbmV4dCBjaGFyYWN0ZXIuXG4gICAqXG4gICAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBuZXh0IGNoYXJhY3Rlci5cbiAgICovXG4gIGZ1bmN0aW9uIGdldENoKCkge1xuICAgIHNraXAoKTtcbiAgICByZXR1cm4gY3NzW2N1cnNvcl07XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHRoZSBzdGF0ZSBhdCB0aGUgZ2l2ZW4gaW5kZXggaW4gdGhlIHN0YWNrLlxuICAgKiBUaGUgc3RhY2sgaXMgTElGTyBzbyBpbmRleGluZyBpcyBmcm9tIHRoZSByaWdodC5cbiAgICpcbiAgICogQHBhcmFtIHtOdW1iZXJ9IFtpbmRleD0wXSBJbmRleCB0byByZXR1cm4uXG4gICAqIEByZXR1cm5zIHtTdHJpbmd9IHN0YXRlXG4gICAqL1xuICBmdW5jdGlvbiBnZXRTdGF0ZShpbmRleCkge1xuICAgIHJldHVybiBpbmRleCA/IHN0YWNrW3N0YWNrLmxlbmd0aCAtIDEgLSBpbmRleF0gOiBzdGF0ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBMb29rIGFoZWFkIGZvciBhIHN0cmluZyBiZWdpbm5pbmcgZnJvbSB0aGUgbmV4dCBwb3NpdGlvbi4gVGhlIHN0cmluZ1xuICAgKiBiZWluZyBsb29rZWQgZm9yIG11c3Qgc3RhcnQgYXQgdGhlIG5leHQgcG9zaXRpb24uXG4gICAqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgVGhlIHN0cmluZyB0byBsb29rIGZvci5cbiAgICogQHJldHVybnMge0Jvb2xlYW59IFdoZXRoZXIgdGhlIHN0cmluZyB3YXMgZm91bmQuXG4gICAqL1xuICBmdW5jdGlvbiBpc05leHRTdHJpbmcoc3RyKSB7XG4gICAgdmFyIHN0YXJ0ID0gY3Vyc29yICsgMTtcbiAgICByZXR1cm4gKHN0ciA9PT0gY3NzLnNsaWNlKHN0YXJ0LCBzdGFydCArIHN0ci5sZW5ndGgpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBGaW5kIHRoZSBzdGFydCBwb3NpdGlvbiBvZiBhIHN1YnN0cmluZyBiZWdpbm5pbmcgZnJvbSB0aGUgbmV4dFxuICAgKiBwb3NpdGlvbi4gVGhlIHN0cmluZyBiZWluZyBsb29rZWQgZm9yIG1heSBiZWdpbiBhbnl3aGVyZS5cbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IHN0ciBUaGUgc3Vic3RyaW5nIHRvIGxvb2sgZm9yLlxuICAgKiBAcmV0dXJucyB7TnVtYmVyfGZhbHNlfSBUaGUgcG9zaXRpb24sIG9yIGBmYWxzZWAgaWYgbm90IGZvdW5kLlxuICAgKi9cbiAgZnVuY3Rpb24gZmluZChzdHIpIHtcbiAgICB2YXIgcG9zID0gY3NzLnNsaWNlKGN1cnNvcikuaW5kZXhPZihzdHIpO1xuXG4gICAgcmV0dXJuIHBvcyA+IDAgPyBwb3MgOiBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmUgd2hldGhlciBhIGNoYXJhY3RlciBpcyBuZXh0LlxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gY2ggQ2hhcmFjdGVyLlxuICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gV2hldGhlciB0aGUgY2hhcmFjdGVyIGlzIG5leHQuXG4gICAqL1xuICBmdW5jdGlvbiBpc05leHRDaGFyKGNoKSB7XG4gICAgcmV0dXJuIGNoID09PSBwZWVrKDEpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiB0aGUgY2hhcmFjdGVyIGF0IHRoZSBnaXZlbiBjdXJzb3Igb2Zmc2V0LiBUaGUgb2Zmc2V0IGlzIHJlbGF0aXZlXG4gICAqIHRvIHRoZSBjdXJzb3IsIHNvIG5lZ2F0aXZlIHZhbHVlcyBtb3ZlIGJhY2t3YXJkcy5cbiAgICpcbiAgICogQHBhcmFtIHtOdW1iZXJ9IFtvZmZzZXQ9MV0gQ3Vyc29yIG9mZnNldC5cbiAgICogQHJldHVybnMge1N0cmluZ30gQ2hhcmFjdGVyLlxuICAgKi9cbiAgZnVuY3Rpb24gcGVlayhvZmZzZXQpIHtcbiAgICByZXR1cm4gY3NzW2N1cnNvciArIChvZmZzZXQgfHwgMSldO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgY3VycmVudCBzdGF0ZSBmcm9tIHRoZSBzdGFjayBhbmQgc2V0IHRoZSBuZXcgY3VycmVudCBzdGF0ZS5cbiAgICpcbiAgICogQHJldHVybnMge1N0cmluZ30gVGhlIHJlbW92ZWQgc3RhdGUuXG4gICAqL1xuICBmdW5jdGlvbiBwb3BTdGF0ZSgpIHtcbiAgICB2YXIgcmVtb3ZlZCA9IHN0YWNrLnBvcCgpO1xuICAgIHN0YXRlID0gc3RhY2tbc3RhY2subGVuZ3RoIC0gMV07XG5cbiAgICByZXR1cm4gcmVtb3ZlZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGN1cnJlbnQgc3RhdGUgYW5kIGFkZCBpdCB0byB0aGUgc3RhY2suXG4gICAqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBuZXdTdGF0ZSBUaGUgbmV3IHN0YXRlLlxuICAgKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgbmV3IHN0YWNrIGxlbmd0aC5cbiAgICovXG4gIGZ1bmN0aW9uIHB1c2hTdGF0ZShuZXdTdGF0ZSkge1xuICAgIHN0YXRlID0gbmV3U3RhdGU7XG4gICAgc3RhY2sucHVzaChzdGF0ZSk7XG5cbiAgICByZXR1cm4gc3RhY2subGVuZ3RoO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlcGxhY2UgdGhlIGN1cnJlbnQgc3RhdGUgd2l0aCBhIG5ldyBzdGF0ZS5cbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IG5ld1N0YXRlIFRoZSBuZXcgc3RhdGUuXG4gICAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSByZXBsYWNlZCBzdGF0ZS5cbiAgICovXG4gIGZ1bmN0aW9uIHJlcGxhY2VTdGF0ZShuZXdTdGF0ZSkge1xuICAgIHZhciBwcmV2aW91c1N0YXRlID0gc3RhdGU7XG4gICAgc3RhY2tbc3RhY2subGVuZ3RoIC0gMV0gPSBzdGF0ZSA9IG5ld1N0YXRlO1xuXG4gICAgcmV0dXJuIHByZXZpb3VzU3RhdGU7XG4gIH1cblxuICAvKipcbiAgICogTW92ZSB0aGUgY2hhcmFjdGVyIGN1cnNvci4gUG9zaXRpdmUgbnVtYmVycyBtb3ZlIHRoZSBjdXJzb3IgZm9yd2FyZC5cbiAgICogTmVnYXRpdmUgbnVtYmVycyBhcmUgbm90IHN1cHBvcnRlZCFcbiAgICpcbiAgICogQHBhcmFtIHtOdW1iZXJ9IFtuPTFdIE51bWJlciBvZiBjaGFyYWN0ZXJzIHRvIHNraXAuXG4gICAqL1xuICBmdW5jdGlvbiBza2lwKG4pIHtcbiAgICBpZiAoKG4gfHwgMSkgPT0gMSkge1xuICAgICAgaWYgKGNzc1tjdXJzb3JdID09ICdcXG4nKSB7XG4gICAgICAgIGxpbmUrKztcbiAgICAgICAgY29sdW1uID0gMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbHVtbisrO1xuICAgICAgfVxuICAgICAgY3Vyc29yKys7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBza2lwU3RyID0gY3NzLnNsaWNlKGN1cnNvciwgY3Vyc29yICsgbikuc3BsaXQoJ1xcbicpO1xuICAgICAgaWYgKHNraXBTdHIubGVuZ3RoID4gMSkge1xuICAgICAgICBsaW5lICs9IHNraXBTdHIubGVuZ3RoIC0gMTtcbiAgICAgICAgY29sdW1uID0gMTtcbiAgICAgIH1cbiAgICAgIGNvbHVtbiArPSBza2lwU3RyW3NraXBTdHIubGVuZ3RoIC0gMV0ubGVuZ3RoO1xuICAgICAgY3Vyc29yID0gY3Vyc29yICsgbjtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQWRkIHRoZSBjdXJyZW50IHRva2VuIHRvIHRoZSBwaWxlIGFuZCByZXNldCB0aGUgYnVmZmVyLlxuICAgKi9cbiAgZnVuY3Rpb24gYWRkVG9rZW4oKSB7XG4gICAgdG9rZW4uZW5kID0ge1xuICAgICAgbGluZTogbGluZSxcbiAgICAgIGNvbDogY29sdW1uXG4gICAgfTtcblxuICAgIERFQlVHICYmIGRlYnVnKCdhZGRUb2tlbjonLCBKU09OLnN0cmluZ2lmeSh0b2tlbiwgbnVsbCwgMikpO1xuXG4gICAgdG9rZW5zLnB1c2godG9rZW4pO1xuXG4gICAgYnVmZmVyID0gJyc7XG4gICAgdG9rZW4gPSB7fTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGN1cnJlbnQgdG9rZW4uXG4gICAqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIFRva2VuIHR5cGUuXG4gICAqL1xuICBmdW5jdGlvbiBpbml0aWFsaXplVG9rZW4odHlwZSkge1xuICAgIHRva2VuID0ge1xuICAgICAgdHlwZTogdHlwZSxcbiAgICAgIHN0YXJ0OiB7XG4gICAgICAgIGxpbmU6IGxpbmUsXG4gICAgICAgIGNvbCA6IGNvbHVtblxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvLyAtLSBNYWluIExvb3AgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLypcbiAgVGhlIG1haW4gbG9vcCBpcyBhIHN0YXRlIG1hY2hpbmUgdGhhdCByZWFkcyBpbiBvbmUgY2hhcmFjdGVyIGF0IGEgdGltZSxcbiAgYW5kIGRldGVybWluZXMgd2hhdCB0byBkbyBiYXNlZCBvbiB0aGUgY3VycmVudCBzdGF0ZSBhbmQgY2hhcmFjdGVyLlxuICBUaGlzIGlzIGltcGxlbWVudGVkIGFzIGEgc2VyaWVzIG9mIG5lc3RlZCBgc3dpdGNoYCBzdGF0ZW1lbnRzIGFuZCB0aGVcbiAgY2FzZSBvcmRlcnMgaGF2ZSBiZWVuIG1pbGRseSBvcHRpbWl6ZWQgYmFzZWQgb24gcm91Z2ggcHJvYmFiaWxpdGllc1xuICBjYWxjdWxhdGVkIGJ5IHByb2Nlc3NpbmcgYSBzbWFsbCBzYW1wbGUgb2YgcmVhbC13b3JsZCBDU1MuXG5cbiAgRnVydGhlciBvcHRpbWl6YXRpb24gKHN1Y2ggYXMgYSBkaXNwYXRjaCB0YWJsZSkgc2hvdWxkbid0IGJlIG5lY2Vzc2FyeVxuICBzaW5jZSB0aGUgdG90YWwgbnVtYmVyIG9mIGNhc2VzIGlzIHZlcnkgbG93LlxuICAqL1xuXG4gIFRJTUVSICYmIChzdGFydCA9IERhdGUubm93KCkpO1xuXG4gIHdoaWxlIChjaCA9IGdldENoKCkpIHtcbiAgICBERUJVRyAmJiBkZWJ1ZyhjaCwgZ2V0U3RhdGUoKSk7XG5cbiAgICAvLyBjb2x1bW4gKz0gMTtcblxuICAgIHN3aXRjaCAoY2gpIHtcbiAgICAvLyBTcGFjZVxuICAgIGNhc2UgJyAnOlxuICAgICAgc3dpdGNoIChnZXRTdGF0ZSgpKSB7XG4gICAgICBjYXNlICdzZWxlY3Rvcic6XG4gICAgICBjYXNlICd2YWx1ZSc6XG4gICAgICBjYXNlICd2YWx1ZS1wYXJlbic6XG4gICAgICBjYXNlICdhdC1ncm91cCc6XG4gICAgICBjYXNlICdhdC12YWx1ZSc6XG4gICAgICBjYXNlICdjb21tZW50JzpcbiAgICAgIGNhc2UgJ2RvdWJsZS1zdHJpbmcnOlxuICAgICAgY2FzZSAnc2luZ2xlLXN0cmluZyc6XG4gICAgICAgIGJ1ZmZlciArPSBjaDtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBicmVhaztcblxuICAgIC8vIE5ld2xpbmUgb3IgdGFiXG4gICAgY2FzZSAnXFxuJzpcbiAgICBjYXNlICdcXHQnOlxuICAgIGNhc2UgJ1xccic6XG4gICAgY2FzZSAnXFxmJzpcbiAgICAgIHN3aXRjaCAoZ2V0U3RhdGUoKSkge1xuICAgICAgY2FzZSAndmFsdWUnOlxuICAgICAgY2FzZSAndmFsdWUtcGFyZW4nOlxuICAgICAgY2FzZSAnYXQtZ3JvdXAnOlxuICAgICAgY2FzZSAnY29tbWVudCc6XG4gICAgICBjYXNlICdzaW5nbGUtc3RyaW5nJzpcbiAgICAgIGNhc2UgJ2RvdWJsZS1zdHJpbmcnOlxuICAgICAgY2FzZSAnc2VsZWN0b3InOlxuICAgICAgICBidWZmZXIgKz0gY2g7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdhdC12YWx1ZSc6XG4gICAgICAgIC8vIFRva2VuaXplIGFuIEAtcnVsZSBpZiBhIHNlbWktY29sb24gd2FzIG9taXR0ZWQuXG4gICAgICAgIGlmICgnXFxuJyA9PT0gY2gpIHtcbiAgICAgICAgICB0b2tlbi52YWx1ZSA9IGJ1ZmZlci50cmltKCk7XG4gICAgICAgICAgYWRkVG9rZW4oKTtcbiAgICAgICAgICBwb3BTdGF0ZSgpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICAvLyBpZiAoJ1xcbicgPT09IGNoKSB7XG4gICAgICAvLyAgIGNvbHVtbiA9IDA7XG4gICAgICAvLyAgIGxpbmUgKz0gMTtcbiAgICAgIC8vIH1cbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAnOic6XG4gICAgICBzd2l0Y2ggKGdldFN0YXRlKCkpIHtcbiAgICAgIGNhc2UgJ25hbWUnOlxuICAgICAgICB0b2tlbi5uYW1lID0gYnVmZmVyLnRyaW0oKTtcbiAgICAgICAgYnVmZmVyID0gJyc7XG5cbiAgICAgICAgcmVwbGFjZVN0YXRlKCdiZWZvcmUtdmFsdWUnKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2JlZm9yZS1zZWxlY3Rvcic6XG4gICAgICAgIGJ1ZmZlciArPSBjaDtcblxuICAgICAgICBpbml0aWFsaXplVG9rZW4oJ3NlbGVjdG9yJyk7XG4gICAgICAgIHB1c2hTdGF0ZSgnc2VsZWN0b3InKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2JlZm9yZS12YWx1ZSc6XG4gICAgICAgIHJlcGxhY2VTdGF0ZSgndmFsdWUnKTtcbiAgICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAnOyc6XG4gICAgICBzd2l0Y2ggKGdldFN0YXRlKCkpIHtcbiAgICAgIGNhc2UgJ25hbWUnOlxuICAgICAgY2FzZSAnYmVmb3JlLXZhbHVlJzpcbiAgICAgIGNhc2UgJ3ZhbHVlJzpcbiAgICAgICAgLy8gVG9rZW5pemUgYSBkZWNsYXJhdGlvblxuICAgICAgICAvLyBpZiB2YWx1ZSBpcyBlbXB0eSBza2lwIHRoZSBkZWNsYXJhdGlvblxuICAgICAgICBpZiAoYnVmZmVyLnRyaW0oKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgdG9rZW4udmFsdWUgPSBidWZmZXIudHJpbSgpLFxuICAgICAgICAgIGFkZFRva2VuKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmVwbGFjZVN0YXRlKCdiZWZvcmUtbmFtZScpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAndmFsdWUtcGFyZW4nOlxuICAgICAgICAvLyBJbnNpZ25pZmljYW50IHNlbWktY29sb25cbiAgICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnYXQtdmFsdWUnOlxuICAgICAgICAvLyBUb2tlbml6ZSBhbiBALXJ1bGVcbiAgICAgICAgdG9rZW4udmFsdWUgPSBidWZmZXIudHJpbSgpO1xuICAgICAgICBhZGRUb2tlbigpO1xuICAgICAgICBwb3BTdGF0ZSgpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnYmVmb3JlLW5hbWUnOlxuICAgICAgICAvLyBFeHRyYW5lb3VzIHNlbWktY29sb25cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJ1ZmZlciArPSBjaDtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3snOlxuICAgICAgc3dpdGNoIChnZXRTdGF0ZSgpKSB7XG4gICAgICBjYXNlICdzZWxlY3Rvcic6XG4gICAgICAgIC8vIElmIHRoZSBzZXF1ZW5jZSBpcyBgXFx7YCB0aGVuIGFzc3VtZSB0aGF0IHRoZSBicmFjZSBzaG91bGQgYmUgZXNjYXBlZC5cbiAgICAgICAgaWYgKHBlZWsoLTEpID09PSAnXFxcXCcpIHtcbiAgICAgICAgICAgIGJ1ZmZlciArPSBjaDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVG9rZW5pemUgYSBzZWxlY3RvclxuICAgICAgICB0b2tlbi50ZXh0ID0gYnVmZmVyLnRyaW0oKTtcbiAgICAgICAgYWRkVG9rZW4oKTtcbiAgICAgICAgcmVwbGFjZVN0YXRlKCdiZWZvcmUtbmFtZScpO1xuICAgICAgICBkZXB0aCA9IGRlcHRoICsgMTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2F0LWdyb3VwJzpcbiAgICAgICAgLy8gVG9rZW5pemUgYW4gQC1ncm91cFxuICAgICAgICB0b2tlbi5uYW1lID0gYnVmZmVyLnRyaW0oKTtcblxuICAgICAgICAvLyBYWFg6IEAtcnVsZXMgYXJlIHN0YXJ0aW5nIHRvIGdldCBoYWlyeVxuICAgICAgICBzd2l0Y2ggKHRva2VuLnR5cGUpIHtcbiAgICAgICAgY2FzZSAnZm9udC1mYWNlJzpcbiAgICAgICAgY2FzZSAndmlld3BvcnQnIDpcbiAgICAgICAgY2FzZSAncGFnZScgICAgIDpcbiAgICAgICAgICBwdXNoU3RhdGUoJ2JlZm9yZS1uYW1lJyk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBwdXNoU3RhdGUoJ2JlZm9yZS1zZWxlY3RvcicpO1xuICAgICAgICB9XG5cbiAgICAgICAgYWRkVG9rZW4oKTtcbiAgICAgICAgZGVwdGggPSBkZXB0aCArIDE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICduYW1lJzpcbiAgICAgIGNhc2UgJ2F0LXJ1bGUnOlxuICAgICAgICAvLyBUb2tlbml6ZSBhIGRlY2xhcmF0aW9uIG9yIGFuIEAtcnVsZVxuICAgICAgICB0b2tlbi5uYW1lID0gYnVmZmVyLnRyaW0oKTtcbiAgICAgICAgYWRkVG9rZW4oKTtcbiAgICAgICAgcHVzaFN0YXRlKCdiZWZvcmUtbmFtZScpO1xuICAgICAgICBkZXB0aCA9IGRlcHRoICsgMTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2NvbW1lbnQnOlxuICAgICAgY2FzZSAnZG91YmxlLXN0cmluZyc6XG4gICAgICBjYXNlICdzaW5nbGUtc3RyaW5nJzpcbiAgICAgICAgLy8gSWdub3JlIGJyYWNlcyBpbiBjb21tZW50cyBhbmQgc3RyaW5nc1xuICAgICAgICBidWZmZXIgKz0gY2g7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYmVmb3JlLXZhbHVlJzpcbiAgICAgICAgcmVwbGFjZVN0YXRlKCd2YWx1ZScpO1xuICAgICAgICBidWZmZXIgKz0gY2g7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ30nOlxuICAgICAgc3dpdGNoIChnZXRTdGF0ZSgpKSB7XG4gICAgICBjYXNlICdiZWZvcmUtbmFtZSc6XG4gICAgICBjYXNlICduYW1lJzpcbiAgICAgIGNhc2UgJ2JlZm9yZS12YWx1ZSc6XG4gICAgICBjYXNlICd2YWx1ZSc6XG4gICAgICAgIC8vIElmIHRoZSBidWZmZXIgY29udGFpbnMgYW55dGhpbmcsIGl0IGlzIGEgdmFsdWVcbiAgICAgICAgaWYgKGJ1ZmZlcikge1xuICAgICAgICAgIHRva2VuLnZhbHVlID0gYnVmZmVyLnRyaW0oKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIElmIHRoZSBjdXJyZW50IHRva2VuIGhhcyBhIG5hbWUgYW5kIGEgdmFsdWUgaXQgc2hvdWxkIGJlIHRva2VuaXplZC5cbiAgICAgICAgaWYgKHRva2VuLm5hbWUgJiYgdG9rZW4udmFsdWUpIHtcbiAgICAgICAgICBhZGRUb2tlbigpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gTGVhdmUgdGhlIGJsb2NrXG4gICAgICAgIGluaXRpYWxpemVUb2tlbignZW5kJyk7XG4gICAgICAgIGFkZFRva2VuKCk7XG4gICAgICAgIHBvcFN0YXRlKCk7XG5cbiAgICAgICAgLy8gV2UgbWlnaHQgbmVlZCB0byBsZWF2ZSBhZ2Fpbi5cbiAgICAgICAgLy8gWFhYOiBXaGF0IGFib3V0IDMgbGV2ZWxzIGRlZXA/XG4gICAgICAgIGlmICgnYXQtZ3JvdXAnID09PSBnZXRTdGF0ZSgpKSB7XG4gICAgICAgICAgaW5pdGlhbGl6ZVRva2VuKCdhdC1ncm91cC1lbmQnKTtcbiAgICAgICAgICBhZGRUb2tlbigpO1xuICAgICAgICAgIHBvcFN0YXRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGlmIChkZXB0aCA+IDApIHtcbiAgICAgICAgICBkZXB0aCA9IGRlcHRoIC0gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdhdC1ncm91cCc6XG4gICAgICBjYXNlICdiZWZvcmUtc2VsZWN0b3InOlxuICAgICAgY2FzZSAnc2VsZWN0b3InOlxuICAgICAgICAvLyBJZiB0aGUgc2VxdWVuY2UgaXMgYFxcfWAgdGhlbiBhc3N1bWUgdGhhdCB0aGUgYnJhY2Ugc2hvdWxkIGJlIGVzY2FwZWQuXG4gICAgICAgIGlmIChwZWVrKC0xKSA9PT0gJ1xcXFwnKSB7XG4gICAgICAgICAgICBidWZmZXIgKz0gY2g7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkZXB0aCA+IDApIHtcbiAgICAgICAgICAvLyBMZWF2ZSBibG9jayBpZiBpbiBhbiBhdC1ncm91cFxuICAgICAgICAgIGlmICgnYXQtZ3JvdXAnID09PSBnZXRTdGF0ZSgxKSkge1xuICAgICAgICAgICAgaW5pdGlhbGl6ZVRva2VuKCdhdC1ncm91cC1lbmQnKTtcbiAgICAgICAgICAgIGFkZFRva2VuKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRlcHRoID4gMSkge1xuICAgICAgICAgIHBvcFN0YXRlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZGVwdGggPiAwKSB7XG4gICAgICAgICAgZGVwdGggPSBkZXB0aCAtIDE7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2RvdWJsZS1zdHJpbmcnOlxuICAgICAgY2FzZSAnc2luZ2xlLXN0cmluZyc6XG4gICAgICBjYXNlICdjb21tZW50JzpcbiAgICAgICAgLy8gSWdub3JlIGJyYWNlcyBpbiBjb21tZW50cyBhbmQgc3RyaW5ncy5cbiAgICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgYnJlYWs7XG5cbiAgICAvLyBTdHJpbmdzXG4gICAgY2FzZSAnXCInOlxuICAgIGNhc2UgXCInXCI6XG4gICAgICBzd2l0Y2ggKGdldFN0YXRlKCkpIHtcbiAgICAgIGNhc2UgJ2RvdWJsZS1zdHJpbmcnOlxuICAgICAgICBpZiAoJ1wiJyA9PT0gY2ggJiYgJ1xcXFwnICE9PSBwZWVrKC0xKSkge1xuICAgICAgICAgIHBvcFN0YXRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3NpbmdsZS1zdHJpbmcnOlxuICAgICAgICBpZiAoXCInXCIgPT09IGNoICYmICdcXFxcJyAhPT0gcGVlaygtMSkpIHtcbiAgICAgICAgICBwb3BTdGF0ZSgpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdiZWZvcmUtYXQtdmFsdWUnOlxuICAgICAgICByZXBsYWNlU3RhdGUoJ2F0LXZhbHVlJyk7XG4gICAgICAgIHB1c2hTdGF0ZSgnXCInID09PSBjaCA/ICdkb3VibGUtc3RyaW5nJyA6ICdzaW5nbGUtc3RyaW5nJyk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdiZWZvcmUtdmFsdWUnOlxuICAgICAgICByZXBsYWNlU3RhdGUoJ3ZhbHVlJyk7XG4gICAgICAgIHB1c2hTdGF0ZSgnXCInID09PSBjaCA/ICdkb3VibGUtc3RyaW5nJyA6ICdzaW5nbGUtc3RyaW5nJyk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdjb21tZW50JzpcbiAgICAgICAgLy8gSWdub3JlIHN0cmluZ3Mgd2l0aGluIGNvbW1lbnRzLlxuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKCdcXFxcJyAhPT0gcGVlaygtMSkpIHtcbiAgICAgICAgICBwdXNoU3RhdGUoJ1wiJyA9PT0gY2ggPyAnZG91YmxlLXN0cmluZycgOiAnc2luZ2xlLXN0cmluZycpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGJ1ZmZlciArPSBjaDtcbiAgICAgIGJyZWFrO1xuXG4gICAgLy8gQ29tbWVudHNcbiAgICBjYXNlICcvJzpcbiAgICAgIHN3aXRjaCAoZ2V0U3RhdGUoKSkge1xuICAgICAgY2FzZSAnY29tbWVudCc6XG4gICAgICBjYXNlICdkb3VibGUtc3RyaW5nJzpcbiAgICAgIGNhc2UgJ3NpbmdsZS1zdHJpbmcnOlxuICAgICAgICAvLyBJZ25vcmVcbiAgICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnYmVmb3JlLXZhbHVlJzpcbiAgICAgIGNhc2UgJ3NlbGVjdG9yJzpcbiAgICAgIGNhc2UgJ25hbWUnOlxuICAgICAgY2FzZSAndmFsdWUnOlxuICAgICAgICBpZiAoaXNOZXh0Q2hhcignKicpKSB7XG4gICAgICAgICAgLy8gSWdub3JlIGNvbW1lbnRzIGluIHNlbGVjdG9ycywgcHJvcGVydGllcyBhbmQgdmFsdWVzLiBUaGV5IGFyZVxuICAgICAgICAgIC8vIGRpZmZpY3VsdCB0byByZXByZXNlbnQgaW4gdGhlIEFTVC5cbiAgICAgICAgICB2YXIgcG9zID0gZmluZCgnKi8nKTtcblxuICAgICAgICAgIGlmIChwb3MpIHtcbiAgICAgICAgICAgIHNraXAocG9zICsgMSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChnZXRTdGF0ZSgpID09ICdiZWZvcmUtdmFsdWUnKSByZXBsYWNlU3RhdGUoJ3ZhbHVlJyk7XG4gICAgICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAoaXNOZXh0Q2hhcignKicpKSB7XG4gICAgICAgICAgLy8gQ3JlYXRlIGEgY29tbWVudCB0b2tlblxuICAgICAgICAgIGluaXRpYWxpemVUb2tlbignY29tbWVudCcpO1xuICAgICAgICAgIHB1c2hTdGF0ZSgnY29tbWVudCcpO1xuICAgICAgICAgIHNraXAoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBidWZmZXIgKz0gY2g7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBicmVhaztcblxuICAgIC8vIENvbW1lbnQgZW5kIG9yIHVuaXZlcnNhbCBzZWxlY3RvclxuICAgIGNhc2UgJyonOlxuICAgICAgc3dpdGNoIChnZXRTdGF0ZSgpKSB7XG4gICAgICBjYXNlICdjb21tZW50JzpcbiAgICAgICAgaWYgKGlzTmV4dENoYXIoJy8nKSkge1xuICAgICAgICAgIC8vIFRva2VuaXplIGEgY29tbWVudFxuICAgICAgICAgIHRva2VuLnRleHQgPSBidWZmZXI7IC8vIERvbid0IHRyaW0oKSFcbiAgICAgICAgICBza2lwKCk7XG4gICAgICAgICAgYWRkVG9rZW4oKTtcbiAgICAgICAgICBwb3BTdGF0ZSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGJ1ZmZlciArPSBjaDtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnYmVmb3JlLXNlbGVjdG9yJzpcbiAgICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgICBpbml0aWFsaXplVG9rZW4oJ3NlbGVjdG9yJyk7XG4gICAgICAgIHB1c2hTdGF0ZSgnc2VsZWN0b3InKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2JlZm9yZS12YWx1ZSc6XG4gICAgICAgIHJlcGxhY2VTdGF0ZSgndmFsdWUnKTtcbiAgICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG5cbiAgICAvLyBALXJ1bGVzXG4gICAgY2FzZSAnQCc6XG4gICAgICBzd2l0Y2ggKGdldFN0YXRlKCkpIHtcbiAgICAgIGNhc2UgJ2NvbW1lbnQnOlxuICAgICAgY2FzZSAnZG91YmxlLXN0cmluZyc6XG4gICAgICBjYXNlICdzaW5nbGUtc3RyaW5nJzpcbiAgICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2JlZm9yZS12YWx1ZSc6XG4gICAgICAgIHJlcGxhY2VTdGF0ZSgndmFsdWUnKTtcbiAgICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgLy8gSXRlcmF0ZSBvdmVyIHRoZSBzdXBwb3J0ZWQgQC1ydWxlcyBhbmQgYXR0ZW1wdCB0byB0b2tlbml6ZSBvbmUuXG4gICAgICAgIHZhciB0b2tlbml6ZWQgPSBmYWxzZTtcbiAgICAgICAgdmFyIG5hbWU7XG4gICAgICAgIHZhciBydWxlO1xuXG4gICAgICAgIGZvciAodmFyIGogPSAwLCBsZW4gPSBhdFJ1bGVzLmxlbmd0aDsgIXRva2VuaXplZCAmJiBqIDwgbGVuOyArK2opIHtcbiAgICAgICAgICBydWxlID0gYXRSdWxlc1tqXTtcbiAgICAgICAgICBuYW1lID0gcnVsZS5uYW1lIHx8IHJ1bGU7XG5cbiAgICAgICAgICBpZiAoIWlzTmV4dFN0cmluZyhuYW1lKSkgeyBjb250aW51ZTsgfVxuXG4gICAgICAgICAgdG9rZW5pemVkID0gdHJ1ZTtcblxuICAgICAgICAgIGluaXRpYWxpemVUb2tlbihuYW1lKTtcbiAgICAgICAgICBwdXNoU3RhdGUocnVsZS5zdGF0ZSB8fCAnYXQtZ3JvdXAnKTtcbiAgICAgICAgICBza2lwKG5hbWUubGVuZ3RoKTtcblxuICAgICAgICAgIGlmIChydWxlLnByZWZpeCkge1xuICAgICAgICAgICAgdG9rZW4ucHJlZml4ID0gcnVsZS5wcmVmaXg7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHJ1bGUudHlwZSkge1xuICAgICAgICAgICAgdG9rZW4udHlwZSA9IHJ1bGUudHlwZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRva2VuaXplZCkge1xuICAgICAgICAgIC8vIEtlZXAgb24gdHJ1Y2tpbicgQW1lcmljYSFcbiAgICAgICAgICBidWZmZXIgKz0gY2g7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBicmVhaztcblxuICAgIC8vIFBhcmVudGhlc2VzIGFyZSB0cmFja2VkIHRvIGRpc2FtYmlndWF0ZSBzZW1pLWNvbG9ucywgc3VjaCBhcyB3aXRoaW4gYVxuICAgIC8vIGRhdGEgVVJJLlxuICAgIGNhc2UgJygnOlxuICAgICAgc3dpdGNoIChnZXRTdGF0ZSgpKSB7XG4gICAgICBjYXNlICd2YWx1ZSc6XG4gICAgICAgIHB1c2hTdGF0ZSgndmFsdWUtcGFyZW4nKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdiZWZvcmUtdmFsdWUnOlxuICAgICAgICByZXBsYWNlU3RhdGUoJ3ZhbHVlJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBidWZmZXIgKz0gY2g7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJyknOlxuICAgICAgc3dpdGNoIChnZXRTdGF0ZSgpKSB7XG4gICAgICBjYXNlICd2YWx1ZS1wYXJlbic6XG4gICAgICAgIHBvcFN0YXRlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYmVmb3JlLXZhbHVlJzpcbiAgICAgICAgcmVwbGFjZVN0YXRlKCd2YWx1ZScpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgYnVmZmVyICs9IGNoO1xuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgc3dpdGNoIChnZXRTdGF0ZSgpKSB7XG4gICAgICBjYXNlICdiZWZvcmUtc2VsZWN0b3InOlxuICAgICAgICBpbml0aWFsaXplVG9rZW4oJ3NlbGVjdG9yJyk7XG4gICAgICAgIHB1c2hTdGF0ZSgnc2VsZWN0b3InKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2JlZm9yZS1uYW1lJzpcbiAgICAgICAgaW5pdGlhbGl6ZVRva2VuKCdwcm9wZXJ0eScpO1xuICAgICAgICByZXBsYWNlU3RhdGUoJ25hbWUnKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2JlZm9yZS12YWx1ZSc6XG4gICAgICAgIHJlcGxhY2VTdGF0ZSgndmFsdWUnKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2JlZm9yZS1hdC12YWx1ZSc6XG4gICAgICAgIHJlcGxhY2VTdGF0ZSgnYXQtdmFsdWUnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGJ1ZmZlciArPSBjaDtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIFRJTUVSICYmIGRlYnVnKCdyYW4gaW4nLCAoRGF0ZS5ub3coKSAtIHN0YXJ0KSArICdtcycpO1xuXG4gIHJldHVybiB0b2tlbnM7XG59XG4iXX0=","deps":{"./debug":"/Users/denea/mos/bower_components/mensch/lib/debug.js"}},"/Users/denea/mos/bower_components/mensch/lib/debug.js":{"file":"/Users/denea/mos/bower_components/mensch/lib/debug.js","source":"(function (process){\nfunction debug(e){return _debug.bind(null,e)}function _debug(e){var t=[].slice.call(arguments,1);t.unshift(\"[\"+e+\"]\"),process.stderr.write(t.join(\" \")+\"\\n\")}exports=module.exports=debug;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvd2VyX2NvbXBvbmVudHMvbWVuc2NoL2xpYi9kZWJ1Zy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBRUEsUUFBUyxPQUFNLEdBQ2IsTUFBTyxRQUFPLEtBQUssS0FBTSxHQUczQixRQUFTLFFBQU8sR0FDZCxHQUFJLE1BQVUsTUFBTSxLQUFLLFVBQVcsRUFDcEMsR0FBSyxRQUFRLElBQU0sRUFBUSxLQUMzQixRQUFRLE9BQU8sTUFBTSxFQUFLLEtBQUssS0FBTyxNQVR4QyxRQUFVLE9BQU8sUUFBVSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZGVidWc7XG5cbmZ1bmN0aW9uIGRlYnVnKGxhYmVsKSB7XG4gIHJldHVybiBfZGVidWcuYmluZChudWxsLCBsYWJlbCk7XG59XG5cbmZ1bmN0aW9uIF9kZWJ1ZyhsYWJlbCkge1xuICB2YXIgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgYXJncy51bnNoaWZ0KCdbJyArIGxhYmVsICsgJ10nKTtcbiAgcHJvY2Vzcy5zdGRlcnIud3JpdGUoYXJncy5qb2luKCcgJykgKyAnXFxuJyk7XG59Il19","deps":{"_process":"/Users/denea/mos/node_modules/process/browser.js"}},"/Users/denea/mos/bower_components/mensch/lib/parser.js":{"file":"/Users/denea/mos/bower_components/mensch/lib/parser.js","source":"function parse(e,t){var o;t||(t={}),_comments=!!t.comments,_position=!!t.position,_depth=0,_tokens=Array.isArray(e)?e.slice():lex(e);var n,i,r=[];for(TIMER&&(o=Date.now());i=next();)n=parseToken(i),n&&r.push(n);return TIMER&&debug(\"ran in\",Date.now()-o+\"ms\"),{type:\"stylesheet\",stylesheet:{rules:r}}}function astNode(e,t){t||(t={});for(var o,n=[\"type\",\"name\",\"value\"],i={},r=0;r<n.length;++r)o=n[r],e[o]&&(i[o]=t[o]||e[o]);for(n=Object.keys(t),r=0;r<n.length;++r)o=n[r],i[o]||(i[o]=t[o]);return _position&&(i.position={start:e.start,end:e.end}),DEBUG&&debug(\"astNode:\",JSON.stringify(i,null,2)),i}function next(){var e=_tokens.shift();return DEBUG&&debug(\"next:\",JSON.stringify(e,null,2)),e}function parseAtGroup(e){_depth+=1;var t={};switch(e.type){case\"font-face\":case\"viewport\":t.declarations=parseDeclarations();break;case\"page\":t.prefix=e.prefix,t.declarations=parseDeclarations();break;default:t.prefix=e.prefix,t.rules=parseRules()}return astNode(e,t)}function parseAtImport(e){return astNode(e)}function parseCharset(e){return astNode(e)}function parseComment(e){return astNode(e,{text:e.text})}function parseNamespace(e){return astNode(e)}function parseProperty(e){return astNode(e)}function parseSelector(e){function t(e){return e.trim()}return astNode(e,{type:\"rule\",selectors:e.text.split(\",\").map(t),declarations:parseDeclarations(e)})}function parseToken(e){switch(e.type){case\"property\":return parseProperty(e);case\"selector\":return parseSelector(e);case\"at-group-end\":return _depth-=1,void 0;case\"media\":case\"keyframes\":return parseAtGroup(e);case\"comment\":if(_comments)return parseComment(e);break;case\"charset\":return parseCharset(e);case\"import\":return parseAtImport(e);case\"namespace\":return parseNamespace(e);case\"font-face\":case\"supports\":case\"viewport\":case\"document\":case\"page\":return parseAtGroup(e)}DEBUG&&debug(\"parseToken: unexpected token:\",JSON.stringify(e))}function parseTokensWhile(e){for(var t,o,n=[];(o=next())&&e&&e(o);)t=parseToken(o),t&&n.push(t);return o&&\"end\"!==o.type&&_tokens.unshift(o),n}function parseDeclarations(){return parseTokensWhile(function(e){return\"property\"===e.type||\"comment\"===e.type})}function parseRules(){return parseTokensWhile(function(){return _depth})}var DEBUG=!1,TIMER=!1,debug=require(\"./debug\")(\"parse\"),lex=require(\"./lexer\");exports=module.exports=parse;var _comments,_depth,_position,_tokens;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./lexer":"/Users/denea/mos/bower_components/mensch/lib/lexer.js","./debug":"/Users/denea/mos/bower_components/mensch/lib/debug.js"}},"/Users/denea/mos/bower_components/mensch/index.js":{"file":"/Users/denea/mos/bower_components/mensch/index.js","source":"module.exports={lex:require(\"./lib/lexer\"),parse:require(\"./lib/parser\"),stringify:require(\"./lib/stringify\")};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJsZXgiLCJyZXF1aXJlIiwicGFyc2UiLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxTQUNIQyxJQUFPQyxRQUFRLGVBQ2ZDLE1BQU9ELFFBQVEsZ0JBQ2ZFLFVBQVdGLFFBQVEiLCJmaWxlIjoib3V0LmpzLm1hcCIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGxleCAgOiByZXF1aXJlKCcuL2xpYi9sZXhlcicpLFxuICAgIHBhcnNlOiByZXF1aXJlKCcuL2xpYi9wYXJzZXInKSxcbiAgICBzdHJpbmdpZnk6IHJlcXVpcmUoJy4vbGliL3N0cmluZ2lmeScpXG59O1xuIl19","deps":{"./lib/parser":"/Users/denea/mos/bower_components/mensch/lib/parser.js","./lib/lexer":"/Users/denea/mos/bower_components/mensch/lib/lexer.js","./lib/stringify":"/Users/denea/mos/bower_components/mensch/lib/stringify.js"}},"/Users/denea/mos/bower_components/juice/lib/utils.js":{"file":"/Users/denea/mos/bower_components/juice/lib/utils.js","source":"\"use strict\";var mensch=require(\"./../../mensch/index.js\"),own={}.hasOwnProperty,os=require(\"os\"),Selector=require(\"./selector\"),Property=require(\"./property\");exports.Selector=Selector,exports.Property=Property,exports.extract=function(e){for(var t=0,o=[],n=\"\",i=0,r=e.length;r>i;i++){var a=e.charAt(i);t?((\"]\"===a||\")\"===a)&&t--,n+=a):\",\"===a?(o.push(n),n=\"\"):((\"[\"===a||\"(\"===a)&&t++,(n.length||\",\"!==a&&\"\\n\"!==a&&\" \"!==a)&&(n+=a))}return n.length&&o.push(n),o},exports.parseCSS=function(e){for(var t=mensch.parse(e,{position:!0,comments:!0}),o=\"undefined\"!=typeof t.stylesheet&&t.stylesheet.rules?t.stylesheet.rules:[],n=[],i=0,r=o.length;r>i;i++)if(\"rule\"==o[i].type)for(var a=o[i],l=a.selectors,s=0,d=l.length;d>s;s++)n.push([l[s],a.declarations]);return n},exports.getPreservedText=function(e,t){for(var o=mensch.parse(e,{position:!0,comments:!0}),n=\"undefined\"!=typeof o.stylesheet&&o.stylesheet.rules?o.stylesheet.rules:[],i=[],r=null,a=n.length-1;a>=0;a--)(t.fontFaces&&\"font-face\"===n[a].type||t.mediaQueries&&\"media\"===n[a].type)&&i.push(mensch.stringify({stylesheet:{rules:[n[a]]}},{comments:!1,indentation:\"  \"})),r=n[a].position.start;return 0===i.length?!1:os.EOL+i.join(os.EOL)+os.EOL},exports.normalizeLineEndings=function(e){return e.replace(/\\r\\n/g,\"\\n\").replace(/\\n/g,\"\\r\\n\")},exports.compareFunc=function(e,t){for(var o=Math.min(e.length,t.length),n=0;o>n;n++)if(e[n]!==t[n])return e[n]>t[n]?1:-1;return e.length-t.length},exports.compare=function(e,t){return 1==exports.compareFunc(e,t)?e:t},exports.extend=function(e,t){for(var o in t)own.call(t,o)&&(e[o]=t[o]);return e},exports.getDefaultOptions=function(e){var t=exports.extend({extraCss:\"\",insertPreservedExtraCss:!0,applyStyleTags:!0,removeStyleTags:!0,preserveMediaQueries:!0,preserveFontFaces:!0,applyWidthAttributes:!0,applyHeightAttributes:!0,applyAttributesTableElements:!0,url:\"\"},e);return t.webResources=t.webResources||{},t};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./property":"/Users/denea/mos/bower_components/juice/lib/property.js","./../../mensch/index.js":"/Users/denea/mos/bower_components/mensch/index.js","os":"/Users/denea/mos/node_modules/os-browserify/browser.js","./selector":"/Users/denea/mos/bower_components/juice/lib/selector.js"}},"/Users/denea/mos/bower_components/juice/lib/inline.js":{"file":"/Users/denea/mos/bower_components/juice/lib/inline.js","source":"\"use strict\";var utils=require(\"./utils\");module.exports=function(e){function t(t,i,r){function l(o){for(var i=o[0],l=o[1],s=new utils.Selector(i),d=s.parsed(),c=n(d),u=0;u<d.length;++u){var p=d[u];if(p.pseudos)for(var m=0;m<p.pseudos.length;++m){var g=p.pseudos[m];if(e.ignoredPseudos.indexOf(g.name)>=0)return}}if(c){var h=d[d.length-1],v=h.pseudos;h.pseudos=a(h.pseudos),i=d.toString(),h.pseudos=v}var y;try{y=t(i)}catch(k){return}y.each(function(){function o(t,o){for(var i=0,a=t.length;a>i;i++)if(\"property\"==t[i].type){var l=t[i].name,s=t[i].value,d=null!==t[i].value.match(/!important$/);d&&!r.preserveImportant&&(s=s.replace(/\\s*!important$/,\"\"));var c=[t[i].position.start.line,t[i].position.start.col],u=new utils.Property(l,s,o,d?2:0,c),p=n.styleProps[l];e.excludedProperties.indexOf(l)<0&&(p&&p.compare(u)===u||!p)&&(p&&p.selector!==o?delete n.styleProps[l]:p&&(u.nextProp=p),n.styleProps[l]=u)}}var n=this;if(!(n.name&&e.nonVisualElements.indexOf(n.name.toUpperCase())>=0)){if(c){var i=\"pseudo\"+c,a=n[i];a||(a=n[i]=t(\"<span />\").get(0),a.pseudoElementType=c,a.pseudoElementParent=n,n[i]=a),n=a}if(!n.styleProps){if(n.styleProps={},t(n).attr(b)){var d=\"* { \"+t(n).attr(b)+\" } \";o(utils.parseCSS(d)[0][1],new utils.Selector(\"<style>\",!0))}f.push(n)}o(l,s)}})}function s(e){Object.keys(e.styleProps).length;var o=[];Object.keys(e.styleProps).forEach(function(t){for(var n=e.styleProps[t];\"undefined\"!=typeof n;)o.push(n),n=n.nextProp}),o.sort(function(e,t){return e.compareFunc(t)});var n=o.filter(function(e){return\"content\"!==e.prop}).map(function(e){return e.prop+\": \"+e.value.replace(/[\"]/g,\"'\")+\";\"}).join(\" \");n&&t(e).attr(b,n)}function d(e){if(e.pseudoElementType&&e.styleProps.content){var n=o(e.styleProps.content.value);n.img?(e.name=\"img\",t(e).attr(\"src\",n.img)):t(e).text(n);var i=e.pseudoElementParent;\"before\"===e.pseudoElementType?t(i).prepend(e):t(i).append(e)}}function c(o,n){if(o.name){var i=o.name.toUpperCase();if(e[n+\"Elements\"].indexOf(i)>-1)for(var a in o.styleProps)if(o.styleProps[a].prop===n){if(o.styleProps[a].value.match(/px/)){var r=o.styleProps[a].value.replace(\"px\",\"\");return t(o).attr(n,r),void 0}if(e.tableElements.indexOf(i)>-1&&o.styleProps[a].value.match(/\\%/))return t(o).attr(n,o.styleProps[a].value),void 0}}}function u(o){if(o.name){var n=o.name.toUpperCase(),i=Object.keys(e.styleToAttribute);if(e.tableElements.indexOf(n)>-1)for(var a in o.styleProps)i.indexOf(o.styleProps[a].prop)>-1&&t(o).attr(e.styleToAttribute[o.styleProps[a].prop],o.styleProps[a].value)}}r=r||{};var p=utils.parseCSS(i),f=[],b=\"style\";if(r.styleAttributeName&&(b=r.styleAttributeName),p.forEach(l),f.forEach(s),r.inlinePseudoElements&&f.forEach(d),r.applyWidthAttributes&&f.forEach(function(e){c(e,\"width\")}),r.applyHeightAttributes&&f.forEach(function(e){c(e,\"height\")}),r.applyAttributesTableElements&&f.forEach(u),r.insertPreservedExtraCss&&r.extraCss){var m=utils.getPreservedText(r.extraCss,{mediaQueries:r.preserveMediaQueries,fontFaces:r.preserveFontFaces});if(m){var g=null;r.insertPreservedExtraCss!==!0?g=t(r.insertPreservedExtraCss):(g=t(\"head\"),g.length||(g=t(\"body\")),g.length||(g=t.root())),g.first().append(\"<style>\"+m+\"</style>\")}}}function o(e){if(\"none\"===e||\"normal\"===e)return\"\";var t=e.match(/^\\s*url\\s*\\(\\s*(.*?)\\s*\\)\\s*$/i);if(t){var o=t[1].replace(/^['\"]|['\"]$/g,\"\");return{img:o}}return e=e.slice(1,e.length-1),e=e.replace(/\\\\/g,\"\")}function n(e){if(0!==e.length){var t=e[e.length-1].pseudos;if(t)for(var o=0;o<t.length;o++)if(i(t[o]))return t[o].name}}function i(e){return\"before\"===e.name||\"after\"===e.name}function a(e){return e.filter(function(e){return!i(e)})}function r(e,o){o=utils.getDefaultOptions(o);var n=s(e,o);return n+=\"\\n\"+o.extraCss,t(e,n,o),e}function l(e,t){var o,n,i,a=[],r=e(\"style\");return r.each(function(){if(i=this,o=i.childNodes,1===o.length){if(n=o[0].data,t.applyStyleTags&&void 0===e(i).attr(\"data-embed\")&&a.push(n),t.removeStyleTags&&void 0===e(i).attr(\"data-embed\")){var r=utils.getPreservedText(i.childNodes[0].nodeValue,{mediaQueries:t.preserveMediaQueries,fontFaces:t.preserveFontFaces});r?i.childNodes[0].nodeValue=r:e(i).remove()}e(i).removeAttr(\"data-embed\")}}),a}function s(e,t){var o=l(e,t),n=o.join(\"\\n\");return n}return e.ignoredPseudos=[\"hover\",\"active\",\"focus\",\"visited\",\"link\"],e.widthElements=[\"TABLE\",\"TD\",\"IMG\"],e.heightElements=[\"TABLE\",\"TD\",\"IMG\"],e.tableElements=[\"TABLE\",\"TD\",\"TH\",\"TR\",\"TD\",\"CAPTION\",\"COLGROUP\",\"COL\",\"THEAD\",\"TBODY\",\"TFOOT\"],e.nonVisualElements=[\"HEAD\",\"TITLE\",\"BASE\",\"LINK\",\"STYLE\",\"META\",\"SCRIPT\",\"NOSCRIPT\"],e.styleToAttribute={\"background-color\":\"bgcolor\",\"background-image\":\"background\",\"text-align\":\"align\",\"vertical-align\":\"valign\"},e.excludedProperties=[],e.juiceDocument=r,e.inlineDocument=t,e};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./utils":"/Users/denea/mos/bower_components/juice/lib/utils.js"}},"/Users/denea/mos/src/js/ext/inliner.js":{"file":"/Users/denea/mos/src/js/ext/inliner.js","source":"(function (global){\n\"use strict\";var console=require(\"./../../../bower_components/console-browserify/index.js\"),$=(typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null),inlineDocument=require(\"./../../../bower_components/juice/lib/inline\")({}).inlineDocument,inlinerPlugin=function(e){e.inline=function(e){$(\"[style]:not([replacedstyle])\",e).each(function(e,t){var o=$(t);o.attr(\"replacedstyle\",o.attr(\"style\"))});var t=[];$('style[data-inline=\"true\"]',e).each(function(e,o){var a=$(o).html();a=a.replace(/<!-- ko ((?!--).)*? -->/g,\"\"),a=a.replace(/<!-- \\/ko -->/g,\"\"),t.push(a),$(o).removeAttr(\"data-inline\")});var o=t.join(\"\\n\"),a=function(t,o){return\"undefined\"==typeof o&&(o=e),$(t,o)};a.root=function(){return $(\":root\",e)},inlineDocument(a,o,{styleAttributeName:\"replacedstyle\"})}};module.exports=inlinerPlugin;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9leHQvaW5saW5lci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFFQSxJQUFJLFNBQVUsUUFBUSxXQUNsQixFQUFJLFFBQVEsVUFDWixlQUFpQixRQUFRLHdCQUF3QixlQUVqRCxjQUFnQixTQUFTLEdBQzNCLEVBQUcsT0FBUyxTQUFTLEdBRW5CLEVBQUUsK0JBQWdDLEdBQUssS0FBSyxTQUFTLEVBQU8sR0FDMUQsR0FBSSxHQUFNLEVBQUUsRUFDWixHQUFJLEtBQUssZ0JBQWlCLEVBQUksS0FBSyxXQUdyQyxJQUFJLEtBQ0osR0FBRSw0QkFBNkIsR0FBSyxLQUFLLFNBQVMsRUFBTyxHQUN2RCxHQUFJLEdBQVUsRUFBRSxHQUFTLE1BQ3pCLEdBQVUsRUFBUSxRQUFRLDJCQUE0QixJQUN0RCxFQUFVLEVBQVEsUUFBUSxpQkFBa0IsSUFDNUMsRUFBTSxLQUFLLEdBQ1gsRUFBRSxHQUFTLFdBQVcsZ0JBRXhCLElBQUksR0FBWSxFQUFNLEtBQUssTUFDdkIsRUFBVyxTQUFTLEVBQVUsR0FFaEMsTUFEc0IsbUJBQVgsS0FBd0IsRUFBVSxHQUN0QyxFQUFFLEVBQVUsR0FFckIsR0FBUyxLQUFPLFdBQ2QsTUFBTyxHQUFFLFFBQVMsSUFFcEIsZUFBZSxFQUFVLEdBQWEsbUJBQW9CLG1CQUk5RCxRQUFPLFFBQVUiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogZ2xvYmFsIGdsb2JhbDogZmFsc2UgKi9cbnZhciBjb25zb2xlID0gcmVxdWlyZShcImNvbnNvbGVcIik7XG52YXIgJCA9IHJlcXVpcmUoXCJqcXVlcnlcIik7XG52YXIgaW5saW5lRG9jdW1lbnQgPSByZXF1aXJlKFwianVpY2UvbGliL2lubGluZVwiKSh7fSkuaW5saW5lRG9jdW1lbnQ7XG5cbnZhciBpbmxpbmVyUGx1Z2luID0gZnVuY3Rpb24odm0pIHtcbiAgdm0uaW5saW5lID0gZnVuY3Rpb24oZG9jKSB7XG4gICAgLy8gdGlueW1jZSBtYXkgaGF2ZSBhZGRlZCBzdHlsZSBhdHRyaWJ1dGVzIHRvIGVsZW1lbnRzIHRoYXQgd2lsbCBhbHNvIGhhdmUgZ2xvYmFsIHN0eWxlcyB0byBiZSBpbmxpbmVkXG4gICAgJCgnW3N0eWxlXTpub3QoW3JlcGxhY2Vkc3R5bGVdKScsIGRvYykuZWFjaChmdW5jdGlvbihpbmRleCwgZWwpIHtcbiAgICAgIHZhciAkZWwgPSAkKGVsKTtcbiAgICAgICRlbC5hdHRyKCdyZXBsYWNlZHN0eWxlJywgJGVsLmF0dHIoJ3N0eWxlJykpO1xuICAgIH0pO1xuXG4gICAgdmFyIHN0eWxlID0gW107XG4gICAgJCgnc3R5bGVbZGF0YS1pbmxpbmU9XCJ0cnVlXCJdJywgZG9jKS5lYWNoKGZ1bmN0aW9uKGluZGV4LCBlbGVtZW50KSB7XG4gICAgICB2YXIgY29udGVudCA9ICQoZWxlbWVudCkuaHRtbCgpO1xuICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvPCEtLSBrbyAoKD8hLS0pLikqPyAtLT4vZywgJycpOyAvLyB0aGlzIHJlcGxhY2VzIHRoZSBhYm92ZSB3aXRoIGEgbW9yZSBmb3JtYWwgKGJ1dCBzbG93ZXIpIHNvbHV0aW9uXG4gICAgICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlKC88IS0tIFxcL2tvIC0tPi9nLCAnJyk7XG4gICAgICBzdHlsZS5wdXNoKGNvbnRlbnQpO1xuICAgICAgJChlbGVtZW50KS5yZW1vdmVBdHRyKCdkYXRhLWlubGluZScpO1xuICAgIH0pO1xuICAgIHZhciBzdHlsZVRleHQgPSBzdHlsZS5qb2luKFwiXFxuXCIpO1xuICAgIHZhciAkY29udGV4dCA9IGZ1bmN0aW9uKHNlbGVjdG9yLCBjb250ZXh0KSB7XG4gICAgICBpZiAodHlwZW9mIGNvbnRleHQgPT0gJ3VuZGVmaW5lZCcpIGNvbnRleHQgPSBkb2M7XG4gICAgICByZXR1cm4gJChzZWxlY3RvciwgY29udGV4dCk7XG4gICAgfTtcbiAgICAkY29udGV4dC5yb290ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gJCgnOnJvb3QnLCBkb2MpO1xuICAgIH07XG4gICAgaW5saW5lRG9jdW1lbnQoJGNvbnRleHQsIHN0eWxlVGV4dCwgeyBzdHlsZUF0dHJpYnV0ZU5hbWU6ICdyZXBsYWNlZHN0eWxlJyB9KTtcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW5saW5lclBsdWdpbjsiXX0=","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js","./../../../bower_components/juice/lib/inline":"/Users/denea/mos/bower_components/juice/lib/inline.js"}},"/Users/denea/mos/src/js/converter/declarations.js":{"file":"/Users/denea/mos/src/js/converter/declarations.js","source":"\"use strict\";var converterUtils=require(\"./utils.js\"),cssParse=require(\"./../../../bower_components/mensch/lib/parser.js\"),console=require(\"./../../../bower_components/console-browserify/index.js\"),domutils=require(\"./domutils.js\"),_declarationValueLookup=function(e,t,r){for(var n=e.length-1;n>=0;n--)if(\"property\"==e[n].type&&e[n].name==t)return _declarationValueUrlPrefixer(e[n].value,r);return null},_propToCamelCase=function(e){return e.replace(/-([a-z])/g,function(e,t){return t.toUpperCase()})},_declarationValueUrlPrefixer=function(e,t){if(e.match(/url\\(.*\\)/)){var r=e.replace(/(url\\()([^\\)]*)(\\))/g,function(e,r,n,l){var i=n.trim(),o=n.trim().charAt(0);\"'\"==o||'\"'==o?i=i.substr(1,i.length-2):o=\"\";var a=t(i);return null!==a?r+o+a+o+l:e});return r}return e},elaborateDeclarations=function(e,t,r,n,l,i,o){var a=\"object\"==typeof i&&null!==i?i:{},u=null,d=0;if(\"undefined\"==typeof t){var f=cssParse(\"#{\\n\"+e+\"}\",{comments:!0,position:!0});t=f.stylesheet.rules[0].declarations,d=1}for(var s=t.length-1;s>=0;s--)if(\"property\"==t[s].type)if(o===!0&&\"display\"==t[s].name&&\"none\"==t[s].value)null===u&&(u=e),u=converterUtils.removeStyle(u,t[s].position.start,t[s].position.end,d,0,0,\"\");else{var v=t[s].name.match(/^-ko-(bind-|attr-)?([a-z0-9-]*?)(-if|-ifnot)?$/);if(null!==v){null===u&&\"undefined\"!=typeof e&&(u=e);var c,p,y,m=\"attr-\"==v[1],h=\"bind-\"==v[1],b=v[2],S=\"-if\"==v[3]||\"-ifnot\"==v[3];if(S){c=t[s].name.substr(0,t[s].name.length-v[3].length);var g=_declarationValueLookup(t,c,r);if(null===g)throw\"Unable to find declaration \"+c+\" for \"+t[s].name}else{if((m||h)&&\"undefined\"==typeof l&&\"undefined\"!=typeof e)throw\"Attributes and bind declarations are only allowed in inline styles!\";var w,U=!0;if(m?(y=domutils.getAttribute(l,b),U=!1,w=\"virtualAttr\"):h?(w=null,\"text\"==b?\"undefined\"!=typeof l?y=domutils.getInnerText(l):U=!1:\"html\"==b?\"undefined\"!=typeof l?y=domutils.getInnerHtml(l):U=!1:U=!1):(U=\"undefined\"!=typeof e,U&&(y=_declarationValueLookup(t,b,r)),w=\"virtualStyle\"),U&&null===y)throw console.error(\"Cannot find default value for\",t[s].name,t),\"Cannot find default value for \"+t[s].name+\": \"+t[s].value+\" in \"+l+\" (\"+typeof e+\"/\"+b+\")\";var _=y,A=h||m?-1!=b.indexOf(\"-\")?\"'\"+b+\"'\":b:_propToCamelCase(b);try{p=converterUtils.expressionBinding(t[s].value,n,_)}catch(k){throw console.error(\"Model ensure path failed\",k.stack,\"name\",t[s].name,\"value\",t[s].value,\"default\",y,\"element\",l),k}null!==w&&\"undefined\"==typeof a[w]&&(a[w]={}),\"virtualAttr\"==w&&\"href\"==A&&(w=null,A=\"wysiwygHref\",\"undefined\"!=typeof l&&null!==l&&domutils.removeAttribute(l,\"href\"));var x=_declarationValueLookup(t,t[s].name+\"-if\",r),C=!1;if(null===x)x=_declarationValueLookup(t,t[s].name+\"-ifnot\",r),C=!0;else if(null!==_declarationValueLookup(t,t[s].name+\"-ifnot\",r))throw\"Unexpected error: cannot use both -if and -ifnot property conditions\";if(null!==x)try{var V=converterUtils.conditionBinding(x,n);p=(C?\"!\":\"\")+\"(\"+V+\") ? \"+p+\" : null\"}catch(k){throw console.error(\"Unable to deal with -ko style binding condition\",x,t[s].name),k}null!==w?a[w][A]=p:a[A]=p}if(null!==u)try{if(\"undefined\"!=typeof l&&null!==l)u=converterUtils.removeStyle(u,t[s].position.start,t[s].position.end,d,0,0,\"\");else{var P=\"\";S||(P=b+\": <!-- ko text: \"+p+\" -->\"+y+\"<!-- /ko -->\"),u=converterUtils.removeStyle(u,t[s].position.start,t[s].position.end,d,0,0,P)}}catch(k){throw console.warn(\"Remove style failed\",k,\"name\",t[s]),k}}else{var j=_declarationValueUrlPrefixer(t[s].value,r);if(j!=t[s].value&&(null===u&&\"undefined\"!=typeof e&&(u=e),null!==u))try{u=converterUtils.removeStyle(u,t[s].position.start,t[s].position.end,d,0,0,t[s].name+\": \"+j)}catch(k){throw console.log(\"Remove style failed replacing url\",k,\"name\",t[s]),k}var z=_propToCamelCase(t[s].name),L=\"virtualAttrStyle\",q=\"undefined\"!=typeof a.virtualStyle?a.virtualStyle[z]:void 0,O=\" \";\"undefined\"==typeof a[L]&&(a[L]=\"''\",O=\"\"),\"undefined\"!=typeof q?(a[L]=\"'\"+t[s].name+\": '+(\"+q+\")+';\"+O+\"'+\"+a[L],delete a.virtualStyle[z]):a[L]=\"'\"+t[s].name+\": \"+converterUtils.addSlashes(j)+\";\"+O+\"'+\"+a[L]}}if(\"undefined\"!=typeof l&&null!==l){for(var T in a.virtualStyle)if(a.virtualStyle.hasOwnProperty(T))throw console.log(\"Unexpected virtualStyle binding after conversion to virtualAttr.style\",T,a.virtualStyle[T],e),\"Unexpected virtualStyle binding after conversion to virtualAttr.style for \"+T;delete a.virtualStyle;var B=domutils.getAttribute(l,\"data-bind\"),D=(null!==B?B+\", \":\"\")+_bindingSerializer(a);domutils.setAttribute(l,\"data-bind\",D)}if(\"undefined\"==typeof e){var H=!1;for(var I in a.virtualStyle)if(a.virtualStyle.hasOwnProperty(I)){H=!0;break}if(H){if(\"undefined\"!=typeof a.virtualAttrStyle){var R=a.virtualAttrStyle;delete a.virtualAttrStyle,a.virtualAttrStyle=R}}else delete a.virtualStyle;return _bindingSerializer(a)}return u},_bindingSerializer=function(e){var t=[];for(var r in e)e.hasOwnProperty(r)&&(\"object\"==typeof e[r]?t.push(r+\": \"+\"{ \"+_bindingSerializer(e[r])+\" }\"):t.push(r+\": \"+e[r]));return t.reverse().join(\", \")};module.exports=elaborateDeclarations;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./utils.js":"/Users/denea/mos/src/js/converter/utils.js","./domutils.js":"/Users/denea/mos/src/js/converter/domutils.js","./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js","./../../../bower_components/mensch/lib/parser.js":"/Users/denea/mos/bower_components/mensch/lib/parser.js"}},"/Users/denea/mos/src/js/undomanager/undoserializer.js":{"file":"/Users/denea/mos/src/js/undomanager/undoserializer.js","source":"(function (global){\n\"use strict\";var ko=(typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null),console=require(\"./../../../bower_components/console-browserify/index.js\"),_reference=function(e,n){for(var t,r,o=0,a=e;o<n.length;)switch(n.charAt(o)){case\"(\":\")\"==n.charAt(o+1)&&(a=a()),o+=2;break;case\"[\":r=n.indexOf(\"]\",o),a=a[n.substring(o+1,r)],o=r+1;break;case\".\":t=n.indexOf(\"(\",o),-1==t&&(t=n.length),r=n.indexOf(\"[\",o),-1==r&&(r=n.length),r=Math.min(t,r),a=a[n.substring(o+1,r)],o=r}return a},_getPath=function(e,n){for(var t,r=\"\",o=0;o<=e.length;o++)if(t=o<e.length?e[o]:n,ko.isObservable(t)&&(r+=\"()\"),\"undefined\"!=typeof t._fieldName)r+=\".\"+t._fieldName;else{if(!(o>0&&\"function\"==typeof e[o-1].pop))throw console.error(\"Unexpected parent with no _fieldName and no parent array\",o,e),\"Unexpected parent with no _fieldName and no parent array\";var a=ko.isObservable(e[o-1])?ko.utils.peekObservable(e[o-1]):e[o-1],i=ko.utils.arrayIndexOf(a,t);if(-1==i)throw\"Unexpected object not found in parent array\";r+=\"[\"+i+\"]\"}return r},makeDereferencedUndoAction=function(e,n,t,r,o){var a=_reference(n,t);e(a,r,o)},listener,_setListener=function(e){listener=e},makeUndoActionDereferenced=function(e,n,t,r,o,a){try{var i=_getPath(t,r);if((\"object\"==typeof o||\"function\"==typeof o)&&(o=ko.toJS(o)),\"undefined\"!=typeof a&&(\"object\"==typeof a.value||\"function\"==typeof a.value)){var c=ko.toJS(a);a=c}if(\"undefined\"!=typeof listener)try{listener(i,r,o,a)}catch(f){console.log(\"Undoserializer ignoring exception in listener callback\")}return makeDereferencedUndoAction.bind(void 0,n,e,i,o,a)}catch(f){console.error(\"Exception processing undo\",f,t,r,a)}},watchEnabled,_watchEnabled=function(e){return\"undefined\"==typeof e?watchEnabled:(watchEnabled=e,void 0)};module.exports={dereference:_getPath,reference:_reference,makeUndoAction:makeUndoActionDereferenced,setListener:_setListener,watchEnabled:_watchEnabled};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy91bmRvbWFuYWdlci91bmRvc2VyaWFsaXplci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsWUFDQSxJQUFJLElBQUssUUFBUSxZQUNiLFFBQVUsUUFBUSxXQUlsQixXQUFhLFNBQVMsRUFBTyxHQUkvQixJQUhBLEdBQ0ksR0FBSSxFQURKLEVBQUksRUFFSixFQUFJLEVBQ0QsRUFBSSxFQUFLLFFBQ2QsT0FBUSxFQUFLLE9BQU8sSUFDbEIsSUFBSyxJQUN1QixLQUF0QixFQUFLLE9BQU8sRUFBSSxLQUNsQixFQUFJLEtBSU4sR0FBSyxDQUNMLE1BQ0YsS0FBSyxJQUNILEVBQUssRUFBSyxRQUFRLElBQUssR0FDdkIsRUFBSSxFQUFFLEVBQUssVUFBVSxFQUFJLEVBQUcsSUFDNUIsRUFBSSxFQUFLLENBQ1QsTUFDRixLQUFLLElBQ0gsRUFBSyxFQUFLLFFBQVEsSUFBSyxHQUNiLElBQU4sSUFBVSxFQUFLLEVBQUssUUFDeEIsRUFBSyxFQUFLLFFBQVEsSUFBSyxHQUNiLElBQU4sSUFBVSxFQUFLLEVBQUssUUFDeEIsRUFBSyxLQUFLLElBQUksRUFBSSxHQUNsQixFQUFJLEVBQUUsRUFBSyxVQUFVLEVBQUksRUFBRyxJQUM1QixFQUFJLEVBTVYsTUFBTyxJQUdMLFNBQVcsU0FBUyxFQUFTLEdBRy9CLElBQUssR0FERCxHQURBLEVBQU8sR0FFRixFQUFJLEVBQUcsR0FBSyxFQUFRLE9BQVEsSUFHbkMsR0FGQSxFQUFJLEVBQUksRUFBUSxPQUFTLEVBQVEsR0FBSyxFQUNsQyxHQUFHLGFBQWEsS0FBSSxHQUFRLE1BQ0osbUJBQWpCLEdBQUUsV0FDWCxHQUFRLElBQU0sRUFBRSxlQUNYLENBQUEsS0FBSSxFQUFJLEdBQWtDLGtCQUF0QixHQUFRLEVBQUksR0FBRyxLQVl4QyxLQURBLFNBQVEsTUFBTSwyREFBNEQsRUFBRyxHQUN2RSwwREFYTixJQUFJLEdBQWMsR0FBRyxhQUFhLEVBQVEsRUFBSSxJQUFNLEdBQUcsTUFBTSxlQUFlLEVBQVEsRUFBSSxJQUFNLEVBQVEsRUFBSSxHQUN0RyxFQUFNLEdBQUcsTUFBTSxhQUFhLEVBQWEsRUFDN0MsSUFBVyxJQUFQLEVBS0YsS0FBTSw2Q0FKTixJQUFRLElBQU0sRUFBTSxJQVcxQixNQUFPLElBR0wsMkJBQTZCLFNBQVMsRUFBVSxFQUFPLEVBQU0sRUFBTyxHQUN0RSxHQUFJLEdBQVEsV0FBVyxFQUFPLEVBQzlCLEdBQVMsRUFBTyxFQUFPLElBR3JCLFNBRUEsYUFBZSxTQUFTLEdBQzFCLFNBQVcsR0FJVCwyQkFBNkIsU0FBUyxFQUFPLEVBQVUsRUFBUyxFQUFPLEVBQVEsR0FDakYsSUFDRSxHQUFJLEdBQU8sU0FBUyxFQUFTLEVBSTdCLEtBRHNCLGdCQUFYLElBQXlDLGtCQUFYLE1BQXVCLEVBQVMsR0FBRyxLQUFLLElBQzdELG1CQUFULEtBQStDLGdCQUFmLEdBQUssT0FBNEMsa0JBQWYsR0FBSyxPQUF1QixDQUN2RyxHQUFJLEdBQVUsR0FBRyxLQUFLLEVBQ3RCLEdBQU8sRUFHVCxHQUF3QixtQkFBYixVQUNULElBQ0UsU0FBUyxFQUFNLEVBQU8sRUFBUSxHQUM5QixNQUFPLEdBQ1AsUUFBUSxJQUFJLDBEQUloQixNQUFPLDRCQUEyQixLQUFLLE9BQVcsRUFBVSxFQUFPLEVBQU0sRUFBUSxHQUNqRixNQUFPLEdBRVAsUUFBUSxNQUFNLDRCQUE2QixFQUFHLEVBQVMsRUFBTyxLQUk5RCxhQUNBLGNBQWdCLFNBQVMsR0FDM0IsTUFBc0IsbUJBQVgsR0FHRixjQUZQLGFBQWUsRUFBZixRQUtKLFFBQU8sU0FDTCxZQUFhLFNBQ2IsVUFBVyxXQUNYLGVBQWdCLDJCQUNoQixZQUFhLGFBQ2IsYUFBYyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIga28gPSByZXF1aXJlKFwia25vY2tvdXRcIik7XG52YXIgY29uc29sZSA9IHJlcXVpcmUoXCJjb25zb2xlXCIpO1xuLy8gVGhpcyBtb2R1bGUgZGVhbHMgd2l0aCBzZXJpYWxpemF0aW9uL2Rlc2VyaWFsaXphdGlvbiBvZiBhIFwidHJlZS1wYXRoXCIgcmVwcmVzZW50aW5nIHRoZSBwYXRoIHRvIHJlYWNoIHRoZSBnaXZlbiBsZWFmLlxuLy8gSW4gb3JkZXIgdG8gYmUgY29ycmVjdGx5IHNlcmlhbGl6ZWQgd2UgaGF2ZSB0byBtb3ZlIGZyb20gXCJyZWZlcmVuY2VcIiB0byBcInN0cmluZ1wiIGFuZCB2aWNldmVyc2EuXG5cbnZhciBfcmVmZXJlbmNlID0gZnVuY3Rpb24obW9kZWwsIHBhdGgpIHtcbiAgdmFyIHAgPSAwO1xuICB2YXIgcDEsIHAyO1xuICB2YXIgbSA9IG1vZGVsO1xuICB3aGlsZSAocCA8IHBhdGgubGVuZ3RoKSB7XG4gICAgc3dpdGNoIChwYXRoLmNoYXJBdChwKSkge1xuICAgICAgY2FzZSAnKCc6XG4gICAgICAgIGlmIChwYXRoLmNoYXJBdChwICsgMSkgPT0gJyknKSB7XG4gICAgICAgICAgbSA9IG0oKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBUT0RPIGVycm9yXG4gICAgICAgIH1cbiAgICAgICAgcCArPSAyO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ1snOlxuICAgICAgICBwMiA9IHBhdGguaW5kZXhPZignXScsIHApO1xuICAgICAgICBtID0gbVtwYXRoLnN1YnN0cmluZyhwICsgMSwgcDIpXTtcbiAgICAgICAgcCA9IHAyICsgMTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICcuJzpcbiAgICAgICAgcDEgPSBwYXRoLmluZGV4T2YoJygnLCBwKTtcbiAgICAgICAgaWYgKHAxID09IC0xKSBwMSA9IHBhdGgubGVuZ3RoO1xuICAgICAgICBwMiA9IHBhdGguaW5kZXhPZignWycsIHApO1xuICAgICAgICBpZiAocDIgPT0gLTEpIHAyID0gcGF0aC5sZW5ndGg7XG4gICAgICAgIHAyID0gTWF0aC5taW4ocDEsIHAyKTtcbiAgICAgICAgbSA9IG1bcGF0aC5zdWJzdHJpbmcocCArIDEsIHAyKV07XG4gICAgICAgIHAgPSBwMjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICAvLyBUT0RPIGVycm9yXG4gICAgfVxuICB9XG4gIHJldHVybiBtO1xufTtcblxudmFyIF9nZXRQYXRoID0gZnVuY3Rpb24ocGFyZW50cywgY2hpbGQpIHtcbiAgdmFyIHBhdGggPSBcIlwiO1xuICB2YXIgcDtcbiAgZm9yICh2YXIgayA9IDA7IGsgPD0gcGFyZW50cy5sZW5ndGg7IGsrKykge1xuICAgIHAgPSBrIDwgcGFyZW50cy5sZW5ndGggPyBwYXJlbnRzW2tdIDogY2hpbGQ7XG4gICAgaWYgKGtvLmlzT2JzZXJ2YWJsZShwKSkgcGF0aCArPSAnKCknO1xuICAgIGlmICh0eXBlb2YgcC5fZmllbGROYW1lICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgcGF0aCArPSBcIi5cIiArIHAuX2ZpZWxkTmFtZTtcbiAgICB9IGVsc2UgaWYgKGsgPiAwICYmIHR5cGVvZiBwYXJlbnRzW2sgLSAxXS5wb3AgPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdmFyIHBhcmVudEFycmF5ID0ga28uaXNPYnNlcnZhYmxlKHBhcmVudHNbayAtIDFdKSA/IGtvLnV0aWxzLnBlZWtPYnNlcnZhYmxlKHBhcmVudHNbayAtIDFdKSA6IHBhcmVudHNbayAtIDFdO1xuICAgICAgdmFyIHBvcyA9IGtvLnV0aWxzLmFycmF5SW5kZXhPZihwYXJlbnRBcnJheSwgcCk7XG4gICAgICBpZiAocG9zICE9IC0xKSB7XG4gICAgICAgIHBhdGggKz0gXCJbXCIgKyBwb3MgKyBcIl1cIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE5PVEUgdGhpcyBoYXBwZW4sIHNvbWV0aW1lcyB3aGVuIFRpbnlNQ0Ugc2VuZHMgdXBkYXRlcyBmb3Igb2JqZWN0cyBhbHJlYWR5IHJlbW92ZWQuXG4gICAgICAgIC8vIGNvbnNvbGUuZXJyb3IoXCJVbmV4cGVjdGVkIG9iamVjdCBub3QgZm91bmQgaW4gcGFyZW50IGFycmF5XCIsIHBhcmVudEFycmF5LCBwLCBrLCBwYXJlbnRzLmxlbmd0aCwga28udG9KUyhwYXJlbnRBcnJheSksIGtvLnV0aWxzLnVud3JhcE9ic2VydmFibGUocCkpO1xuICAgICAgICB0aHJvdyBcIlVuZXhwZWN0ZWQgb2JqZWN0IG5vdCBmb3VuZCBpbiBwYXJlbnQgYXJyYXlcIjtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihcIlVuZXhwZWN0ZWQgcGFyZW50IHdpdGggbm8gX2ZpZWxkTmFtZSBhbmQgbm8gcGFyZW50IGFycmF5XCIsIGssIHBhcmVudHMpO1xuICAgICAgdGhyb3cgXCJVbmV4cGVjdGVkIHBhcmVudCB3aXRoIG5vIF9maWVsZE5hbWUgYW5kIG5vIHBhcmVudCBhcnJheVwiO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcGF0aDtcbn07XG5cbnZhciBtYWtlRGVyZWZlcmVuY2VkVW5kb0FjdGlvbiA9IGZ1bmN0aW9uKHVuZG9GdW5jLCBtb2RlbCwgcGF0aCwgdmFsdWUsIGl0ZW0pIHtcbiAgdmFyIGNoaWxkID0gX3JlZmVyZW5jZShtb2RlbCwgcGF0aCk7XG4gIHVuZG9GdW5jKGNoaWxkLCB2YWx1ZSwgaXRlbSk7XG59O1xuXG52YXIgbGlzdGVuZXI7XG5cbnZhciBfc2V0TGlzdGVuZXIgPSBmdW5jdGlvbihsaXN0ZW5mdW5jKSB7XG4gIGxpc3RlbmVyID0gbGlzdGVuZnVuYztcbn07XG5cbi8qIGRlcmVmZXJlbmNpbmcgcGF0aCBhbmQgY2hhbmdpbmcgdmFsdWUgd2l0aCBcInRvSlNcIiAqL1xudmFyIG1ha2VVbmRvQWN0aW9uRGVyZWZlcmVuY2VkID0gZnVuY3Rpb24obW9kZWwsIHVuZG9GdW5jLCBwYXJlbnRzLCBjaGlsZCwgb2xkVmFsLCBpdGVtKSB7XG4gIHRyeSB7XG4gICAgdmFyIHBhdGggPSBfZ2V0UGF0aChwYXJlbnRzLCBjaGlsZCk7XG5cbiAgICAvLyBUcmFuc2Zvcm0gYWN0aW9ucyBpbiBzaW1wbGUgSlMgb2JqZWN0cy5cbiAgICBpZiAodHlwZW9mIG9sZFZhbCA9PT0gJ29iamVjdCcgfHwgdHlwZW9mIG9sZFZhbCA9PT0gJ2Z1bmN0aW9uJykgb2xkVmFsID0ga28udG9KUyhvbGRWYWwpO1xuICAgIGlmICh0eXBlb2YgaXRlbSAhPT0gJ3VuZGVmaW5lZCcgJiYgKHR5cGVvZiBpdGVtLnZhbHVlID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgaXRlbS52YWx1ZSA9PT0gJ2Z1bmN0aW9uJykpIHtcbiAgICAgIHZhciBuZXdJdGVtID0ga28udG9KUyhpdGVtKTtcbiAgICAgIGl0ZW0gPSBuZXdJdGVtO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgbGlzdGVuZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0cnkge1xuICAgICAgICBsaXN0ZW5lcihwYXRoLCBjaGlsZCwgb2xkVmFsLCBpdGVtKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJVbmRvc2VyaWFsaXplciBpZ25vcmluZyBleGNlcHRpb24gaW4gbGlzdGVuZXIgY2FsbGJhY2tcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG1ha2VEZXJlZmVyZW5jZWRVbmRvQWN0aW9uLmJpbmQodW5kZWZpbmVkLCB1bmRvRnVuYywgbW9kZWwsIHBhdGgsIG9sZFZhbCwgaXRlbSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBOT1RFIHRoaXMgaGFwcGVucywgZnJvbSB0aW1lIHRvIHRpbWUsIHdoZW4gVGlueU1DRSBzZW5kcyB1cGRhdGVzIGZvciBkZWxldGVkIGNvbnRlbnQuXG4gICAgY29uc29sZS5lcnJvcihcIkV4Y2VwdGlvbiBwcm9jZXNzaW5nIHVuZG9cIiwgZSwgcGFyZW50cywgY2hpbGQsIGl0ZW0pO1xuICB9XG59O1xuXG52YXIgd2F0Y2hFbmFibGVkO1xudmFyIF93YXRjaEVuYWJsZWQgPSBmdW5jdGlvbihuZXdWYWwpIHtcbiAgaWYgKHR5cGVvZiBuZXdWYWwgIT09ICd1bmRlZmluZWQnKVxuICAgIHdhdGNoRW5hYmxlZCA9IG5ld1ZhbDtcbiAgZWxzZVxuICAgIHJldHVybiB3YXRjaEVuYWJsZWQ7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZGVyZWZlcmVuY2U6IF9nZXRQYXRoLFxuICByZWZlcmVuY2U6IF9yZWZlcmVuY2UsXG4gIG1ha2VVbmRvQWN0aW9uOiBtYWtlVW5kb0FjdGlvbkRlcmVmZXJlbmNlZCxcbiAgc2V0TGlzdGVuZXI6IF9zZXRMaXN0ZW5lcixcbiAgd2F0Y2hFbmFibGVkOiBfd2F0Y2hFbmFibGVkXG59OyJdfQ==","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/timed-call.js":{"file":"/Users/denea/mos/src/js/timed-call.js","source":"\"use strict\";var console=require(\"./../../bower_components/console-browserify/index.js\"),_call=function(e){return e()},logs=[],_timedCall=function(e,o){var l,t=(new Date).getTime();\"object\"==typeof console&&console.time&&console.time(e),l=_call(o),\"object\"==typeof console&&console.time&&console.timeEnd(e);var n=(new Date).getTime()-t;return\"object\"!=typeof console||console.time||console.log(e,\"took\",n,\"ms\"),logs.push({name:e,time:n}),logs.length>100&&logs.unshift(),l};module.exports={timedCall:_timedCall,logs:logs};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpbWVkLWNhbGwuanMiXSwibmFtZXMiOlsiY29uc29sZSIsInJlcXVpcmUiLCJfY2FsbCIsIndoYXRUb0NhbGwiLCJsb2dzIiwiX3RpbWVkQ2FsbCIsIm5hbWUiLCJyZXMiLCJzdGFydCIsIkRhdGUiLCJnZXRUaW1lIiwidGltZSIsInRpbWVFbmQiLCJkaWZmIiwibG9nIiwicHVzaCIsImxlbmd0aCIsInVuc2hpZnQiLCJtb2R1bGUiLCJleHBvcnRzIiwidGltZWRDYWxsIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUVBLElBQUlBLFNBQVVDLFFBQVEsV0FFbEJDLE1BQVEsU0FBU0MsR0FDbkIsTUFBT0EsTUFHTEMsUUFFQUMsV0FBYSxTQUFTQyxFQUFNSCxHQUM5QixHQUFJSSxHQUNBQyxHQUFRLEdBQUlDLE9BQU9DLFNBQ0QsaUJBQVhWLFVBQXVCQSxRQUFRVyxNQUFNWCxRQUFRVyxLQUFLTCxHQUM3REMsRUFBTUwsTUFBTUMsR0FDVSxnQkFBWEgsVUFBdUJBLFFBQVFXLE1BQU1YLFFBQVFZLFFBQVFOLEVBQ2hFLElBQUlPLElBQU8sR0FBSUosT0FBT0MsVUFBWUYsQ0FRbEMsT0FQc0IsZ0JBQVhSLFVBQXdCQSxRQUFRVyxNQUFNWCxRQUFRYyxJQUFJUixFQUFNLE9BQVFPLEVBQU0sTUFDakZULEtBQUtXLE1BQ0hULEtBQU1BLEVBQ05LLEtBQU1FLElBR0pULEtBQUtZLE9BQVMsS0FBS1osS0FBS2EsVUFDckJWLEVBR1RXLFFBQU9DLFNBQ0xDLFVBQVdmLFdBQ1hELEtBQU1BIiwiZmlsZSI6Im91dC5qcy5tYXAiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGNvbnNvbGUgPSByZXF1aXJlKFwiY29uc29sZVwiKTtcblxudmFyIF9jYWxsID0gZnVuY3Rpb24od2hhdFRvQ2FsbCkge1xuICByZXR1cm4gd2hhdFRvQ2FsbCgpO1xufTtcblxudmFyIGxvZ3MgPSBbXTtcblxudmFyIF90aW1lZENhbGwgPSBmdW5jdGlvbihuYW1lLCB3aGF0VG9DYWxsKSB7XG4gIHZhciByZXM7XG4gIHZhciBzdGFydCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICBpZiAodHlwZW9mIGNvbnNvbGUgPT0gJ29iamVjdCcgJiYgY29uc29sZS50aW1lKSBjb25zb2xlLnRpbWUobmFtZSk7XG4gIHJlcyA9IF9jYWxsKHdoYXRUb0NhbGwpO1xuICBpZiAodHlwZW9mIGNvbnNvbGUgPT0gJ29iamVjdCcgJiYgY29uc29sZS50aW1lKSBjb25zb2xlLnRpbWVFbmQobmFtZSk7XG4gIHZhciBkaWZmID0gbmV3IERhdGUoKS5nZXRUaW1lKCkgLSBzdGFydDtcbiAgaWYgKHR5cGVvZiBjb25zb2xlID09ICdvYmplY3QnICYmICFjb25zb2xlLnRpbWUpIGNvbnNvbGUubG9nKG5hbWUsIFwidG9va1wiLCBkaWZmLCBcIm1zXCIpO1xuICBsb2dzLnB1c2goe1xuICAgIG5hbWU6IG5hbWUsXG4gICAgdGltZTogZGlmZlxuICB9KTtcbiAgLy8gbWF4IGxvZ3NcbiAgaWYgKGxvZ3MubGVuZ3RoID4gMTAwKSBsb2dzLnVuc2hpZnQoKTtcbiAgcmV0dXJuIHJlcztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICB0aW1lZENhbGw6IF90aW1lZENhbGwsXG4gIGxvZ3M6IGxvZ3Ncbn07Il19","deps":{"./../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/view-list/view-list.ko.extensions.js":{"file":"/Users/denea/mos/src/js/view-list/view-list.ko.extensions.js","source":"ko.bindingHandlers.anyKeyPress={init:function(e,t,o,a){var i=o();e.addEventListener(\"keyup\",function(){return i.anyKeyPress.call(a),!1})}},ko.bindingHandlers.enterPress={init:function(e,t,o,a){var i=o();e.addEventListener(\"keydown\",function(e){var t=e.which?e.which:e.keyCode;return 13===t?(i.enterPress.call(a),!1):!0})}},ko.bindingHandlers.escPress={init:function(e,t,o,a){var i=o();e.addEventListener(\"keydown\",function(e){var t=e.which?e.which:e.keyCode;return 27===t?(i.escPress.call(a),!1):!0})}},ko.extenders.required=function(e){function t(t){e.hasError(t?!1:!0)}return e.hasError=ko.observable(),t(e()),e.subscribe(t),e};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZXctbGlzdC5rby5leHRlbnNpb25zLmpzIl0sIm5hbWVzIjpbImtvIiwiYmluZGluZ0hhbmRsZXJzIiwiYW55S2V5UHJlc3MiLCJpbml0IiwiZWxlbWVudCIsInZhbHVlQWNjZXNzb3IiLCJhbGxCaW5kaW5nc0FjY2Vzc29yIiwidmlld01vZGVsIiwiYWxsQmluZGluZ3MiLCJhZGRFdmVudExpc3RlbmVyIiwiY2FsbCIsImVudGVyUHJlc3MiLCJldmVudCIsImtleUNvZGUiLCJ3aGljaCIsImVzY1ByZXNzIiwiZXh0ZW5kZXJzIiwicmVxdWlyZWQiLCJ0YXJnZXQiLCJ2YWxpZGF0ZSIsIm5ld1ZhbHVlIiwiaGFzRXJyb3IiLCJvYnNlcnZhYmxlIiwic3Vic2NyaWJlIl0sIm1hcHBpbmdzIjoiQUFHQUEsR0FBR0MsZ0JBQWdCQyxhQUNmQyxLQUFNLFNBQVVDLEVBQVNDLEVBQWVDLEVBQXFCQyxHQUN6RCxHQUFJQyxHQUFjRixHQUNsQkYsR0FBUUssaUJBQWlCLFFBQVMsV0FFOUIsTUFEQUQsR0FBWU4sWUFBWVEsS0FBS0gsSUFDdEIsTUFRbkJQLEdBQUdDLGdCQUFnQlUsWUFDZlIsS0FBTSxTQUFVQyxFQUFTQyxFQUFlQyxFQUFxQkMsR0FDekQsR0FBSUMsR0FBY0YsR0FDbEJGLEdBQVFLLGlCQUFpQixVQUFXLFNBQVVHLEdBQzFDLEdBQUlDLEdBQVdELEVBQU1FLE1BQVFGLEVBQU1FLE1BQVFGLEVBQU1DLE9BQ2pELE9BQWdCLE1BQVpBLEdBQ0FMLEVBQVlHLFdBQVdELEtBQUtILElBQ3JCLElBRUosTUFRbkJQLEdBQUdDLGdCQUFnQmMsVUFDZlosS0FBTSxTQUFVQyxFQUFTQyxFQUFlQyxFQUFxQkMsR0FDekQsR0FBSUMsR0FBY0YsR0FDbEJGLEdBQVFLLGlCQUFpQixVQUFXLFNBQVVHLEdBQzFDLEdBQUlDLEdBQVdELEVBQU1FLE1BQVFGLEVBQU1FLE1BQVFGLEVBQU1DLE9BQ2pELE9BQWdCLE1BQVpBLEdBQ0FMLEVBQVlPLFNBQVNMLEtBQUtILElBQ25CLElBRUosTUFRbkJQLEdBQUdnQixVQUFVQyxTQUFXLFNBQVVDLEdBSzlCLFFBQVNDLEdBQVNDLEdBQ2RGLEVBQU9HLFNBQVNELEdBQVcsR0FBUSxHQVV2QyxNQWRBRixHQUFPRyxTQUFXckIsR0FBR3NCLGFBUXJCSCxFQUFTRCxLQUdUQSxFQUFPSyxVQUFVSixHQUdWRCIsImZpbGUiOiJvdXQuanMubWFwIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4qIEN1c3RvbSBLbm9ja091dCBoYW5kbGVyOiBoYW5kbGVzIGtleSBwcmVzcyBldmVudCwgd2hlbiB1c2VyIHByZXNzZXMgRW50ZXIga2V5XG4qL1xua28uYmluZGluZ0hhbmRsZXJzLmFueUtleVByZXNzID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uIChlbGVtZW50LCB2YWx1ZUFjY2Vzc29yLCBhbGxCaW5kaW5nc0FjY2Vzc29yLCB2aWV3TW9kZWwpIHtcbiAgICAgICAgdmFyIGFsbEJpbmRpbmdzID0gYWxsQmluZGluZ3NBY2Nlc3NvcigpO1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICBhbGxCaW5kaW5ncy5hbnlLZXlQcmVzcy5jYWxsKHZpZXdNb2RlbCk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cbi8qKlxuKiBDdXN0b20gS25vY2tPdXQgaGFuZGxlcjogaGFuZGxlcyBrZXkgcHJlc3MgZXZlbnQsIHdoZW4gdXNlciBwcmVzc2VzIEVudGVyIGtleVxuKi9cbmtvLmJpbmRpbmdIYW5kbGVycy5lbnRlclByZXNzID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uIChlbGVtZW50LCB2YWx1ZUFjY2Vzc29yLCBhbGxCaW5kaW5nc0FjY2Vzc29yLCB2aWV3TW9kZWwpIHtcbiAgICAgICAgdmFyIGFsbEJpbmRpbmdzID0gYWxsQmluZGluZ3NBY2Nlc3NvcigpO1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBrZXlDb2RlID0gKGV2ZW50LndoaWNoID8gZXZlbnQud2hpY2ggOiBldmVudC5rZXlDb2RlKTtcbiAgICAgICAgICAgIGlmIChrZXlDb2RlID09PSAxMykge1xuICAgICAgICAgICAgICAgIGFsbEJpbmRpbmdzLmVudGVyUHJlc3MuY2FsbCh2aWV3TW9kZWwpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG4vKipcbiogQ3VzdG9tIEtub2NrT3V0IGhhbmRsZXI6IGhhbmRsZXMga2V5IHByZXNzIGV2ZW50LCB3aGVuIHVzZXIgcHJlc3NlcyBFc2NhcGUga2V5XG4qL1xua28uYmluZGluZ0hhbmRsZXJzLmVzY1ByZXNzID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uIChlbGVtZW50LCB2YWx1ZUFjY2Vzc29yLCBhbGxCaW5kaW5nc0FjY2Vzc29yLCB2aWV3TW9kZWwpIHtcbiAgICAgICAgdmFyIGFsbEJpbmRpbmdzID0gYWxsQmluZGluZ3NBY2Nlc3NvcigpO1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBrZXlDb2RlID0gKGV2ZW50LndoaWNoID8gZXZlbnQud2hpY2ggOiBldmVudC5rZXlDb2RlKTtcbiAgICAgICAgICAgIGlmIChrZXlDb2RlID09PSAyNykge1xuICAgICAgICAgICAgICAgIGFsbEJpbmRpbmdzLmVzY1ByZXNzLmNhbGwodmlld01vZGVsKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuLyoqXG4qIEN1c3RvbSBrbm9ja291dCBleHRlbmRlcjogcmVxdWlyZWQgZmllbGQgdmFsaWRhdGlvblxuKi9cbmtvLmV4dGVuZGVycy5yZXF1aXJlZCA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICAvLyBhZGQgc29tZSBzdWItb2JzZXJ2YWJsZXMgdG8gb3VyIG9ic2VydmFibGVcbiAgICB0YXJnZXQuaGFzRXJyb3IgPSBrby5vYnNlcnZhYmxlKCk7XG5cbiAgICAvLyBkZWZpbmUgYSBmdW5jdGlvbiB0byBkbyB2YWxpZGF0aW9uXG4gICAgZnVuY3Rpb24gdmFsaWRhdGUobmV3VmFsdWUpIHtcbiAgICAgICAgdGFyZ2V0Lmhhc0Vycm9yKG5ld1ZhbHVlID8gZmFsc2UgOiB0cnVlKTtcbiAgICB9XG5cbiAgICAvLyBpbml0aWFsIHZhbGlkYXRpb25cbiAgICB2YWxpZGF0ZSh0YXJnZXQoKSk7XG5cbiAgICAvLyB2YWxpZGF0ZSB3aGVuZXZlciB0aGUgdmFsdWUgY2hhbmdlc1xuICAgIHRhcmdldC5zdWJzY3JpYmUodmFsaWRhdGUpO1xuXG4gICAgLy8gcmV0dXJuIHRoZSBvcmlnaW5hbCBvYnNlcnZhYmxlXG4gICAgcmV0dXJuIHRhcmdldDtcbn07Il19","deps":{}},"/Users/denea/mos/src/js/view-list/index.js":{"file":"/Users/denea/mos/src/js/view-list/index.js","source":"\"use strict\";\n\nrequire(\"./view-list.ko.extensions.js\");\nrequire(\"./view-list.listViewModel.js\");\nrequire(\"./view-list.itemViewModel.js\");\nrequire(\"./view-list.js\");","deps":{"./view-list.ko.extensions.js":"/Users/denea/mos/src/js/view-list/view-list.ko.extensions.js","./view-list.itemViewModel.js":"/Users/denea/mos/src/js/view-list/view-list.itemViewModel.js","./view-list.listViewModel.js":"/Users/denea/mos/src/js/view-list/view-list.listViewModel.js","./view-list.js":"/Users/denea/mos/src/js/view-list/view-list.js"}},"/Users/denea/mos/src/js/view-list/view-list.itemViewModel.js":{"file":"/Users/denea/mos/src/js/view-list/view-list.itemViewModel.js","source":"(function (global){\n'use strict';\n\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar console = require(\"./../../../bower_components/console-browserify/index.js\");\nvar confirm;\nvar deleteChecked;\n\n/**\n* Item view model\n*/\nvar toDelete = [];\n\nfunction ItemViewModel(parent, isFolder, id, title, date, folderId) {\n    var self = this;\n\n    // Observable properties\n    self.id = ko.observable();\n    self.extension = ko.observable();\n    self.isActive = ko.observable(false);\n\n    // Create title\n    self.title = ko.observable().extend({ required: true });\n\n    // Creaet date\n    self.date = ko.observable().extend({ required: true });\n\n    // Properties, that never changes dinamically, can be created non-observable\n    self.parent = parent;\n    self.folderId = '';\n    self.isFolder = isFolder;\n\n    // Temporary properties for keeping old values, when editing row\n    self.oldTitle = null;\n\n    // Subscribe to title value change events\n    self.title.subscribe(function () {\n        if (!self.isActive()) {\n            self.oldTitle = self.title();\n        }\n    });\n\n    /**\n    * Set current date\n    */\n    var d = new Date();\n\n    var month = d.getMonth()+1;\n    var day = d.getDate();\n\n    var currentDate = d.getFullYear() + '/' +\n    ((''+month).length<2 ? '0' : '') + month + '/' +\n    ((''+day).length<2 ? '0' : '') + day;\n\n    /**\n    * Computed KnockOut function, returns class name for row, depending on item type and active status\n    */\n    self.rowClassNames = ko.computed(function () {\n        var classes;\n        if (self.isFolder) {\n            classes = 'exp-item folder-box';\n            if (self.isActive()) {\n                classes += ' folder-box-active';\n            }\n        } else {\n            classes = 'exp-item file-box';\n            if (self.isActive()) {\n                classes += ' file-box-active';\n            }\n        }\n\n        return classes;\n    });\n\n    /**\n    * Computed KnockOut function, returns class name for div, which displays file's or folders icon\n    */\n    self.iconClassNames = ko.computed(function () {\n        var classes;\n\n        if (self.isFolder) {\n            classes = 'system-folder';\n        } else {\n            classes = 'system-file';\n        }\n\n        return classes;\n    });\n\n    /** \n    * Saves an item\n    */\n    self.saveItem = function () {\n        if (self.title.hasError()) {\n            return;\n        }\n\n        // Add item to all items list and set new id\n        if (!self.id()) {\n            self.parent.allItems.push(self);\n            self.id(self.parent.getNewId());\n        }\n\n        \n\n        self.isActive(false);\n\n        // Setting old values\n        self.date(currentDate);\n        self.oldTitle = self.title();\n    };\n\n    /**\n    * Deletes an item\n    */\n    self.deleteItem = function (parentViewModel) {\n        // Saves or cancels all edits\n        self.parent.saveOrCancelAllEdits();\n        var deletingItem = this;\n        \n        if (confirm(\"Are you sure you want to delete this item?\")) {\n            parentViewModel.items.remove(deletingItem);\n            parentViewModel.allItems.remove(deletingItem);\n            \n        }\n    };\n\n    /**\n    * Check items to delete\n    */\n    self.checkItem = function (parentViewModel, event) {\n        var index = parentViewModel.allItems().indexOf(this);\n        var indexID = parentViewModel.allItems()[index].id();\n\n        for(var i = 0; i < parentViewModel.allItems().length; i++) {\n            if(parentViewModel.allItems()[i].id() == indexID) {\n                if(toDelete.indexOf(indexID) < 0){\n                    toDelete.push(indexID);\n                } else {\n                    //toDelete = toDelete.filter(e => e !== indexID);\n                }\n            }\n        }\n    };\n\n    /**\n    * Delete checked items\n    */\n    deleteChecked = function (parentViewModel) {\n        if (confirm(\"Are you sure you want to delete these items?\")) {\n            for(var i = 0; i < toDelete.length; i++) {\n                for(var j = 0; j < parentViewModel.allItems().length; j++){\n                    if(parentViewModel.allItems()[j].id() == toDelete[i]){\n                        var deletingItem = parentViewModel.allItems()[j];\n                        parentViewModel.items.remove(deletingItem);\n                        parentViewModel.allItems.remove(deletingItem);\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n    * Starts inline editing of an item\n    */\n    self.editItem = function () {\n        // Saves or cancels all edits\n        self.parent.saveOrCancelAllEdits();\n\n        self.isActive(true);\n    };\n\n    /*\n    * Opens item, depending on it's type\n    */\n    self.openItem = function () {\n        if (self.isFolder) {\n            self.parent.changeFolder(self.id());\n        } else {\n            //self.editItem();\n        }\n    };\n\n    /**\n    * Cancels inline editing of an item\n    */\n    self.cancelEditItem = function () {\n        if (!self.id()) {\n            // If item was new, remove it from grid\n            self.parent.items.remove(self);\n        } else {\n            // Restore old values\n            self.title(self.oldTitle);\n\n            self.isActive(false);\n        }\n    };\n\n    /**\n    * Saves an item or cancels edit mode, depending on title.hasError()\n    */\n    self.saveOrCancelEdit = function() {\n        if (self.isActive()) {\n            if (self.title.hasError()) {\n                self.cancelEditItem();\n            } else {\n                self.saveItem();\n            }\n        }\n    };\n\n    // Set properties with chain syntax\n    self.id(id).title(title).date(date);\n    self.folderId = folderId;}\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/view-list/view-list.ItemViewModel.js":{"file":"/Users/denea/mos/src/js/view-list/view-list.ItemViewModel.js","source":"(function (global){\n'use strict';\n\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar console = require(\"./../../../bower_components/console-browserify/index.js\");\nvar confirm;\nvar deleteChecked;\n\n/**\n* Item view model\n*/\nvar toDelete = [];\n\nfunction ItemViewModel(parent, isFolder, id, title, date, folderId) {\n    var self = this;\n\n    // Observable properties\n    self.id = ko.observable();\n    self.extension = ko.observable();\n    self.isActive = ko.observable(false);\n\n    // Create title\n    self.title = ko.observable().extend({ required: true });\n\n    // Creaet date\n    self.date = ko.observable().extend({ required: true });\n\n    // Properties, that never changes dinamically, can be created non-observable\n    self.parent = parent;\n    self.folderId = '';\n    self.isFolder = isFolder;\n\n    // Temporary properties for keeping old values, when editing row\n    self.oldTitle = null;\n\n    // Subscribe to title value change events\n    self.title.subscribe(function () {\n        if (!self.isActive()) {\n            self.oldTitle = self.title();\n        }\n    });\n\n    /**\n    * Set current date\n    */\n    var d = new Date();\n\n    var month = d.getMonth()+1;\n    var day = d.getDate();\n\n    var currentDate = d.getFullYear() + '/' +\n    ((''+month).length<2 ? '0' : '') + month + '/' +\n    ((''+day).length<2 ? '0' : '') + day;\n\n    /**\n    * Computed KnockOut function, returns class name for row, depending on item type and active status\n    */\n    self.rowClassNames = ko.computed(function () {\n        var classes;\n        if (self.isFolder) {\n            classes = 'exp-item folder-box';\n            if (self.isActive()) {\n                classes += ' folder-box-active';\n            }\n        } else {\n            classes = 'exp-item file-box';\n            if (self.isActive()) {\n                classes += ' file-box-active';\n            }\n        }\n\n        return classes;\n    });\n\n    /**\n    * Computed KnockOut function, returns class name for div, which displays file's or folders icon\n    */\n    self.iconClassNames = ko.computed(function () {\n        var classes;\n\n        if (self.isFolder) {\n            classes = 'system-folder';\n        } else {\n            classes = 'system-file';\n        }\n\n        return classes;\n    });\n\n    /** \n    * Saves an item\n    */\n    self.saveItem = function () {\n        if (self.title.hasError()) {\n            return;\n        }\n\n        // Add item to all items list and set new id\n        if (!self.id()) {\n            self.parent.allItems.push(self);\n            self.id(self.parent.getNewId());\n        }\n\n        \n\n        self.isActive(false);\n\n        // Setting old values\n        self.date(currentDate);\n        self.oldTitle = self.title();\n    };\n\n    /**\n    * Deletes an item\n    */\n    self.deleteItem = function (parentViewModel) {\n        // Saves or cancels all edits\n        self.parent.saveOrCancelAllEdits();\n        var deletingItem = this;\n        \n        if (confirm(\"Are you sure you want to delete this item?\")) {\n            parentViewModel.items.remove(deletingItem);\n            parentViewModel.allItems.remove(deletingItem);\n            \n        }\n    };\n\n    /**\n    * Check items to delete\n    */\n    self.checkItem = function (parentViewModel, event) {\n        var index = parentViewModel.allItems().indexOf(this);\n        var indexID = parentViewModel.allItems()[index].id();\n\n        for(var i = 0; i < parentViewModel.allItems().length; i++) {\n            if(parentViewModel.allItems()[i].id() == indexID) {\n                if(toDelete.indexOf(indexID) < 0){\n                    toDelete.push(indexID);\n                } else {\n                    //toDelete = toDelete.filter(e => e !== indexID);\n                }\n            }\n        }\n    };\n\n    /**\n    * Delete checked items\n    */\n    deleteChecked = function (parentViewModel) {\n        if (confirm(\"Are you sure you want to delete these items?\")) {\n            for(var i = 0; i < toDelete.length; i++) {\n                for(var j = 0; j < parentViewModel.allItems().length; j++){\n                    if(parentViewModel.allItems()[j].id() == toDelete[i]){\n                        var deletingItem = parentViewModel.allItems()[j];\n                        parentViewModel.items.remove(deletingItem);\n                        parentViewModel.allItems.remove(deletingItem);\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n    * Starts inline editing of an item\n    */\n    self.editItem = function () {\n        // Saves or cancels all edits\n        self.parent.saveOrCancelAllEdits();\n\n        self.isActive(true);\n    };\n\n    /*\n    * Opens item, depending on it's type\n    */\n    self.openItem = function () {\n        if (self.isFolder) {\n            self.parent.changeFolder(self.id());\n        } else {\n            //self.editItem();\n        }\n    };\n\n    /**\n    * Cancels inline editing of an item\n    */\n    self.cancelEditItem = function () {\n        if (!self.id()) {\n            // If item was new, remove it from grid\n            self.parent.items.remove(self);\n        } else {\n            // Restore old values\n            self.title(self.oldTitle);\n\n            self.isActive(false);\n        }\n    };\n\n    /**\n    * Saves an item or cancels edit mode, depending on title.hasError()\n    */\n    self.saveOrCancelEdit = function() {\n        if (self.isActive()) {\n            if (self.title.hasError()) {\n                self.cancelEditItem();\n            } else {\n                self.saveItem();\n            }\n        }\n    };\n\n    // Set properties with chain syntax\n    self.id(id).title(title).date(date);\n    self.folderId = folderId;}\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/view-list/view-list.listViewModel.js":{"file":"/Users/denea/mos/src/js/view-list/view-list.listViewModel.js","source":"(function (global){\n'use strict';\n\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar console = require(\"./../../../bower_components/console-browserify/index.js\");\nvar ItemViewModel;\n\n\n// Enumerators\nvar directions = {\n    ascending: 1,\n    descending: 2\n},\n    defaultDirection = directions.ascending,\n    defaultSortColumn = 'Title';\n\n/**\n* Items list view model\n*/\nfunction ListViewModel() {\n    var self = this;\n\n    // Create observable array for items\n    self.allItems = ko.observableArray();\n    self.items = ko.observableArray();\n    self.path = ko.observableArray();\n\n    // Search and sort parameters\n    self.searchQuery = ko.observable(''); // Empty search query by default\n    self.sortColumn = ko.observable(defaultSortColumn); // By default, sorting by title\n    self.sortDirection = ko.observable(defaultDirection); // By default, sorting in ascending direction\n\n    // Selected folder\n    self.folderId = ko.observable(''); // Root folder by default\n\n    // Date\n    self.date = ko.observable(''); \n\n    /**\n    * Set current date\n    */\n    var d = new Date();\n\n    var month = d.getMonth()+1;\n    var day = d.getDate();\n\n    var currentDate = d.getFullYear() + '/' +\n    ((''+month).length<2 ? '0' : '') + month + '/' +\n    ((''+day).length<2 ? '0' : '') + day;\n\n\n    /**\n    * Adds new folder to the list\n    */\n    self.addNewFolder = function () {\n        addNewItem(true);\n    };\n\n    /**\n    * Adds new file\n    */\n    self.addNewFile = function () {\n        addNewItem(false);\n    };\n\n    /**\n    * Searches a folder for given search query\n    */\n    self.searchItems = function () {\n        // Saves or cancels all edits\n        self.saveOrCancelAllEdits();\n\n        setItems();\n    };\n\n    /**\n    * Sorts folder by given column\n    */\n    self.sortItems = function (column) {\n        // Saves or cancels all edits\n        self.saveOrCancelAllEdits();\n\n        var columnBefore = self.sortColumn(),\n            wasDescending = self.sortDirection() == directions.descending;\n        if (columnBefore == column) {\n            self.sortDirection(wasDescending ? directions.ascending : directions.descending);\n        } else {\n            self.sortDirection(directions.ascending);\n        }\n        self.sortColumn(column);\n\n        setItems();\n    };\n\n    /**\n    * Selects folder, by given id\n    */\n    self.changeFolder = function (id) {\n        // Saves or cancels all edits\n        self.saveOrCancelAllEdits();\n\n        self.folderId(id);\n\n        // Add folder to path\n        var i, folder;\n        for (i = 0; i < self.allItems().length; i++) {\n            if (self.allItems()[i].id() == id) {\n                folder = self.allItems()[i];\n                break;\n            }\n        }\n        setPathFolder(folder || self.path()[0]);\n\n        // Clear sort and search query\n        self.sortDirection(defaultDirection);\n        self.sortColumn(defaultSortColumn);\n        self.searchQuery('');\n\n        setItems();\n    };\n\n    /**\n    * Opens folder's parent folder\n    */\n    self.openParentFolder = function () {\n        // Saves or cancels all edits\n        self.saveOrCancelAllEdits();\n\n        var parentId = '',\n            currentId = self.folderId();\n\n        for (var l = 0; l < self.allItems().length; l++) {\n            if (self.allItems()[l].id() == currentId) {\n                parentId = self.allItems()[l].folderId;\n                break;\n            }\n        }\n\n        self.changeFolder(parentId);\n    };\n\n    /** \n    * Helper method. Return true if data is sorted by specified column ascending.\n    */\n    self.isSortedAscending = function (column) {\n        return column == self.sortColumn() && self.sortDirection() == directions.ascending;\n    };\n\n    /**\n    * Helper method Return true if data is sorted by specified column descending.\n    */\n    self.isSortedDescending = function (column) {\n        return column == self.sortColumn() && self.sortDirection() == directions.descending;\n    };\n\n    /**\n    * Computed KnockOut function, returns true, if current folder is root folder\n    */\n    self.isRootFolder = ko.computed(function () {\n        return !self.folderId();\n    });\n\n    /**\n    * Gets next items id\n    */\n    self.getNewId = function() {\n        var id = 0;\n\n        for (var m = 0; m < self.allItems().length; m++) {\n            if (self.allItems()[m].id() > id) {\n                id = self.allItems()[m].id();\n            }\n        }\n\n        return id + 1;\n    };\n\n    /**\n    * Saves or cancels all current edits\n    */\n    self.saveOrCancelAllEdits = function() {\n        // Stop editing, if some item is in edit mode\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i];\n            if (item.isActive()) {\n                item.saveOrCancelEdit();\n            }\n        }\n    };\n\n    /**\n    * Private method, adds new item to grid\n    */\n    function addNewItem(isFolder) {\n        // Saves or cancels all edits\n        self.saveOrCancelAllEdits();\n\n        var newItem = new ItemViewModel(self, isFolder);\n        newItem.folderId = self.folderId();\n        newItem.date(currentDate);\n\n        // Set item as active (editable)\n        newItem.isActive(true);\n\n        // Add new item to the top of showing items\n        self.items.unshift(newItem);\n    }\n\n    /**\n    * Private method, adds folder to path, or removes folders from path\n    */\n    function setPathFolder(folder) {\n        var i,\n            remove;\n\n        // If root folder, remove all from the root\n        if (!folder.id()) {\n            remove = 1;\n        } else {\n            // Get folders to pop out from the path\n            for (i = 0; i < self.path().length; i++) {\n                if (self.path()[i].id() == folder.id()) {\n                    remove = i + 1;\n                    break;\n                }\n            }\n        }\n\n        // If folder already exists in the list, remove all childs from path\n        if (remove) {\n            for (i = remove; i < self.path().length; i++) {\n                self.path.pop();\n            }\n        } else {\n            // Add folder to path \n            self.path.push(folder);\n        }\n    }\n\n    /**\n    * Private method, fills items observable array with items, filtered by folder,\n    * search query, and sorted by given parameters\n    */\n    function setItems() {\n        var query = (self.searchQuery() || '').toLowerCase(),\n            currentFolderId = self.folderId() || '';\n\n        self.items.removeAll();\n\n        for (var i = 0; i < self.allItems().length; i++) {\n            var item = self.allItems()[i],\n                folderId = item.folderId || '';\n\n            // Filter items out by folder id\n            if (currentFolderId != folderId) {\n                continue;\n            }\n\n            // Filter items out by search query\n            if (query && item.title().toLowerCase().indexOf(query) < 0) {\n                continue;\n            }\n\n            self.items.push(item);\n        }\n\n        // Sort items\n        if (self.items().length > 0) {\n            self.items.sort(sortItemsList);\n        }\n    }\n\n    /**\n    * Private method, sorts an items array\n    */\n    function sortItemsList(left, right) {\n        var column = self.sortColumn(),\n            isAscending = self.sortDirection() == directions.ascending,\n            leftValue = column == 'Title' || left.isFolder == left.title().toLowerCase(),\n            rightValue = column == 'Title' || right.isFolder == right.title().toLowerCase();\n\n        // Folder always wins in ascending mode\n        if (left.isFolder != right.isFolder) {\n            if (left.isFolder) {\n                return isAscending == -1;\n            } else {\n                return isAscending == 1;\n            }\n        }\n\n        // Sort by name, depenging on sort direction\n        return leftValue == rightValue ? 0 : (leftValue < rightValue ? (isAscending == -1) : (isAscending == 1));\n    }\n\n    /**\n    * Funtion initializes list view models\n    */\n    self.initialize = function() {\n        // Clear path\n        self.path.removeAll();\n\n        // Add root folder to path\n        var rootFolder = new ItemViewModel(self, true);\n        rootFolder.title('..');\n        self.path.push(rootFolder);\n\n        // Set current folder to root\n        self.folderId('');\n\n        // Fill observable items array with current folder items\n        setItems();\n    };\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/exp-manager.js":{"file":"/Users/denea/mos/src/js/exp-manager.js","source":"(function (global){\n/*jshint esversion: 6 */\n\n\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar console = require(\"./../../bower_components/console-browserify/index.js\");\n\n$(document).ready(function(){\n// -------- Extensions\n/**\n* Custom KnockOut handler: handles key press event, when user presses Enter key\n*/\nko.bindingHandlers.anyKeyPress = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n        var allBindings = allBindingsAccessor();\n        element.addEventListener('keyup', function (event) {\n            allBindings.anyKeyPress.call(viewModel);\n            return false;\n        });\n    }\n};\n\n/**\n* Custom KnockOut handler: handles key press event, when user presses Enter key\n*/\nko.bindingHandlers.enterPress = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n        var allBindings = allBindingsAccessor();\n        element.addEventListener('keydown', function (event) {\n            var keyCode = (event.which ? event.which : event.keyCode);\n            if (keyCode === 13) {\n                allBindings.enterPress.call(viewModel);\n                return false;\n            }\n            return true;\n        });\n    }\n};\n\n/**\n* Custom KnockOut handler: handles key press event, when user presses Escape key\n*/\nko.bindingHandlers.escPress = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n        var allBindings = allBindingsAccessor();\n        element.addEventListener('keydown', function (event) {\n            var keyCode = (event.which ? event.which : event.keyCode);\n            if (keyCode === 27) {\n                allBindings.escPress.call(viewModel);\n                return false;\n            }\n            return true;\n        });\n    }\n};\n\n/**\n* Custom knockout extender: required field validation\n*/\nko.extenders.required = function (target) {\n    // add some sub-observables to our observable\n    target.hasError = ko.observable();\n\n    // define a function to do validation\n    function validate(newValue) {\n        target.hasError(newValue ? false : true);\n    }\n\n    // initial validation\n    validate(target());\n\n    // validate whenever the value changes\n    target.subscribe(validate);\n\n    // return the original observable\n    return target;\n};\n\n\n// -------- ListViewModel\n// Enumerators\nvar directions = {\n    ascending: 1,\n    descending: 2\n},\n    defaultDirection = directions.ascending,\n    defaultSortColumn = 'Title';\n\n/**\n* Items list view model\n*/\nfunction ListViewModel() {\n    var self = this;\n\n    // Create observable array for items\n    self.allItems = ko.observableArray();\n    self.items = ko.observableArray();\n    self.path = ko.observableArray();\n\n    // Search and sort parameters\n    self.searchQuery = ko.observable(''); // Empty search query by default\n    self.sortColumn = ko.observable(defaultSortColumn); // By default, sorting by title\n    self.sortDirection = ko.observable(defaultDirection); // By default, sorting in ascending direction\n\n    // Selected folder\n    self.folderId = ko.observable(''); // Root folder by default\n\n    // Date\n    self.date = ko.observable(''); \n\n    /**\n    * Set current date\n    */\n    var d = new Date();\n\n    var month = d.getMonth()+1;\n    var day = d.getDate();\n\n    var currentDate = d.getFullYear() + '/' +\n    ((''+month).length<2 ? '0' : '') + month + '/' +\n    ((''+day).length<2 ? '0' : '') + day;\n\n\n    /**\n    * Adds new folder to the list\n    */\n    self.addNewFolder = function () {\n        addNewItem(true);\n    };\n\n    /**\n    * Adds new file\n    */\n    self.addNewFile = function () {\n        addNewItem(false);\n    };\n\n    /**\n    * Searches a folder for given search query\n    */\n    self.searchItems = function () {\n        // Saves or cancels all edits\n        self.saveOrCancelAllEdits();\n\n        setItems();\n    };\n\n    /**\n    * Sorts folder by given column\n    */\n    self.sortItems = function (column) {\n        // Saves or cancels all edits\n        self.saveOrCancelAllEdits();\n\n        var columnBefore = self.sortColumn(),\n            wasDescending = self.sortDirection() == directions.descending;\n        if (columnBefore == column) {\n            self.sortDirection(wasDescending ? directions.ascending : directions.descending);\n        } else {\n            self.sortDirection(directions.ascending);\n        }\n        self.sortColumn(column);\n\n        setItems();\n    };\n\n    /**\n    * Selects folder, by given id\n    */\n    self.changeFolder = function (id) {\n        // Saves or cancels all edits\n        self.saveOrCancelAllEdits();\n\n        self.folderId(id);\n\n        // Add folder to path\n        var i, folder;\n        for (i = 0; i < self.allItems().length; i++) {\n            if (self.allItems()[i].id() == id) {\n                folder = self.allItems()[i];\n                break;\n            }\n        }\n        setPathFolder(folder || self.path()[0]);\n\n        // Clear sort and search query\n        self.sortDirection(defaultDirection);\n        self.sortColumn(defaultSortColumn);\n        self.searchQuery('');\n\n        setItems();\n    };\n\n    /**\n    * Opens folder's parent folder\n    */\n    self.openParentFolder = function () {\n        // Saves or cancels all edits\n        self.saveOrCancelAllEdits();\n\n        var parentId = '',\n            currentId = self.folderId();\n\n        for (var l = 0; l < self.allItems().length; l++) {\n            if (self.allItems()[l].id() == currentId) {\n                parentId = self.allItems()[l].folderId;\n                break;\n            }\n        }\n\n        self.changeFolder(parentId);\n    };\n\n    /** \n    * Helper method. Return true if data is sorted by specified column ascending.\n    */\n    self.isSortedAscending = function (column) {\n        return column == self.sortColumn() && self.sortDirection() == directions.ascending;\n    };\n\n    /**\n    * Helper method Return true if data is sorted by specified column descending.\n    */\n    self.isSortedDescending = function (column) {\n        return column == self.sortColumn() && self.sortDirection() == directions.descending;\n    };\n\n    /**\n    * Computed KnockOut function, returns true, if current folder is root folder\n    */\n    self.isRootFolder = ko.computed(function () {\n        return !self.folderId();\n    });\n\n    /**\n    * Gets next items id\n    */\n    self.getNewId = function() {\n        var id = 0;\n\n        for (var m = 0; m < self.allItems().length; m++) {\n            if (self.allItems()[m].id() > id) {\n                id = self.allItems()[m].id();\n            }\n        }\n\n        return id + 1;\n    };\n\n    /**\n    * Saves or cancels all current edits\n    */\n    self.saveOrCancelAllEdits = function() {\n        // Stop editing, if some item is in edit mode\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i];\n            if (item.isActive()) {\n                item.saveOrCancelEdit();\n            }\n        }\n    };\n\n    /**\n    * Private method, adds new item to grid\n    */\n    function addNewItem(isFolder) {\n        // Saves or cancels all edits\n        self.saveOrCancelAllEdits();\n\n        var newItem = new ItemViewModel(self, isFolder);\n        newItem.folderId = self.folderId();\n        newItem.date(currentDate);\n\n        // Set item as active (editable)\n        newItem.isActive(true);\n\n        // Add new item to the top of showing items\n        self.items.unshift(newItem);\n    }\n\n    /**\n    * Private method, adds folder to path, or removes folders from path\n    */\n    function setPathFolder(folder) {\n        var i,\n            remove;\n\n        // If root folder, remove all from the root\n        if (!folder.id()) {\n            remove = 1;\n        } else {\n            // Get folders to pop out from the path\n            for (i = 0; i < self.path().length; i++) {\n                if (self.path()[i].id() == folder.id()) {\n                    remove = i + 1;\n                    break;\n                }\n            }\n        }\n\n        // If folder already exists in the list, remove all childs from path\n        if (remove) {\n            for (i = remove; i < self.path().length; i++) {\n                self.path.pop();\n            }\n        } else {\n            // Add folder to path \n            self.path.push(folder);\n        }\n    }\n\n    /**\n    * Private method, fills items observable array with items, filtered by folder,\n    * search query, and sorted by given parameters\n    */\n    function setItems() {\n        var query = (self.searchQuery() || '').toLowerCase(),\n            currentFolderId = self.folderId() || '';\n\n        self.items.removeAll();\n\n        for (var i = 0; i < self.allItems().length; i++) {\n            var item = self.allItems()[i],\n                folderId = item.folderId || '';\n\n            // Filter items out by folder id\n            if (currentFolderId != folderId) {\n                continue;\n            }\n\n            // Filter items out by search query\n            if (query && item.title().toLowerCase().indexOf(query) < 0) {\n                continue;\n            }\n\n            self.items.push(item);\n        }\n\n        // Sort items\n        if (self.items().length > 0) {\n            self.items.sort(sortItemsList);\n        }\n    }\n\n    /**\n    * Private method, sorts an items array\n    */\n    function sortItemsList(left, right) {\n        var column = self.sortColumn(),\n            isAscending = self.sortDirection() == directions.ascending,\n            leftValue = column == 'Title' || left.isFolder == left.title().toLowerCase(),\n            rightValue = column == 'Title' || right.isFolder == right.title().toLowerCase();\n\n        // Folder always wins in ascending mode\n        if (left.isFolder != right.isFolder) {\n            if (left.isFolder) {\n                return isAscending == -1;\n            } else {\n                return isAscending == 1;\n            }\n        }\n\n        // Sort by name, depenging on sort direction\n        return leftValue == rightValue ? 0 : (leftValue < rightValue ? (isAscending == -1) : (isAscending == 1));\n    }\n\n    /**\n    * Funtion initializes list view models\n    */\n    self.initialize = function() {\n        // Clear path\n        self.path.removeAll();\n\n        // Add root folder to path\n        var rootFolder = new ItemViewModel(self, true);\n        rootFolder.title('');\n        self.path.push(rootFolder);\n\n        // Set current folder to root\n        self.folderId('');\n\n        // Fill observable items array with current folder items\n        setItems();\n    };\n}\n\n\n// -------- ItemViewModel\n/**\n* Item view model\n*/\nvar toDelete = [];\n\nfunction ItemViewModel(parent, isFolder, id, title, date, folderId) {\n  var self = this;\n\n  // Observable properties\n  self.id = ko.observable();\n  self.extension = ko.observable();\n  self.isActive = ko.observable(false);\n\n  // Create title\n  self.title = ko.observable().extend({ required: true });\n\n  // Creaet date\n  self.date = ko.observable().extend({ required: true });\n\n  // Properties, that never changes dinamically, can be created non-observable\n  self.parent = parent;\n  self.folderId = '';\n  self.isFolder = isFolder;\n\n  // Temporary properties for keeping old values, when editing row\n  self.oldTitle = null;\n\n  // Subscribe to title value change events\n  self.title.subscribe(function () {\n      if (!self.isActive()) {\n          self.oldTitle = self.title();\n      }\n  });\n\n  /**\n  * Set current date\n  */\n  var d = new Date();\n\n  var month = d.getMonth()+1;\n  var day = d.getDate();\n\n  var currentDate = d.getFullYear() + '/' +\n  ((''+month).length<2 ? '0' : '') + month + '/' +\n  ((''+day).length<2 ? '0' : '') + day;\n\n  /**\n  * Computed KnockOut function, returns class name for row, depending on item type and active status\n  */\n  self.rowClassNames = ko.computed(function () {\n      var classes;\n      if (self.isFolder) {\n          classes = 'exp-item folder-box';\n          if (self.isActive()) {\n              classes += ' folder-box-active';\n          }\n      } else {\n          classes = 'exp-item file-box';\n          if (self.isActive()) {\n              classes += ' file-box-active';\n          }\n      }\n\n      return classes;\n  });\n\n  /**\n  * Computed KnockOut function, returns class name for div, which displays file's or folders icon\n  */\n  self.iconClassNames = ko.computed(function () {\n      var classes;\n\n      if (self.isFolder) {\n          classes = 'system-folder';\n      } else {\n          classes = 'system-file';\n      }\n\n      return classes;\n  });\n\n  /** \n  * Saves an item\n  */\n  self.saveItem = function () {\n      if (self.title.hasError()) {\n          return;\n      }\n\n      // Add item to all items list and set new id\n      if (!self.id()) {\n          self.parent.allItems.push(self);\n          self.id(self.parent.getNewId());\n      }\n\n      \n\n      self.isActive(false);\n\n      // Setting old values\n      self.date(currentDate);\n      self.oldTitle = self.title();\n  };\n\n  /**\n  * Deletes an item\n  */\n  self.deleteItem = function (parentViewModel) {\n      // Saves or cancels all edits\n      self.parent.saveOrCancelAllEdits();\n      var deletingItem = this;\n      \n      $('#delete-exp-modal').modal('show').focus();\n      $('#delete-exp-modal').on('keyup', function(e){\n        if(e.keyCode == 13) {\n          $('.delete-exp-items').trigger('click');\n        }\n      });\n\n      $('#delete-exp-modal .delete-exp-items').on('click', function(){\n          parentViewModel.items.remove(deletingItem);\n          parentViewModel.allItems.remove(deletingItem);\n          $('#delete-exp-modal').modal('hide');\n      });\n  };\n\n  /**\n  * Check items to delete\n  */\n  \n\n  self.checkItem = function (parentViewModel, event) {\n      var index = parentViewModel.allItems().indexOf(this);\n      var indexID = parentViewModel.allItems()[index].id();\n      var newToDelete = toDelete.filter(function(e){return e !== indexID;});\n      \n\n      for(var i = 0; i < parentViewModel.allItems().length; i++) {\n          if(parentViewModel.allItems()[i].id() == indexID) {\n              if(toDelete.indexOf(indexID) < 0){\n                  toDelete.push(indexID);\n              } else {\n                  toDelete = newToDelete;\n              }\n          }\n      }\n  };\n\n  /**\n  * Delete checked items\n  */\n  deleteChecked = function (parentViewModel) {\n    $('#delete-exp-modal').modal('show');\n\n    $('#delete-exp-modal .delete-exp-items').on('click', function(){\n      for(var i = 0; i < toDelete.length; i++) {\n            for(var j = 0; j < parentViewModel.allItems().length; j++){\n                if(parentViewModel.allItems()[j].id() == toDelete[i]){\n                    var deletingItem = parentViewModel.allItems()[j];\n                    parentViewModel.items.remove(deletingItem);\n                    parentViewModel.allItems.remove(deletingItem);\n                }\n            }\n        }\n      $('#delete-exp-modal').modal('toggle');\n    });  \n  };\n\n  /**\n  * Starts inline editing of an item\n  */\n  self.editItem = function () {\n      // Saves or cancels all edits\n      self.parent.saveOrCancelAllEdits();\n\n      self.isActive(true);\n  };\n\n  /*\n  * Opens item, depending on it's type\n  */\n  self.openItem = function () {\n      if (self.isFolder) {\n          self.parent.changeFolder(self.id());\n      } else {\n          //self.editItem();\n      }\n  };\n\n  /**\n  * Cancels inline editing of an item\n  */\n  self.cancelEditItem = function () {\n      if (!self.id()) {\n          // If item was new, remove it from grid\n          self.parent.items.remove(self);\n      } else {\n          // Restore old values\n          self.title(self.oldTitle);\n\n          self.isActive(false);\n      }\n  };\n\n  /**\n  * Saves an item or cancels edit mode, depending on title.hasError()\n  */\n  self.saveOrCancelEdit = function() {\n      if (self.isActive()) {\n          if (self.title.hasError()) {\n              self.cancelEditItem();\n          } else {\n              self.saveItem();\n          }\n      }\n  };\n\n  // Set properties with chain syntax\n  self.id(id).title(title).date(date);\n  self.folderId = folderId;}\n\n// -------- Initialize\n/**\n* Initializes view model and apply bindings\n*/\nfunction initializeexpData(expData) {\n      // Get container for binding view model\n  var container = document.getElementById('file-explorer-content');\n\n\n      // Create list view model\n  var listViewModel = new ListViewModel();\n  \n\n    // Add folders to list\n  if (expData.Folders) {\n      for (var j = 0; j < expData.Folders.length; j++) {\n          var folder = expData.Folders[j],\n                  folderViewModel = new ItemViewModel(listViewModel, true, folder.Id, folder.Title, folder.Date, folder.ParentId);\n\n          listViewModel.allItems.push(folderViewModel);\n      }\n  }\n\n    // Add files to list\n  if (expData.Files) {\n      for (var k = 0; k < expData.Files.length; k++) {\n          var file = expData.Files[k],\n                  fileViewModel = new ItemViewModel(listViewModel, false, file.Id, file.Title, file.Date, file.FolderId);\n\n          listViewModel.allItems.push(fileViewModel);\n      }\n  }\n\n    // Set grid options\n  if (expData.GridOptions) {\n      listViewModel.searchQuery(expData.GridOptions.SearchQuery);\n      listViewModel.sortColumn(expData.GridOptions.Column);\n      listViewModel.sortDirection(expData.GridOptions.Direction);\n  }\n\n    // Initialize list view model\n  listViewModel.initialize();\n\n  // Bind view model to view\n  ko.applyBindings(listViewModel, container);\n  }\n  \n if(typeof expData == 'object'){\n  initializeexpData(expData);\n }\n\n});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","deps":{"./../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/converter/checkmodel.js":{"file":"/Users/denea/mos/src/js/converter/checkmodel.js","source":"\"use strict\";\nvar console = require(\"./../../../bower_components/console-browserify/index.js\");\n\n// returns 0 if equal (0.0.x release), 1 with backward compatible additions (0.x.0 release), 2 on lost data or incompatible data (x.0.0 release)\nvar checkModel = function(reference, blockDefs, model, origPrefix, reverse) {\n  var blockDefsObj, i, prefix;\n  var valid = 0;\n  if (typeof reverse == 'undefined') reverse = false;\n  if (typeof blockDefs !== 'undefined' && typeof blockDefs.splice == 'function') {\n    blockDefsObj = {};\n    for (i = 0; i < blockDefs.length; i++) blockDefsObj[blockDefs[i].type] = blockDefs[i];\n  } else {\n    blockDefsObj = blockDefs;\n  }\n  for (var prop in reference)\n    if (reference.hasOwnProperty(prop)) {\n      prefix = typeof origPrefix !== 'undefined' ? origPrefix + \".\" + prop : prop;\n      if (!model.hasOwnProperty(prop)) {\n        if (reverse) {\n          //console.warn(\"WARN Property \", prefix, \"found in model is not defined by template: removing it!\");\n          valid = Math.max(valid, 2);\n          delete reference[prop];\n        } else {\n          // console.log(\"INFO Property \", prefix, \"missing in model, cloning from reference!\");\n          valid = Math.max(valid, 1);\n          model[prop] = reference[prop];\n        }\n      } else if (typeof model[prop] != typeof reference[prop]) {\n        // se sono di tipo diverso allora provo a vedere se l'altro, convertito di tipo mantiene un valore equivalente.\n        if (model[prop] !== null && reference[prop] !== null) {\n          if (typeof model[prop] == 'string') {\n            if (String(reference[prop]) != reference[prop]) {\n              console.log(\"TODO Different type 1 \", prefix, typeof model[prop], typeof reference[prop], model[prop], reference[prop]);\n              valid = Math.max(valid, 2);\n            }\n          } else if (typeof model[prop] == 'number') {\n            if (Number(reference[prop]) != reference[prop]) {\n              console.log(\"TODO Different type 2 \", prefix, typeof model[prop], typeof reference[prop], model[prop], reference[prop]);\n              valid = Math.max(valid, 2);\n            }\n          } else {\n            console.log(\"TODO Different type 3 \", prefix, typeof model[prop], typeof reference[prop], model[prop], reference[prop]);\n            valid = Math.max(valid, 2);\n          }\n        }\n      } else if (typeof reference[prop] == 'object') {\n        if (reference[prop] !== null) {\n          if (typeof reference[prop].splice !== 'undefined') {\n            if (reference[prop].length > 0) {\n              if (model[prop].length > 0) {\n                // TODO needs sorting?\n                var j = 0;\n                for (i = 0; i < model[prop].length; i++) {\n                  if (typeof model[prop][i].type == 'string') {\n                    while (j < reference[prop].length && reference[prop][j].type !== model[prop][i].type) {\n                      console.log(\"ignoring \", prefix, reference[prop][j].type, \" block type in reference not found in model\");\n                      j++;\n                    }\n                    if (j >= reference[prop].length) {\n                      console.log(\"WARN cannot find \", prefix, model[prop][i].type, \" block in reference\");\n                      valid = Math.max(valid, 2);\n                      break;\n                    }\n                    // reverse condition so to skip \"deep traversing\" on error\n                    valid = Math.max(valid, checkModel(reference[prop][j], undefined, model[prop][i], prefix + \"[\" + i + \".\" + model[prop][i].type + \"]\"));\n                  }\n                }\n              } else {\n                // in the case of different array we check blockDefs\n                for (i = 0; i < reference[prop].length; i++) {\n                  if (typeof reference[prop][i].type !== 'string') {\n                    console.log(\"TODO found an object with no type\", prefix, reference[prop][i]);\n                    valid = Math.max(valid, 2);\n                  } else if (!blockDefsObj.hasOwnProperty(reference[prop][i].type)) {\n                    console.warn(\"TODO the model uses a block type not defined by the template. REMOVING IT!!\", prefix, reference[prop][i]);\n                    reference[prop].splice(i, 1);\n                    i--;\n                    valid = Math.max(valid, 2);\n                  } else {\n                    valid = Math.max(valid, checkModel(blockDefsObj[reference[prop][i].type], blockDefsObj, reference[prop][i], prefix + \"[\" + i + \".\" + reference[prop][i].type + \"]\"));\n                  }\n                }\n              }\n            }\n          } else {\n            if (model[prop] === null) {\n              if (reverse) {\n                console.log(\"WARN Null object in model \", prefix, \"instead of\", reference[prop], \"deleting it\");\n                valid = Math.max(valid, 2);\n                delete reference[prop];\n              } else {\n                console.log(\"INFO Null object in model \", prefix, \"instead of\", reference[prop], \"cloning it from the reference\");\n                valid = Math.max(valid, 1);\n                model[prop] = reference[prop];\n              }\n            } else {\n              valid = Math.max(valid, checkModel(reference[prop], blockDefsObj, model[prop], prefix, reverse));\n            }\n          }\n        } else if (model[prop] !== null) {\n          console.log(\"TODO Null in reference but not null in model\", prefix, model[prop]);\n          valid = Math.max(valid, 2);\n        }\n      } else if (typeof reference[prop] !== 'string' && typeof reference[prop] !== 'boolean' && typeof reference[prop] !== 'number') {\n        console.log(\"TODO unsupported type\", prefix, typeof reference[prop]);\n        valid = Math.max(valid, 2);\n      }\n\n    }\n  if (!reverse) valid = Math.max(valid, checkModel(model, blockDefs, reference, typeof origPrefix !== 'undefined' ? origPrefix + \"!R\" : \"!R\", true));\n  return valid;\n};\n\nmodule.exports = checkModel;","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/bindings/wysiwygs.js":{"file":"/Users/denea/mos/src/js/bindings/wysiwygs.js","source":"(function (global){\n\"use strict\";\n/* global global: false */\n\nvar tinymce = (typeof window !== \"undefined\" ? window['tinymce'] : typeof global !== \"undefined\" ? global['tinymce'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar console = require(\"./../../../bower_components/console-browserify/index.js\");\nrequire(\"./eventable.js\");\n\nko.bindingHandlers.wysiwygOrHtml = {\n  init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n    var isNotWysiwygMode = (typeof bindingContext.templateMode == 'undefined' || bindingContext.templateMode != 'wysiwyg');\n\n    if (isNotWysiwygMode)\n      return ko.bindingHandlers['virtualHtml'].init();\n    else\n      return ko.bindingHandlers.wysiwyg.init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);\n  },\n  update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n    var isNotWysiwygMode = (typeof bindingContext.templateMode == 'undefined' || bindingContext.templateMode != 'wysiwyg');\n    if (isNotWysiwygMode)\n      return ko.bindingHandlers['virtualHtml'].update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);\n    //else \n    //  return ko.bindingHandlers.wysiwyg.update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);\n  }\n};\nko.virtualElements.allowedBindings['wysiwygOrHtml'] = true;\n\nko.bindingHandlers.wysiwygHref = {\n  init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n    if (element.nodeType !== 8) {\n      var v = valueAccessor();\n\n      var isNotWysiwygMode = (typeof bindingContext.templateMode == 'undefined' || bindingContext.templateMode != 'wysiwyg');\n      // console.log(\"XXX\", bindingContext.templateMode, isNotWysiwygMode, element.getAttribute(\"href\"));\n      if (isNotWysiwygMode) {\n        element.setAttribute('target', '_new');\n      } else {\n        /*jshint scripturl:true*/\n        // 20150226: removed href to work around FF issues with <a href=\"\"><div contenteditable=\"true\">..</div></a>\n        // element.setAttribute('href', 'javascript:void(0)');\n        // 20150309: on IE, an editable <a href=\"\" data-editable=\"\"> prevent tinymce toolbar to be shown.\n        //           so I change behaviour based on the use of \"wysiwygOrHtml\"\n        // @see: http://www.tinymce.com/develop/bugtracker_view.php?id=7432\n        var allbindings = allBindingsAccessor();\n        if (typeof allbindings.wysiwygOrHtml !== 'undefined') {\n          element.setAttribute('href', 'javascript:void(0)');\n        } else {\n          element.removeAttribute('href');\n          element.setAttribute('disabledhref', '#');\n        }\n      }\n    }\n  },\n  update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n    if (element.nodeType !== 8) {\n      var isNotWysiwygMode = (typeof bindingContext.templateMode == 'undefined' || bindingContext.templateMode != 'wysiwyg');\n      // NOTE this unwrap is needed also in \"wysiwyg\" mode, otherwise dependency tracking dies.\n      var attrValue = ko.utils.unwrapObservable(valueAccessor());\n      if (isNotWysiwygMode) {\n        if ((attrValue === false) || (attrValue === null) || (attrValue === undefined))\n          element.removeAttribute('href');\n        else\n          element.setAttribute('href', attrValue.toString());\n      }\n    }\n  }\n};\nko.virtualElements.allowedBindings['wysiwygHref'] = true;\n\nko.bindingHandlers.wysiwygSrc = {\n  convertedUrl: function(src, method, width, height) {\n    var queryParamSeparator = src.indexOf('?') == -1 ? '?' : '&';\n    var res = src + queryParamSeparator + \"method=\" + method + \"&width=\" + width + (height !== null ? \"&height=\" + height : '');\n    return res;\n  },\n  placeholderUrl: function(plwidth, plheight, pltext) {\n    var placeholdersrc = \"'http://lorempixel.com/g/'+\" + plwidth + \"+'/'+\" + plheight + \"+'/abstract/'+encodeURIComponent(\" + pltext + \")\";\n    // http://placehold.it/200x150.png/cccccc/333333&text=placehold.it#sthash.nA3r26vR.dpuf\n    // placeholdersrc = \"'http://placehold.it/'+\"+width+\"+'x'+\"+height+\"+'.png/cccccc/333333&text='+\"+size;\n    // placeholdersrc = \"'\"+converterUtils.addSlashes(defaultValue)+\"'\";\n  },\n  update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n    var value = ko.utils.unwrapObservable(valueAccessor());\n    var attrValue = ko.utils.unwrapObservable(value.src);\n    var placeholderValue = ko.utils.unwrapObservable(value.placeholder);\n    var width = ko.utils.unwrapObservable(value.width);\n    var height = ko.utils.unwrapObservable(value.height);\n    if ((attrValue === false) || (attrValue === null) || (attrValue === undefined) || (attrValue === '')) {\n      if (typeof placeholderValue == 'object' && placeholderValue !== null) element.setAttribute('src', ko.bindingHandlers.wysiwygSrc.placeholderUrl(placeholderValue.width, placeholderValue.height, placeholderValue.text));\n      else element.removeAttribute('src');\n    } else {\n      var method = ko.utils.unwrapObservable(value.method);\n      if (!method) method = width > 0 && height > 0 ? 'cover' : 'resize';\n      var src = ko.bindingHandlers.wysiwygSrc.convertedUrl(attrValue.toString(), method, width, height);\n      element.setAttribute('src', src);\n    }\n    if (typeof width !== 'undefined' && width !== null) element.setAttribute(\"width\", width);\n    else element.removeAttribute(\"width\");\n    if (typeof height !== 'undefined' && height !== null) element.setAttribute(\"height\", height);\n    else element.removeAttribute(\"height\");\n  }\n};\n\nko.bindingHandlers.wysiwygId = {\n  init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n    var isNotWysiwygMode = (typeof bindingContext.templateMode == 'undefined' || bindingContext.templateMode != 'wysiwyg');\n    if (!isNotWysiwygMode)\n      element.setAttribute('id', ko.utils.unwrapObservable(valueAccessor()));\n  },\n  update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n    var isNotWysiwygMode = (typeof bindingContext.templateMode == 'undefined' || bindingContext.templateMode != 'wysiwyg');\n    if (!isNotWysiwygMode)\n      element.setAttribute('id', ko.utils.unwrapObservable(valueAccessor()));\n  }\n};\nko.virtualElements.allowedBindings['wysiwygId'] = true;\n\n// used on editable \"item\" so to bind clicks only in wysiwyg mode.\n\nko.virtualElements.allowedBindings['wysiwygClick'] = true;\n\n// used on editable \"item\" so to bind css only in wysiwyg mode.\nko.bindingHandlers.wysiwygCss = {\n  update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n    var isNotWysiwygMode = (typeof bindingContext.templateMode == 'undefined' || bindingContext.templateMode != 'wysiwyg');\n    if (!isNotWysiwygMode)\n      ko.bindingHandlers.css.update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);\n  }\n};\nko.virtualElements.allowedBindings['wysiwygCss'] = true;\n\nko.bindingHandlers.wysiwygImg = {\n  makeTemplateValueAccessor: function(valueAccessor, bindingContext) {\n    return function() {\n      var isWysiwygMode = (typeof bindingContext.templateMode != 'undefined' && bindingContext.templateMode == 'wysiwyg');\n\n      var modelValue = valueAccessor(),\n        unwrappedValue = ko.utils.peekObservable(modelValue); // Unwrap without setting a dependency here\n\n      // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n      ko.utils.unwrapObservable(modelValue);\n\n      return {\n        'name': isWysiwygMode ? unwrappedValue['_editTemplate'] : unwrappedValue['_template'],\n        'templateEngine': ko.nativeTemplateEngine.instance\n      };\n    };\n  },\n  'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n    return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['wysiwygImg'].makeTemplateValueAccessor(valueAccessor, bindingContext));\n  },\n  'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n    bindingContext = bindingContext['extend'](valueAccessor());\n    return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['wysiwygImg'].makeTemplateValueAccessor(valueAccessor, bindingContext), allBindings, viewModel, bindingContext);\n  }\n};\nko.virtualElements.allowedBindings['wysiwygImg'] = true;\n\n// NOTE: there are issues with the \"raw\" format and trash left around by tinymce workarounds for contenteditable issues.\n// setting \"forced_root_block: false\" disable the default behaviour of adding a wrapper <p> when needed and this seems to fix many issues in IE.\n// also, maybe we should use the \"raw\" only for the \"before SetContent\" and instead read the \"non-raw\" content (the raw content sometimes have data- attributes and too many ending <br> in the code)\nko.bindingHandlers.wysiwyg = {\n  currentIndex: 0,\n  standardOptions: {\n  \ttoolbar1: \"formatselect bold italic underline forecolor alignleft aligncenter alignright alignjustify bullist link removeformat\"\n  },\n  fullOptions: {\n    toolbar1: \"fontselect fontsizeselect hr charmap sourcecode link unlink removeformat code\",\n    toolbar2: 'formatselect bold italic underline forecolor backcolor outdent indent alignleft aligncenter alignright alignjustify bullist numlist ',\n    //toolbar1: \"bold italic | forecolor backcolor | link unlink | hr | pastetext code\", // | newsletter_profile newsletter_optlink newsletter_unsubscribe newsletter_showlink\";\n    plugins: \"link hr paste lists textcolor colorpicker code image charmap spellchecker\",\n  },\n  init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n    // TODO ugly, but works...\n    ko.bindingHandlers.focusable.init(element);\n\n    ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n      tinymce.remove('#' + element.getAttribute('id'));\n    });\n\n    var value = valueAccessor();\n\n    if (!ko.isObservable(value)) throw \"Wysiwyg binding called with non observable\";\n    if (element.nodeType === 8) throw \"Wysiwyg binding called on virtual node, ignoring....\" + element.innerHTML;\n\n    var selectorId = element.getAttribute('id');\n    if (!selectorId) {\n      selectorId = 'wysiwyg_' + (++ko.bindingHandlers['wysiwyg'].currentIndex);\n      element.setAttribute('id', selectorId);\n    }\n\n    var headerHeight = function(){\n    \t$('.tinyMCE-header').height($('.mce-tinymce.mce-container').outerHeight());};\n\n    var simpleEditor = $(element).parents('#tinymce-area').hasClass('simple-editor');\n    var fullEditor = $(element).parents('#tinymce-area').hasClass('advanced-editor');\n    var isSubscriberChange = false;\n    var thisEditor;\n    var isEditorChange = false;\n    var isInit = false;\n\n    var options = {\n      selector: '#' + selectorId,\n      inline: true,\n      // maybe not needed, but won't hurt.\n      hidden_input: false,\n      menubar: false,\n      fixed_toolbar_container: '.tinyMCE-header',\n      toolbar1: \"formatselect bold italic underline forecolor alignleft aligncenter alignright alignjustify bullist link removeformat\",\n      plugins: \"link hr paste lists textcolor colorpicker code image charmap spellchecker\",\n      // we have to disable preview_styles otherwise tinymce push inline every style he things will be applied and this makes the style menu to inherit color/font-family and more.\n      preview_styles: false,\n      paste_as_text: true,\n      paste_data_images: false,\n      language: 'en',\n      schema: \"html5\",\n      browser_spellcheck: true,\n      extended_valid_elements: 'strong/b,em/i,*[*]',\n      skin: 'stedb',\n      setup: function(editor) {\n        // TODO change sometimes doesn't trigger (we have to document when)\n        // listening on keyup would increase correctness but we would need a rateLimit to avoid flooding.\n\n        editor.on('change redo undo', function() {\n          if (!isSubscriberChange) {\n            isEditorChange = true;\n            // we failed with other ways to do this:\n            // value($(element).html());\n            // value(element.innerHTML);\n            value(editor.getContent({\n              format: 'raw'\n            }));\n            isEditorChange = false;\n          }\n        });\n        // Clicking on the element on focus change allow the \"clic\" code to be triggered and propagate the selection.\n        // Not elegant, maybe we have better options.\n        editor.on('focus', function() {\n          // Used by scrollfix.js (maybe this is not needed by new scrollfix.js)\n          editor.nodeChanged();\n          editor.getElement().click();\n          // Remove focus from all other selectors\n          $('.tinyMCE-header .mce-tinymce-inline.mce-panel').removeClass('lastFocused');\n          headerHeight();\n        });\n\n        // Keep last focused selector, so the header won't disappear\n        editor.on('blur', function(){\n        \t$('.tinyMCE-header .mce-tinymce-inline.mce-panel:visible').addClass('lastFocused');\n        });\n        // NOTE: this fixes issue with \"leading spaces\" in default content that were lost during initialization.\n        editor.on('BeforeSetContent', function(args) {\n          if (args.initial) args.format = 'raw';\n        });\n\n\n        /* NOTE: disabling \"ENTER\" in tiny editor, not a good thing but may be needed to work around contenteditable issues\n        if (!fullEditor) {\n          // se non abbiamo il \"full Editor\", disabilitiamo l'invio. (vari bug)\n          editor.on('keydown', function(e) {\n            if (e.keyCode == 13) { e.preventDefault(); }\n          });\n        }\n        */\n      }\n\n    };\n\n    //Alternate between advanced and simple editors\n\n    if (simpleEditor) ko.utils.extend(options, ko.bindingHandlers.wysiwyg.standardOptions);\n    if (fullEditor) ko.utils.extend(options, ko.bindingHandlers.wysiwyg.fullOptions);\n\n    // we have to put initialization in a settimeout, otherwise switching from \"1\" to \"2\" columns blocks\n    // will start the new editors before disposing the old ones and IDs get temporarily duplicated.\n    // using setTimeout the dispose/create order is correct on every browser tested.\n    global.setTimeout(function() {\n      tinymce.init(options);\n    });\n\n    ko.computed(function() {\n      var content = ko.utils.unwrapObservable(valueAccessor());\n      if (!isEditorChange) {\n        try {\n          isSubscriberChange = true;\n          // we failed setting contents in other ways...\n          // $(element).html(content);\n          if (typeof thisEditor !== 'undefined') {\n            thisEditor.setContent(content, {\n              format: 'raw'\n            });\n          } else {\n            ko.utils.setHtml(element, content);\n          }\n        } catch (e) {\n          console.log(\"TODO exception setting content to editable element\", typeof thisEditor, e);\n        }\n        isSubscriberChange = false;\n      }\n    }, null, {\n      disposeWhenNodeIsRemoved: element\n    });\n\n    // do not parse html content for KO bindings!!\n    return {\n      controlsDescendantBindings: true\n    };\n\n  }\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","deps":{"./eventable.js":"/Users/denea/mos/src/js/bindings/eventable.js","./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/app.js":{"file":"/Users/denea/mos/src/js/app.js","source":"(function (global){\n\"use strict\";\n/* global global: false */\n/* global XMLHttpRequest: false */\n\nrequire('./custom.js');\nvar templateLoader = require('./template-loader.js');\nvar console = require(\"./../../bower_components/console-browserify/index.js\");\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nrequire(\"./ko-bindings.js\");\nrequire('./exp-manager.js');\nvar performanceAwareCaller = require(\"./timed-call.js\").timedCall;\n\nvar addUndoStackExtensionMaker = require(\"./undomanager/undomain.js\");\nvar colorPlugin = require(\"./ext/color.js\");\nvar utilPlugin = require(\"./ext/util.js\");\nvar inlinerPlugin = require(\"./ext/inliner.js\");\n\nvar localStorageLoader = require(\"./ext/localstorage.js\");\n\nif (typeof ko == 'undefined') throw \"Cannot find knockout.js library!\";\nif (typeof $ == 'undefined') throw \"Cannot find jquery library!\";\n\nfunction _canonicalize(url) {\n  var div = global.document.createElement('div');\n  div.innerHTML = \"<a></a>\";\n  div.firstChild.href = url; // Ensures that the href is properly escaped\n  div.innerHTML = div.innerHTML; // Run the current innerHTML back through the parser\n  return div.firstChild.href;\n}\n\nfunction _appendUrlParameters(baseUrl, parameters) {\n  var paramSeparator = baseUrl.indexOf('?') == -1 ? '?' : '&';\n  var res = baseUrl;\n  for (var param in parameters) if (parameters.hasOwnProperty(param)) {\n    res += paramSeparator + param + \"=\" + encodeURIComponent(parameters[param]);\n    paramSeparator = '&';\n  }\n  return res;\n}\n\nvar applyBindingOptions = function(options, ko) {\n\n  ko.bindingHandlers.wysiwygSrc.convertedUrl = function(src, method, width, height) {\n    var queryParamSeparator;\n    var imgProcessorBackend = options.imgProcessorBackend ? options.imgProcessorBackend : './upload';\n    var backEndMatch = imgProcessorBackend.match(/^(https?:\\/\\/[^\\/]*\\/).*$/);\n    var srcMatch = src.match(/^(https?:\\/\\/[^\\/]*\\/).*$/);\n    if (backEndMatch === null || (srcMatch !== null && backEndMatch[1] == srcMatch[1])) {\n      queryParamSeparator = imgProcessorBackend.indexOf('?') == -1 ? '?' : '&';\n      return _appendUrlParameters(imgProcessorBackend, { src: src, method: method, params: width + \",\" + height });\n    } else {\n      console.log(\"Cannot apply backend image resizing to non-local resources \", src, method, width, height, backEndMatch, srcMatch);\n      var params = { method: method, width: width };\n      if (height !== null) params['height'] = height;\n      return _appendUrlParameters(src, params);\n    }\n  };\n\n  ko.bindingHandlers.wysiwygSrc.placeholderUrl = function(width, height, text) {\n    var imgProcessorBackend = options.imgProcessorBackend ? options.imgProcessorBackend : './upload';\n    return _appendUrlParameters(imgProcessorBackend, { method: 'placeholder', params: width + \",\" + height });\n  };\n\n  // pushes custom tinymce configurations from options to the binding\n  if (options && options.tinymceConfig)\n    ko.bindingHandlers.wysiwyg.standardOptions = options.tinymceConfig;\n  if (options && options.tinymceConfigFull)\n    ko.bindingHandlers.wysiwyg.fullOptions = options.tinymceConfigFull;\n};\n\nvar start = function(options, templateFile, templateMetadata, jsorjson, customExtensions) {\n\n  templateLoader.fixPageEvents();\n\n  var fileUploadMessagesExtension = function(vm) {\n    var fileuploadConfig = {\n      messages: {\n        unknownError: vm.t('Unknown error'),\n        uploadedBytes: vm.t('Uploaded bytes exceed file size'),\n        maxNumberOfFiles: vm.t('Maximum number of files exceeded'),\n        acceptFileTypes: vm.t('File type not allowed'),\n        maxFileSize: vm.t('File is too large'),\n        minFileSize: vm.t('File is too small'),\n        post_max_size: vm.t('The uploaded file exceeds the post_max_size directive in php.ini'),\n        max_file_size: vm.t('File is too big'),\n        min_file_size: vm.t('File is too small'),\n        accept_file_types: vm.t('Filetype not allowed'),\n        max_number_of_files: vm.t('Maximum number of files exceeded'),\n        max_width: vm.t('Image exceeds maximum width'),\n        min_width: vm.t('Image requires a minimum width'),\n        max_height: vm.t('Image exceeds maximum height'),\n        min_height: vm.t('Image requires a minimum height'),\n        abort: vm.t('File upload aborted'),\n        image_resize: vm.t('Failed to resize image'),\n        generic: vm.t('Unexpected upload error')\n      }\n    };\n    // fileUpload options.\n    if (options && options.fileuploadConfig)\n      fileuploadConfig = $.extend(true, fileuploadConfig, options.fileuploadConfig);\n\n    ko.bindingHandlers['fileupload'].extendOptions = fileuploadConfig;\n\n  };\n\n  var simpleTranslationPlugin = function(vm) {\n    if (options && options.strings) {\n      vm.t = function(key, objParam) {\n        var res = options.strings[key];\n        if (typeof res == 'undefined') {\n          console.warn(\"Missing translation string for\",key,\": using default string\");\n          res = key;\n        }\n        return vm.tt(res, objParam);\n      };\n    }\n  };\n\n  // simpleTranslationPlugin must be before the undoStack to translate undo/redo labels\n  var extensions = [simpleTranslationPlugin, addUndoStackExtensionMaker(performanceAwareCaller), colorPlugin, utilPlugin, inlinerPlugin];\n  if (typeof customExtensions !== 'undefined')\n    for (var k = 0; k < customExtensions.length; k++) extensions.push(customExtensions[k]);\n  extensions.push(fileUploadMessagesExtension);\n\n  var galleryUrl = options.fileuploadConfig ? options.fileuploadConfig.url : '/upload/';\n  applyBindingOptions(options, ko);\n\n  // TODO what about appending to another element?\n  $(\"<!-- ko template: 'main' --><!-- /ko -->\").appendTo(global.document.getElementById('editor-area'));\n  $(\"<!-- ko template: 'tinymce-area' --><!-- /ko -->\").appendTo(global.document.getElementById('tinymce-area'));\n  $(\"<!-- ko template: 'tinymce-sidebar' --><!-- /ko -->\").appendTo(global.document.getElementById('r-sidebar'));\n\n  // templateFile may override the template path in templateMetadata\n  if (typeof templateFile == 'undefined' && typeof templateMetadata != 'undefined') {\n    templateFile = templateMetadata.template;\n  }\n  // TODO canonicalize templateFile to absolute or relative depending on \"relativeUrlsException\" plugin\n\n  templateLoader.load(performanceAwareCaller, templateFile, templateMetadata, jsorjson, extensions, galleryUrl);\n\n};\n\nvar initFromLocalStorage = function(options, hash_key, customExtensions) {\n  try {\n    var lsData = localStorageLoader(hash_key, options.emailProcessorBackend);\n    var extensions = typeof customExtensions !== 'undefined' ? customExtensions : [];\n    extensions.push(lsData.extension);\n    var template = _canonicalize(lsData.metadata.template);\n    start(options, template, lsData.metadata, lsData.model, extensions);\n  } catch (e) {\n    console.error(\"TODO not found \", hash_key, e);\n  }\n};\n\nvar init = function(options, customExtensions) {\n\n  var hash = global.location.hash ? global.location.href.split(\"#\")[1] : undefined;\n\n  // Loading from configured template or configured metadata\n  if (options && (options.template || options.data)) {\n    if (options.data) {\n      var data = JSON.parse(options.data);\n      start(options, undefined, data.metadata, data.content, customExtensions);\n    } else {\n      start(options, options.template, undefined, undefined, customExtensions);\n    }\n    // Loading from LocalStorage (if url hash has a 7chars key)\n  } else if (hash && hash.length == 7) {\n    initFromLocalStorage(options, hash, customExtensions);\n    // Loading from template url as hash (if hash is not a valid localstorage key)\n  } else if (hash) {\n    start(options, _canonicalize(hash), undefined, undefined, customExtensions);\n  } else {\n    return false;\n  }\n  return true;\n};\n\nmodule.exports = {\n  isCompatible: templateLoader.isCompatible,\n  init: init,\n  start: start\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","deps":{"./ext/util.js":"/Users/denea/mos/src/js/ext/util.js","./exp-manager.js":"/Users/denea/mos/src/js/exp-manager.js","./ext/localstorage.js":"/Users/denea/mos/src/js/ext/localstorage.js","./../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js","./ext/color.js":"/Users/denea/mos/src/js/ext/color.js","./ko-bindings.js":"/Users/denea/mos/src/js/ko-bindings.js","./undomanager/undomain.js":"/Users/denea/mos/src/js/undomanager/undomain.js","./ext/inliner.js":"/Users/denea/mos/src/js/ext/inliner.js","./template-loader.js":"/Users/denea/mos/src/js/template-loader.js","./timed-call.js":"/Users/denea/mos/src/js/timed-call.js","./custom.js":"/Users/denea/mos/src/js/custom.js"}},"/Users/denea/mos/src/js/converter/editor.js":{"file":"/Users/denea/mos/src/js/converter/editor.js","source":"(function (global){\n\"use strict\";\n\nvar console = require(\"./../../../bower_components/console-browserify/index.js\");\nvar elaborateDeclarations = require(\"./declarations.js\");\nvar utils = require('./utils.js');\nvar modelDef = require('./model.js');\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar _getOptionsObject = function(options) {\n  var optionsCouples = options.split('|');\n  var opts = {};\n  for (var i = 0; i < optionsCouples.length; i++) {\n    var opt = optionsCouples[i].split('=');\n    opts[opt[0]] = opt.length > 1 ? opt[1] : opt[0];\n  }\n  return opts;\n};\n\n// TODO this should not have hardcoded rules (we now have a way to declare them in the template definition)\n// Category \"style\" is used by editType \"styler\"\n// Cateogry \"content\" is used by editType \"edit\"\n// TODO maybe we should use a common string here, and rely only on the original category.\nvar _filterProps = function(model, editType, level) {\n  var res = [];\n  // Add here editable ko-attributes for possible different templates\n  var editableProps = ['buttonStyle', 'bigButtonStyle', 'buttonColor', 'backgroundColor', 'radius'];\n  for (var prop in model)\n    if (!prop.match(/^customStyle$/) && !prop.match(/^_/) && model.hasOwnProperty(prop)) {\n      var isStyleProp = model[prop] !== null && typeof model[prop]._category != 'undefined' && model[prop]._category == 'style';\n      if (prop == 'id' || prop == 'type' || prop.match(/Blocks$/)) {} else if (editType == 'styler' && editableProps.indexOf(prop) > -1) {\n        if (isStyleProp || level > 0 ) res.push(prop);\n      } else if (editType == 'edit') {\n        // Editing for properties in the \"content\" category but not defined in the context of a block\n        var isContentProp = model[prop] !== null && typeof model[prop]._category != 'undefined' && model[prop]._category == 'content' &&\n          (typeof model[prop]._context == 'undefined' || model[prop]._context != 'block');\n        if (isContentProp) res.push(prop);\n      } else if (typeof editType == 'undefined') {\n        res.push(prop);\n      }\n    }\n  return res;\n};\n\nvar _propInput = function(model, prop, propAccessor, editType, widgets) {\n  var html = \"\";\n  var widget;\n  if (model !== null && typeof model._widget != 'undefined') widget = model._widget;\n\n  if (typeof widget == 'undefined') {\n    throw \"Unknown data type for \" + prop;\n  }\n\n  // For content editors we deal with focusing (clicking is handled by the container DIV).\n  var onfocusbinding = 'focusable: true';\n  if (editType == 'edit') {\n    onfocusbinding += ', event: { focus: function(ui, event) { $($element).click(); } } ';\n  }\n\n  html += '<label class=\"data-' + widget + '\"' + (widget == 'boolean' ? ' data-bind=\"event: { mousedown: function(ui, evt) { if (evt.button == 0) { var input = $($element).find(\\'input\\'); var ch = input.prop(\\'checked\\'); setTimeout(function() { input.click(); input.prop(\\'checked\\', !ch); input.trigger(\\'change\\'); }, 0); } } }, click: function(ui, evt) { evt.preventDefault(); }, clickBubble: false\"' : '') + '>';\n\n  if (typeof widgets !== 'undefined' && typeof widgets[widget] !== 'undefined') {\n    var w = widgets[widget];\n    var parameters = {};\n    if (typeof w.parameters !== 'undefined')\n      for (var p in w.parameters)\n        if (w.parameters.hasOwnProperty(p) && typeof model['_'+p] !== 'undefined')\n          parameters[p] = model['_'+p];\n    html += w.html(propAccessor, onfocusbinding, parameters);\n  } else if (widget == 'boolean') {\n    html += '<input type=\"checkbox\" value=\"nothing\" data-bind=\"checked: ' + propAccessor + ', ' + onfocusbinding + '\" />';\n    html += '<span class=\"checkbox-replacer\" ></span>'; /* data-bind=\"css: { checked: '+propAccessor+' }\" */\n  } else if (widget == 'color') {\n    html += '<input size=\"7\" type=\"text\" data-bind=\"colorpicker: { color: ' + propAccessor + ', strings: $root.t(\\'Theme Colors,Standard Colors,Web Colors,Theme Colors,Back to Palette,History,No history yet.\\') }, ' + ', ' + onfocusbinding + '\" />';\n  } else if (widget == 'select') {\n    if (typeof model._options != 'undefined') {\n      var opts = _getOptionsObject(model._options);\n      // var opts = model._options;\n      html += '<select data-bind=\"value: ' + propAccessor + ', ' + onfocusbinding + '\">';\n      for (var opt in opts)\n        if (opts.hasOwnProperty(opt)) {\n          html += '<option value=\"' + opt + '\" data-bind=\"text: $root.ut(\\'template\\', \\'' + utils.addSlashes(opts[opt]) + '\\')\">' + opts[opt] + '</option>';\n        }\n      html += '</select>';\n    }\n  } else if (widget == 'font') {\n    html += '<select type=\"text\" data-bind=\"value: ' + propAccessor + ', ' + onfocusbinding + '\">';\n    html += '<optgroup label=\"Sans-Serif Fonts\">';\n    html += '<option value=\"Arial,Helvetica,sans-serif\">Arial</option>';\n    html += '<option value=\"\\'Comic Sans MS\\',cursive,sans-serif\">Comic Sans MS</option>';\n    html += '<option value=\"Impact,Charcoal,sans-serif\">Impact</option>';\n    html += '<option value=\"\\'Trebuchet MS\\',Helvetica,sans-serif\">Trebuchet MS</option>';\n    html += '<option value=\"Verdana,Geneva,sans-serif\">Verdana</option>';\n    html += '</optgroup>';\n    html += '<optgroup label=\"Serif Fonts\">';\n    html += '<option value=\"Georgia,serif\">Georgia</option>';\n    html += '<option value=\"\\'Times New Roman\\',Times,serif\">Times New Roman</option>';\n    html += '</optgroup>';\n    html += '<optgroup label=\"Monospace Fonts\">';\n    html += '<option value=\"\\'Courier New\\',Courier,monospace\">Courier New</option>';\n    html += '</optgroup>';\n    html += '</select>';\n  } else if (widget == 'url') {\n    html += '<div class=\"ui-textbutton\">';\n    // <a class=\"ui-spinner-button ui-spinner-down ui-corner-br ui-button ui-widget ui-state-default ui-button-text-only\" tabindex=\"-1\" role=\"button\"><span class=\"ui-button-text\"><span class=\"ui-icon fa fa-fw caret-down\">▼</span></span></a>\n    html += '<input class=\"ui-textbutton-input\" size=\"7\" type=\"url\" pattern=\"(mailto:.+@.+|https?://.+\\\\..+|\\\\[.*\\\\].*)\" value=\"nothing\" data-bind=\"css: { withButton: typeof $root.linkDialog !== \\'undefined\\' }, validatedValue: ' + propAccessor + ', ' + onfocusbinding + '\" />';\n    html += '<a class=\"ui-textbutton-button\" data-bind=\"visible: typeof $root.linkDialog !== \\'undefined\\', click: typeof $root.linkDialog !== \\'undefined\\' ? $root.linkDialog.bind($element.previousSibling) : false, button: { icons: { primary: \\'fa fa-fw fa-ellipsis-h\\' }, label: \\'Opzioni\\', text: false }\">Opzioni</a>';\n    html += '</div>';\n  } else if (widget == 'integer') {\n    // at this time the \"step\" depends on max being greater than 100.\n    // maybe we should expose \"step\" as a configuration, too\n    var min = 0;\n    var max = 1000;\n    if (model !== null && typeof model._max !== 'undefined') max = model._max;\n    if (model !== null && typeof model._min !== 'undefined') min = model._min;\n    var step = (max - min) >= 100 ? 10 : 1;\n    var page = step * 5;\n    html += '<input class=\"number-spinner\" size=\"7\" step=\"' + step + '\" type=\"number\" value=\"-1\" data-bind=\"spinner: { min: ' + min + ', max: ' + max + ', page: ' + page + ', value: ' + propAccessor + ' }, valueUpdate: [\\'change\\', \\'spin\\']' + ', ' + onfocusbinding + '\" />';\n  } else {\n    html += '<input size=\"7\" type=\"text\" value=\"nothing\" data-bind=\"value: ' + propAccessor + ', ' + onfocusbinding + '\" />';\n  }\n\n  html += '</label>';\n\n  return html;\n};\n\nvar _getGlobalStyleProp = function(globalStyles, model, prop, path) {\n  var globalStyleProp;\n  if (typeof model !== 'object' || model === null || typeof model._widget !== 'undefined') {\n    if (typeof prop !== 'undefined' && typeof path !== 'undefined' && path.length > 0 && typeof globalStyles == 'object' && typeof globalStyles[path] != 'undefined') {\n      globalStyleProp = globalStyles[path];\n    }\n  }\n  return globalStyleProp;\n};\n\nvar _propEditor = function(withBindingProvider, widgets, templateUrlConverter, model, themeModel, path, prop, editType, level, baseThreshold, globalStyles, globalStyleProp, trackUsage, rootPreviewBinding, previewBackground) {\n  if (typeof level == 'undefined') level = 0;\n\n  if (typeof prop !== 'undefined' && typeof model == 'object' && model !== null && typeof model._usecount === 'undefined') {\n    console.log(\"TODO EDITOR ignoring\", path, \"property because it is not used by the template\", \"prop:\", prop, \"type:\", editType, \"level:\", level, withBindingProvider._templateName);\n    return \"\";\n  }\n\n  var propAccessor = typeof globalStyleProp != 'undefined' ? prop + '._defaultComputed' : prop;\n  var html = \"\";\n  var title;\n  var ifSubsProp = propAccessor;\n  var ifSubsGutter = 1;\n  // typeof globalStyleProp != 'undefined' ? 1 : 2;\n  var ifSubsThreshold = 1;\n\n  // The visibility handling is a PITA\n  // \n  // Here are some \"edge cases\" to test whenever we change something here:\n  // LM social footer: removing shareVisibile must be reflected in the booleans sub-checks\n  // FLUID social block: multiple clicks on the \"wand\" should not make the editor invisible\n  // BIS heroMenu - By changing the menu visibility it should be reflected in style editors for the menu links\n  // FLUID almost every block with a color variant sometimes keeps showing style editor for the hidden variant.\n  if (typeof model == 'object' && model !== null && typeof model._widget == 'undefined') {\n    // Do nothing here\n  } else {\n    if (typeof globalStyleProp == 'undefined') {\n      ifSubsGutter += 1;\n    }\n  }\n\n  // NOTE baseThreshold is added only when globalStyle is not defined because when we have globalStyle\n  // we're going to bind the computed values and not the original and this way we don't add ourserf to the dependency \n  // tracking (subscriptionCount)\n  // NOTE baseThreshold is an \"expression\" and not a fixed number, so this is a concatenation\n  if (typeof globalStyleProp == 'undefined' && typeof baseThreshold !== 'undefined') ifSubsThreshold += baseThreshold;\n\n  if (typeof prop != 'undefined' && !!trackUsage) {\n    html += '<!-- ko ifSubs: { data: ' + ifSubsProp + ', threshold: ' + ifSubsThreshold + ', gutter: ' + ifSubsGutter + '} -->';\n  }\n\n  if (typeof prop != 'undefined' && (model === null || typeof model._name == 'undefined')) {\n    // TODO throw exception?\n    console.log(\"TODO WARN Missing label for property \", prop);\n  }\n  if (typeof prop == 'undefined' && model !== null && typeof model._name == 'undefined') {\n    console.log(\"TODO WARN Missing label for object \", model.type /*, model */ );\n  }\n\n  if (typeof model == 'object' && model !== null && typeof model._widget == 'undefined') {\n    var props = _filterProps(model, editType, level);\n\n    var hasCustomStyle = editType == 'styler' && model !== null && typeof model.customStyle !== 'undefined' && typeof globalStyleProp !== 'undefined';\n    var selectedItemBinding = '';\n    var additionalClasses = '';\n    if (typeof prop !== 'undefined' && editType == 'edit') {\n      selectedItemBinding = ', click: function(obj, evt) { $root.selectItem(' + prop + ', $data); return false }, clickBubble: false, css: { selecteditem: $root.isSelectedItem(' + prop + ') }, scrollIntoView: $root.isSelectedItem(' + prop + '), ';\n      additionalClasses += ' selectable';\n    }\n    if (hasCustomStyle) {\n      additionalClasses += ' supportsCustomStyles';\n    }\n    html += '<div class=\"objEdit level' + level + additionalClasses + '\" data-bind=\"tooltips: {}' + selectedItemBinding + '\">';\n    var modelName = (model !== null && typeof model._name != 'undefined' ? model._name : (typeof prop !== 'undefined' ? '[' + prop + ']' : ''));\n    if (hasCustomStyle) {\n      var themeSectionName = 'Stile';\n      if (typeof themeModel !== 'undefined' && themeModel !== null && typeof themeModel._name !== 'undefined') {\n        themeSectionName = themeModel._name;\n      } else {\n        console.log(\"TODO missing label for theme section \", prop, model !== null ? model.type : '-');\n      }\n\n      modelName = '<span class=\"blockSelectionMethod\" data-bind=\"text: customStyle() ? $root.ut(\\'template\\', \\'' + utils.addSlashes(modelName) + '\\') : $root.ut(\\'template\\', \\'' + utils.addSlashes(themeSectionName) + '\\')\">Block</span>';\n    } else {\n      modelName = '<span data-bind=\"text: $root.ut(\\'template\\', \\'' + utils.addSlashes(modelName) + '\\')\">' + modelName + '</span>';\n    }\n    title = model !== null && typeof model._help !== 'undefined' ? ' title=\"' + utils.addSlashes(model._help) + '\" data-bind=\"attr: { title: $root.ut(\\'template\\', \\'' + utils.addSlashes(model._help) + '\\') }\"' : '';\n    \n    if(level == '0' || level == '1'){\n      html += '<span' + title + ' class=\"objLabel level' + level + '\">' + modelName + '</span>';\n    }\n\n    if (editType == 'edit' && typeof model._blockDescription !== 'undefined') {\n      html += '<div class=\"blockDescription\" data-bind=\"html: $root.ut(\\'template\\', \\'' + utils.addSlashes(model._blockDescription) + '\\')\">' + model._blockDescription + '</div>';\n    }\n\n    /* CUSTOM STYLE */\n    if (hasCustomStyle) {\n      html += '<label class=\"data-boolean blockCheck\" data-bind=\"tooltips: { }\">';\n      html += '<input type=\"checkbox\" value=\"nothing\" data-bind=\"focusable: true, checked: customStyle\" />';\n      html += '<span title=\"Switch between global and block level styles editing\" data-bind=\"attr: { title: $root.t(\\'Switch between global and block level styles editing\\') }\" class=\"checkbox-replacer checkbox-replacer-onoff\"></span>'; //  data-bind=\"tooltip: { content: \\'personalizza tutti\\' }\"\n      html += '</label>';\n      html += '<!-- ko template: { name: \\'customstyle\\', if: customStyle } --><!-- /ko -->';\n    }\n\n    if (typeof prop != 'undefined') {\n      html += '<!-- ko with: ' + prop + ' -->';\n\n      /* PREVIEW */\n      if (level == 1 && typeof prop != 'undefined') {\n        if (typeof model._previewBindings != 'undefined' && typeof withBindingProvider != 'undefined') {\n          if (typeof rootPreviewBinding != 'undefined') html += '<!-- ko with: $root.content() --><div class=\"objPreview\" data-bind=\"' + rootPreviewBinding + '\"></div><!-- /ko -->';\n          if (typeof previewBackground != 'undefined') html += '<!-- ko with: $parent --><div class=\"objPreview\" data-bind=\"' + previewBackground + '\"></div><!-- /ko -->';\n          var previewBindings = elaborateDeclarations(undefined, model._previewBindings, templateUrlConverter, withBindingProvider.bind(this, path + '.'));\n          // Commented since we dont need a preview\n          //html += '<div class=\"objPreview\"><div class=\"objPreviewInner\" data-bind=\"' + previewBindings + '\"></div></div>';\n        }\n      }\n    }\n\n    /* PREVIEW */\n    var previewBG;\n    if (level === 0) {\n      if (typeof model._previewBindings != 'undefined') {\n        previewBG = elaborateDeclarations(undefined, model._previewBindings, templateUrlConverter, withBindingProvider.bind(this, path.length > 0 ? path + '.' : ''));\n      }\n    }\n\n    var i, newPath;\n\n    var before = html.length;\n\n    var newThemeModel;\n    var newGlobalStyleProp;\n\n    for (i = 0; i < props.length; i++) {\n      newPath = path.length > 0 ? path + \".\" + props[i] : props[i];\n      if (typeof model[props[i]] != 'object' || model[props[i]] === null || typeof model[props[i]]._widget != 'undefined') {\n        newGlobalStyleProp = undefined;\n        if (level === 0 && props[i] == 'theme')\n          html += _propEditor(withBindingProvider, widgets, templateUrlConverter, model[props[i]], newThemeModel, newPath, props[i], editType, 0, baseThreshold, undefined, undefined, trackUsage, rootPreviewBinding);\n        else {\n          newGlobalStyleProp = _getGlobalStyleProp(globalStyles, model[props[i]], props[i], newPath);\n          html += _propEditor(withBindingProvider, widgets, templateUrlConverter, model[props[i]], newThemeModel, newPath, props[i], editType, level + 1, baseThreshold, globalStyles, newGlobalStyleProp, trackUsage, rootPreviewBinding, previewBG);\n        }\n      }\n    }\n    for (i = 0; i < props.length; i++) {\n      newPath = path.length > 0 ? path + \".\" + props[i] : props[i];\n      if (!(typeof model[props[i]] != 'object' || model[props[i]] === null || typeof model[props[i]]._widget != 'undefined')) {\n        newGlobalStyleProp = undefined;\n        if (level === 0 && props[i] == 'theme')\n          html += _propEditor(withBindingProvider, widgets, templateUrlConverter, model[props[i]], newThemeModel, newPath, props[i], editType, 0, baseThreshold, undefined, undefined, trackUsage, rootPreviewBinding);\n        else {\n          newGlobalStyleProp = _getGlobalStyleProp(globalStyles, model[props[i]], props[i], newPath);\n          html += _propEditor(withBindingProvider, widgets, templateUrlConverter, model[props[i]], newThemeModel, newPath, props[i], editType, level + 1, baseThreshold, globalStyles, newGlobalStyleProp, trackUsage, rootPreviewBinding, previewBG);\n        }\n      }\n    }\n\n    var added = html.length - before;\n    if (added === 0) {\n      // No editable content: if this is in context \"template\" we leave it empty, otherwise we show an help.\n      if (typeof model == 'object' && model !== null && model._context == 'template') {\n        return '';\n      } else {\n        // TODO move me to a tmpl?\n        html += '<div class=\"objEmpty\" data-bind=\"html: $root.t(\\'Selected element does not seem to have editable links, buttons or images \\')\">Selected element does not seem to have editable links, buttons or images</div>';\n      }\n    }\n\n    if (typeof prop != 'undefined') {\n      html += '<!-- /ko -->';\n    }\n    html += '</div>';\n\n  } else {\n    var checkboxes = true;\n\n    if (typeof globalStyles == 'undefined') checkboxes = false;\n\n    if (model === null || typeof model != 'object' || typeof model._widget != 'undefined') {\n      var bindings = [];\n\n      if (typeof globalStyleProp != 'undefined') bindings.push('css: { notnull: ' + prop + '() !== null }');\n      title = model !== null && typeof model._help !== 'undefined' ? ' title=\"' + utils.addSlashes(model._help) + '\" data-bind=\"attr: { title: $root.ut(\\'template\\', \\'' + utils.addSlashes(model._help) + '\\') }\"' : '';\n      if (title.length > 0) bindings.push('tooltips: {}');\n      var bind = bindings.length > 0 ? 'data-bind=\"' + utils.addSlashes(bindings.join()) + '\"' : '';\n      html += '<div class=\"propEditor ' + (checkboxes ? 'checkboxes' : '') + '\"' + bind + '>';\n\n      var modelName2 = (model !== null && typeof model._name != 'undefined' ? model._name : (typeof prop !== 'undefined' ? '[' + prop + ']' : ''));\n      modelName2 = '<span data-bind=\"text: $root.ut(\\'template\\', \\'' + utils.addSlashes(modelName2) + '\\')\">' + modelName2 + '</span>';\n      html += '<span' + title + ' class=\"propLabel\">' + modelName2 + '</span>';\n      html += '<div class=\"propInput ' + (typeof globalStyles != 'undefined' ? 'local' : '') + '\" data-bind=\"css: { default: ' + prop + '() === null }\">';\n      html += _propInput(model, prop, propAccessor, editType, widgets);\n      html += '</div>';\n      if (typeof globalStyleProp != 'undefined') {\n        html += '<div class=\"propInput global\" data-bind=\"css: { overridden: ' + prop + '() !== null }\">';\n        html += _propInput(model, prop, globalStyleProp, editType, widgets);\n        html += '</div>';\n\n        if (checkboxes) {\n          html += '<div class=\"propCheck\"><label data-bind=\"tooltips: {}\"><input type=\"checkbox\" data-bind=\"focusable: true, click: function(evt, obj) { $root.localGlobalSwitch(' + prop + ', ' + globalStyleProp + '); return true; }, checked: ' + prop + '() !== null\">';\n          html += '<span class=\"checkbox-replacer\" data-bind=\"css: { checked: ' + prop + '() !== null }, attr: { title: $root.t(\\'This style is specific for this block: click here to remove the custom style and revert to the theme value\\') }\"></span>';\n          html += '</label></div>';\n        }\n      }\n      html += '</div>';\n    } else if (model === null || typeof model != 'object') {\n      // TODO remove debug output\n      html += '<div class=\"propEditor unknown\">[A|' + prop + \"|\" + typeof model + ']</div>';\n    } else {\n      // TODO remove debug output\n      html += '<div class=\"propEditor unknown\">[B|' + prop + \"|\" + typeof model + ']</div>';\n    }\n\n\n  }\n\n  if (typeof prop != 'undefined' && !!trackUsage) {\n    html += '<!-- /ko -->';\n    html += '<!-- ko ifSubs: { not: true, data: ' + ifSubsProp + ', threshold: ' + ifSubsThreshold + ', gutter: 0 } -->';\n    html += '<span class=\"label notused\">(' + prop + ')</span>';\n    html += '<!-- /ko -->';\n  }\n\n  return html;\n};\n\n\nvar createBlockEditor = function(defs, widgets, themeUpdater, templateUrlConverter, rootModelName, templateName, editType, templateCreator, baseThreshold, trackGlobalStyles, trackUsage, fromLevel) {\n  if (typeof trackUsage == 'undefined') trackUsage = true;\n  var model = modelDef.getDef(defs, templateName);\n\n  var rootModel = modelDef.getDef(defs, rootModelName);\n  var rootPreviewBindings;\n  if (typeof rootModel._previewBindings != 'undefined' && templateName != 'theme' && editType == 'styler') {\n    rootPreviewBindings = elaborateDeclarations(undefined, rootModel._previewBindings, templateUrlConverter, modelDef.getBindValue.bind(undefined, defs, themeUpdater, rootModelName, rootModelName, ''));\n  }\n\n  var globalStyles = typeof trackGlobalStyles != 'undefined' && trackGlobalStyles ? defs[templateName]._globalStyles : undefined;\n  var globalStyleProp = typeof trackGlobalStyles != 'undefined' && trackGlobalStyles ? defs[templateName]._globalStyle : undefined;\n\n\n  var themeModel;\n  if (typeof globalStyleProp !== 'undefined') {\n    var mm = modelDef.getDef(defs, 'theme');\n    // TODO remove deprecated $theme\n    themeModel = mm[globalStyleProp.replace(/^(\\$theme|_theme_)\\./, '')];\n  }\n\n\n  var withBindingProvider = modelDef.getBindValue.bind(undefined, defs, themeUpdater, rootModelName, templateName);\n  withBindingProvider._templateName = templateName;\n\n  var html = '<div class=\"editor\">';\n  html += \"<div class=\\\"blockType\" + (typeof globalStyles != 'undefined' ? \" withdefaults\" : \"\") + \"\\\">\" + model.type + \"</div>\";\n\n  var editorContent = _propEditor(withBindingProvider, widgets, templateUrlConverter, model, themeModel, \"\", undefined, editType, fromLevel, baseThreshold, globalStyles, globalStyleProp, trackUsage, rootPreviewBindings);\n  if (editorContent.length > 0) {\n    html += editorContent;\n  }\n\n  html += '</div>';\n\n  templateCreator(html, templateName, editType);\n};\n\nvar createBlockEditors = function(defs, widgets, themeUpdater, templateUrlConverter, rootModelName, templateName, templateCreator, baseThreshold) {\n  createBlockEditor(defs, widgets, themeUpdater, templateUrlConverter, rootModelName, templateName, 'edit', templateCreator, baseThreshold);\n  createBlockEditor(defs, widgets, themeUpdater, templateUrlConverter, rootModelName, templateName, 'styler', templateCreator, baseThreshold, true);\n};\n\nvar generateEditors = function(templateDef, widgets, templateUrlConverter, templateCreator, baseThreshold) {\n  var defs = templateDef._defs;\n  var templateName = templateDef.templateName;\n  var blocks = templateDef._blocks;\n  var idx;\n  var blockDefs = [];\n  for (idx = 0; idx < blocks.length; idx++) {\n    if (typeof blocks[idx].container !== 'undefined') {\n      blockDefs.push(modelDef.generateModel(defs, blocks[idx].block));\n    }\n    createBlockEditors(defs, widgets, undefined, templateUrlConverter, blocks[idx].root, blocks[idx].block, templateCreator, baseThreshold);\n  }\n\n  if (typeof defs['theme'] != 'undefined') createBlockEditor(defs, widgets, undefined, templateUrlConverter, templateName, 'theme', 'styler', templateCreator, undefined, false, false, -1);\n  return blockDefs;\n};\n\nmodule.exports = generateEditors;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","deps":{"./model.js":"/Users/denea/mos/src/js/converter/model.js","./utils.js":"/Users/denea/mos/src/js/converter/utils.js","./declarations.js":"/Users/denea/mos/src/js/converter/declarations.js","./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/build/templates.js":{"file":"/Users/denea/mos/build/templates.js","source":"var templateSystem = require('../src/js/bindings/choose-template.js');\ndocument.addEventListener('DOMContentLoaded', function(event) {\ntemplateSystem.addTemplate(\"array\", \"<!-- ko foreach: $data --><!-- ko block: $data --><!-- /ko --><!-- /ko -->\");\ntemplateSystem.addTemplate(\"block-show\", \"<!-- ko block: $data, scrollIntoView: $root.selectedBlock() === $data --><!-- /ko -->\");\ntemplateSystem.addTemplate(\"block-wysiwyg\", \"<div class=\\x22editable block\\x22 data-drop-content=\\x22Drop here\\x22 data-bind=\\x22attr: { 'data-drop-content': $root.t('Drop here') }, click: function(obj, evt) { $root.selectBlock(obj); return true }, clickBubble: false, css: { selected: $root.selectedBlock() === $data }, scrollIntoView: $root.selectedBlock() === $data\\x22>  <div class=\\x22mo-blockselectionhelper\\x22></div>  <div class=\\x22tools\\x22 data-bind=\\x22tooltips: {}\\x22>    <!-- ko if: typeof $index != 'undefined' -->    <div title=\\x22Drag this handle to move the block\\x22 data-bind=\\x22attr: { title: $root.t('Drag this handle to move the block') }\\x22 class=\\x22tool handle\\x22><i class=\\x22fa fa-fw fa-sort\\x22></i></div>    <!-- ko if: $index() > 0 -->    <div title=\\x22Move this block upside\\x22 data-bind=\\x22attr: { title: $root.t('Move this block upside') }\\x22 class=\\x22tool moveup\\x22><i class=\\x22fa fa-fw fa-sort-asc\\x22 data-bind='click: $root.moveBlock.bind($element, $index, $parent, true)'></i></div>    <!-- /ko -->    <!-- ko if: $index() < $parent.blocks().length -1 -->    <div title=\\x22Move this block downside\\x22 data-bind=\\x22attr: { title: $root.t('Move this block downside') }\\x22 class=\\x22tool movedown\\x22><i class=\\x22fa fa-fw fa-sort-desc\\x22 data-bind='click: $root.moveBlock.bind($element, $index, $parent, false)'></i></div>    <!-- /ko -->    <div title=\\x22Delete block\\x22 class=\\x22tool delete\\x22 data-bind=\\x22attr: { title: $root.t('Delete block') }, click: $root.removeBlock.bind($element, $rawData, $parent)\\x22><i class=\\x22fa fa-fw fa-trash-o\\x22></i></div>    <div title=\\x22Duplicate block\\x22 class=\\x22tool clone\\x22 data-bind=\\x22attr: { title: $root.t('Duplicate block') }, click: $root.duplicateBlock.bind($element, $index, $parent)\\x22><i class=\\x22fa fa-fw fa-files-o\\x22></i></div>    <!-- /ko -->    <!-- ko if: typeof $data._nextVariant != 'undefined' --><div title=\\x22Switch block variant\\x22 class=\\x22tool variant\\x22 data-bind=\\x22attr: { title: $root.t('Switch block variant') }, click: $data._nextVariant\\x22><i class=\\x22fa fa-fw fa-magic\\x22></i></div><!-- /ko -->  </div>  <!-- ko block: $data --><!-- /ko --></div>\");\ntemplateSystem.addTemplate(\"blocks-show\", \"<!-- ko template: { name: 'block-show', foreach: blocks } --><!-- /ko -->\");\ntemplateSystem.addTemplate(\"blocks-wysiwyg\", \"<div class=\\x22sortable-blocks-edit\\x22 data-drop-content=\\x22Drop here\\x22 data-empty-content=\\x22Drop here blocks from the Blocks tab\\x22 data-bind=\\x22attr: { 'data-drop-content': $root.t('Drop here'), 'data-empty-content': $root.t('Drop here blocks from the &quot;Blocks&quot; tab') }, css: { 'empty': ko.utils.unwrapObservable(blocks).length == 0 }, extsortable: { connectClass: 'sortable-blocks-edit', template: 'block-wysiwyg', data: blocks, dragging: $root.dragging, beforeMove: $root.startMultiple, afterMove: $root.stopMultiple, options: { handle: '.handle', placeholder: $root.placeholderHelper } }\\x22></div>\");\ntemplateSystem.addTemplate(\"customstyle\", \"<div class=\\x22customStyleHelp\\x22></div>\");\ntemplateSystem.addTemplate(\"empty\", \"\");\ntemplateSystem.addTemplate(\"error\", \"[<div style=\\x22background-color: #fff0f0\\x22 data-bind=\\x22text: ko.toJS($data)\\x22></div>]\");\ntemplateSystem.addTemplate(\"gallery-images\", \"<div data-bind=\\x22foreach: items.currentPageData\\x22>  <div class=\\x22draggable-item\\x22 data-bind=\\x22if: typeof thumbnailUrl != 'undefined'\\x22>    <div class=\\x22draggable image\\x22 data-bind=\\x22click: $root.addImage, extdraggable: { data: $data, dropContainer: '#main-wysiwyg-area', dragging: $root.draggingImage, 'options': { 'appendTo': '.container-main' } }, style: { backgroundImage: 'url(\\\\'' + thumbnailUrl + '\\\\')' }\\x22>      <img title=\\x22Drag this image and drop it on any template image placeholder\\x22 style=\\x22display: block;\\x22 data-bind=\\x22tooltips: {}, attr: { src: thumbnailUrl, 'title': $root.t('Drag this image and drop it on any template image placeholder') }\\x22/>    </div>  </div></div><!-- ko if: items.pageCount() > 1 --><div class=\\x22galleryPager\\x22 data-bind=\\x22buttonset: {}\\x22>  <a href=\\x22javascript:void(0)\\x22 data-bind=\\x22click: items.moveFirst, button: { disabled: items.currentPage() == 1, icons: { primary: 'fa fa-fast-backward' }, text: false }\\x22>First</a>  <a href=\\x22javascript:void(0)\\x22 data-bind=\\x22click: items.movePrevious, button: { disabled: items.currentPage() == 1, icons: { primary: 'fa fa-backward' }, text: false }\\x22>Previous</a>  <span data-bind=\\x22button: { disabled: true, text: true, label: ' '+items.currentPage()+' of '+items.pageCount()+' ' }\\x22> X of Y </span>  <a href=\\x22javascript:void(0)\\x22 data-bind=\\x22click: items.moveNext, button: { disabled: items.currentPage() == items.pageCount(), icons: { primary: 'fa fa-forward' }, text: false }\\x22>Next</a>  <a href=\\x22javascript:void(0)\\x22 data-bind=\\x22click: items.moveLast, button: { disabled: items.currentPage() == items.pageCount(), icons: { primary: 'fa fa-fast-forward' }, text: false }\\x22>Last</a></div><!-- /ko -->\");\ntemplateSystem.addTemplate(\"img-wysiwyg\", \"<table tabfocus=\\x220\\x22 cellspacing=\\x220\\x22 cellpadding=\\x220\\x22 data-drop-content=\\x22Drop here\\x22 data-bind=\\x22style: _stylebind, click: function(obj, evt) { $root.selectItem(_item, _data); return true; }, clickBubble: false, fudroppable: { activeClass: 'ui-state-highlight', hoverClass: 'ui-state-draghover' }, droppable: { options: { accept: '.image', activeClass: 'ui-state-highlight', hoverClass: 'ui-state-draghover' }, data: _src, dragged: $root.fileToImage }, css: { selecteditem: $root.isSelectedItem(_item) }, scrollIntoView: $root.isSelectedItem(_item), attr: { 'data-drop-content': $root.t('Drop here'), width: _width, height: _height, align: _align }\\x22  class=\\x22img-wysiwyg selectable-img\\x22 style=\\x22display: table;\\x22><tr><td class=\\x22uploadzone\\x22>  <div class=\\x22mo-imgselectionhelper\\x22></div>  <div class=\\x22mo-uploadzone\\x22></div>  <div class=\\x22img-size\\x22 data-bind=\\x22text: _size\\x22>size</div>  <div class=\\x22midtools\\x22 data-bind=\\x22tooltips: {}\\x22>    <!-- ko if: _src() != '' -->    <div title=\\x22Remove image\\x22 class=\\x22tool delete\\x22 data-bind=\\x22attr: { title: $root.t('Remove image') }, click: _src.bind(_src, ''), clickBubble: false\\x22><i class=\\x22fa fa-fw fa-trash-o\\x22></i></div>    <!-- ko if: typeof $root.editImage !== 'undefined' -->    <div title=\\x22Open the image editing tool\\x22 class=\\x22tool edit\\x22 data-bind=\\x22attr: { title: $root.t('Open the image editing tool') }, click: $root.editImage.bind($element, _src), clickBubble: false\\x22><i class=\\x22fa fa-fw fa-pencil\\x22></i></div>    <!-- /ko -->    <!-- /ko -->    <!-- ko if: _src() == '' -->    <div title=\\x22Upload a new image\\x22 data-bind=\\x22attr: { title: $root.t('Upload a new image') }\\x22 class=\\x22tool upload\\x22 style=\\x22position: relative; overflow: hidden;\\x22><i class=\\x22fa fa-fw fa-upload\\x22></i>      <input class=\\x22fileupload nofile\\x22 type=\\x22file\\x22 name=\\x22files[]\\x22 data-bind=\\x22fileupload: { data: _src, onerror: $root.notifier.error, onfile: $root.loadImage, canvasPreview: true }\\x22 style=\\x22z-index: 20; position: absolute; top: 0; left: 0; right: 0; bottom: 0; min-width: 100%; min-height: 100%; font-size: 999px; text-align: right; filter: alpha(opacity=0); opacity: 0; outline: none; cursor: inherit; display: block\\x22>    </div>    <!-- /ko -->  </div>  <!-- ko template: _template --><!-- /ko -->  <!-- ko if: _src() == '' -->    <!--    <img style=\\x22display: block;\\x22 class=\\x22imgplaceholder\\x22 width=\\x22200\\x22 src=\\x22\\x22 alt=\\x22Insert an image here\\x22 data-bind=\\x22wysiwygSrc: { src: _src.preloaded, placeholder: _placeholdersrc, width: _width, height: _height, method: _method }\\x22 />    -->    <span class=\\x22fileuploadtext\\x22 style=\\x22text-align: center; display: -ms-flexbox; display: flex; align-items: center; flex-align: center; justify-content: center; padding: 1em; position: absolute; top: 0; left: 0; right: 0; bottom: 0;\\x22><span class=\\x22textMiddle\\x22 style=\\x22 text-shadow: 1px 1px 0 #FFFFFF, 0 0 10px #FFFFFF; font-weight: bold;\\x22 data-bind=\\x22text: $root.t('Drop an image here')\\x22>Drop an image here</span></span>  <!-- /ko -->  <!-- ko if: _src() != '' -->  <!--    <img style=\\x22display: block;\\x22 width=\\x22200\\x22 src=\\x22\\x22 data-bind=\\x22preloader: _src, wysiwygSrc: { src: _src.preloaded, placeholder: _placeholdersrc, width: _width, height: _height, method: _method }\\x22 />    -->  <!-- /ko -->  <!-- pulsante per la cancellazione -->  <div title=\\x22Drop an image here or click the upload button\\x22 data-bind=\\x22attr: { title: $root.t('Drop an image here or click the upload button') }, tooltips: {}\\x22 class=\\x22workzone\\x22 style=\\x22position: absolute; top: 0; left: 0; right: 0; bottom: 0; overflow: hidden;\\x22>    <!-- ko if: _src.preloaded && _src() != _src.preloaded() -->PRELOADING....<!-- /ko -->    <!-- ko if: _src() != '' -->      <input class=\\x22fileupload withfile\\x22 type=\\x22file\\x22 name=\\x22files[]\\x22 data-bind=\\x22fileupload: { data: _src, onerror: $root.notifier.error, onfile: $root.galleryRecent.unshift.bind($root.galleryRecent), canvasPreview: true }\\x22 style=\\x22z-index: -20; position: absolute; top: 0; left: 0; right: 0; bottom: 0; min-width: 100%; min-height: 100%; font-zie: 999px; text-align: right; filter: alpha(opacity=0); opacity: 0; outline: none; cursor: inherit; display: block\\x22>    <!-- /ko -->    <div class=\\x22progress\\x22 style=\\x22opacity: .5; width: 80%; margin-left: 10%; position: absolute; bottom: 30%; height: 20px; border: 2px solid black;\\x22>      <div class=\\x22progress-bar progress-bar-success\\x22 style=\\x22height: 20px; background-color: black; \\x22></div>    </div>  </div></table>\");\ntemplateSystem.addTemplate(\"main\", \"<div class=\\x22tinyMCE-card\\x22>  <div class=\\x22tinyMCE-card__content\\x22>    <div class=\\x22tinyMCE-header\\x22>      <span class=\\x22undo-redo\\x22 data-bind=\\x22buttonset: { }\\x22>        <a title=\\x22Undo last operation\\x22 href=\\x22javascript:void(0)\\x22 data-bind=\\x22attr: { title: $root.t('Undo last operation') }, click: $root.undo.execute, clickBubble: false, button: { disabled: !$root.undo.enabled(), icons: { primary: 'mce-ico mce-i-undo' }}\\x22></a>        <a title=\\x22Redo last operation\\x22 href=\\x22javascript:void(0)\\x22 data-bind=\\x22attr: { title: $root.t('Redo last operation') }, click: $root.redo.execute, clickBubble: false, button: { disabled: !$root.redo.enabled(), icons: { primary: 'mce-ico mce-i-redo' }}\\x22></a>      </span>    </div>    <div id=\\x22main-edit-area\\x22 data-bind=\\x22click: function(obj, evt) { $root.selectBlock(null); return true; }, clickBubble: false\\x22>      <!-- ko withProperties: { templateMode: 'wysiwyg', templateModeFallback: 'show' } -->      <div id=\\x22main-wysiwyg-area\\x22 data-bind=\\x22wysiwygScrollfix: true, scrollable: true, fudroppable: { active: draggingImage }, css: { isdragging: dragging, isdraggingimg: draggingImage }, block: content\\x22></div>      <!-- /ko -->    </div>  </div></div><div id=\\x22page\\x22 style=\\x22display: none;\\x22 data-bind=\\x22visible: true, css: { withToolbox: $root.showToolbox, withPreviewFrame: showPreviewFrame }\\x22>  <div id=\\x22toolbar\\x22 class=\\x22mo\\x22 data-bind=\\x22tooltips: {}\\x22>    <!-- ko if: typeof $root.undo != 'undefined' -->        <!-- ko if: $root.debug -->    <a href=\\x22javascript:void(0)\\x22 data-bind=\\x22click: $root.undoReset, clickBubble: false, button: { disabled: !$root.undo.enabled() && !$root.redo.enabled(), label: 'reset', text: true }\\x22>RESET</a>    <!-- /ko -->    <!-- /ko -->    <span>    <input id=\\x22showGallery\\x22 type=\\x22checkbox\\x22 data-bind=\\x22checked: $root.showGallery, button: { refreshOn: $root.showGallery,     icons: { primary: 'fa fa-fw fa-picture-o', secondary: null }, text: true, label: $root.t('Gallery') }\\x22><label title=\\x22Show image gallery\\x22 for=\\x22showGallery\\x22 data-bind=\\x22attr: { title: $root.t('Show image gallery') }\\x22>show gallery</label></input>    </span>    <input id=\\x22previewFrameToggle\\x22 type=\\x22checkbox\\x22 data-bind=\\x22checked: $root.showPreviewFrame, button: { refreshOn: $root.showPreviewFrame, icons: { primary: 'fa fa-fw fa-tablet', secondary: null }, text: false, label: $root.t('Preview') }\\x22><label title=\\x22Show live preview\\x22 for=\\x22previewFrameToggle\\x22 data-bind=\\x22attr: { title: $root.t('Show live preview') }\\x22>PREVIEW</label></input>    <!-- ko if: $root.debug -->    <a href=\\x22javascript:void(0)\\x22 data-bind=\\x22click: $root.export, clickBubble: false, button: { label: 'export', text: true }\\x22>EXPORT</a>    <input type=\\x22checkbox\\x22 data-bind=\\x22checked: $root.debug\\x22 /> debug    <a href=\\x22javascript:void(0)\\x22 data-bind=\\x22click: $root.loadDefaultBlocks, clickBubble: false, button: { icons: { primary: 'fa fa-fw fa-upload' }, label: 'Default', text: true }\\x22>LOAD BLOCKS</a>    [<a id=\\x22subscriptionsCount\\x22 href=\\x22javascript:viewModel.loopSubscriptionsCount()\\x22>subs</a>]    <!-- /ko -->    <span data-bind=\\x22visible: false\\x22>    <input type=\\x22checkbox\\x22 data-bind=\\x22checked: $root.showToolbox\\x22 /> toolbox    </span>    <div class=\\x22rightButtons\\x22>    <!-- ko if: typeof $root.save !== 'undefined' -->    <a title=\\x22Save template\\x22 href=\\x22javascript:void(0)\\x22 data-bind=\\x22attr: { title: $root.t('Save template') }, click: $root.save.execute, clickBubble: false, button: { disabled: !$root.save.enabled(), icons: { primary: 'fa fa-fw fa-cloud-upload' }, label: $root.t($root.save.name), text: true }\\x22>SALVA</a>    <!-- /ko -->    <!-- ko if: typeof $root.test !== 'undefined' -->    <a title=\\x22Show preview and send test\\x22 href=\\x22javascript:void(0)\\x22 data-bind=\\x22attr: { title: $root.t('Show preview and send test') }, click: $root.test.execute, clickBubble: false, button: { disabled: !$root.test.enabled(), icons: { primary: 'fa fa-fw fa-paper-plane' }, label: $root.t($root.test.name), text: true }\\x22>TEST</a>    <!-- /ko -->    <!-- ko if: typeof $root.download !== 'undefined' -->    <form id=\\x22downloadForm\\x22 action=\\x22#\\x22 method=\\x22POST\\x22>    <input type=\\x22hidden\\x22 name=\\x22action\\x22 value=\\x22download\\x22 />    <input type=\\x22hidden\\x22 name=\\x22filename\\x22 value=\\x22email.html\\x22 />    <input type=\\x22hidden\\x22 name=\\x22html\\x22 id=\\x22downloadHtmlTextarea\\x22 />    <a title=\\x22Download template\\x22 href=\\x22javascript:void(0)\\x22 data-bind=\\x22attr: { title: $root.t('Download template') }, click: $root.download.execute, clickBubble: false, button: { disabled: !$root.download.enabled(), icons: { primary: 'fa fa-fw fa-download' }, label: $root.t($root.download.name), text: true }\\x22>DOWNLOAD</a>    </form>    <!-- /ko -->    </div>  </div>  <!-- ko if: $root.showToolbox -->  <div id=\\x22main-toolbox\\x22 class=\\x22mo\\x22 data-bind=\\x22scrollable: true, withProperties: { templateMode: 'edit' }\\x22>    <div data-bind=\\x22template: { name: 'toolbox' }\\x22></div>  </div>  <!-- /ko -->    <div id=\\x22main-preview\\x22 class=\\x22mo\\x22 data-bind=\\x22scrollable: true, if: $root.showPreviewFrame\\x22>    <div id=\\x22preview-toolbar\\x22>      <div data-bind=\\x22visible: $root.showPreviewFrame, buttonset: { }\\x22 style=\\x22display: inline-block\\x22>        <input id=\\x22previewLarge\\x22 type=\\x22radio\\x22 name=\\x22previewMode\\x22 value=\\x22large\\x22 data-bind=\\x22checked: $root.previewMode, button: { text: false, label: 'large', icons: { primary: 'fa fa-fw fa-desktop' } }\\x22 />        <label for=\\x22previewLarge\\x22 title=\\x22Large screen\\x22 data-bind=\\x22attr: { title: $root.t('Large screen') }\\x22>Large screen</label>        <input id=\\x22previewDesktop\\x22 type=\\x22radio\\x22 name=\\x22previewMode\\x22 value=\\x22desktop\\x22 data-bind=\\x22checked: $root.previewMode, button: { text: false, label: 'desktop', icons: { primary: 'fa fa-fw fa-tablet' } }\\x22 />        <label for=\\x22previewDesktop\\x22 title=\\x22Tablet\\x22 data-bind=\\x22attr: { title: $root.t('Tablet') }\\x22>Tablet</label>        <input id=\\x22previewMobile\\x22 type=\\x22radio\\x22 name=\\x22previewMode\\x22 value=\\x22mobile\\x22 data-bind=\\x22checked: $root.previewMode, button: { text: false, label: 'mobile', icons: { primary: 'fa fa-fw fa-mobile' } }\\x22 />        <label for=\\x22previewMobile\\x22 title=\\x22Smartphone\\x22 data-bind=\\x22attr: { title: $root.t('Smartphone') }\\x22>Smartphone</label>      </div>    </div>    <div id=\\x22frame-container\\x22 data-bind=\\x22css: { desktop: $root.previewMode() == 'desktop', mobile: $root.previewMode() == 'mobile', large: $root.previewMode() == 'large' }\\x22>      <iframe data-bind=\\x22bindIframe: $data\\x22></iframe>    </div>  </div>  <div class=\\x22mo\\x22 id=\\x22mo-body\\x22></div>  <div id=\\x22incompatible-template\\x22 title=\\x22Saved model is obsolete\\x22 style=\\x22display: none\\x22 data-bind=\\x22attr: { title: $root.t('Saved model is obsolete') }, html: $root.t('<p>The saved model has been created with a previous, non completely compatible version, of the template</p><p>Some content or style in the model <b>COULD BE LOST</b> if you will <b>save</b></p><p>Contact us for more informations!</p>')\\x22>    Incompatible template  </div>  <div id=\\x22fake-image-editor\\x22 title=\\x22Fake image editor\\x22 style=\\x22display: none\\x22 data-bind=\\x22attr: { title: $root.t('Fake image editor') }, html: $root.t('<p>Fake image editor</p>')\\x22>    <p>Fake image editor</p>  </div></div><!-- ko if: $root.logoPath --><div id=\\x22loading\\x22 class=\\x22loading\\x22 style=\\x22display: block; width: 300px; text-align: center; height: 32px; position: absolute; top:0; bottom: 0; left: 0; right: 0;  margin: auto;\\x22 data-bind=\\x22attr: { style: 'position: absolute; top: 5px; left: 6px; z-index: 150;'}, css: { loading: false }\\x22>  <a href=\\x22/\\x22 data-bind=\\x22attr: { href: $root.logoUrl, alt: $root.logoAlt }\\x22><img data-bind=\\x22attr: { src: $root.logoPath }\\x22 width=\\x2232\\x22 height=\\x2232\\x22 alt=\\x22mosaico\\x22 border=\\x220\\x22 /></a>  <div style=\\x22opacity: 0\\x22 data-bind=\\x22visible: false\\x22>Oppps... !!</div></div><!-- /ko -->\");\ntemplateSystem.addTemplate(\"tinymce-area\", \"<div class=\\x22tinyMCE-card\\x22>  <div class=\\x22tinyMCE-card__content\\x22>    <div class=\\x22tinyMCE-header\\x22>      <span class=\\x22undo-redo\\x22 data-bind=\\x22buttonset: { }\\x22>        <a title=\\x22Undo last operation\\x22 href=\\x22javascript:void(0)\\x22 data-bind=\\x22attr: { title: $root.t('Undo last operation') }, click: $root.undo.execute, clickBubble: false, button: { disabled: !$root.undo.enabled(), icons: { primary: 'mce-ico mce-i-undo' }}\\x22></a>        <a title=\\x22Redo last operation\\x22 href=\\x22javascript:void(0)\\x22 data-bind=\\x22attr: { title: $root.t('Redo last operation') }, click: $root.redo.execute, clickBubble: false, button: { disabled: !$root.redo.enabled(), icons: { primary: 'mce-ico mce-i-redo' }}\\x22></a>      </span>    </div>    <div id=\\x22main-edit-area\\x22 data-bind=\\x22click: function(obj, evt) { $root.selectBlock(null); return true; }, clickBubble: false\\x22>      <!-- ko withProperties: { templateMode: 'wysiwyg', templateModeFallback: 'show' } -->      <div id=\\x22main-wysiwyg-area\\x22 data-bind=\\x22wysiwygScrollfix: true, scrollable: true, fudroppable: { active: draggingImage }, css: { isdragging: dragging, isdraggingimg: draggingImage }, block: content\\x22></div>      <!-- /ko -->    </div>    <div id=\\x22fake-image-editor\\x22 title=\\x22Fake image editor\\x22 style=\\x22display: none\\x22 data-bind=\\x22attr: { title: $root.t('Fake image editor') }, html: $root.t('<p>Fake image editor</p>')\\x22>    <p>Fake image editor</p>  </div>  </div></div>\");\ntemplateSystem.addTemplate(\"tinymce-sidebar\", \"  <!-- ko if: $root.showToolbox -->  <div id=\\x22main-toolbox\\x22 class=\\x22mo\\x22 data-bind=\\x22scrollable: true, withProperties: { templateMode: 'edit' }\\x22>    <div data-bind=\\x22template: { name: 'toolbox' }\\x22></div>  </div>  <!-- /ko -->\");\ntemplateSystem.addTemplate(\"toolbox\", \"<div id=\\x22tooltabs\\x22 class=\\x22tabs_horizontal button_color\\x22 data-bind=\\x22tabs: { active: $root.selectedTool }\\x22>  <ul>    <li data-bind=\\x22tooltips: {}\\x22><a title=\\x22Blocks ready to be added to the template\\x22 data-local=\\x22true\\x22 href=\\x22#toolblocks\\x22 data-bind=\\x22attr: { title: $root.t('Blocks ready to be added to the template') }\\x22><span data-bind=\\x22html: $root.t('Blocks')\\x22>Blocks</span></a></li>    <li data-bind=\\x22tooltips: {}\\x22><a title=\\x22Edit content options\\x22 href=\\x22#toolcontents\\x22 data-local=\\x22true\\x22 data-bind=\\x22attr: { title: $root.t('Edit content options') }\\x22><span data-bind=\\x22html: $root.t('Content')\\x22>Content</span></a></li>    <li data-bind=\\x22click: $root.showGallery\\x22><a title=\\x22Edit style options\\x22 href=\\x22#toolimages\\x22 data-local=\\x22true\\x22 data-bind=\\x22attr: { title: $root.t('View or upload images') }\\x22><span data-bind=\\x22html: $root.t('Images')\\x22>Images</span></a></li>  </ul>  <div id=\\x22toolblocks\\x22 data-bind=\\x22scrollable: true\\x22>    <div class=\\x22block-list\\x22 data-bind=\\x22foreach: blockDefs\\x22 style=\\x22text-align: center\\x22>      <div class=\\x22draggable-item\\x22 data-bind=\\x22withProperties: { templateMode: 'show' }\\x22>        <div class=\\x22block\\x22 data-bind=\\x22extdraggable: { connectClass: 'sortable-blocks-edit', data: $data, dropContainer: '#main-wysiwyg-area', dragging: $root.dragging, 'options': { handle: '.handle', distance: 10, 'appendTo': '#page' } }, click: $root.addBlock\\x22 style=\\x22position: relative;\\x22>          <div title=\\x22Click or drag to add this block to the template\\x22 class=\\x22handle\\x22 data-bind=\\x22attr: { title: $root.t('Click or drag to add this block to the template') }, tooltips: {}\\x22></div>          <img data-bind=\\x22attr: { alt: $root.t('Block __name__', { name: ko.utils.unwrapObservable(type) }), src: $root.templatePath('edres/'+ko.utils.unwrapObservable(type)+'.png') }\\x22 alt=\\x22Block __name__\\x22 />        </div>        <a href=\\x22javascript:void(0)\\x22 class=\\x22addblockbutton\\x22 data-bind=\\x22click: $root.addBlock, button: { label: $root.t('Add') }\\x22>Add</a>      </div>    </div>  </div>  <div id=\\x22toolcontents\\x22 data-bind=\\x22scrollable: true\\x22>    <div data-bind=\\x22scrollable: true, withProperties: { templateMode: 'styler' }\\x22>    <!-- ko if: typeof $root.content().theme === 'undefined' || typeof $root.content().theme().scheme === 'undefined' || $root.content().theme().scheme() === 'custom' -->      <!-- ko if: $root.selectedBlock() !== null -->      <div data-bind=\\x22block: $root.selectedBlock, css: { workGlobal: $root.selectedBlock().customStyle, workLocal: typeof $root.selectedBlock().customStyle === 'undefined' || !$root.selectedBlock().customStyle() }\\x22></div>      <!-- /ko -->      <!-- ko if: $root.selectedBlock() == null -->      <div class=\\x22noSelectedBlock\\x22 data-bind=\\x22text: $root.t('By clicking on message parts you will select a block and style options, if available, will show here')\\x22>By clicking on message parts you will select a block and style options, if available, will show here</div>      <!-- /ko -->      <div class=\\x22workGlobalContent\\x22>      <!-- ko block: content --><!-- /ko -->    </div>    <!-- /ko -->    </div>    <!-- ko if: $root.selectedBlock() !== null -->    <div data-bind=\\x22block: $root.selectedBlock\\x22></div>    <!-- /ko -->    <!-- ko if: $root.selectedBlock() == null -->    <div class=\\x22noSelectedBlock\\x22 data-bind=\\x22text: $root.t('By clicking on message parts you will select a block and content options, if any, will show here')\\x22>By clicking on message parts you will select a block and content options, if any, will show here</div>    <!-- /ko -->    <!-- ko block: content --><!-- /ko -->  </div>    <div id=\\x22toolimages\\x22 class=\\x22slidebar\\x22 data-bind=\\x22scrollable: true, css: { hidden: $root.showGallery() === false }, tabs: { active: $root.selectedImageTab }\\x22>  <div data-drop-content=\\x22Drop here\\x22 class=\\x22img-dropzone pane uploadzone\\x22 data-bind=\\x22attr: { 'data-drop-content': $root.t('Drop here') }, fudroppable: { activeClass: 'ui-state-highlight', hoverClass: 'ui-state-draghover' }\\x22>  <div class=\\x22mo-uploadzone\\x22 style=\\x22position: relative; padding: 2em; border: 2px dotted #808080\\x22>     <input class=\\x22fileupload\\x22 type=\\x22file\\x22 multiple name=\\x22files[]\\x22 data-bind=\\x22fileupload: { onerror: $root.notifier.error, onfile: $root.loadImage }\\x22 style=\\x22z-index: 10; position: absolute; top: 0; left: 0; right: 0; bottom: 0; min-width: 100%; min-height: 100%; font-zie: 999px; text-align: right; filter: alpha(opacity=0); opacity: 0; outline: none; cursor: inherit; display: block\\x22>     <span data-bind=\\x22text: $root.t('Click or drag files here')\\x22>Click or drag files here</span>     <div class=\\x22workzone\\x22 style=\\x22position: absolute; top: 0; left: 0; right: 0; bottom: 0; overflow: hidden;\\x22>       <div class=\\x22progress\\x22 style=\\x22opacity: .5; width: 80%; margin-left: 10%; position: absolute; bottom: 30%; height: 20px; border: 2px solid black;\\x22>         <div class=\\x22progress-bar progress-bar-success\\x22 style=\\x22height: 20px; background-color: black; \\x22></div>       </div>     </div>  </div>  </div>  <div id=\\x22toolimagestab\\x22 class=\\x22tabs_horizontal\\x22 data-bind=\\x22tabs: { active: $root.selectedImageTab }\\x22>    <ul>      <li data-bind=\\x22tooltips: {}\\x22><a title=\\x22Session images\\x22 data-local=\\x22true\\x22 href=\\x22#toolimagesrecent\\x22 data-bind=\\x22attr: { title: $root.t('Session images') }, text: $root.t('Recents')\\x22>Recents</a></li>      <li data-bind=\\x22tooltips: {}\\x22><a title=\\x22Remote gallery\\x22 data-local=\\x22true\\x22 href=\\x22#toolimagesgallery\\x22 data-bind=\\x22attr: { title: $root.t('Remote gallery') }, text: $root.t('Gallery')\\x22>Gallery</a></li>    </ul>    <div id=\\x22toolimagesrecent\\x22>      <!-- ko if: galleryRecent().length == 0 --><div class=\\x22galleryEmpty\\x22 data-bind=\\x22text: $root.t('No images uploaded, yet')\\x22>No images uploaded, yet</div><!-- /ko -->      <!-- ko template: {name: 'gallery-images', data: { items: galleryRecent } } --># recent gallery #<!-- /ko -->    </div>    <div id=\\x22toolimagesgallery\\x22 style=\\x22text-align: center\\x22>    <!-- ko if: $root.galleryLoaded() === false --><a class=\\x22loadbutton\\x22 title=\\x22Show images from the gallery\\x22 href=\\x22javascript:void(0)\\x22 data-bind=\\x22attr: { title: $root.t('Show images from the gallery') }, click: $root.loadGallery, button: { disabled: $root.galleryLoaded, icons: { primary: 'fa fa-fw fa-picture-o' }, label: $root.galleryLoaded() == 'loading' ? $root.t('Loading...') : $root.t('Load gallery'), text: true }\\x22># load gally #</a><!-- /ko -->    <!-- ko if: $root.galleryLoaded() === 'loading' --><div class=\\x22galleryEmpty\\x22 data-bind=\\x22text: $root.t('Loading gallery...')\\x22>Loading gallery...</div><!-- /ko -->    <!-- ko if: $root.galleryLoaded() === 0 --><div class=\\x22galleryEmpty\\x22 data-bind=\\x22text: $root.t('The gallery is empty')\\x22>The gallery is empty</div><!-- /ko -->    <!-- ko template: {name: 'gallery-images', data: { items: galleryRemote } } --># remote gallery #<!-- /ko -->    </div>  </div>  </div></div><div id=\\x22tooltheme\\x22 class=\\x22ui-widget slidebar\\x22 data-bind=\\x22css: { hidden: $root.showTheme() === false }\\x22>    <!-- ko withProperties: { templateMode: 'styler' } -->    <!-- ko if: $root.showTheme -->      <!-- ko block: $root.content().theme --><!-- /ko -->    <!-- /ko -->  <!-- /ko --></div>\");\n});\n","deps":{"../src/js/bindings/choose-template.js":"/Users/denea/mos/src/js/bindings/choose-template.js"}},"/Users/denea/mos/src/js/ext/localstorage.js":{"file":"/Users/denea/mos/src/js/ext/localstorage.js","source":"(function (global){\n\"use strict\";\n/* global global: false */\nvar console = require(\"./../../../bower_components/console-browserify/index.js\");\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar lsLoader = function(hash_key, emailProcessorBackend) {\n  var mdStr = global.localStorage.getItem(\"metadata-\" + hash_key);\n  if (mdStr !== null) {\n    var model;\n    var td = global.localStorage.getItem(\"template-\" + hash_key);\n    if (td !== null) model = JSON.parse(td);\n    var md = JSON.parse(mdStr);\n    return {\n      metadata: md,\n      model: model,\n      extension: lsCommandPluginFactory(md, emailProcessorBackend)\n    };\n  } else {\n    throw \"Cannot find stored data for \"+hash_key;\n  }\n};\n\nvar lsCommandPluginFactory = function(md, emailProcessorBackend) {\n  var commandsPlugin = function(mdkey, mdname, viewModel) {\n\n    // console.log(\"loading from metadata\", md, model);\n    var saveCmd = {\n      name: 'Save', // l10n happens in the template\n      enabled: ko.observable(true)\n    };\n    saveCmd.execute = function() {\n      saveCmd.enabled(false);\n      viewModel.metadata.changed = Date.now();\n      if (typeof viewModel.metadata.key == 'undefined') {\n        console.warn(\"Unable to find key in metadata object...\", viewModel.metadata);\n        viewModel.metadata.key = mdkey;\n      }\n      var edits = JSON.parse(global.localStorage.getItem('edits'));\n      if (edits.indexOf(mdkey) < 0 || typeof edits !== 'object'){\n\n        var newKey = Math.random().toString(36).substr(2, 7);\n\n        edits.push(newKey);\n\n\n        global.localStorage.setItem('edits', JSON.stringify(edits));\n        global.localStorage.setItem(\"metadata-\" + newKey, viewModel.exportMetadata());\n        global.localStorage.setItem(\"template-\" + newKey, viewModel.exportJSON());\n        global.document.location = 'advanced-campaign.html#'+newKey;\n      }\n \n      global.localStorage.setItem(\"metadata-\" + mdkey, viewModel.exportMetadata());\n      global.localStorage.setItem(\"template-\" + mdkey, viewModel.exportJSON());\n      \n      saveCmd.enabled(true);\n    };\n    var testCmd = {\n      name: 'Test', // l10n happens in the template\n      enabled: ko.observable(true)\n    };\n    var downloadCmd = {\n      name: 'Download', // l10n happens in the template\n      enabled: ko.observable(true)\n    };\n    testCmd.execute = function() {\n      testCmd.enabled(false);\n      var email = global.localStorage.getItem(\"testemail\");\n      if (email === null || email == 'null') email = viewModel.t('Insert here the recipient email address');\n      email = global.prompt(viewModel.t(\"Test email address\"), email);\n      if (email.match(/@/)) {\n        global.localStorage.setItem(\"testemail\", email);\n        console.log(\"TODO testing...\", email);\n        var postUrl = emailProcessorBackend ? emailProcessorBackend : '/dl/';\n        var post = $.post(postUrl, {\n          action: 'email',\n          rcpt: email,\n          subject: \"[test] \" + mdkey + \" - \" + mdname,\n          html: viewModel.exportHTML()\n        }, null, 'html');\n        post.fail(function() {\n          console.log(\"fail\", arguments);\n          viewModel.notifier.error(viewModel.t('Unexpected error talking to server: contact us!'));\n        });\n        post.success(function() {\n          console.log(\"success\", arguments);\n          viewModel.notifier.success(viewModel.t(\"Test email sent...\"));\n        });\n        post.always(function() {\n          testCmd.enabled(true);\n        });\n      } else {\n        global.alert(viewModel.t('Invalid email address'));\n        testCmd.enabled(true);\n      }\n    };\n    downloadCmd.execute = function() {\n      downloadCmd.enabled(false);\n      viewModel.notifier.info(viewModel.t(\"Downloading...\"));\n      viewModel.exportHTMLtoTextarea('#downloadHtmlTextarea');\n      var postUrl = emailProcessorBackend ? emailProcessorBackend : '/dl/';\n      global.document.getElementById('downloadForm').setAttribute(\"action\", postUrl);\n      global.document.getElementById('downloadForm').submit();\n      downloadCmd.enabled(true);\n    };\n\n    viewModel.save = saveCmd;\n    viewModel.test = testCmd;\n    viewModel.download = downloadCmd;\n  }.bind(undefined, md.key, md.name);\n\n  return commandsPlugin;\n};\n\nmodule.exports = lsLoader;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","deps":{"./../../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/viewmodel.js":{"file":"/Users/denea/mos/src/js/viewmodel.js","source":"(function (global){\n\"use strict\";\n\n/* global global: false */\n\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar tinymce = (typeof window !== \"undefined\" ? window['tinymce'] : typeof global !== \"undefined\" ? global['tinymce'] : null);\nvar console = require(\"./../../bower_components/console-browserify/index.js\");\nvar performanceAwareCaller = require(\"./timed-call.js\").timedCall;\n\nvar toastr = require(\"./../../bower_components/toastr/toastr.js\");\ntoastr.options = {\n  \"closeButton\": false,\n  \"debug\": false,\n  \"positionClass\": \"toast-bottom-full-width\",\n  \"target\": \"#mo-body\",\n  \"onclick\": null,\n  \"showDuration\": \"300\",\n  \"hideDuration\": \"1000\",\n  \"timeOut\": \"5000\",\n  \"extendedTimeOut\": \"1000\",\n  \"showEasing\": \"swing\",\n  \"hideEasing\": \"linear\",\n  \"showMethod\": \"fadeIn\",\n  \"hideMethod\": \"fadeOut\"\n};\n\n\n/* NOTE: translations moved to \"plugin\"\nvar strings = {\n  'show preview and send test': 'Visualizza una anteprima e fai un invio di test',\n  // Strings for app.js\n  'Download': 'Download',\n  'Test': 'Test',\n  'Save': 'Salva',\n  'Downloading...': \"Download in corso...\",\n  'Invalid email address': \"Indirizzo email invalido\",\n  \"Test email sent...\": \"Email di test inviata...\",\n  'Unexpected error talking to server: contact us!': 'Errore di comunicazione con il server: contattaci!',\n  'Insert here the recipient email address': 'Inserisci qui l\\'indirizzo email a cui spedire',\n  \"Test email address\": \"Indirizzo email di test\",\n  // viewModel\n  'Block removed: use undo button to restore it...': 'Blocco eliminato: usa il pulsante annulla per recuperarlo...',\n  'New block added after the selected one (__pos__)': 'Nuovo blocco aggiunto sotto a quello selezionato (__pos__)',\n  'New block added at the model bottom (__pos__)': 'Nuovo blocco aggiunto in fondo al modello (__pos__)',\n  // undomain.js\n  'Undo (#COUNT#)': 'Annulla (#COUNT#)',\n  'Redo': 'Ripristina',\n  // editor.js\n  'Selected element has no editable properties': 'L\\'elemento selezionato non fornisce proprietà editabili',\n  'This style is specific for this block: click here to remove the custom style and revert to the theme value': 'Questo stile è specifico di questo blocco: clicca qui per annullare lo stile personalizzato',\n  'Switch between global and block level styles editing': 'Permette di specificare se si vuole modificare lo stile generale o solamente quello specifico del blocco selezionato',\n  // main.tpl.html\n  'Undo last operation': 'Annulla ultima operazione',\n  'Redo last operation': 'Ripeti operazione annullata',\n  'Show image gallery': 'Visualizza galleria immagini',\n  'Gallery': 'Galleria',\n  'Preview': 'Anteprima',\n  'Show live preview': 'Mostra anteprima live',\n  'Large screen': 'Schermo grande',\n  'Tablet': 'Tablet',\n  'Smartphone': 'Smartphone',\n  'Show preview and send test': 'Visualizza una anteprima e fai un invio di test',\n  'Download template': 'Scarica il template',\n  'Save template': 'Salva il template',\n  'Saved model is obsolete': 'Modello salvato obsoleto',\n  '<p>The saved model has been created with a previous, non completely compatible version, of the template</p><p>Some content or style in the model <b>COULD BE LOST</b> if you will <b>save</b></p><p>Contact us for more informations!</p>': '<p>Il modello salvato è stato creato con una versione precedente del template non del tutto compatibile</p><p>Alcuni contenuti o stili del modello <b>POTREBBERO ESSERE PERSI</b> se procederai e deciderai di <b>salvare</b></p><p>Contattaci se hai dei dubbi!</p>',\n\n  // toolbox\n  'Blocks': 'Blocchi',\n  'Blocks ready to be added to the template': 'Elenco contenuti aggiungibili al messaggio',\n  'Content': 'Contenuto',\n  'Edit content options': 'Modifica opzioni contenuti',\n  'Style': 'Stile',\n  'Edit style options': 'Modifica opzioni grafiche',\n  'Block __name__': 'Blocco __name__',\n  'Click or drag to add this block to the template': 'Clicca o trascina per aggiungere al messaggio',\n  'Add': 'Aggiungi',\n  'By clicking on message parts you will select a block and content options, if any, will show here': 'Cliccando su alcune parti del messaggio selezionerai un blocco e le opzioni contenutistiche, se disponibili, compariranno qui',\n  'By clicking on message parts you will select a block and style options, if available, will show here': 'Cliccando su alcune parti del messaggio selezionerai un blocco e le opzioni di stile, se disponibili, compariranno qui',\n  'Click or drag files here': 'Clicca o trascina i file qui!',\n  'No images uploaded, yet': 'Non hai ancora caricato immagini',\n  'Show images from the gallery': 'Visualizza le immagini caricate nella tua area',\n  'Loading...': 'Caricamento...',\n  'Load gallery': 'Carica galleria',\n  'Loading gallery...': 'Caricamento in corso...',\n  'The gallery is empty': 'Nessuna immagine nella galleria',\n  // img-wysiwyg.tmlp\n  'Remove image': 'Rimuovi immagine',\n  'Open the image editing tool': 'Avvia strumento modifica immagine',\n  'Upload a new image': 'Carica una nuova immagine',\n  'Drop an image here': 'Trascina una immagine qui',\n  'Drop an image here or click the upload button': 'Trascina una immagine qui o clicca sul pulsante di caricamento',\n  // gallery\n  'Drag this image and drop it on any template image placeholder': 'Trascina questa immagine sulla posizione in cui vuoi inserirla',\n  'Gallery:': 'Galleria:',\n  'Session images': 'Immagini di sessione',\n  'Recents': 'Recenti',\n  'Remote gallery': 'Galleria remota',\n\n  // customstyle\n  'Customized block.<ul><li>In this status changes to properties will be specific to the current block (instead of being global to all blocks in the same section)</li><li>A <span class=\"customStyled\"><span>\"small cube\" </span></span> icon beside the property will mark the customization. By clicking this icon the property value will be reverted to the value defined for the section.</li></ul>': 'Blocco personalizzato.<ul><li>In questa modalità se cambi una proprietà verrà modificata solamente per questo specifico blocco (invece che per tutti i blocchi della stessa sezione).</li><li>Per segnalare la personalizzazione apparirà l\\'icona <span class=\"customStyled\"><span> del \"cubetto\"</span></span> a fianco delle proprietà. Cliccando questa icona tornerai al valore comune.</li></ul>',\n  // blocks-wysiwyg\n  'Drop here blocks from the \"Blocks\" tab': 'Trascina qui i blocchi dalla scheda \\'Blocchi\\'',\n  // block-wysiwyg\n  'Drag this handle to move the block': 'Trascina per spostare il blocco altrove',\n  'Move this block upside': 'Sposta il blocco in su',\n  'Move this block downside': 'Sposta il blocco in giu',\n  'Delete block': 'Elimina blocco',\n  'Duplicate block': 'Duplica blocco',\n  'Switch block variant': 'Cambia variante blocco',\n  // colorpicker\n  'Theme Colors,Standard Colors,Web Colors,Theme Colors,Back to Palette,History,No history yet.': 'Colori Tema,Colori Standard,Colori Web,Colori Tema,Torna alla tavolozza,Storico,storico colori vuoto',\n\n  'Drop here': 'Rilascia qui',\n\n};\n*/\n\n  function initializeEditor(content, blockDefs, thumbPathConverter, galleryUrl) {\n\n  var initialCampaigns = [];\n  var initialTemplates = [];\n  var initialEdits = [];\n  var defaultTemplates = [{\n      created: 'Default', key: '0000001', title: 'STEdb default', name: 'versafix-1', template: 'templates/versafix-1/template-versafix-1.html', desc: 'The versatile template'\n    },{\n      created: 'Default', key: '0000002', title: 'TEDC15', name: 'tedc15', template: 'templates/tedc15/template-tedc15.html', desc: 'The tedc15 template'\n    },{\n      created: 'Default', key: '0000003', title: 'Easy tutorial', name: 'tutorial', template: 'templates/tutorial/template-tutorial.html', desc: 'The tutorial template'\n    }];\n\n  var viewModel = {\n    galleryRecent: ko.observableArray([]).extend({\n      paging: 16\n    }),\n    galleryRemote: ko.observableArray([]).extend({\n      paging: 16\n    }),\n    selectedBlock: ko.observable(null),\n    selectedItem: ko.observable(null),\n    selectedTool: ko.observable(0),\n    selectedImageTab: ko.observable(0),\n    dragging: ko.observable(false),\n    draggingImage: ko.observable(false),\n    galleryLoaded: ko.observable(false),\n    showPreviewFrame: ko.observable(false),\n    previewMode: ko.observable('desktop'),\n    showToolbox: ko.observable(true),\n    showTheme: ko.observable(false),\n    showGallery: ko.observable(false),\n    debug: ko.observable(false),\n    contentListeners: ko.observable(0),\n    showSaved: ko.observable(false),\n    edits: ko.observableArray(initialEdits),\n    templates: ko.observableArray(initialTemplates),\n    campaigns: ko.observableArray(initialCampaigns),\n    \n    logoPath: 'dist/img/stedb.png',\n    logoUrl: '.',\n    logoAlt: 'stedb'\n  };\n\n  // viewModel.content = content._instrument(ko, content, undefined, true);\n  viewModel.content = content;\n  viewModel.blockDefs = blockDefs;\n\n  viewModel.notifier = toastr;\n\n  // Does token substitution in i18next style\n  viewModel.tt = function(key, paramObj) {\n    if (typeof paramObj !== 'undefined')\n      for (var prop in paramObj)\n        if (paramObj.hasOwnProperty(prop)) {\n          key = key.replace(new RegExp('__' + prop + '__', 'g'), paramObj[prop]);\n        }\n    return key;\n  };\n\n  // Simply maps to tt: language plugins can override this method to define their own language\n  // handling.\n  // If this method invokes an observable (e.g: viewModel.lang()) then the UI language will automatically\n  // update when the \"lang\" observable changes.\n  viewModel.t = viewModel.tt;\n\n  // currently called by editor.html to translate template-defined keys (label, help, descriptions)\n  // the editor always uses the \"template\" category for that strings.\n  // you can override this method as you like in order to provide translation or change the strings in any way.\n  viewModel.ut = function(category, key) {\n    return key;\n  };\n\n  viewModel.templatePath = thumbPathConverter;\n\n  viewModel.remoteUrlProcessor = function(url) {\n    return url;\n  };\n\n  viewModel.remoteFileProcessor = function(fileObj) {\n    if (typeof fileObj.url !== 'undefined') fileObj.url = viewModel.remoteUrlProcessor(fileObj.url);\n    if (typeof fileObj.thumbnailUrl !== 'undefined') fileObj.thumbnailUrl = viewModel.remoteUrlProcessor(fileObj.thumbnailUrl);\n    // deleteUrl?\n    return fileObj;\n  };\n\n  // toolbox.tmpl.html\n  viewModel.loadGallery = function() {\n    viewModel.galleryLoaded('loading');\n    var url = galleryUrl ? galleryUrl : '/upload/';\n    // retrieve the full list of remote files\n    $.getJSON(url, function(data) {\n      for (var i = 0; i < data.files.length; i++) data.files[i] = viewModel.remoteFileProcessor(data.files[i]);\n      viewModel.galleryLoaded(data.files.length);\n      // TODO do I want this call to return relative paths? Or just absolute paths?\n      viewModel.galleryRemote(data.files.reverse());\n    }).fail(function() {\n      viewModel.galleryLoaded(false);\n      viewModel.notifier.error(viewModel.t('Unexpected error listing files'));\n    });\n  };\n\n  // img-wysiwyg.tmpl.html\n  viewModel.fileToImage = function(obj, event, ui) {\n    // console.log(\"fileToImage\", obj);\n    return obj.url;\n  };\n\n  // block-wysiwyg.tmpl.html\n  viewModel.removeBlock = function(data, parent) {\n    // let's unselect the block\n    \n    // Check if the last block is being deleted\n    var isLastBlock = false;\n    if($('#main-wysiwyg-area .sortable-blocks-edit .editable.block').length <= 1){\n      isLastBlock = true;\n    }\n\n    if (ko.utils.unwrapObservable(viewModel.selectedBlock) == ko.utils.unwrapObservable(data)) {\n      viewModel.selectBlock(null, true);\n    }\n    var res = parent.blocks.remove(data);\n    // TODO This message should be different depending on undo plugin presence.\n    viewModel.notifier.info(viewModel.t('Block removed: use undo button to restore it...'));\n    \n    // Add default text block after the last block from editor is deleted\n    if (isLastBlock == true){\n      $('#main-toolbox .block-list').find('img[alt=\"Block textBlock\"]').parent().click();\n      var timeout = global.setTimeout(function(){\n        tinymce.editors[0].focus();\n        tinymce.editors[0].setContent('', {format: 'raw'});\n      }, 0);\n    }\n    return res;\n  };\n\n  // block-wysiwyg.tmpl.html\n  viewModel.duplicateBlock = function(index, parent) {\n    var idx = ko.utils.unwrapObservable(index);\n    // Deinstrument/deobserve the object\n    var unwrapped = ko.toJS(ko.utils.unwrapObservable(parent.blocks)[idx]);\n    // We need to remove the id so that a new one will be assigned to the clone\n    if (typeof unwrapped.id !== 'undefined') unwrapped.id = '';\n    // insert the cloned block\n    parent.blocks.splice(idx + 1, 0, unwrapped);\n  };\n\n  // block-wysiwyg.tmpl.html\n  viewModel.moveBlock = function(index, parent, up) {\n    var idx = ko.utils.unwrapObservable(index);\n    var parentBlocks = ko.utils.unwrapObservable(parent.blocks);\n    if ((up && idx > 0) || (!up && idx < parentBlocks.length - 1)) {\n      var destIndex = idx + (up ? -1 : 1);\n      var destBlock = parentBlocks[destIndex];\n      viewModel.startMultiple();\n      parent.blocks.splice(destIndex, 1);\n      parent.blocks.splice(idx, 0, destBlock);\n      viewModel.stopMultiple();\n    }\n  };\n\n  // test method, command line use only\n  viewModel.loadDefaultBlocks = function() {\n    // cloning the whole \"mainBlocks\" object so that undomanager will\n    // see it as a single operation (maybe I could use \"startMultiple\"/\"stopMultiple\".\n    var res = ko.toJS(viewModel.content().mainBlocks);\n    res.blocks = [];\n    var input = ko.utils.unwrapObservable(viewModel.blockDefs);\n    for (var i = 0; i < input.length; i++) {\n      var obj = ko.toJS(input[i]);\n      // generating ids for blocks, maybe this would work also leaving it empty.\n      obj.id = 'block_' + i;\n      res.blocks.push(obj);\n    }\n    performanceAwareCaller('setMainBlocks', viewModel.content().mainBlocks._wrap.bind(viewModel.content().mainBlocks, res));\n  };\n\n  // gallery-images.tmpl.html\n  viewModel.addImage = function(img) {\n    var selectedImg = $('#main-wysiwyg-area .selectable-img.selecteditem');\n    if (selectedImg.length == 1 && typeof img == 'object' && typeof img.url !== 'undefined') {\n      ko.contextFor(selectedImg[0])._src(img.url);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  // toolbox.tmpl.html\n  viewModel.addBlock = function(obj, event) {\n    // if there is a selected block we try to add the block just after the selected one.\n    var selected = viewModel.selectedBlock();\n    // search the selected block position.\n    var found;\n    if (selected !== null) {\n      // TODO \"mainBlocks\" is an hardcoded thing.\n      for (var i = viewModel.content().mainBlocks().blocks().length - 1; i >= 0; i--) {\n        if (viewModel.content().mainBlocks().blocks()[i]() == selected) {\n          found = i;\n          break;\n        }\n      }\n    }\n    var pos;\n    if (typeof found !== 'undefined') {\n      pos = found + 1;\n      viewModel.content().mainBlocks().blocks.splice(pos, 0, obj);\n      viewModel.notifier.info(viewModel.t('New block added after the selected one (__pos__)', {\n        pos: pos\n      }));\n    } else {\n      viewModel.content().mainBlocks().blocks.push(obj);\n      pos = viewModel.content().mainBlocks().blocks().length - 1;\n      viewModel.notifier.info(viewModel.t('New block added at the model bottom (__pos__)', {\n        pos: pos\n      }));\n    }\n    // find the newly added block and select it!\n    var added = viewModel.content().mainBlocks().blocks()[pos]();\n    viewModel.selectBlock(added, true);\n    // prevent click propagation (losing url hash - see #43)\n    return false;\n  };\n\n  // Used by stylesheet.js to create multiple styles\n  viewModel.findObjectsOfType = function(data, type) {\n    var res = [];\n    var obj = ko.utils.unwrapObservable(data);\n    for (var prop in obj)\n      if (obj.hasOwnProperty(prop)) {\n        var val = ko.utils.unwrapObservable(obj[prop]);\n        // TODO this is not the right way to deal with \"block list\" objects.\n        if (prop.match(/Blocks$/)) {\n          var contents = ko.utils.unwrapObservable(val.blocks);\n          for (var i = 0; i < contents.length; i++) {\n            var c = ko.utils.unwrapObservable(contents[i]);\n            if (type === null || ko.utils.unwrapObservable(c.type) == type) res.push(c);\n          }\n          // TODO investigate which condition provide a null value.\n        } else if (typeof val == 'object' && val !== null) {\n          if (type === null || ko.utils.unwrapObservable(val.type) == type) res.push(val);\n        }\n      }\n    return res;\n  };\n\n  /*\n  viewModel.placeholderHelper = 'sortable-placeholder';\n  if (false) {\n    viewModel.placeholderHelper = {\n      element: function(currentItem) {\n        return $('<div />').removeClass('ui-draggable').addClass('sortable-placeholder').css('position', 'relative').css('width', '100%').css('height', currentItem.css('height')).css('opacity', '.8')[0];\n      },\n      update: function(container, p) {\n       return;\n      }\n    };\n  }\n  */\n\n  // Attempt to insert the block in the destination layout during dragging\n  viewModel.placeholderHelper = {\n    element: function(currentItem) {\n      return $(currentItem[0].outerHTML).removeClass('ui-draggable').addClass('sortable-placeholder').css('display', 'block').css('position', 'relative').css('width', '100%').css('height', 'auto').css('opacity', '.8')[0];\n    },\n    update: function(container, p) {\n      return;\n    }\n  };\n\n  // TODO the undumanager should be pluggable.\n  // Used by \"moveBlock\" and blocks-wysiwyg.tmpl.html to \"merge\" drag/drop operations into a single undo/redo op.\n  viewModel.startMultiple = function() {\n    if (typeof viewModel.setUndoModeMerge !== 'undefined') viewModel.setUndoModeMerge();\n  };\n  viewModel.stopMultiple = function() {\n    if (typeof viewModel.setUndoModeOnce !== 'undefined') viewModel.setUndoModeOnce();\n  };\n\n  // Used by code generated by editor.js \n  viewModel.localGlobalSwitch = function(prop, globalProp) {\n    var current = prop();\n    if (current === null) prop(globalProp());\n    else prop(null);\n    return false;\n  };\n\n  // Used by editor and main \"converter\" to support item selection\n  viewModel.selectItem = function(valueAccessor, item, block) {\n    var val = ko.utils.peekObservable(valueAccessor);\n    if (typeof block !== 'undefined') viewModel.selectBlock(block, false, true);\n    if (val != item) {\n      valueAccessor(item);\n      // On selectItem if we were on \"Blocks\" toolbox tab we move to \"Content\" toolbox tab.\n      if (item !== null && viewModel.selectedTool() === 0) viewModel.selectedTool(1);\n    }\n    return false;\n  }.bind(viewModel, viewModel.selectedItem);\n\n  viewModel.isSelectedItem = function(item) {\n    return viewModel.selectedItem() == item;\n  };\n\n  viewModel.selectBlock = function(valueAccessor, item, doNotSelect, doNotUnselectItem) {\n    var val = ko.utils.peekObservable(valueAccessor);\n    if (!doNotUnselectItem) viewModel.selectItem(null);\n    if (val != item) {\n      valueAccessor(item);\n      // hide gallery on block selection\n      viewModel.showGallery(false);\n      if (item !== null && !doNotSelect && viewModel.selectedTool() === 0) viewModel.selectedTool(1);\n    }\n  }.bind(viewModel, viewModel.selectedBlock);\n\n  // DEBUG\n  viewModel.countSubscriptions = function(model, debug) {\n    var res = 0;\n    for (var prop in model)\n      if (model.hasOwnProperty(prop)) {\n        var p = model[prop];\n        if (ko.isObservable(p)) {\n          if (typeof p._defaultComputed != 'undefined') {\n            if (typeof debug != 'undefined') console.log(debug + \"/\" + prop + \"/_\", p._defaultComputed.getSubscriptionsCount());\n            res += p._defaultComputed.getSubscriptionsCount();\n          }\n          if (typeof debug != 'undefined') console.log(debug + \"/\" + prop + \"/-\", p.getSubscriptionsCount());\n          res += p.getSubscriptionsCount();\n          p = ko.utils.unwrapObservable(p);\n        }\n        if (typeof p == 'object' && p !== null) {\n          var tot = viewModel.countSubscriptions(p, typeof debug != 'undefined' ? debug + '/' + prop + \"@\" : undefined);\n          if (typeof debug != 'undefined') console.log(debug + \"/\" + prop + \"@\", tot);\n          res += tot;\n        }\n      }\n    return res;\n  };\n\n  // DEBUG\n  viewModel.loopSubscriptionsCount = function() {\n    var count = viewModel.countSubscriptions(viewModel.content());\n    global.document.getElementById('subscriptionsCount').innerHTML = count;\n    global.setTimeout(viewModel.loopSubscriptionsCount, 1000);\n  };\n\n  viewModel.export = function() {\n    var content = performanceAwareCaller(\"exportHTML\", viewModel.exportHTML);\n    return content;\n  };\n\n  function conditional_restore(html) {\n    return html.replace(/<replacedcc[^>]* condition=\"([^\"]*)\"[^>]*>([\\s\\S]*?)<\\/replacedcc>/g, function(match, condition, body) {\n      var dd = '<!--[if '+condition.replace(/&amp;/, '&')+']>';\n      dd += body.replace(/<!-- cc:bc:([A-Za-z:]*) -->(<\\/cc>)?<!-- cc:ac:\\1 -->/g, '</$1>') // restore closing tags (including lost tags)\n            .replace(/><\\/cc><!-- cc:sc -->/g, '/>') // restore selfclosing tags\n            .replace(/<!-- cc:bo:([A-Za-z:]*) --><cc/g, '<$1') // restore open tags\n            .replace(/^.*<!-- cc:start -->/,'') // remove content before start\n            .replace(/<!-- cc:end -->.*$/,''); // remove content after end\n      dd += '<![endif]-->';\n      return dd;\n    });\n  }\n\n  viewModel.exportHTML = function() {\n    var id = 'exportframe';\n    $('body').append('<iframe id=\"' + id + '\" data-bind=\"bindIframe: $data\"></iframe>');\n    var frameEl = global.document.getElementById(id);\n    ko.applyBindings(viewModel, frameEl);\n\n    ko.cleanNode(frameEl);\n\n    if (viewModel.inline) viewModel.inline(frameEl.contentWindow.document);\n\n    // Obsolete method didn't work on IE11 when using \"HTML5 doctype\":\n    // var docType = new XMLSerializer().serializeToString(global.document.doctype);\n    var node = frameEl.contentWindow.document.doctype;\n    var docType = \"<!DOCTYPE \" + node.name +\n      (node.publicId ? ' PUBLIC \"' + node.publicId + '\"' : '') +\n      (!node.publicId && node.systemId ? ' SYSTEM' : '') +\n      (node.systemId ? ' \"' + node.systemId + '\"' : '') + '>';\n    var content = docType + \"\\n\" + frameEl.contentWindow.document.documentElement.outerHTML;\n    ko.removeNode(frameEl);\n\n    content = content.replace(/<script ([^>]* )?type=\"text\\/html\"[^>]*>[\\s\\S]*?<\\/script>/gm, '');\n    // content = content.replace(/<!-- ko .*? -->/g, ''); // sometimes we have expressions like (<!-- ko var > 2 -->)\n    content = content.replace(/<!-- ko ((?!--).)*? -->/g, ''); // this replaces the above with a more formal (but slower) solution\n    content = content.replace(/<!-- \\/ko -->/g, '');\n    // Remove data-bind/data-block attributes\n    content = content.replace(/ data-bind=\"[^\"]*\"/gm, '');\n    // Remove trash leftover by TinyMCE\n    content = content.replace(/ data-mce-(href|src|style)=\"[^\"]*\"/gm, '');\n\n    // Replace \"replacedstyle\" to \"style\" attributes (chrome puts replacedstyle after style)\n    content = content.replace(/ style=\"[^\"]*\"([^>]*) replaced(style=\"[^\"]*\")/gm, '$1 $2');\n    // Replace \"replacedstyle\" to \"style\" attributes (ie/ff have reverse order)\n    content = content.replace(/ replaced(style=\"[^\"]*\")([^>]*) style=\"[^\"]*\"/gm, ' $1$2');\n    content = content.replace(/ replaced(style=\"[^\"]*\")/gm, ' $1');\n\n    // same as style, but for http-equiv (some browser break it if we don't replace, but then we find it duplicated)\n    content = content.replace(/ http-equiv=\"[^\"]*\"([^>]*) replaced(http-equiv=\"[^\"]*\")/gm, '$1 $2');\n    content = content.replace(/ replaced(http-equiv=\"[^\"]*\")([^>]*) http-equiv=\"[^\"]*\"/gm, ' $1$2');\n    content = content.replace(/ replaced(http-equiv=\"[^\"]*\")/gm, ' $1');\n\n    // We already replace style and http-equiv and we don't need this.\n    // content = content.replace(/ replaced([^= ]*=)/gm, ' $1');\n    // Restore conditional comments\n    content = conditional_restore(content);\n    var trash = content.match(/ data-[^ =]+(=\"[^\"]+\")? /) || content.match(/ replaced([^= ]*=)/);\n    if (trash) {\n      console.warn(\"Output HTML contains unexpected data- attributes or replaced attributes\", trash);\n    }\n\n    return content;\n  };\n\n  viewModel.exportHTMLtoTextarea = function(textareaid) {\n    $(textareaid).val(viewModel.exportHTML());\n  };\n\n  viewModel.exportJSONtoTextarea = function(textareaid) {\n    $(textareaid).val(viewModel.exportJSON());\n  };\n\n  viewModel.importJSONfromTextarea = function(textareaid) {\n    viewModel.importJSON($(textareaid).val());\n  };\n\n  viewModel.exportMetadata = function() {\n    var json = ko.toJSON(viewModel.metadata);\n    return json;\n  };\n\n  viewModel.exportJSON = function() {\n    var json = ko.toJSON(viewModel.content);\n    return json;\n  };\n\n  viewModel.exportJS = function() {\n    return ko.toJS(viewModel.content);\n  };\n\n  viewModel.importJSON = function(json) {\n    var unwrapped = ko.utils.parseJson(json);\n    viewModel.content._wrap(unwrapped);\n  };\n\n  viewModel.exportTheme = function() {\n    var flat = {};\n    var mod = viewModel.content().theme();\n\n    var _export = function(prefix, flat, mod) {\n      for (var prop in mod)\n        if (mod.hasOwnProperty(prop)) {\n          var a = ko.utils.unwrapObservable(mod[prop]);\n          if (a !== null && typeof a == 'object') {\n            _export(prop + '.', flat, a);\n          } else {\n            flat[prefix + prop] = a;\n          }\n        }\n    };\n\n    _export('', flat, mod);\n\n    var output = '';\n    for (var prop in flat)\n      if (flat.hasOwnProperty(prop) && prop != 'type') {\n        output += prop + \": \" + flat[prop] + \";\" + \"\\n\";\n      }\n\n    return output;\n  };\n\n  // moxiemanager (or file browser/imageeditor) extension points.\n  // Just implement editImage or linkDialog methods\n  // viewModel.editImage = function(src, done) {} : implement this method to enable image editing (src is a wirtableObservable).\n  // viewModel.linkDialog = function() {}: implement this method using \"this\" to find the input element $(this).val is a writableObservable.\n\n  viewModel.loadImage = function(img) {\n    // push image at top of \"recent\" gallery\n    viewModel.galleryRecent.unshift(img);\n    // select recent gallery tab\n    viewModel.selectedImageTab(0);\n  };\n\n  viewModel.dialog = function(selector, options) {\n    $(selector).dialog(options);\n  };\n\n  // Dummy log method overridden by extensions\n  viewModel.log = function(category, msg) {\n    // console.log(\"viewModel.log\", category, msg);\n  };\n\n  // automatically load the gallery when the gallery tab is selected\n  viewModel.selectedImageTab.subscribe(function(newValue) {\n    if (newValue == 1 && viewModel.galleryLoaded() === false) {\n      viewModel.loadGallery();\n    }\n  }, viewModel, 'change');\n\n\n  // Save template (almost same as save draft)\n  var key = global.window.location.href.substr(global.window.location.href.indexOf(\"#\") + 1);\n\n  // Set current date\n  var d = new Date();\n\n  var month = d.getMonth()+1;\n  var day = d.getDate();\n\n  var currentDate = d.getFullYear() + '/' +\n  ((''+month).length<2 ? '0' : '') + month + '/' +\n  ((''+day).length<2 ? '0' : '') + day;\n\n  // Get templates\n  if (global.localStorage.getItem('templates') === null && initialTemplates.length == 0){\n    for (i=0;i<defaultTemplates.length;i++){\n      initialTemplates.push(defaultTemplates[i]);\n    }\n    global.localStorage.setItem('templates', JSON.stringify(initialTemplates));\n  }\n\n  var templateObj = JSON.parse(global.localStorage.getItem('templates'));\n  var md;\n  for (var i = 0; i < templateObj.length; i++) {\n    var templateKeys = templateObj[i].key;\n    md = global.localStorage.getItem('metadata-'+templateKeys);\n    if (typeof md == 'string') {\n      initialTemplates.push(JSON.parse(md));\n    } else {\n      console.log(\"Ignoring saved key\", templateObj[i], \"type\", typeof md, md);\n    }\n  }\n\n  // Subscribtions\n  viewModel.edits.subscribe(function(newEdits) {\n    var existingEdits = JSON.parse(global.localStorage.getItem('edits'));\n    if(existingEdits == null){\n      existingEdits = [];\n    }\n    for (var i = 0; i < newEdits.length; i++) {\n      existingEdits.push(newEdits[i].key);\n      global.localStorage.setItem('metadata-'+newEdits[i].key, ko.toJSON(newEdits[i]));\n    }\n    global.localStorage.setItem('edits', ko.toJSON(existingEdits));\n  });\n\n  viewModel.campaigns.subscribe(function(newCampaigns) {\n    var existingCampaigns = JSON.parse(global.localStorage.getItem('campaigns'));\n    if(existingCampaigns == null){\n      existingCampaigns = [];\n    }\n    for (var i = 0; i < newCampaigns.length; i++) {\n      existingCampaigns.push(newCampaigns[i].key);\n      global.localStorage.setItem('metadata-'+newCampaigns[i].key, ko.toJSON(newCampaigns[i]));\n    }\n    global.localStorage.setItem('campaigns', ko.toJSON(existingCampaigns));\n  });\n\n  viewModel.templates.subscribe(function(newTemplates) {\n    var existingTemplates = JSON.parse(global.localStorage.getItem('templates'));\n    var templates = [];\n    for (var i = 0; i < newTemplates.length; i++) {\n      templates.push(newTemplates[i]);\n      global.localStorage.setItem('metadata-'+newTemplates[i].key, ko.toJSON(newTemplates[i]));\n    }\n    global.localStorage.setItem('templates', ko.toJSON(templates));\n  });\n\n\n  // Functions\n\n  // Save user tempalte\n  viewModel.newTemplate = function(shorttmplname) {\n    var thisTemplate = JSON.parse(global.localStorage.getItem('metadata-'+key));\n    var thisKey = thisTemplate.key;\n    var thisName = thisTemplate.name;\n    var thisTemplateSrc = thisTemplate.template;\n    var rnd = Math.random().toString(36).substr(2, 7);\n    var template = 'templates/'+thisName+'/template-'+thisName+'.html';\n    var newEntry = { created: currentDate, key: rnd, title: $('#templateName').val(), name: thisName, template: thisTemplateSrc, desc: $('#templateDesc').val() };\n\n    var savedContent = global.localStorage.getItem(\"template-\" + thisKey);\n    var newContent = viewModel.exportJSON();\n\n    // Check if template has been modified or not\n    if (savedContent != newContent){\n      // Delete draft with same key (to avoid duplicates)\n      var edits;\n      var loadEdits;\n\n      if(JSON.parse(global.localStorage.getItem('edits')) == null){\n        edits = [];\n      } else {\n        loadEdits = JSON.parse(global.localStorage.getItem('edits'));\n        if(loadEdits.indexOf(thisKey) > -1){\n        edits = loadEdits.filter(function(a){return a !== thisKey;});\n\n        viewModel.edits.splice(thisKey, 1);\n        global.localStorage.setItem(\"edits\", JSON.stringify(edits));\n        global.localStorage.removeItem(\"metadata-\" + thisKey);\n        }\n      }\n      \n      // Store template\n      viewModel.templates.push(newEntry);\n      global.localStorage.setItem(\"template-\" + thisKey, viewModel.exportJSON());\n      global.localStorage.setItem(\"metadata-\" + thisKey, JSON.stringify(newEntry));\n      $('#save-template-modal').modal('toggle');\n      $('#template-saved-modal').modal('toggle');\n    } else {\n      $('#save-template-modal').modal('toggle');\n      $('#template-notchanged-modal').modal('show');\n      return false;\n    }\n  };\n\n  // Load new template\n  viewModel.newEdit = function(shorttmplname, index) {\n    var thisTemplate = JSON.parse(global.localStorage.getItem('metadata-'+key));\n    var thisKey = thisTemplate.key;\n    var thisName = thisTemplate.name;\n    var thisTemplateSrc = thisTemplate.template;\n    var rnd = Math.random().toString(36).substr(2, 7);\n    var template = 'templates/'+shorttmplname+'/template-'+shorttmplname+'.html';\n\n    // Delete draft with same key (to avoid duplicates)\n    var edits;\n    var loadEdits;\n\n    if(JSON.parse(global.localStorage.getItem('edits')) == null){\n      edits = [];\n      viewModel.edits.push({ created: currentDate, title: index.title, key: rnd, name: shorttmplname, template: template, desc: 'Draft' });\n    } else {\n      loadEdits = JSON.parse(global.localStorage.getItem('edits'));\n      if(loadEdits.indexOf(thisKey) > -1){\n      edits = loadEdits.filter(function(a){return a !== thisKey;});\n\n      viewModel.edits.splice(thisKey, 1);\n      global.localStorage.setItem(\"edits\", JSON.stringify(edits));\n      global.localStorage.removeItem(\"metadata-\" + thisKey);\n      }\n      viewModel.edits.push({ created: currentDate, title: index.title, key: key, name: shorttmplname, template: template, desc: 'Draft' });\n    }    \n\n    global.location.reload();\n  };\n\n  // Save sent campaign\n  viewModel.sendCampaign = function(shorttmplname) {\n    var thisTemplate = JSON.parse(global.localStorage.getItem('metadata-'+key));\n    var thisKey = thisTemplate.key;\n    var thisName = thisTemplate.name;\n    var thisTemplateSrc = thisTemplate.template;\n    var rnd = Math.random().toString(36).substr(2, 7);\n    var template = 'templates/'+thisName+'/template-'+thisName+'.html';\n    var campaignTitle;\n    console.log(thisKey);\n\n    if($('#campaignName').length){\n      campaignTitle = $('#campaignName').val();\n    } else {\n      campaignTitle =$('#fromName').val();\n    }\n    \n    var savedContent = global.localStorage.getItem(\"template-\" + thisKey);\n    var newContent = viewModel.exportJSON();\n\n    // Delete draft with same key (to avoid duplicates)\n    var edits;\n    var loadEdits;\n\n    if(JSON.parse(global.localStorage.getItem('edits')) == null){\n      edits = [];\n    } else {\n      loadEdits = JSON.parse(global.localStorage.getItem('edits'));\n      if(loadEdits.indexOf(thisKey) > -1){\n      edits = loadEdits.filter(function(a){return a !== thisKey;});\n\n      viewModel.edits.splice(thisKey, 1);\n      global.localStorage.setItem(\"edits\", JSON.stringify(edits));\n      global.localStorage.removeItem(\"metadata-\" + thisKey);\n      }\n    }\n\n    // Check if campaign or template with same key exists (to avoid duplicates)\n    var campaigns;\n    var loadCampaigns;\n    var loadTemplates = JSON.parse(global.localStorage.getItem('templates'));\n    if (global.localStorage.getItem('campaigns') == null){\n      campaigns = [];\n  \n      for (i=0;i<loadTemplates.length;i++){\n        if(loadTemplates[i].key.indexOf(thisKey) > -1){\n          thisKey = rnd;\n        }\n      }\n    } else {\n      loadCampaigns = JSON.parse(global.localStorage.getItem('campaigns'));\n      \n      if(loadCampaigns.indexOf(thisKey) > -1){\n        thisKey = rnd;\n      }\n\n      for (i=0;i<loadTemplates.length;i++){\n        if(loadTemplates[i].key.indexOf(thisKey) > -1){\n          thisKey = rnd;\n        }\n      }\n      campaigns = loadCampaigns;\n    }\n\n\n    console.log(thisKey);\n\n    var newEntry = { created: currentDate, key: thisKey, title: campaignTitle, name: thisName, template: thisTemplateSrc, desc: $('#campaignSubject').val() };\n    console.log(newEntry);\n    global.localStorage.setItem(\"campaigns\", JSON.stringify(campaigns));\n\n    // Store campaign\n    viewModel.campaigns.push(newEntry);\n    global.localStorage.setItem(\"template-\" + thisKey, viewModel.exportJSON());\n    global.localStorage.setItem(\"metadata-\" + thisKey, JSON.stringify(newEntry));\n  };\n\n  return viewModel;\n\n}\n\nmodule.exports = initializeEditor;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","deps":{"./timed-call.js":"/Users/denea/mos/src/js/timed-call.js","./../../bower_components/toastr/toastr.js":"/Users/denea/mos/bower_components/toastr/toastr.js","./../../bower_components/console-browserify/index.js":"/Users/denea/mos/bower_components/console-browserify/index.js"}},"/Users/denea/mos/src/js/custom.js":{"file":"/Users/denea/mos/src/js/custom.js","source":"// Switch to mobile/desktop view\nfunction renderLogo(){\n\tif($('.l-sidebar').hasClass('collapsed')){\n\t\t$('.logo').css('left', ($('.m-content').outerWidth() / 2) - 62);\n\t} else {\n\t\t$('.logo').css('left', ($('.m-content').outerWidth() / 2) - 62 + 230);\n\t}\n}\n\nfunction renderView(){\n\tvar sidebarToggle = '<div class=\"r-sidebar-toggle\"><i class=\"fa fa-spin fa-gear\"></i></div>';\n\tif($(window).width() < 980){\n\t\t$('body').addClass('mobile-view');\n\t\t$('.r-sidebar').not('.r-sidebar-placeholder').prepend(sidebarToggle);\n\t} else {\n\t\t$('body').removeClass('mobile-view');\n\t\t$('.r-sidebar').find('.r-sidebar-toggle').remove();\n\t}\n\trenderLogo();\n}\n\n// Toggle support icon\nfunction toggleSupport(){\n\tif($('.m-content').width() < 670){\n\t\t$('.support-phone .support').hide();\n\t} else {\n\t\t$('.support-phone .support').show();\n\t}\n}\n\n// Toggle delete all button\nfunction deleteCheckedButton(){\n\tif($('.remove-checkboxes .remove-checkbox-placeholder').is(':checked')){\n    $('.delete-checked').show();\n  } else {\n    $('.delete-checked').hide();\n  }\n}\n\n// Toggle all checkboxes status\nfunction toggleAllCheckboxesStatus(){\n\tvar all = $('.remove-checkboxes .remove-checkbox-placeholder').length;\n\tvar checked = $('.remove-checkboxes .remove-checkbox-placeholder:checked').length;\n\tvar targetCheckbox = $('.all-remove-checkboxes');\n\t if (checked == 0) {\n\t\ttargetCheckbox.prop('checked', false);\n\t\ttargetCheckbox.css('opacity', '1');\n\t} else if (checked > 0 && checked < all){\n\t\ttargetCheckbox.prop('checked', true);\n\t\ttargetCheckbox.css('opacity', '0.5');\n\t} else if (all <= checked) {\n\t\ttargetCheckbox.prop('checked', true);\n\t\ttargetCheckbox.css('opacity', '1');\n\t}\n}\n\n// Resize template previews\nfunction resizeTemplates(){\n\tvar contentWidth = $(\".m-content\").width();\n\n\tif (contentWidth < 715) {\n\t\t$(\".template, .template-placeholder\").css({\"width\": \"100%\", \"min-width\": \"0\"});\n\t}\n\telse if (contentWidth < 900) {\n\t\t$(\".template, .template-placeholder\").css({\"width\": \"calc(33.3% - 15px)\", \"min-width\": \"230px\"});\n\t}\n\telse if (contentWidth < 1180) {\n\t\t$(\".template, .template-placeholder\").css(\"width\", \"calc(25% - 15px)\");\n\t} \n\telse if (contentWidth < 1414) {\n\t\t$(\".template, .template-placeholder\").css(\"width\", \"calc(20% - 15px)\");\n\t}\n\telse if( contentWidth > 1414) {\n\t\t$(\".template, .template-placeholder\").css(\"width\", \"calc(16.6% - 15px)\");\t\n\t}\n}\n\n// Change table to horizontally scrollable when it gets too wide\nfunction tableScrollable(){\n\t$('.table-responsive').each(function(){\n\t\tif($(this).width() > $('.m-content .content').width()){\n\t\t\t$(this).addClass('table-scrollable');\n\t\t} else {\n\t\t\t$(this).removeClass('table-scrollable');\n\t\t}\n\t});\n}\n\n// Gray out table columns (for admins/users)\nfunction grayoutColumn(){\n\t$.each($('table thead .grayed-out'), function(){\n\t\tvar column = $(this);\n\t\tvar columnIndex = $(this).index();\n\t\tvar columnTable = column.closest('table');\n\t\tcolumnTable.find('tbody tr').each(function(){\n\t\t\t$(this).children(':eq('+columnIndex+')').addClass('grayed-out-content');\n\t\t});\n\t});\n}\n\n// Validate regular and email inputs, forms\nvar verifyEmail = $(\"<h5 class='form-text warning-feedback'>Since replies to your campaign will go to this email address, let's verify <a id='verify-email'><u>this email</u></a></h5>\");\nvar verifySuccess = $(\"<h5 class='form-text valid-feedback'>An email has been sent to this email address.<br> Please check your inbox and confirm the 'From Email' of your campaign.</h5>\");\nvar emailError = $(\"<h5 class='form-text invalid-feedback'>Please enter a valid email address</a></h5>\");\nvar email_regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/i;\nvar isInvalid = $(this).siblings('.invalid-feedback').length;\nvar isValid = $(this).siblings('.valid-feedback').length;\nvar isWarning = $(this).siblings('.warning-feedback').length;\nvar DMARC = false;\n\nfunction emailValidation(id){\n\t$('#'+id).addClass('is-invalid');\n\tif(!isInvalid.length){\n\t\t$('#'+id).siblings('h5.form-text').remove();\n\t\temailError.insertAfter($('#'+id));\n\t}\n}\n\nfunction regularValidation(id){\n\tif($('#'+id+'.required').val() == ''){\n\t\t$('#'+id).addClass('is-invalid');\n\t} else {\n\t\t$('#'+id).removeClass('is-invalid');\n\t}\n}\n\nfunction validateForm(form, validateButton){\n\t\tvar has_empty = false;\n  \tform.find('.required').each(function () {\n      if (!$(this).val() || $(this).hasClass('is-invalid')) {\n       \tvalidateButton.prop('disabled', true);\n        has_empty = true; \n        return false; \n\t    } \n\t  });\n\n   if (has_empty){ \n   \t  validateButton.prop('disabled', true);\n   \t  return false; \n   } else {\n   \t\tvalidateButton.prop('disabled', false);\n   }\n}\n\nfunction validateCampaignForm(){\n\tif($('#campaignName').hasClass('is-invalid') || $('#campaignSubject').hasClass('is-invalid') || \n\t\t!$('#fromEmail').hasClass('is-valid') || \n\t\t$('#fromName').hasClass('is-invalid') || \n\t\t!$('#replyToEmail').hasClass('is-valid')){\n\t\t$('#send-campaign').prop('disabled', true);\n\t\treturn false;\n\t} else {\n\t\t$('#send-campaign').prop('disabled', false);\n\t}\n}\n\nfunction validateSimpleCampaignForm(){\n\tif($('#fromName').hasClass('is-invalid') || $('#campaignSubject').hasClass('is-invalid') || \n\t\t!$('#fromEmail').hasClass('is-valid')){\n\t\t$('#send-simple-campaign').prop('disabled', true);\n\t} else {\n\t\t$('#send-simple-campaign').prop('disabled', false);\n\t}\n}\n\nfunction validateTemplateForm(){\n\tif($('#templateName').hasClass('is-invalid') || $('#templateDesc').hasClass('is-invalid') || $('#templateName').val() == '' || $('#templateDesc').val() == ''){\n\t\t$('#save-template-confirm').prop('disabled', true);\n\t\treturn false;\n\t} else {\n\t\t$('#save-template-confirm').prop('disabled', false);\n\t}\n}\n\nfunction clearInputs(path){\n\t$('form#'+path+' input').val('');\n\t$('form#'+path+' input').removeClass('is-valid');\n\t$('form#'+path+' input').removeClass('is-invalid');\n\t$('form#'+path+' input').prop('readonly', false);\n\t$('form#'+path+' input').siblings('h5.form-text').remove();\n}\n\n\n// On resize\n$(window).resize(function(){\n\trenderView();\n\tsetTimeout(function(){\n\t\ttoggleSupport();\n\t\ttableScrollable();\n\t\tresizeTemplates();\n\t},300);\n});\n\n// On ready\n$(document).ready(function(){\n\n\tgrayoutColumn();\n\trenderView();\n\tsetTimeout(function(){\n\t\ttoggleSupport();\n\t\ttableScrollable();\n\t\tresizeTemplates();\n\t},300);\n\n\t// Check if sidebar should be collapsed or not\n  if (document.cookie.replace(/(?:(?:^|.*;\\s*)sidebarCollapsed\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\") !== \"true\") {\n    $(\".l-sidebar\").addClass(\"collapsed\");\n  }\n\n\tsetTimeout(resizeTemplates, 180);\n\n\t$(\".collapse-sidebar\").on('click', function(){\n\t\tif($('.l-sidebar').hasClass('collapsed')){\n\t\t\tdocument.cookie = \"sidebarCollapsed=true; expires=Fri, 31 Dec 9999 23:59:59 GMT\";\n\t\t} else {\n\t\t\tdocument.cookie = \"sidebarCollapsed=false; expires=Fri, 31 Dec 9999 23:59:59 GMT\";\n\t\t}\n\t\t$(\".l-sidebar\").toggleClass('collapsed');\n\t\trenderLogo();\n\t\tsetTimeout(resizeTemplates, 210);\n\t});\n\n\t$(document).on('click', '.r-sidebar-toggle', function(){\n\t\t$(\".r-sidebar\").toggleClass('visible');\n\t});\n\n\t// Keep nav li expanded and active if child is active;\n  if ($('.nav-link-inner').hasClass('active')){ \n  \t$('.nav-link-inner.active').parent('.collapse').addClass('show');\n  }\n\n  // Settings modal opt\n  $('.nav-user-settings').on('click', function(){\n\t\t$('#settings-modal').modal('toggle');\n\t\t$('#settings-modal .nav-item a').trigger('click');\n\t});\n\n\t$('#add-sub-user').on('click', function(){\n\t\t$('#add-sub-user-table').show();\n\t\t$('#sub-users-table').hide();\n\t});\n\n\t$('#add-sub-user-table button[type=\"reset\"]').on('click', function(){\n\t\t$('#add-sub-user-table').hide();\n\t\t$('#sub-users-table').show();\n\t});\n\n\n\t//Sidebar checkbox depency for dropdowns & caret rotate\n\t$(\".r-sidebar .checkbox-dependency\").on('click', function(evt){\n\t\tif(evt.target.tagName == 'INPUT'){\n\t\t\tif($(this).children(\".form-check-input\").prop('checked') == true) {\n\t\t\t\t$(this).closest(\".checkbox-dependency-container\").find(\".collapse\").addClass(\"show\");\n\t\t\t\t$(this).closest(\".checkbox-dependency-container\").find(\".caret-dropdown\").addClass(\"show-dropdown\");\n\t\t\t} else {\n\t\t\t\t$(this).closest(\".checkbox-dependency-container\").find(\".collapse\").removeClass(\"show\");\n\t\t\t\t$(this).closest(\".checkbox-dependency-container\").find(\".caret-dropdown\").removeClass(\"show-dropdown\");\n\t\t\t}\n\t\t}\n\t});\n\n\t$(\".r-sidebar .checkbox-dependency-container .caret-dropdown\").on('click', function(){\n\t\t$(this).closest(\".checkbox-dependency-container\").find(\".collapse\").toggleClass(\"show\");\n\t\tif($(this).hasClass(\"show-dropdown\")){\n\t\t\t$(this).removeClass(\"show-dropdown\");\n\t\t}\n\t\telse {\n\t\t\t$(this).addClass(\"show-dropdown\");\n\t\t}\n\t});\n\n\t// Adjust preview height for iFrame\n\t$(\"#previewFrameToggle\").on('click', function(){\n\t\tif(!$(this).hasClass(\"active\")){\n\t\t\t$(\"#preview-frame\").contents().find('html').css('background-color', '#fff');\n\t\t\t$(\"#preview-frame\").height(1000);\n\t\t\t$(\"#preview-frame\").css('max-height', '635px');\n\n\t\t\t$(\"#preview-toolbar\").on('click', function(){\n\t\t\t\tif($('#frame-container').hasClass('desktop')){\n\t\t\t\t\t$(\"#preview-frame\").css('max-height', '635px');\n\t\t\t\t} else if ($('#frame-container').hasClass('tablet')){\n\t\t\t\t\t$(\"#preview-frame\").css('max-height', '555px');\n\t\t\t\t} else if ($('#frame-container').hasClass('mobile')){\n\t\t\t\t\t$(\"#preview-frame\").css('max-height', '465px');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t// File Explorer check checkboxes\t\n\t$('#file-explorer').on('click', '.remove-checkbox', function(){\n\t\t$(this).next().trigger('click');\n\t\ttoggleAllCheckboxesStatus();\n\t\tdeleteCheckedButton();\n\t});\n\n\t// Prevent focusing checkboxes\n\t$('#file-explorer').on('focus', 'input:checkbox', function(){\n\t\t$(this).blur();\n\t});\n\n\t// Toggle all checkboxes\n\t$('.all-remove-checkboxes').on('click', function(){\n\t\tif($('.remove-checkboxes .remove-checkbox-placeholder').is(':checked')){\n\t\t\t$('.remove-checkboxes .remove-checkbox-placeholder').prop('checked', true);\n\t\t\t$('.remove-checkboxes .remove-checkbox').trigger('click');\n\t\t\ttoggleAllCheckboxesStatus();\n\t\t\tdeleteCheckedButton();\n\t\t} else {\n\t\t\t$('.remove-checkboxes .remove-checkbox-placeholder').prop('checked', false);\n\t\t\t$('.remove-checkboxes .remove-checkbox').trigger('click');\n\t\t\ttoggleAllCheckboxesStatus();\n\t\t\tdeleteCheckedButton();\n\t\t}\n\t});\n\n\t// Forms validation\n\t$('button[type=\"reset\"]').on('click', function(){\n\t\tclearInputs($(this).closest('form').prop('id'));\n\t});\n\n\t$('form#advanced-campaign-form input').on('keyup blur', function(){\n\t\tregularValidation($(this).prop('id'));\n\t\tvalidateCampaignForm();\n\t});\n\n\t$('form#simple-campaign-form input').on('keyup blur', function(){\n\t\tregularValidation($(this).prop('id'));\n\t\tvalidateSimpleCampaignForm();\n\t});\n\n\t$('form#save-template-form input').on('keyup blur', function(){\n\t\tregularValidation($(this).prop('id'));\n\t\tvalidateTemplateForm();\n\t});\n\n\t$('form#settings-form input').on('keyup blur', function(){\n\t\tregularValidation($(this).prop('id'));\n\t\tvalidateForm($('form#settings-form'), $('#settings-form-save'));\n\t});\n\n\t$('form#first-login-address-form input').on('keyup blur', function(){\n\t\tregularValidation($(this).prop('id'));\n\t\tvalidateForm($('form#first-login-address-form'), $('#first-login-address-form-save'));\n\t});\n\n\t$('#save-template-cancel').on('click', function(){\n\t\tclearInputs('save-template-form');\n\t});\n\n\t// Clear inputs and scroll to top\n\t$('#clear-inputs').on('click', function(){\n\t\tclearInputs('advanced-campaign-form');\n\t\tvalidateCampaignForm();\n\t\t$('html,body').animate({ scrollTop: 0 }, 'slow');\n\t});\n\n\t// Validate \"reply to\" email address \n\t$(\"#replyToEmail\").on('keyup blur click', function(){\n\t\tif(!email_regex.test($(this).val())){\n\t\t\temailValidation($(this).prop('id'));\n\t\t\t$(this).removeClass('is-valid');\n\t\t\t$(this).addClass('is-invalid');\n\t\t} else {\n\t\t\t$(this).removeClass('is-invalid');\n\t\t\t$(this).addClass('is-valid');\n\t\t\t$(this).siblings('h5.form-text').remove();\n\t\t}\n\t});\n\n\t// Validate \"from\" email\n\t$(\"#fromEmail\").on('keyup blur click', function(){\n\t\tif(!email_regex.test($(this).val())){\n\t\t\temailValidation($(this).prop('id'));\n\t\t} else {\n\t\t\t$(this).removeClass('is-invalid');\n\t\t\tif (!isWarning && isValid){\n\t\t\t\treturn false;\n\t\t\t} else if(!isWarning) {\n\t\t\t\t$(this).siblings('h5.form-text').remove();\n\t\t\t\tverifyEmail.insertAfter(this);\n\t\t\t}\n\t\t\t\n\t\t\t$('#verify-email').on('click', function(){\n\t\t\t\t$(this).parent().siblings('#fromEmail').prop('readonly', true);\n\t\t\t\t$(this).parent().siblings('#fromEmail').addClass('is-valid');\n\t\t\t\t$(this).parent().siblings('small.form-text').remove();\n\t\t\t\tverifyEmail.replaceWith(verifySuccess);\n\t\t\t\tif($('form#simple-campaign-form').length){\n\t\t\t\t\tvalidateSimpleCampaignForm();\n\t\t\t\t} else if ($('form#advanced-campaign-form').length){\n\t\t\t\t\tvalidateCampaignForm();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t// DMARC Email (edit accordingly to filter required emails)\n\t$('#fromEmail').on('blur', function(){\n\t\tif(DMARC == false){\n\t\t\tif($(this).val().indexOf('.com') > -1){\n\t\t\t\t$('#DMARC-modal').modal('show');\n\t\t\t\tDMARC = true;\n\t\t\t}\n\t\t}\n\t});\n\n});\n\n// File explorer key controll\n$(document).keydown(function(e){\n  var currentSelected = $('.exp-item.key-selected');\n  if(!$(e.target).is('input, textarea, .modal')){\n    // Keyup\n    if (e.keyCode == 40 && !currentSelected.is(':last-child')) {\n      e.preventDefault();\n      currentSelected.removeClass('key-selected');\n      currentSelected.next().addClass('key-selected');\n      if(!currentSelected.length){\n        $('.exp-item-container').find('.exp-item:first-child').addClass('key-selected');\n      }\n    }\n    // Keydown\n    else if (e.keyCode == 38 && !currentSelected.is(':first-child')) {\n      e.preventDefault();\n      if(!currentSelected.length){\n        $('.exp-item-container').find('.exp-item:first-child').addClass('key-selected');\n      }\n      currentSelected.removeClass('key-selected');\n      currentSelected.prev().addClass('key-selected');\n    }\n    // Enter\n    else if (e.keyCode == 13){\n      currentSelected.find('.media-items-block div:first-child').trigger('click');\n    }\n    // Back\n    else if (e.keyCode == 8){\n      $('.parent-folder').trigger('click');\n    }\n    // Delete\n    else if (e.keyCode == 46){\n      currentSelected.find('.delete-item').trigger('click');\n    }\n    // Space (checkbox)\n    else if (e.keyCode == 32){\n      currentSelected.find('.remove-checkbox').trigger('click');\n      if(currentSelected.find('.remove-checkbox').next().prop('checked') == true){\n        currentSelected.find('.remove-checkbox').next().prop('checked', true);\n      } else {\n        currentSelected.find('.remove-checkbox').next().prop('checked', false);\n      }\n      toggleAllCheckboxesStatus();\n      deleteCheckedButton();\n    }\n   }\n});","deps":{}}},"mtimes":{"/Users/denea/mosaico/src/js/ext/util.js":1505128748000,"/Users/denea/mosaico/src/js/timed-call.js":1505128748000,"/Users/denea/mosaico/src/js/ext/localstorage.js":1505128748000,"/Users/denea/mosaico/node_modules/util/support/isBufferBrowser.js":1387550223000,"/Users/denea/mosaico/node_modules/util/node_modules/inherits/inherits_browser.js":1368715198000,"/Users/denea/mosaico/node_modules/process/browser.js":1493209628000,"/Users/denea/mosaico/node_modules/util/util.js":1387552736000,"/Users/denea/mosaico/node_modules/assert/assert.js":1464703290000,"/Users/denea/mosaico/bower_components/console-browserify/index.js":1505686537000,"/Users/denea/mosaico/src/js/bindings/csstext.js":1505128748000,"/Users/denea/mosaico/bower_components/knockout-sortable/build/knockout-sortable.min.js":1505686538000,"/Users/denea/mosaico/src/js/bindings/droppable.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/extender-pagination.js":1505128748000,"/Users/denea/mosaico/bower_components/tinycolor/tinycolor.js":1505686541000,"/Users/denea/mosaico/src/js/ext/color.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/jqueryui-spinner.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/blocks.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/jqueryui-tabs.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/bind-iframe.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/virtuals.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/scrollfix.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/tooltips.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/if-subs.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/fileupload.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/eventable.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/scrollintoview.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/validated-value.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/wysiwygs.js":1505764777000,"/Users/denea/mosaico/src/js/bindings/extsortables.js":1505128748000,"/Users/denea/mosaico/src/js/undomanager/undoserializer.js":1505128748000,"/Users/denea/mosaico/bower_components/toastr/toastr.js":1505686540000,"/Users/denea/mosaico/src/js/viewmodel.js":1505128748000,"/Users/denea/mosaico/bower_components/knockoutjs-reactor/src/knockout.reactor.js":1481639999000,"/Users/denea/mosaico/bower_components/knockout-undomanager/knockout-undomanager.js":1505686537000,"/Users/denea/mosaico/src/js/undomanager/undomain.js":1505128748000,"/Users/denea/mosaico/bower_components/evol-colorpicker/js/evol.colorpicker.min.js":1505764139000,"/Users/denea/mosaico/src/js/bindings/colorpicker.js":1505128748000,"/Users/denea/mosaico/src/js/ko-bindings.js":1505128748000,"/Users/denea/mosaico/src/js/converter/checkmodel.js":1505128748000,"/Users/denea/mosaico/src/js/converter/editor.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/script-template.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/string-template.js":1505128748000,"/Users/denea/mosaico/src/js/bindings/choose-template.js":1505128748000,"/Users/denea/mosaico/build/templates.js":1505764604000,"/Users/denea/mosaico/node_modules/os-browserify/browser.js":1394643581000,"/Users/denea/mosaico/bower_components/knockout.wrap/knockout.wrap.js":1505764138000,"/Users/denea/mosaico/src/js/converter/wrapper.js":1505128748000,"/Users/denea/mosaico/src/js/converter/domutils.js":1505128748000,"/Users/denea/mosaico/src/js/converter/model.js":1505128748000,"/Users/denea/mosaico/src/js/converter/declarations.js":1505128748000,"/Users/denea/mosaico/src/js/converter/stylesheet.js":1505128748000,"/Users/denea/mosaico/bower_components/juice/lib/property.js":1475803444000,"/Users/denea/mosaico/bower_components/jsep/src/jsep.js":1505686538000,"/Users/denea/mosaico/src/js/converter/utils.js":1505128748000,"/Users/denea/mosaico/src/js/converter/parser.js":1505128748000,"/Users/denea/mosaico/src/js/converter/main.js":1505128748000,"/Users/denea/mosaico/src/js/template-loader.js":1505128748000,"/Users/denea/mosaico/bower_components/slick/parser.js":1430630485000,"/Users/denea/mosaico/bower_components/juice/lib/selector.js":1475803444000,"/Users/denea/mosaico/bower_components/mensch/lib/stringify.js":1505686542000,"/Users/denea/mosaico/bower_components/mensch/lib/debug.js":1505686542000,"/Users/denea/mosaico/bower_components/mensch/lib/parser.js":1505686542000,"/Users/denea/mosaico/bower_components/mensch/lib/lexer.js":1505686542000,"/Users/denea/mosaico/bower_components/mensch/index.js":1505686542000,"/Users/denea/mosaico/bower_components/juice/lib/utils.js":1475803444000,"/Users/denea/mosaico/bower_components/juice/lib/inline.js":1475803444000,"/Users/denea/mosaico/src/js/ext/inliner.js":1505128748000,"/Users/denea/mosaico/src/js/app.js":1505128748000,"/Users/denea/mos/src/js/ext/util.js":1505128748000,"/Users/denea/mos/src/js/timed-call.js":1508239289000,"/Users/denea/mos/src/js/ext/localstorage.js":1509698247000,"/Users/denea/mos/node_modules/util/support/isBufferBrowser.js":1387550223000,"/Users/denea/mos/node_modules/process/browser.js":1493209628000,"/Users/denea/mos/node_modules/util/node_modules/inherits/inherits_browser.js":1368715198000,"/Users/denea/mos/node_modules/util/util.js":1387552736000,"/Users/denea/mos/node_modules/assert/assert.js":1464703290000,"/Users/denea/mos/bower_components/console-browserify/index.js":1505686537000,"/Users/denea/mos/bower_components/knockout-sortable/build/knockout-sortable.min.js":1505686538000,"/Users/denea/mos/src/js/bindings/csstext.js":1505128748000,"/Users/denea/mos/src/js/bindings/droppable.js":1505128748000,"/Users/denea/mos/src/js/bindings/extender-pagination.js":1505128748000,"/Users/denea/mos/bower_components/tinycolor/tinycolor.js":1505686541000,"/Users/denea/mos/src/js/ext/color.js":1505128748000,"/Users/denea/mos/src/js/bindings/jqueryui-spinner.js":1505128748000,"/Users/denea/mos/src/js/bindings/blocks.js":1505128748000,"/Users/denea/mos/src/js/bindings/jqueryui-tabs.js":1505128748000,"/Users/denea/mos/src/js/bindings/bind-iframe.js":1505128748000,"/Users/denea/mos/src/js/bindings/fileupload.js":1505128748000,"/Users/denea/mos/src/js/bindings/scrollfix.js":1505128748000,"/Users/denea/mos/src/js/bindings/virtuals.js":1505128748000,"/Users/denea/mos/src/js/bindings/if-subs.js":1505128748000,"/Users/denea/mos/src/js/bindings/eventable.js":1505128748000,"/Users/denea/mos/src/js/bindings/tooltips.js":1505128748000,"/Users/denea/mos/src/js/bindings/scrollintoview.js":1505128748000,"/Users/denea/mos/src/js/bindings/validated-value.js":1505128748000,"/Users/denea/mos/src/js/bindings/wysiwygs.js":1509590391000,"/Users/denea/mos/src/js/bindings/extsortables.js":1505128748000,"/Users/denea/mos/src/js/undomanager/undoserializer.js":1508146936000,"/Users/denea/mos/bower_components/toastr/toastr.js":1505686540000,"/Users/denea/mos/src/js/viewmodel.js":1509701284000,"/Users/denea/mos/bower_components/evol-colorpicker/js/evol.colorpicker.min.js":1505764139000,"/Users/denea/mos/src/js/bindings/colorpicker.js":1505128748000,"/Users/denea/mos/src/js/ko-bindings.js":1505128748000,"/Users/denea/mos/bower_components/knockoutjs-reactor/src/knockout.reactor.js":1481639999000,"/Users/denea/mos/bower_components/knockout-undomanager/knockout-undomanager.js":1505686537000,"/Users/denea/mos/src/js/undomanager/undomain.js":1505128748000,"/Users/denea/mos/src/js/bindings/script-template.js":1505128748000,"/Users/denea/mos/src/js/bindings/string-template.js":1505128748000,"/Users/denea/mos/src/js/bindings/choose-template.js":1505128748000,"/Users/denea/mos/build/templates.js":1509697328000,"/Users/denea/mos/src/js/converter/checkmodel.js":1509536460000,"/Users/denea/mos/src/js/converter/editor.js":1509666895000,"/Users/denea/mos/bower_components/knockout.wrap/knockout.wrap.js":1505764138000,"/Users/denea/mos/src/js/converter/wrapper.js":1505128748000,"/Users/denea/mos/node_modules/os-browserify/browser.js":1394643581000,"/Users/denea/mos/src/js/converter/domutils.js":1505128748000,"/Users/denea/mos/src/js/converter/model.js":1505128748000,"/Users/denea/mos/src/js/converter/declarations.js":1507902082000,"/Users/denea/mos/src/js/converter/stylesheet.js":1505128748000,"/Users/denea/mos/bower_components/juice/lib/property.js":1475803444000,"/Users/denea/mos/bower_components/jsep/src/jsep.js":1505686538000,"/Users/denea/mos/src/js/converter/utils.js":1505128748000,"/Users/denea/mos/src/js/converter/parser.js":1505128748000,"/Users/denea/mos/src/js/converter/main.js":1505128748000,"/Users/denea/mos/src/js/template-loader.js":1505128748000,"/Users/denea/mos/bower_components/slick/parser.js":1430630485000,"/Users/denea/mos/bower_components/juice/lib/selector.js":1475803444000,"/Users/denea/mos/bower_components/mensch/lib/stringify.js":1505686542000,"/Users/denea/mos/bower_components/mensch/lib/lexer.js":1505686542000,"/Users/denea/mos/bower_components/mensch/lib/debug.js":1505686542000,"/Users/denea/mos/bower_components/mensch/lib/parser.js":1505686542000,"/Users/denea/mos/bower_components/mensch/index.js":1505686542000,"/Users/denea/mos/bower_components/juice/lib/utils.js":1475803444000,"/Users/denea/mos/bower_components/juice/lib/inline.js":1475803444000,"/Users/denea/mos/src/js/ext/inliner.js":1505128748000,"/Users/denea/mos/src/js/app.js":1509644390000,"/Users/denea/mos/src/js/custom.js":1509707012000,"/Users/denea/mos/src/js/view-list/view-list.itemViewModel.js":1509272938000,"/Users/denea/mos/src/js/view-list/view-list.listViewModel.js":1509273919000,"/Users/denea/mos/src/js/view-list/view-list.ko.extensions.js":1509241765000,"/Users/denea/mos/src/js/view-list/view-list.js":1509274340000,"/Users/denea/mos/src/js/view-list/index.js":1509272521000,"/Users/denea/mos/src/js/view-list/view-list.ItemViewModel.js":1509272938000,"/Users/denea/mos/src/js/exp-manager.js":1509328624000},"dependentFiles":{}}